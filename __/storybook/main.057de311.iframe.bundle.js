(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{1012:function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__(299).configure)([__webpack_require__(1013),__webpack_require__(1014)],module,!1)}).call(this,__webpack_require__(237)(module))},1013:function(module,exports){function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=function(){return[]},webpackEmptyContext.resolve=webpackEmptyContext,module.exports=webpackEmptyContext,webpackEmptyContext.id=1013},1014:function(module,exports,__webpack_require__){var map={"./components/article-card/article-card.stories.ts":1208};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1014},1206:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _node_modules_angular_devkit_build_angular_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(589),_node_modules_angular_devkit_build_angular_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_angular_devkit_build_angular_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_angular_devkit_build_angular_node_modules_css_loader_dist_cjs_js_ref_9_1_node_modules_angular_devkit_build_angular_node_modules_postcss_loader_dist_cjs_js_ref_9_2_node_modules_resolve_url_loader_index_js_ref_9_3_node_modules_angular_devkit_build_angular_node_modules_sass_loader_dist_cjs_js_ref_9_4_styles_scss__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(409),options={insert:"head",singleton:!1};_node_modules_angular_devkit_build_angular_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_angular_devkit_build_angular_node_modules_css_loader_dist_cjs_js_ref_9_1_node_modules_angular_devkit_build_angular_node_modules_postcss_loader_dist_cjs_js_ref_9_2_node_modules_resolve_url_loader_index_js_ref_9_3_node_modules_angular_devkit_build_angular_node_modules_sass_loader_dist_cjs_js_ref_9_4_styles_scss__WEBPACK_IMPORTED_MODULE_1__.a,options);__webpack_exports__.default=_node_modules_angular_devkit_build_angular_node_modules_css_loader_dist_cjs_js_ref_9_1_node_modules_angular_devkit_build_angular_node_modules_postcss_loader_dist_cjs_js_ref_9_2_node_modules_resolve_url_loader_index_js_ref_9_3_node_modules_angular_devkit_build_angular_node_modules_sass_loader_dist_cjs_js_ref_9_4_styles_scss__WEBPACK_IMPORTED_MODULE_1__.a.locals||{}},1208:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"WithArticle",(function(){return WithArticle})),__webpack_require__.d(__webpack_exports__,"WithImage",(function(){return WithImage}));var client=__webpack_require__(299),animations=__webpack_require__(45),tslib_es6=__webpack_require__(6),common=__webpack_require__(2),core=__webpack_require__(0),flex_layout_es5=__webpack_require__(335),fesm2015_button=__webpack_require__(332),card=__webpack_require__(586),chips=__webpack_require__(587),fesm2015_dialog=__webpack_require__(65),divider=__webpack_require__(588),icon=__webpack_require__(333),menu=__webpack_require__(334),tooltip=__webpack_require__(336),release_notes=__webpack_require__(578);const defaultEnvironment={production:!1,swLocation:"/ngsw-worker.js",latestVersion:new core.Version(release_notes.a),gitRepoDefaults:{host:"https://github.com",username:"EdricChan03",repo:"rss-reader"}};const environment=defaultEnvironment;let about_dialog_component_AboutDialogComponent=class AboutDialogComponent{constructor(){this.latestVersion=environment.latestVersion.full}};about_dialog_component_AboutDialogComponent=Object(tslib_es6.b)([Object(core.Component)({selector:"app-about-dialog",template:(__webpack_require__(289).default||__webpack_require__(289)).length?__webpack_require__(289).default||__webpack_require__(289):""})],about_dialog_component_AboutDialogComponent);var lib=__webpack_require__(579);let code_viewer_dialog_component_CodeViewerDialogComponent=class CodeViewerDialogComponent{constructor(data){this.data=data}ngAfterViewInit(){lib.highlightBlock(document.getElementById("code"))}};code_viewer_dialog_component_CodeViewerDialogComponent=Object(tslib_es6.b)([Object(core.Component)({selector:"app-code-viewer-dialog",template:(__webpack_require__(290).default||__webpack_require__(290)).length?__webpack_require__(290).default||__webpack_require__(290):""}),Object(tslib_es6.e)(0,Object(core.Inject)(fesm2015_dialog.a)),Object(tslib_es6.d)("design:paramtypes",[Object])],code_viewer_dialog_component_CodeViewerDialogComponent);var _a,fesm2015_forms=__webpack_require__(29),startWith=__webpack_require__(96),map=__webpack_require__(25),platform_browser=__webpack_require__(53);let submit_rss_dialog_component_SubmitRssDialogComponent=class SubmitRssDialogComponent{constructor(dom,data){this.dom=dom,this.data=data}getFormUrl(){return this.dom.sanitize(core.SecurityContext.URL,"https://docs.google.com/forms/d/e/1FAIpQLSca8Iug_FPflBOHJdUN4KUBrUurOLjcyHAWqkn0_TTJ1oYmRQ/viewform?usp=pp_url&entry.1135652000="+this.data.feedUrl)}};submit_rss_dialog_component_SubmitRssDialogComponent=Object(tslib_es6.b)([Object(core.Component)({selector:"app-submit-rss-dialog",template:(__webpack_require__(291).default||__webpack_require__(291)).length?__webpack_require__(291).default||__webpack_require__(291):""}),Object(tslib_es6.e)(1,Object(core.Inject)(fesm2015_dialog.a)),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(_a=void 0!==platform_browser.DomSanitizer&&platform_browser.DomSanitizer)?_a:Object,Object])],submit_rss_dialog_component_SubmitRssDialogComponent);var feed_dialog_component_a,_b,_c,feedurls=__webpack_require__(580);let feed_dialog_component_FeedDialogComponent=class FeedDialogComponent{constructor(dialogRef,fb,dialog){this.dialogRef=dialogRef,this.fb=fb,this.dialog=dialog,this.feeds=feedurls.a,this.feedUrlValue="",this.orderByOptions=[{title:"None",value:""},{title:"Published date",value:"pubDate"},{title:"Author",value:"author"},{title:"Title",value:"title"}],this.orderDirOptions=[{title:"Default (Descending order)",value:""},{title:"Ascending order",value:"asc"},{title:"Descending order",value:"desc"}],dialogRef.disableClose=!0,this.rssFeedForm=fb.group({rss_url:["",fesm2015_forms.Validators.required],api_key:["",[fesm2015_forms.Validators.required,fesm2015_forms.Validators.maxLength(40),fesm2015_forms.Validators.minLength(40)]],order_by:"",order_dir:"",count:10}),this.filteredOptions=this.rssFeedForm.get("rss_url").valueChanges.pipe(Object(startWith.a)(""),Object(map.a)(value=>this.filter(value)))}ngOnInit(){window.localStorage.getItem("feedOptions")&&this.rssFeedForm.patchValue(JSON.parse(window.localStorage.getItem("feedOptions")))}filter(name){const filteredFeedCategories=[];for(const feedCategory of this.feeds){const tempFeedCategory={categoryId:null,categoryName:null,channels:[]},tempFeedChannels=[];tempFeedCategory.categoryName=feedCategory.categoryName,tempFeedCategory.categoryId=feedCategory.categoryId;for(const feedChannel of feedCategory.channels)(feedChannel.feedName.includes(name)||feedChannel.feedUrl.includes(name))&&tempFeedChannels.push(feedChannel);tempFeedChannels.length>=1&&(tempFeedCategory.channels=tempFeedChannels,filteredFeedCategories.push(tempFeedCategory))}return filteredFeedCategories}openSubmitRssDialog(){this.dialog.open(submit_rss_dialog_component_SubmitRssDialogComponent,{data:{feedUrl:this.rssFeedForm.get("feedUrl").value}})}};feed_dialog_component_FeedDialogComponent=Object(tslib_es6.b)([Object(core.Component)({selector:"app-feed-dialog",template:(__webpack_require__(292).default||__webpack_require__(292)).length?__webpack_require__(292).default||__webpack_require__(292):""}),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(feed_dialog_component_a=void 0!==fesm2015_dialog.d&&fesm2015_dialog.d)?feed_dialog_component_a:Object,"function"==typeof(_b=void 0!==fesm2015_forms.FormBuilder&&fesm2015_forms.FormBuilder)?_b:Object,"function"==typeof(_c=void 0!==fesm2015_dialog.b&&fesm2015_dialog.b)?_c:Object])],feed_dialog_component_FeedDialogComponent);var headline_options_dialog_component_a,headline_options_dialog_component_b,switchMap=__webpack_require__(71),fesm2015_http=__webpack_require__(153);let headline_options_dialog_component_HeadlineOptionsDialogComponent=class HeadlineOptionsDialogComponent{constructor(fb,http,headlineOpts){this.fb=fb,this.http=http,this.headlineOpts=headlineOpts,this.categories=["business","entertainment","general","health","science","sports","technology"],this.headlineOptForm=fb.group({apiKey:["",fesm2015_forms.Validators.required],q:"",country:"",category:"",pageSize:20})}ngOnInit(){this.headlineOpts&&this.headlineOptForm.patchValue(this.headlineOpts),setTimeout(()=>{this.filteredOptions=this.headlineOptForm.get("country").valueChanges.pipe(Object(switchMap.a)(value=>this.filter(value)))})}filter(name){return this.http.get("https://restcountries.eu/rest/v2/name/"+encodeURIComponent(name))}};var rss_channel_info_dialog_component_a;headline_options_dialog_component_HeadlineOptionsDialogComponent=Object(tslib_es6.b)([Object(core.Component)({selector:"app-headline-options-dialog",template:(__webpack_require__(293).default||__webpack_require__(293)).length?__webpack_require__(293).default||__webpack_require__(293):""}),Object(tslib_es6.e)(2,Object(core.Inject)(fesm2015_dialog.a)),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(headline_options_dialog_component_a=void 0!==fesm2015_forms.FormBuilder&&fesm2015_forms.FormBuilder)?headline_options_dialog_component_a:Object,"function"==typeof(headline_options_dialog_component_b=void 0!==fesm2015_http.a&&fesm2015_http.a)?headline_options_dialog_component_b:Object,Object])],headline_options_dialog_component_HeadlineOptionsDialogComponent);let RSSChannelInfoDialogComponent=class RSSChannelInfoDialogComponent{constructor(dialogRef){this.dialogRef=dialogRef}ngOnInit(){}};RSSChannelInfoDialogComponent=Object(tslib_es6.b)([Object(core.Component)({selector:"app-rss-channel-info-dialog",template:(__webpack_require__(294).default||__webpack_require__(294)).length?__webpack_require__(294).default||__webpack_require__(294):""}),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(rss_channel_info_dialog_component_a=void 0!==fesm2015_dialog.d&&fesm2015_dialog.d)?rss_channel_info_dialog_component_a:Object])],RSSChannelInfoDialogComponent);let ShareDialogComponent=class ShareDialogComponent{constructor(articleData){this.articleData=articleData}ngOnInit(){this.isFeedEntry(this.articleData)?(this.url=this.articleData.link,this.publishedDate=this.articleData.pubDate.toString()):(this.url=this.articleData.url,this.publishedDate=this.articleData.publishedAt)}isFeedEntry(feed){return void 0!==feed.categories}shareToFacebook(){window.open("https://www.facebook.com/sharer.php?u="+encodeURI(this.url),"")}shareToTwitter(){const text=encodeURI(`Check out this blogpost by ${this.articleData.author}    published on ${this.publishedDate} titled "${this.articleData.title}"!')}`);window.open(`https://twitter.com/intent/tweet?url=${encodeURI(this.url)}&text=${text}`)}shareNative(){void 0!==navigator.share?navigator.share({title:document.title,text:'Check out this page about"'+document.title+'"!',url:document.URL}).then(()=>console.log("Successfully shared current page.")).catch(error=>console.error("Error sharing current page: ",error)):alert("To share natively, please enable the 'Experimental Web Platform Features' flag in chrome://flags. Otherwise, it might not be supported on your platform right now.")}};var settings_storage_service_a;ShareDialogComponent=Object(tslib_es6.b)([Object(core.Component)({selector:"app-share-dialog",template:(__webpack_require__(295).default||__webpack_require__(295)).length?__webpack_require__(295).default||__webpack_require__(295):"",styles:[(__webpack_require__(296).default||__webpack_require__(296)).length?__webpack_require__(296).default||__webpack_require__(296):""]}),Object(tslib_es6.e)(0,Object(core.Inject)(fesm2015_dialog.a)),Object(tslib_es6.d)("design:paramtypes",[Object])],ShareDialogComponent);const SETTINGS_STORAGE_PROVIDER=new core.InjectionToken("Settings storage provider",{factory:()=>localStorage}),SETTINGS_STORAGE_KEY=new core.InjectionToken("Settings storage key",{factory:()=>"settings"});const SETTINGS_STORAGE_CONFIG=new core.InjectionToken("Settings storage config",{factory:function SETTINGS_STORAGE_DEFAULT_CONFIG_FACTORY(){return{canRevertDefault:!0,defaultSettings:{openNewTab:!0,showImages:!0,theme:"indigo-pink",notifyNewReleases:!0}}}});let SettingsStorageService=class SettingsStorageService{constructor(storage,key,config){this.storage=storage,this.key=key,this.config=config}get settings(){return this.storage.getItem(this.key)&&this.config.canRevertDefault?JSON.parse(this.storage.getItem(this.key)):this.config.defaultSettings}setSettings(settings){this.storage.setItem(this.key,JSON.stringify(settings))}clearSettings(resetToDefault=!0){resetToDefault?this.setSettings(this.config.defaultSettings):this.storage.removeItem(this.key)}};SettingsStorageService=Object(tslib_es6.b)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.e)(0,Object(core.Inject)(SETTINGS_STORAGE_PROVIDER)),Object(tslib_es6.e)(1,Object(core.Inject)(SETTINGS_STORAGE_KEY)),Object(tslib_es6.e)(2,Object(core.Inject)(SETTINGS_STORAGE_CONFIG)),Object(tslib_es6.e)(2,Object(core.Optional)()),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(settings_storage_service_a="undefined"!=typeof Storage&&Storage)?settings_storage_service_a:Object,String,Object])],SettingsStorageService);let OrderByPipe=class OrderByPipe{transform(array,args){return array.sort((a,b)=>a<b?-1:a>b?1:0),array}};OrderByPipe=Object(tslib_es6.b)([Object(core.Pipe)({name:"orderby"})],OrderByPipe);let StripHtmlTagsPipe=class StripHtmlTagsPipe{constructor(){this.tagBody="(?:[^\"'>]|\"[^\"]*\"|'[^']*')*",this.tagOrComment=new RegExp("<(?:!--(?:(?:-*[^->])*--+|-?)|script\\b"+this.tagBody+">[\\s\\S]*?</script\\s*|style\\b"+this.tagBody+">[\\s\\S]*?</style\\s*|/?[a-z]"+this.tagBody+")>","gi")}transform(value){let oldHtml;do{oldHtml=value,value=value.replace(this.tagOrComment,"")}while(value!==oldHtml);return value.replace(/<[^>]+>/gm,"")}};StripHtmlTagsPipe=Object(tslib_es6.b)([Object(core.Pipe)({name:"stripHtmlTags"})],StripHtmlTagsPipe);let TruncatePipe=class TruncatePipe{transform(value,...args){const limit=args.length>0?parseInt(args[0],10):20,trail=args.length>1?args[1]:"&hellip;";return value.length>limit?value.substring(0,limit)+trail:value}};var _e,_f,_g;TruncatePipe=Object(tslib_es6.b)([Object(core.Pipe)({name:"truncate"})],TruncatePipe);let article_card_component_ArticleCardComponent=class ArticleCardComponent{constructor(dialog,settingsStorage,stripHtmlTags){this.dialog=dialog,this.settingsStorage=settingsStorage,this.stripHtmlTags=stripHtmlTags}get articleAuthor(){if(void 0!==this.article){if("publishedAt"in this.article)return"author"in this.article&&void 0!==this.article.author?"author"in this.article&&"source"in this.article&&"name"in this.article.source&&void 0!==this.article.source.name?`${this.article.author} | ${this.article.source.name}`:this.article.author:"source"in this.article&&"name"in this.article.source&&void 0!==this.article.source.name?this.article.source.name:void 0;if("pubDate"in this.article)return this.article.author}}get articlePubDate(){if(void 0!==this.article){if("publishedAt"in this.article)return this.article.publishedAt;if("pubDate"in this.article)return this.article.pubDate}}get articleImg(){if(void 0!==this.article)return"urlToImage"in this.article?this.article.urlToImage:"thumbnail"in this.article?this.article.thumbnail:"enclosure"in this.article&&"thumbnail"in this.article.enclosure?this.article.enclosure.thumbnail:void 0}get articleTitle(){var _a;return null===(_a=this.article)||void 0===_a?void 0:_a.title}get articleDesc(){var _a,_b;return this.stripHtmlTags.transform(null!==(_b=null===(_a=this.article)||void 0===_a?void 0:_a.description)&&void 0!==_b?_b:"")}get articleCategories(){return void 0!==this.article&&"categories"in this.article?this.article.categories:[]}get articleLink(){if(void 0!==this.article){if("url"in this.article)return this.article.url;if("link"in this.article)return this.article.link}}get enclosureIsAudioType(){return void 0!==this.article&&"enclosure"in this.article&&"type"in this.article.enclosure&&this.article.enclosure.type.startsWith("audio")}get enclosureIsVideoType(){return void 0!==this.article&&"enclosure"in this.article&&"type"in this.article.enclosure&&this.article.enclosure.type.startsWith("video")}get enclosureLink(){if(void 0!==this.article&&"enclosure"in this.article&&"link"in this.article.enclosure)return this.article.enclosure.link}ngOnInit(){this.settingsStorage.settings&&("openNewTab"in this.settingsStorage.settings&&(this.target=this.settingsStorage.settings.openNewTab?"_blank":"_self"),"showImages"in this.settingsStorage.settings&&(this.hasImage=this.settingsStorage.settings.showImages)),this.feed?this.article=this.feed:this.headline&&(this.article=this.headline)}share(){this.dialog.open(ShareDialogComponent,{data:this.article})}showCode(){this.dialog.open(code_viewer_dialog_component_CodeViewerDialogComponent,{data:this.article})}};Object(tslib_es6.b)([Object(core.Input)(),Object(tslib_es6.d)("design:type","function"!=typeof!1&&Object)],article_card_component_ArticleCardComponent.prototype,"feed",void 0),Object(tslib_es6.b)([Object(core.Input)(),Object(tslib_es6.d)("design:type","function"!=typeof!1&&Object)],article_card_component_ArticleCardComponent.prototype,"headline",void 0),Object(tslib_es6.b)([Object(core.Input)(),Object(tslib_es6.d)("design:type",Object)],article_card_component_ArticleCardComponent.prototype,"article",void 0),article_card_component_ArticleCardComponent=Object(tslib_es6.b)([Object(core.Component)({selector:"app-article-card",template:(__webpack_require__(297).default||__webpack_require__(297)).length?__webpack_require__(297).default||__webpack_require__(297):"",styles:[(__webpack_require__(298).default||__webpack_require__(298)).length?__webpack_require__(298).default||__webpack_require__(298):""]}),Object(tslib_es6.d)("design:paramtypes",["function"==typeof(_e=void 0!==fesm2015_dialog.b&&fesm2015_dialog.b)?_e:Object,"function"==typeof(_f=void 0!==SettingsStorageService&&SettingsStorageService)?_f:Object,"function"==typeof(_g=void 0!==StripHtmlTagsPipe&&StripHtmlTagsPipe)?_g:Object])],article_card_component_ArticleCardComponent);var autocomplete=__webpack_require__(581),fesm2015_checkbox=__webpack_require__(582),form_field=__webpack_require__(38),grid_list=__webpack_require__(583),input=__webpack_require__(592),fesm2015_core=__webpack_require__(3),fesm2015_select=__webpack_require__(584),router=__webpack_require__(585);const DIALOGS=[about_dialog_component_AboutDialogComponent,code_viewer_dialog_component_CodeViewerDialogComponent,feed_dialog_component_FeedDialogComponent,headline_options_dialog_component_HeadlineOptionsDialogComponent,RSSChannelInfoDialogComponent,ShareDialogComponent,submit_rss_dialog_component_SubmitRssDialogComponent],DIALOG_MATERIAL_MODULES=[autocomplete.a,fesm2015_button.a,fesm2015_checkbox.a,fesm2015_dialog.c,form_field.d,grid_list.a,icon.a,input.a,menu.a,fesm2015_core.l,fesm2015_select.a,tooltip.a];let DialogsModule=class DialogsModule{};DialogsModule=Object(tslib_es6.b)([Object(core.NgModule)({imports:[common.c,fesm2015_forms.FormsModule,fesm2015_forms.ReactiveFormsModule,flex_layout_es5.a,router.a,DIALOG_MATERIAL_MODULES],declarations:[DIALOGS],exports:[DIALOGS]})],DialogsModule);const PIPES=[OrderByPipe,StripHtmlTagsPipe,TruncatePipe];let PipesModule=class PipesModule{};PipesModule=Object(tslib_es6.b)([Object(core.NgModule)({declarations:[PIPES],exports:[PIPES]})],PipesModule);const MATERIAL_MODULES=[fesm2015_button.a,card.a,chips.a,fesm2015_dialog.c,divider.a,icon.a,menu.a,tooltip.a];let ArticleCardModule=class ArticleCardModule{};ArticleCardModule=Object(tslib_es6.b)([Object(core.NgModule)({imports:[common.c,PipesModule,flex_layout_es5.a,MATERIAL_MODULES,DialogsModule],declarations:[article_card_component_ArticleCardComponent],providers:[SettingsStorageService,StripHtmlTagsPipe],exports:[article_card_component_ArticleCardComponent]})],ArticleCardModule);__webpack_exports__.default={title:"Components/Article Card",component:article_card_component_ArticleCardComponent,decorators:[Object(client.moduleMetadata)({imports:[animations.b,ArticleCardModule]}),story=>Object.assign(Object.assign({},story()),{template:`<div style="width: 350px">${story().template}</div>`})],parameters:{layout:"centered"}};const Template=args=>({component:article_card_component_ArticleCardComponent,template:'<app-article-card [article]="article"></app-article-card>',props:args}),WithArticle=Template.bind({});WithArticle.args={article:{title:"Example article",description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed congue odio at tortor elementum iaculis. Vivamus tristique risus vitae sapien placerat rhoncus. Quisque ut gravida nibh. Donec finibus tortor sed libero pharetra tempus. Donec mattis maximus ligula, pellentesque dictum nunc tempor et. Nam convallis mattis lorem, sit amet interdum neque.",link:"https://example.com"}};const WithImage=Template.bind({});WithImage.args={article:{title:"Example article with image",thumbnail:"https://place-hold.it/1600x900&fontsize=60"}},WithArticle.parameters=Object.assign({storySource:{source:'(args: ArticleCardComponent) => ({\n  component: ArticleCardComponent,\n  template: `<app-article-card [article]="article"></app-article-card>`,\n  props: args\n})'}},WithArticle.parameters),WithImage.parameters=Object.assign({storySource:{source:'(args: ArticleCardComponent) => ({\n  component: ArticleCardComponent,\n  template: `<app-article-card [article]="article"></app-article-card>`,\n  props: args\n})'}},WithImage.parameters)},1211:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,"parameters",(function(){return parameters}));var client_api=__webpack_require__(1218),esm=__webpack_require__(20),angular=__webpack_require__(576),documentation=__webpack_require__(577),create=__webpack_require__(316);Object(angular.setCompodocJson)(documentation);var parameters={actions:{argTypesRegex:"^on[A-Z].*"},docs:{theme:create.a.dark,iframeHeight:"400px"},controls:{expanded:!0},themes:[{name:"indigo-pink",class:"indigo-pink",color:"#3f51b5",default:!0},{name:"deeppurple-amber",class:"deeppurple-amber",color:"#673ab7"},{name:"pink-bluegrey",class:"pink-bluegrey",color:"#e91e63"},{name:"purple-green",class:"purple-green",color:"#9c27b0"}]};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":case"argTypes":return esm.a.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return Object(client_api.b)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return Object(client_api.c)(loader,!1)}));case"parameters":return Object(client_api.d)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return Object(client_api.a)(enhancer)}));case"globals":case"globalTypes":var v={};return v[key]=value,Object(client_api.d)(v,!1);default:return console.log(key+" was not supported :( !")}}))},289:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<h2 matDialogTitle>About This App</h2>\n<mat-dialog-content>\n  <div class="about-version-container">\n    <h3 style="margin: 0">RSS Reader</h3>\n    <strong>\n      <small>Version {{ latestVersion }}</small>\n    </strong>\n  </div>\n  <p>This RSS reader app is made by Edric which is based on a fork of the original source code by BeCompany.</p>\n  <p>The forked repository is available\n    <a class="anchor-link" href="https://github.com/becompany/angular2-rss-reader-tutorial" target="_blank">here</a> and my version is\n    available\n    <a class="anchor-link" href="https://github.com/EdricChan03/rss-reader" target="_blank">here</a>.</p>\n  <p>This repository is hosted on Github Pages. For more info about Github Pages, visit\n    <a class="anchor-link" href="https://pages.github.com">here</a>.</p>\n  <p>This repository also uses\n    <a class="anchor-link" href="https://angular.io">Angular</a> and\n    <a class="anchor-link" href="https://material.angular.io">Angular Material</a> which are ©Google 2017. All rights reserved.</p>\n  <p>Social icons in Share dialog are from\n    <a class="anchor-link" href="https://materialdesignicons.com">MaterialDesignIcons</a>. All other icons are from\n    <a class="anchor-link" href="https://google.github.io/material-design-icons">Google\'s Material Icons</a>.</p>\n  <a class="anchor-link" href="https://github.com/EdricChan03" title="Follow me on Github!" target="_blank">\n    <img src="https://img.shields.io/github/followers/EdricChan03.svg?style=social&label=EdricChan03" alt="Github social badge">\n  </a>\n  <a class="anchor-link" href="https://twitter.com/EdricChan03" title="Follow me on Twitter!" target="_blank">\n    <img src="https://img.shields.io/twitter/follow/EdricChan03.svg?style=social&label=EdricChan03" alt="Twitter social badge">\n  </a>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <a mat-button href="https://github.com/EdricChan03/rss-reader" color="accent">\n    <mat-icon>code</mat-icon>\n    View source code\n  </a>\n  <span fxFlex></span>\n  <button mat-button matDialogClose color="primary">Dismiss</button>\n</mat-dialog-actions>\n'},290:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<h2 matDialogTitle>Code View</h2>\n<mat-dialog-content>\n  <pre><code id="code" class="json">{{ data | json }}</code></pre>\n</mat-dialog-content>\n<mat-dialog-actions align="end">\n  <button mat-button color="primary" matDialogClose>Close</button>\n</mat-dialog-actions>\n'},291:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<h2 matDialogTitle>Submit RSS</h2>\n<mat-dialog-content>\n  <iframe [src]="getFormUrl()" height="600" frameBorder="0"></iframe>\n</mat-dialog-content>\n<mat-dialog-actions align="end">\n  <button mat-button color="primary" matDialogClose>Close</button>\n</mat-dialog-actions>\n'},292:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<h2 matDialogTitle>RSS Config</h2>\n<mat-dialog-content fxLayout="column">\n  <form [formGroup]="rssFeedForm" fxLayout="column">\n    <p>Select from one of the options or enter a RSS feed URL:</p>\n    <mat-form-field color="accent">\n      <mat-label>RSS feed URL</mat-label>\n      <input matInput [matAutocomplete]="rssFeedAuto" formControlName="rss_url">\n      <mat-autocomplete #rssFeedAuto="matAutocomplete">\n        <mat-optgroup [label]="feed.categoryName" *ngFor="let feed of filteredOptions | async">\n          <mat-option *ngFor="let channel of feed.channels" [value]="channel.feedUrl" class="autocomplete-option">\n            <span>{{channel?.feedName}}</span> |\n            <span>{{channel?.feedUrl}}</span>\n          </mat-option>\n        </mat-optgroup>\n      </mat-autocomplete>\n      <mat-error>This is required.</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>API key</mat-label>\n      <input matInput formControlName="api_key">\n      <mat-error *ngIf="rssFeedForm.get(\'api_key\')?.hasError(\'required\')">This is required.</mat-error>\n      <mat-error *ngIf="rssFeedForm.get(\'api_key\')?.hasError(\'minlength\') || rssFeedForm.get(\'api_key\')?.hasError(\'maxlength\')">Please enter a valid API key.</mat-error>\n      <a mat-icon-button matSuffix routerLink="/doc/guides/generate-api-key" matTooltip="How to generate a key" target="_blank">\n        <mat-icon>help</mat-icon>\n      </a>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Order results by&#8320;</mat-label>\n      <mat-select formControlName="order_by">\n        <mat-option *ngFor="let option of orderByOptions" [value]="option.value">{{ option.title }}</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Order results in</mat-label>\n      <mat-select formControlName="order_dir">\n        <mat-option *ngFor="let option of orderDirOptions" [value]="option.value">{{ option.title }}</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Max. number of posts</mat-label>\n      <input matInput formControlName="count" type="number" min="1" max="100">\n      <mat-hint>(Default: 10)</mat-hint>\n    </mat-form-field>\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button color="accent" (click)="openSubmitRssDialog()">Submit RSS URL</button>\n  <span fxFlex></span>\n  <button mat-button color="primary" matDialogClose="cancel">Cancel</button>\n  <button mat-button color="primary" [matDialogClose]="rssFeedForm.value" [disabled]="rssFeedForm.invalid">Save</button>\n</mat-dialog-actions>\n'},293:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<h2 matDialogTitle>Headlines options</h2>\n<mat-dialog-content>\n  <form [formGroup]="headlineOptForm" fxLayout="column">\n    <mat-form-field>\n      <mat-label>API Key</mat-label>\n      <input matInput formControlName="apiKey">\n      <a mat-icon-button href="https://newsapi.org/register" target="_blank" matTooltip="Get API Key" matSuffix><mat-icon>open_in_new</mat-icon></a>\n      <mat-error>This is required.</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Query</mat-label>\n      <input matInput formControlName="q">\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Country</mat-label>\n      <input matInput formControlName="country" [matAutocomplete]="countryAutocomplete">\n      <mat-autocomplete #countryAutocomplete="matAutocomplete">\n        <mat-option *ngFor="let country of filteredOptions | async" [value]="country?.alpha2Code" class="autocomplete-option">\n          <img class="autocomplete-option-img" aria-hidden [src]="country?.flag" height="25">\n          <span>{{country?.name}}</span>\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Category</mat-label>\n      <mat-select formControlName="category">\n        <mat-option *ngFor="let category of categories" [value]="category">{{ category | titlecase }}</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Max. no. of articles</mat-label>\n      <input matInput formControlName="pageSize" type="number" min="20" max="100">\n    </mat-form-field>\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions align="end">\n  <button mat-button color="primary" matDialogClose="cancel">Cancel</button>\n  <button mat-button color="primary" [matDialogClose]="headlineOptForm.value" [disabled]="headlineOptForm.invalid">Save</button>\n</mat-dialog-actions>\n'},294:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<h2 matDialogTitle>RSS Channel Info</h2>\n<mat-dialog-content>\n  <p>Coming soon!</p>\n</mat-dialog-content>\n<mat-dialog-actions align="end">\n  <button mat-button color="primary" matDialogClose>\n    Dismiss\n  </button>\n</mat-dialog-actions>'},295:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<h2 matDialogTitle>Share "{{articleData.title | slice:0:100}}":</h2>\n<mat-dialog-content fxLayout="column" style="min-width: fit-content">\n  <mat-form-field>\n    <input matInput readonly [(ngModel)]="url" (click)="$event.target.select()" matTooltip="Click to select and copy">\n    <mat-label>URL</mat-label>\n  </mat-form-field>\n  <p>OR:</p>\n  <div class="share-btns" style="min-width: 150px">\n    <mat-grid-list cols="3">\n      <mat-grid-tile matRipple matRippleColor="rgba(164, 198, 57, 0.3)" class="share-tile android-btn" (click)="shareNative()">\n        <div class="share-div">\n          <mat-icon class="share-icon">share</mat-icon>\n          <h3>Android</h3>\n        </div>\n      </mat-grid-tile>\n      <mat-grid-tile matRipple matRippleColor="rgba(59, 89, 152, 0.3)" class="share-tile facebook-btn" (click)="shareToFacebook()">\n        <div class="share-div">\n          <mat-icon class="share-icon svg-icon">\n            <svg width="24px" height="24px" viewBox="0 0 24 24" fill="currentColor">\n              <path d="M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M18,5H15.5A3.5,3.5 0 0,0 12,8.5V11H10V14H12V21H15V14H18V11H15V9A1,1 0 0,1 16,8H18V5Z"\n              />\n            </svg>\n          </mat-icon>\n          <h3>Facebook</h3>\n        </div>\n      </mat-grid-tile>\n      <mat-grid-tile matRipple matRippleColor="rgba(0, 172, 237, 0.3)" class="share-tile twitter-btn" (click)="shareToTwitter()">\n        <div class="share-div">\n          <mat-icon class="share-icon svg-icon">\n            <svg width="24px" height="24px" viewBox="0 0 24 24" fill="currentColor">\n              <path d="M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M17.71,9.33C18.19,8.93 18.75,8.45 19,7.92C18.59,8.13 18.1,8.26 17.56,8.33C18.06,7.97 18.47,7.5 18.68,6.86C18.16,7.14 17.63,7.38 16.97,7.5C15.42,5.63 11.71,7.15 12.37,9.95C9.76,9.79 8.17,8.61 6.85,7.16C6.1,8.38 6.75,10.23 7.64,10.74C7.18,10.71 6.83,10.57 6.5,10.41C6.54,11.95 7.39,12.69 8.58,13.09C8.22,13.16 7.82,13.18 7.44,13.12C7.81,14.19 8.58,14.86 9.9,15C9,15.76 7.34,16.29 6,16.08C7.15,16.81 8.46,17.39 10.28,17.31C14.69,17.11 17.64,13.95 17.71,9.33Z"\n              />\n            </svg>\n          </mat-icon>\n          <h3>Twitter</h3>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</mat-dialog-content>\n<mat-dialog-actions align="end">\n  <button mat-button color="primary" matDialogClose>Dismiss</button>\n</mat-dialog-actions>\n'},296:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=".share-icon {\n  font-size: 30px;\n  width: 30px;\n  height: 30px;\n}\n\n.svg-icon > svg {\n  width: 30px !important;\n  height: 30px !important;\n}\n\n.share-div {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n}\n\n.share-tile {\n  cursor: pointer;\n}\n\n.android-btn {\n  color: #A4C639 !important;\n}\n\n.facebook-btn {\n  color: #3b5998 !important;\n}\n\n.twitter-btn {\n  color: #00aced !important;\n}\n\n.google-plus-btn {\n  color: #d34836 !important;\n}"},297:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<mat-card class="article-card">\n  <mat-card-header class="article-card--header">\n    <mat-card-title *ngIf="articleAuthor" class="article-card--author">{{ articleAuthor }}</mat-card-title>\n    <mat-card-subtitle *ngIf="articlePubDate" class="article-card--pub-date">{{ articlePubDate | date:\'short\' }}</mat-card-subtitle>\n    <span fxFlex></span>\n    <button mat-icon-button [matMenuTriggerFor]="feedMenu">\n      <mat-icon class="icon">more_vert</mat-icon>\n    </button>\n    <mat-menu #feedMenu="matMenu">\n      <button mat-menu-item (click)="showCode()">\n        <mat-icon>code</mat-icon> Show code\n      </button>\n    </mat-menu>\n  </mat-card-header>\n  <img mat-card-image class="article-card--image" *ngIf="articleImg && hasImage" [src]="articleImg" alt="Article thumbnail">\n  <mat-card-title class="article-card--title">{{ articleTitle }}</mat-card-title>\n  <mat-card-content class="article-card--content">\n    <p class="article-card--description">{{ articleDesc | slice:0:300 }}</p>\n    <mat-chip-list *ngIf="articleCategories.length > 0" class="article-card--categories">\n      <mat-chip *ngFor="let category of articleCategories" [innerHTML]="category"></mat-chip>\n    </mat-chip-list>\n    <audio *ngIf="enclosureLink && enclosureIsAudioType" [src]="enclosureLink" class="article-card--media-player" controls preload="metadata"></audio>\n    <video *ngIf="enclosureLink && enclosureIsVideoType" [src]="enclosureLink" class="article-card--media-player" controls preload="metadata"></video>\n  </mat-card-content>\n  <mat-divider class="article-card--divider"></mat-divider>\n  <mat-card-actions align="end" class="article-card--actions">\n    <button mat-icon-button (click)="share()" matTooltip="Share post" color="primary" aria-label="Share post">\n      <mat-icon>share</mat-icon>\n    </button>\n    <a mat-icon-button [href]="articleLink" [target]="target" color="primary" aria-label="View post" matTooltip="View post">\n      <mat-icon>open_in_new</mat-icon>\n    </a>\n  </mat-card-actions>\n</mat-card>\n'},298:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=".article-card--title {\n  line-height: 32px;\n}"},409:function(module,__webpack_exports__,__webpack_require__){"use strict";var _node_modules_angular_devkit_build_angular_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(590),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_angular_devkit_build_angular_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__)()((function(i){return i[1]}));___CSS_LOADER_EXPORT___.push([module.i,"/* You can add global styles to this file, and also import other style files */\n/** Adapted from https://github.com/atom-material/atom-material-syntax-light */\n/*\nOrginal Style from https://github.com/Kelbster/highlightjs-material-dark-theme  (c) Kelby Gassmanl <kelby.gassman@gmail.com>\n*/\n/* Colors for the ripple elements.*/\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\n/* Select Angular Material theming. */\n.mat-badge-content {\n  font-weight: 600;\n  font-size: 12px;\n  font-family: Merriweather, sans-serif;\n}\n.mat-badge-small .mat-badge-content {\n  font-size: 9px;\n}\n.mat-badge-large .mat-badge-content {\n  font-size: 24px;\n}\n.mat-h1, .mat-headline, .mat-typography h1 {\n  font: 400 24px/32px Merriweather, sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px;\n}\n.mat-h2, .mat-title, .mat-typography h2 {\n  font: 700 20px/32px Merriweather, sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px;\n}\n.mat-h3, .mat-subheading-2, .mat-typography h3 {\n  font: 400 16px/28px Merriweather, sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px;\n}\n.mat-h4, .mat-subheading-1, .mat-typography h4 {\n  font: 400 15px/24px Merriweather, sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px;\n}\n.mat-h5, .mat-typography h5 {\n  font: 400 calc(14px * 0.83)/20px Merriweather, sans-serif;\n  margin: 0 0 12px;\n}\n.mat-h6, .mat-typography h6 {\n  font: 400 calc(14px * 0.67)/20px Merriweather, sans-serif;\n  margin: 0 0 12px;\n}\n.mat-body-strong, .mat-body-2 {\n  font: 700 14px/24px Merriweather, sans-serif;\n  letter-spacing: normal;\n}\n.mat-body, .mat-body-1, .mat-typography {\n  font: 400 14px/20px Merriweather, sans-serif;\n  letter-spacing: normal;\n}\n.mat-body p, .mat-body-1 p, .mat-typography p {\n  margin: 0 0 12px;\n}\n.mat-small, .mat-caption {\n  font: 400 12px/20px Merriweather, sans-serif;\n  letter-spacing: normal;\n}\n.mat-display-4, .mat-typography .mat-display-4 {\n  font: 300 112px/112px Merriweather, sans-serif;\n  letter-spacing: -0.05em;\n  margin: 0 0 56px;\n}\n.mat-display-3, .mat-typography .mat-display-3 {\n  font: 400 56px/56px Merriweather, sans-serif;\n  letter-spacing: -0.02em;\n  margin: 0 0 64px;\n}\n.mat-display-2, .mat-typography .mat-display-2 {\n  font: 400 45px/48px Merriweather, sans-serif;\n  letter-spacing: -0.005em;\n  margin: 0 0 64px;\n}\n.mat-display-1, .mat-typography .mat-display-1 {\n  font: 400 34px/40px Merriweather, sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 64px;\n}\n.mat-bottom-sheet-container {\n  font: 400 14px/20px Merriweather, sans-serif;\n  letter-spacing: normal;\n}\n.mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n.mat-flat-button, .mat-fab, .mat-mini-fab {\n  font-family: Merriweather, sans-serif;\n  font-size: 14px;\n  font-weight: 700;\n}\n.mat-button-toggle {\n  font-family: Merriweather, sans-serif;\n}\n.mat-card {\n  font-family: Merriweather, sans-serif;\n}\n.mat-card-title {\n  font-size: 24px;\n  font-weight: 700;\n}\n.mat-card-header .mat-card-title {\n  font-size: 20px;\n}\n.mat-card-subtitle,\n.mat-card-content {\n  font-size: 14px;\n}\n.mat-checkbox {\n  font-family: Merriweather, sans-serif;\n}\n.mat-checkbox-layout .mat-checkbox-label {\n  line-height: 24px;\n}\n.mat-chip {\n  font-size: 14px;\n  font-weight: 700;\n}\n.mat-chip .mat-chip-trailing-icon.mat-icon,\n.mat-chip .mat-chip-remove.mat-icon {\n  font-size: 18px;\n}\n.mat-table {\n  font-family: Merriweather, sans-serif;\n}\n.mat-header-cell {\n  font-size: 12px;\n  font-weight: 700;\n}\n.mat-cell, .mat-footer-cell {\n  font-size: 14px;\n}\n.mat-calendar {\n  font-family: Merriweather, sans-serif;\n}\n.mat-calendar-body {\n  font-size: 13px;\n}\n.mat-calendar-body-label,\n.mat-calendar-period-button {\n  font-size: 14px;\n  font-weight: 700;\n}\n.mat-calendar-table-header th {\n  font-size: 11px;\n  font-weight: 400;\n}\n.mat-dialog-title {\n  font: 700 20px/32px Merriweather, sans-serif;\n  letter-spacing: normal;\n}\n.mat-expansion-panel-header {\n  font-family: Merriweather, sans-serif;\n  font-size: 15px;\n  font-weight: 400;\n}\n.mat-expansion-panel-content {\n  font: 400 14px/20px Merriweather, sans-serif;\n  letter-spacing: normal;\n}\n.mat-form-field {\n  font-size: inherit;\n  font-weight: 400;\n  line-height: 1.125;\n  font-family: Merriweather, sans-serif;\n  letter-spacing: normal;\n}\n.mat-form-field-wrapper {\n  padding-bottom: 1.34375em;\n}\n.mat-form-field-prefix .mat-icon,\n.mat-form-field-suffix .mat-icon {\n  font-size: 150%;\n  line-height: 1.125;\n}\n.mat-form-field-prefix .mat-icon-button,\n.mat-form-field-suffix .mat-icon-button {\n  height: 1.5em;\n  width: 1.5em;\n}\n.mat-form-field-prefix .mat-icon-button .mat-icon,\n.mat-form-field-suffix .mat-icon-button .mat-icon {\n  height: 1.125em;\n  line-height: 1.125;\n}\n.mat-form-field-infix {\n  padding: 0.5em 0;\n  border-top: 0.84375em solid transparent;\n}\n.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.34375em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.34374em) scale(0.75);\n  width: 133.3333433333%;\n}\n.mat-form-field-label-wrapper {\n  top: -0.84375em;\n  padding-top: 0.84375em;\n}\n.mat-form-field-label {\n  top: 1.34375em;\n}\n.mat-form-field-underline {\n  bottom: 1.34375em;\n}\n.mat-form-field-subscript-wrapper {\n  font-size: 75%;\n  margin-top: 0.6666666667em;\n  top: calc(100% - 1.7916666667em);\n}\n.mat-form-field-appearance-legacy .mat-form-field-wrapper {\n  padding-bottom: 1.25em;\n}\n.mat-form-field-appearance-legacy .mat-form-field-infix {\n  padding: 0.4375em 0;\n}\n.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\n  -ms-transform: translateY(-1.28125em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\n  -ms-transform: translateY(-1.28124em) scale(0.75);\n  width: 133.3333433333%;\n}\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\n  -ms-transform: translateY(-1.28123em) scale(0.75);\n  width: 133.3333533333%;\n}\n.mat-form-field-appearance-legacy .mat-form-field-label {\n  top: 1.28125em;\n}\n.mat-form-field-appearance-legacy .mat-form-field-underline {\n  bottom: 1.25em;\n}\n.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper {\n  margin-top: 0.5416666667em;\n  top: calc(100% - 1.6666666667em);\n}\n@media print {\n  .mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.28122em) scale(0.75);\n  }\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.28121em) scale(0.75);\n  }\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.2812em) scale(0.75);\n  }\n}\n.mat-form-field-appearance-fill .mat-form-field-infix {\n  padding: 0.25em 0 0.75em 0;\n}\n.mat-form-field-appearance-fill .mat-form-field-label {\n  top: 1.09375em;\n  margin-top: -0.5em;\n}\n.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-0.59375em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-0.59374em) scale(0.75);\n  width: 133.3333433333%;\n}\n.mat-form-field-appearance-outline .mat-form-field-infix {\n  padding: 1em 0 1em 0;\n}\n.mat-form-field-appearance-outline .mat-form-field-label {\n  top: 1.84375em;\n  margin-top: -0.25em;\n}\n.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.59375em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.59374em) scale(0.75);\n  width: 133.3333433333%;\n}\n.mat-grid-tile-header,\n.mat-grid-tile-footer {\n  font-size: 14px;\n}\n.mat-grid-tile-header .mat-line,\n.mat-grid-tile-footer .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-grid-tile-header .mat-line:nth-child(n+2),\n.mat-grid-tile-footer .mat-line:nth-child(n+2) {\n  font-size: 12px;\n}\ninput.mat-input-element {\n  margin-top: -0.0625em;\n}\n.mat-menu-item {\n  font-family: Merriweather, sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n}\n.mat-paginator,\n.mat-paginator-page-size .mat-select-trigger {\n  font-family: Merriweather, sans-serif;\n  font-size: 12px;\n}\n.mat-radio-button {\n  font-family: Merriweather, sans-serif;\n}\n.mat-select {\n  font-family: Merriweather, sans-serif;\n}\n.mat-select-trigger {\n  height: 1.125em;\n}\n.mat-slide-toggle-content {\n  font-family: Merriweather, sans-serif;\n}\n.mat-slider-thumb-label-text {\n  font-family: Merriweather, sans-serif;\n  font-size: 12px;\n  font-weight: 700;\n}\n.mat-stepper-vertical, .mat-stepper-horizontal {\n  font-family: Merriweather, sans-serif;\n}\n.mat-step-label {\n  font-size: 14px;\n  font-weight: 400;\n}\n.mat-step-sub-label-error {\n  font-weight: normal;\n}\n.mat-step-label-error {\n  font-size: 14px;\n}\n.mat-step-label-selected {\n  font-size: 14px;\n  font-weight: 700;\n}\n.mat-tab-group {\n  font-family: Merriweather, sans-serif;\n}\n.mat-tab-label, .mat-tab-link {\n  font-family: Merriweather, sans-serif;\n  font-size: 14px;\n  font-weight: 700;\n}\n.mat-toolbar,\n.mat-toolbar h1,\n.mat-toolbar h2,\n.mat-toolbar h3,\n.mat-toolbar h4,\n.mat-toolbar h5,\n.mat-toolbar h6 {\n  font: 700 20px/32px Merriweather, sans-serif;\n  letter-spacing: normal;\n  margin: 0;\n}\n.mat-tooltip {\n  font-family: Merriweather, sans-serif;\n  font-size: 10px;\n  padding-top: 6px;\n  padding-bottom: 6px;\n}\n.mat-tooltip-handset {\n  font-size: 14px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-list-item {\n  font-family: Merriweather, sans-serif;\n}\n.mat-list-option {\n  font-family: Merriweather, sans-serif;\n}\n.mat-list-base .mat-list-item {\n  font-size: 16px;\n}\n.mat-list-base .mat-list-item .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base .mat-list-item .mat-line:nth-child(n+2) {\n  font-size: 14px;\n}\n.mat-list-base .mat-list-option {\n  font-size: 16px;\n}\n.mat-list-base .mat-list-option .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base .mat-list-option .mat-line:nth-child(n+2) {\n  font-size: 14px;\n}\n.mat-list-base .mat-subheader {\n  font-family: Merriweather, sans-serif;\n  font-size: 14px;\n  font-weight: 700;\n}\n.mat-list-base[dense] .mat-list-item {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-list-item .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2) {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-list-option {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-list-option .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2) {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-subheader {\n  font-family: Merriweather, sans-serif;\n  font-size: 12px;\n  font-weight: 700;\n}\n.mat-option {\n  font-family: Merriweather, sans-serif;\n  font-size: 16px;\n}\n.mat-optgroup-label {\n  font: 700 14px/24px Merriweather, sans-serif;\n  letter-spacing: normal;\n}\n.mat-simple-snackbar {\n  font-family: Merriweather, sans-serif;\n  font-size: 14px;\n}\n.mat-simple-snackbar-action {\n  line-height: 1;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: 700;\n}\n.mat-tree {\n  font-family: Merriweather, sans-serif;\n}\n.mat-tree-node,\n.mat-nested-tree-node {\n  font-weight: 400;\n  font-size: 14px;\n}\n.mat-ripple {\n  overflow: hidden;\n  position: relative;\n}\n.mat-ripple:not(:empty) {\n  transform: translateZ(0);\n}\n.mat-ripple.mat-ripple-unbounded {\n  overflow: visible;\n}\n.mat-ripple-element {\n  position: absolute;\n  border-radius: 50%;\n  pointer-events: none;\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n  transform: scale(0);\n}\n.cdk-high-contrast-active .mat-ripple-element {\n  display: none;\n}\n.cdk-visually-hidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n  white-space: nowrap;\n  outline: 0;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n.cdk-overlay-container, .cdk-global-overlay-wrapper {\n  pointer-events: none;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n}\n.cdk-overlay-container {\n  position: fixed;\n  z-index: 1000;\n}\n.cdk-overlay-container:empty {\n  display: none;\n}\n.cdk-global-overlay-wrapper {\n  display: flex;\n  position: absolute;\n  z-index: 1000;\n}\n.cdk-overlay-pane {\n  position: absolute;\n  pointer-events: auto;\n  box-sizing: border-box;\n  z-index: 1000;\n  display: flex;\n  max-width: 100%;\n  max-height: 100%;\n}\n.cdk-overlay-backdrop {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  pointer-events: auto;\n  -webkit-tap-highlight-color: transparent;\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\n  opacity: 0;\n}\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 1;\n}\n.cdk-high-contrast-active .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 0.6;\n}\n.cdk-overlay-dark-backdrop {\n  background: rgba(0, 0, 0, 0.32);\n}\n.cdk-overlay-transparent-backdrop, .cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 0;\n}\n.cdk-overlay-connected-position-bounding-box {\n  position: absolute;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  min-width: 1px;\n  min-height: 1px;\n}\n.cdk-global-scrollblock {\n  position: fixed;\n  width: 100%;\n  overflow-y: scroll;\n}\n@-webkit-keyframes cdk-text-field-autofill-start {\n  /*!*/\n}\n@keyframes cdk-text-field-autofill-start {\n  /*!*/\n}\n@-webkit-keyframes cdk-text-field-autofill-end {\n  /*!*/\n}\n@keyframes cdk-text-field-autofill-end {\n  /*!*/\n}\n.cdk-text-field-autofill-monitored:-webkit-autofill {\n  -webkit-animation: cdk-text-field-autofill-start 0s 1ms;\n          animation: cdk-text-field-autofill-start 0s 1ms;\n}\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n  -webkit-animation: cdk-text-field-autofill-end 0s 1ms;\n          animation: cdk-text-field-autofill-end 0s 1ms;\n}\ntextarea.cdk-textarea-autosize {\n  resize: none;\n}\ntextarea.cdk-textarea-autosize-measuring {\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n  height: auto !important;\n  overflow: hidden !important;\n}\ntextarea.cdk-textarea-autosize-measuring-firefox {\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n  height: 0 !important;\n}\n.mat-focus-indicator {\n  position: relative;\n}\n.mat-mdc-focus-indicator {\n  position: relative;\n}\n.deeppurple-amber {\n  /** Adapted from https://github.com/atom-material/atom-material-syntax-light */\n}\n.deeppurple-amber table.app-table {\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber table.app-table th {\n  background: whitesmoke;\n}\n.deeppurple-amber table.app-table td {\n  border: 1px solid rgba(0, 0, 0, 0.03);\n}\n.deeppurple-amber .hljs {\n  display: block;\n  overflow-x: auto;\n  padding: 1em;\n  background: #fafafa;\n  color: #37474f;\n  -webkit-font-smoothing: antialiased;\n  -webkit-text-size-adjust: 100%;\n     -moz-text-size-adjust: 100%;\n          text-size-adjust: 100%;\n  font: 300 100%/1 Roboto Mono, monospace;\n  font-size: 14px;\n}\n.deeppurple-amber .hljs > *::-moz-selection {\n  background-color: #d6edea;\n}\n.deeppurple-amber .hljs > *::selection,\n.deeppurple-amber .hljs-section {\n  background-color: #d6edea;\n}\n.deeppurple-amber .hljs-comment {\n  color: #b0bec5;\n  font-style: italic;\n}\n.deeppurple-amber .hljs-tag,\n.deeppurple-amber .hljs-selector-tag,\n.deeppurple-amber .hljs-regexp,\n.deeppurple-amber .hljs-meta {\n  color: #9c27b0;\n}\n.deeppurple-amber .hljs-string,\n.deeppurple-amber .hljs-subst {\n  color: #0d904f;\n}\n.deeppurple-amber .hljs-number,\n.deeppurple-amber .hljs-variable,\n.deeppurple-amber .hljs-template-variable {\n  color: #80cbc4;\n}\n.deeppurple-amber .hljs-name,\n.deeppurple-amber .hljs-keyword,\n.deeppurple-amber .hljs-type,\n.deeppurple-amber .hljs-attribute {\n  color: #3b78e7;\n}\n.deeppurple-amber .hljs-title,\n.deeppurple-amber .hljs-function > .hljs-title,\n.deeppurple-amber .hljs-symbol,\n.deeppurple-amber .hljs-bullet,\n.deeppurple-amber .hljs-built_in,\n.deeppurple-amber .hljs-builtin-name,\n.deeppurple-amber .hljs-link {\n  color: #6182b8;\n}\n.deeppurple-amber .hljs-params {\n  color: #d81b60;\n}\n.deeppurple-amber .hljs-addition {\n  color: #3b78e7;\n  display: inline-block;\n  width: 100%;\n}\n.deeppurple-amber .hljs-deletion {\n  color: #e53935;\n  display: inline-block;\n  width: 100%;\n}\n.deeppurple-amber .hljs-selector-id,\n.deeppurple-amber .hljs-selector-class {\n  color: #8796b0;\n}\n.deeppurple-amber .hljs-emphasis {\n  font-style: italic;\n}\n.deeppurple-amber .hljs-strong {\n  font-weight: bold;\n}\n.deeppurple-amber .hljs-link {\n  text-decoration: underline;\n}\n.deeppurple-amber .active-link {\n  color: #673ab7 !important;\n  background-color: #DCDCDC !important;\n}\n.deeppurple-amber .active-link mat-icon {\n  color: #673ab7 !important;\n}\n.deeppurple-amber .warning-icon {\n  color: #f44336 !important;\n}\n.deeppurple-amber a.anchor-link {\n  color: #673ab7;\n  text-decoration: none;\n}\n.deeppurple-amber a.anchor-link:hover {\n  text-decoration: underline;\n}\n.deeppurple-amber .mat-list-item-content mat-icon,\n.deeppurple-amber .icon {\n  color: rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .onboarding-content {\n  color: #000;\n}\n.deeppurple-amber .onboarding-card {\n  background-color: #FAFAFA;\n}\n.deeppurple-amber .indicator-active {\n  background-color: #ffd740 !important;\n}\n.deeppurple-amber .indicator {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n.deeppurple-amber .badge {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: #e0e0e0;\n}\n.deeppurple-amber .badge.badge--colored {\n  background-color: #673ab7;\n  color: white;\n}\n.deeppurple-amber .badge.badge--primary {\n  background-color: #673ab7;\n  color: white;\n}\n.deeppurple-amber .badge.badge--accent {\n  background-color: #ffd740;\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .badge.badge--warn {\n  background-color: #f44336;\n  color: white;\n}\n.deeppurple-amber .mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.deeppurple-amber .mat-option {\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-option:hover:not(.mat-option-disabled), .deeppurple-amber .mat-option:focus:not(.mat-option-disabled) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.deeppurple-amber .mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.deeppurple-amber .mat-option.mat-active {\n  background: rgba(0, 0, 0, 0.04);\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-option.mat-option-disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #673ab7;\n}\n.deeppurple-amber .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #ffd740;\n}\n.deeppurple-amber .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #f44336;\n}\n.deeppurple-amber .mat-optgroup-label {\n  color: rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-optgroup-disabled .mat-optgroup-label {\n  color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-pseudo-checkbox {\n  color: rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-pseudo-checkbox::after {\n  color: #fafafa;\n}\n.deeppurple-amber .mat-pseudo-checkbox-disabled {\n  color: #b0b0b0;\n}\n.deeppurple-amber .mat-primary .mat-pseudo-checkbox-checked,\n.deeppurple-amber .mat-primary .mat-pseudo-checkbox-indeterminate {\n  background: #673ab7;\n}\n.deeppurple-amber .mat-pseudo-checkbox-checked,\n.deeppurple-amber .mat-pseudo-checkbox-indeterminate,\n.deeppurple-amber .mat-accent .mat-pseudo-checkbox-checked,\n.deeppurple-amber .mat-accent .mat-pseudo-checkbox-indeterminate {\n  background: #ffd740;\n}\n.deeppurple-amber .mat-warn .mat-pseudo-checkbox-checked,\n.deeppurple-amber .mat-warn .mat-pseudo-checkbox-indeterminate {\n  background: #f44336;\n}\n.deeppurple-amber .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,\n.deeppurple-amber .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled {\n  background: #b0b0b0;\n}\n.deeppurple-amber .mat-app-background, .deeppurple-amber.mat-app-background {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-elevation-z0 {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z1 {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z2 {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z3 {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z4 {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z5 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z6 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z7 {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z8 {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z9 {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z10 {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z11 {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z12 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z13 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z14 {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z15 {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z16 {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z17 {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z18 {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z19 {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z20 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z21 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z22 {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z23 {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-elevation-z24 {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.mat-theme-loaded-marker {\n  display: none;\n}\n.deeppurple-amber .mat-autocomplete-panel {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-autocomplete-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover) {\n  background: white;\n}\n.deeppurple-amber .mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled) {\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-badge-content {\n  color: white;\n  background: #673ab7;\n}\n.cdk-high-contrast-active .deeppurple-amber .mat-badge-content {\n  outline: solid 1px;\n  border-radius: 0;\n}\n.deeppurple-amber .mat-badge-accent .mat-badge-content {\n  background: #ffd740;\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-badge-warn .mat-badge-content {\n  color: white;\n  background: #f44336;\n}\n.deeppurple-amber .mat-badge {\n  position: relative;\n}\n.deeppurple-amber .mat-badge-hidden .mat-badge-content {\n  display: none;\n}\n.deeppurple-amber .mat-badge-disabled .mat-badge-content {\n  background: #b9b9b9;\n  color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-badge-content {\n  position: absolute;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  transition: transform 200ms ease-in-out;\n  transform: scale(0.6);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n}\n.deeppurple-amber .ng-animate-disabled .mat-badge-content,\n.deeppurple-amber .mat-badge-content._mat-animation-noopable {\n  transition: none;\n}\n.deeppurple-amber .mat-badge-content.mat-badge-active {\n  transform: none;\n}\n.deeppurple-amber .mat-badge-small .mat-badge-content {\n  width: 16px;\n  height: 16px;\n  line-height: 16px;\n}\n.deeppurple-amber .mat-badge-small.mat-badge-above .mat-badge-content {\n  top: -8px;\n}\n.deeppurple-amber .mat-badge-small.mat-badge-below .mat-badge-content {\n  bottom: -8px;\n}\n.deeppurple-amber .mat-badge-small.mat-badge-before .mat-badge-content {\n  left: -16px;\n}\n[dir=rtl] .deeppurple-amber .mat-badge-small.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -16px;\n}\n.deeppurple-amber .mat-badge-small.mat-badge-after .mat-badge-content {\n  right: -16px;\n}\n[dir=rtl] .deeppurple-amber .mat-badge-small.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -16px;\n}\n.deeppurple-amber .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -8px;\n}\n[dir=rtl] .deeppurple-amber .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -8px;\n}\n.deeppurple-amber .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -8px;\n}\n[dir=rtl] .deeppurple-amber .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -8px;\n}\n.deeppurple-amber .mat-badge-medium .mat-badge-content {\n  width: 22px;\n  height: 22px;\n  line-height: 22px;\n}\n.deeppurple-amber .mat-badge-medium.mat-badge-above .mat-badge-content {\n  top: -11px;\n}\n.deeppurple-amber .mat-badge-medium.mat-badge-below .mat-badge-content {\n  bottom: -11px;\n}\n.deeppurple-amber .mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: -22px;\n}\n[dir=rtl] .deeppurple-amber .mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -22px;\n}\n.deeppurple-amber .mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: -22px;\n}\n[dir=rtl] .deeppurple-amber .mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -22px;\n}\n.deeppurple-amber .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -11px;\n}\n[dir=rtl] .deeppurple-amber .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -11px;\n}\n.deeppurple-amber .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -11px;\n}\n[dir=rtl] .deeppurple-amber .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -11px;\n}\n.deeppurple-amber .mat-badge-large .mat-badge-content {\n  width: 28px;\n  height: 28px;\n  line-height: 28px;\n}\n.deeppurple-amber .mat-badge-large.mat-badge-above .mat-badge-content {\n  top: -14px;\n}\n.deeppurple-amber .mat-badge-large.mat-badge-below .mat-badge-content {\n  bottom: -14px;\n}\n.deeppurple-amber .mat-badge-large.mat-badge-before .mat-badge-content {\n  left: -28px;\n}\n[dir=rtl] .deeppurple-amber .mat-badge-large.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -28px;\n}\n.deeppurple-amber .mat-badge-large.mat-badge-after .mat-badge-content {\n  right: -28px;\n}\n[dir=rtl] .deeppurple-amber .mat-badge-large.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -28px;\n}\n.deeppurple-amber .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -14px;\n}\n[dir=rtl] .deeppurple-amber .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -14px;\n}\n.deeppurple-amber .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -14px;\n}\n[dir=rtl] .deeppurple-amber .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -14px;\n}\n.deeppurple-amber .mat-bottom-sheet-container {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-button, .deeppurple-amber .mat-icon-button, .deeppurple-amber .mat-stroked-button {\n  color: inherit;\n  background: transparent;\n}\n.deeppurple-amber .mat-button.mat-primary, .deeppurple-amber .mat-icon-button.mat-primary, .deeppurple-amber .mat-stroked-button.mat-primary {\n  color: #673ab7;\n}\n.deeppurple-amber .mat-button.mat-accent, .deeppurple-amber .mat-icon-button.mat-accent, .deeppurple-amber .mat-stroked-button.mat-accent {\n  color: #ffd740;\n}\n.deeppurple-amber .mat-button.mat-warn, .deeppurple-amber .mat-icon-button.mat-warn, .deeppurple-amber .mat-stroked-button.mat-warn {\n  color: #f44336;\n}\n.deeppurple-amber .mat-button.mat-primary.mat-button-disabled, .deeppurple-amber .mat-button.mat-accent.mat-button-disabled, .deeppurple-amber .mat-button.mat-warn.mat-button-disabled, .deeppurple-amber .mat-button.mat-button-disabled.mat-button-disabled, .deeppurple-amber .mat-icon-button.mat-primary.mat-button-disabled, .deeppurple-amber .mat-icon-button.mat-accent.mat-button-disabled, .deeppurple-amber .mat-icon-button.mat-warn.mat-button-disabled, .deeppurple-amber .mat-icon-button.mat-button-disabled.mat-button-disabled, .deeppurple-amber .mat-stroked-button.mat-primary.mat-button-disabled, .deeppurple-amber .mat-stroked-button.mat-accent.mat-button-disabled, .deeppurple-amber .mat-stroked-button.mat-warn.mat-button-disabled, .deeppurple-amber .mat-stroked-button.mat-button-disabled.mat-button-disabled {\n  color: rgba(0, 0, 0, 0.26);\n}\n.deeppurple-amber .mat-button.mat-primary .mat-button-focus-overlay, .deeppurple-amber .mat-icon-button.mat-primary .mat-button-focus-overlay, .deeppurple-amber .mat-stroked-button.mat-primary .mat-button-focus-overlay {\n  background-color: #673ab7;\n}\n.deeppurple-amber .mat-button.mat-accent .mat-button-focus-overlay, .deeppurple-amber .mat-icon-button.mat-accent .mat-button-focus-overlay, .deeppurple-amber .mat-stroked-button.mat-accent .mat-button-focus-overlay {\n  background-color: #ffd740;\n}\n.deeppurple-amber .mat-button.mat-warn .mat-button-focus-overlay, .deeppurple-amber .mat-icon-button.mat-warn .mat-button-focus-overlay, .deeppurple-amber .mat-stroked-button.mat-warn .mat-button-focus-overlay {\n  background-color: #f44336;\n}\n.deeppurple-amber .mat-button.mat-button-disabled .mat-button-focus-overlay, .deeppurple-amber .mat-icon-button.mat-button-disabled .mat-button-focus-overlay, .deeppurple-amber .mat-stroked-button.mat-button-disabled .mat-button-focus-overlay {\n  background-color: transparent;\n}\n.deeppurple-amber .mat-button .mat-ripple-element, .deeppurple-amber .mat-icon-button .mat-ripple-element, .deeppurple-amber .mat-stroked-button .mat-ripple-element {\n  opacity: 0.1;\n  background-color: currentColor;\n}\n.deeppurple-amber .mat-button-focus-overlay {\n  background: black;\n}\n.deeppurple-amber .mat-stroked-button:not(.mat-button-disabled) {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-flat-button, .deeppurple-amber .mat-raised-button, .deeppurple-amber .mat-fab, .deeppurple-amber .mat-mini-fab {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: white;\n}\n.deeppurple-amber .mat-flat-button.mat-primary, .deeppurple-amber .mat-raised-button.mat-primary, .deeppurple-amber .mat-fab.mat-primary, .deeppurple-amber .mat-mini-fab.mat-primary {\n  color: white;\n}\n.deeppurple-amber .mat-flat-button.mat-accent, .deeppurple-amber .mat-raised-button.mat-accent, .deeppurple-amber .mat-fab.mat-accent, .deeppurple-amber .mat-mini-fab.mat-accent {\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-flat-button.mat-warn, .deeppurple-amber .mat-raised-button.mat-warn, .deeppurple-amber .mat-fab.mat-warn, .deeppurple-amber .mat-mini-fab.mat-warn {\n  color: white;\n}\n.deeppurple-amber .mat-flat-button.mat-primary.mat-button-disabled, .deeppurple-amber .mat-flat-button.mat-accent.mat-button-disabled, .deeppurple-amber .mat-flat-button.mat-warn.mat-button-disabled, .deeppurple-amber .mat-flat-button.mat-button-disabled.mat-button-disabled, .deeppurple-amber .mat-raised-button.mat-primary.mat-button-disabled, .deeppurple-amber .mat-raised-button.mat-accent.mat-button-disabled, .deeppurple-amber .mat-raised-button.mat-warn.mat-button-disabled, .deeppurple-amber .mat-raised-button.mat-button-disabled.mat-button-disabled, .deeppurple-amber .mat-fab.mat-primary.mat-button-disabled, .deeppurple-amber .mat-fab.mat-accent.mat-button-disabled, .deeppurple-amber .mat-fab.mat-warn.mat-button-disabled, .deeppurple-amber .mat-fab.mat-button-disabled.mat-button-disabled, .deeppurple-amber .mat-mini-fab.mat-primary.mat-button-disabled, .deeppurple-amber .mat-mini-fab.mat-accent.mat-button-disabled, .deeppurple-amber .mat-mini-fab.mat-warn.mat-button-disabled, .deeppurple-amber .mat-mini-fab.mat-button-disabled.mat-button-disabled {\n  color: rgba(0, 0, 0, 0.26);\n}\n.deeppurple-amber .mat-flat-button.mat-primary, .deeppurple-amber .mat-raised-button.mat-primary, .deeppurple-amber .mat-fab.mat-primary, .deeppurple-amber .mat-mini-fab.mat-primary {\n  background-color: #673ab7;\n}\n.deeppurple-amber .mat-flat-button.mat-accent, .deeppurple-amber .mat-raised-button.mat-accent, .deeppurple-amber .mat-fab.mat-accent, .deeppurple-amber .mat-mini-fab.mat-accent {\n  background-color: #ffd740;\n}\n.deeppurple-amber .mat-flat-button.mat-warn, .deeppurple-amber .mat-raised-button.mat-warn, .deeppurple-amber .mat-fab.mat-warn, .deeppurple-amber .mat-mini-fab.mat-warn {\n  background-color: #f44336;\n}\n.deeppurple-amber .mat-flat-button.mat-primary.mat-button-disabled, .deeppurple-amber .mat-flat-button.mat-accent.mat-button-disabled, .deeppurple-amber .mat-flat-button.mat-warn.mat-button-disabled, .deeppurple-amber .mat-flat-button.mat-button-disabled.mat-button-disabled, .deeppurple-amber .mat-raised-button.mat-primary.mat-button-disabled, .deeppurple-amber .mat-raised-button.mat-accent.mat-button-disabled, .deeppurple-amber .mat-raised-button.mat-warn.mat-button-disabled, .deeppurple-amber .mat-raised-button.mat-button-disabled.mat-button-disabled, .deeppurple-amber .mat-fab.mat-primary.mat-button-disabled, .deeppurple-amber .mat-fab.mat-accent.mat-button-disabled, .deeppurple-amber .mat-fab.mat-warn.mat-button-disabled, .deeppurple-amber .mat-fab.mat-button-disabled.mat-button-disabled, .deeppurple-amber .mat-mini-fab.mat-primary.mat-button-disabled, .deeppurple-amber .mat-mini-fab.mat-accent.mat-button-disabled, .deeppurple-amber .mat-mini-fab.mat-warn.mat-button-disabled, .deeppurple-amber .mat-mini-fab.mat-button-disabled.mat-button-disabled {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-flat-button.mat-primary .mat-ripple-element, .deeppurple-amber .mat-raised-button.mat-primary .mat-ripple-element, .deeppurple-amber .mat-fab.mat-primary .mat-ripple-element, .deeppurple-amber .mat-mini-fab.mat-primary .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.deeppurple-amber .mat-flat-button.mat-accent .mat-ripple-element, .deeppurple-amber .mat-raised-button.mat-accent .mat-ripple-element, .deeppurple-amber .mat-fab.mat-accent .mat-ripple-element, .deeppurple-amber .mat-mini-fab.mat-accent .mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.deeppurple-amber .mat-flat-button.mat-warn .mat-ripple-element, .deeppurple-amber .mat-raised-button.mat-warn .mat-ripple-element, .deeppurple-amber .mat-fab.mat-warn .mat-ripple-element, .deeppurple-amber .mat-mini-fab.mat-warn .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.deeppurple-amber .mat-stroked-button:not([class*=mat-elevation-z]), .deeppurple-amber .mat-flat-button:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-raised-button:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-raised-button:not(.mat-button-disabled):active:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-raised-button.mat-button-disabled:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-fab:not([class*=mat-elevation-z]), .deeppurple-amber .mat-mini-fab:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]), .deeppurple-amber .mat-mini-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-fab.mat-button-disabled:not([class*=mat-elevation-z]), .deeppurple-amber .mat-mini-fab.mat-button-disabled:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-button-toggle-standalone,\n.deeppurple-amber .mat-button-toggle-group {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n.deeppurple-amber .mat-button-toggle-group-appearance-standard {\n  box-shadow: none;\n}\n.deeppurple-amber .mat-button-toggle {\n  color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-button-toggle .mat-button-toggle-focus-overlay {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-button-toggle-appearance-standard {\n  color: rgba(0, 0, 0, 0.87);\n  background: white;\n}\n.deeppurple-amber .mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay {\n  background-color: black;\n}\n.deeppurple-amber .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber [dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-button-toggle-checked {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-button-toggle-checked.mat-button-toggle-appearance-standard {\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-button-toggle-disabled {\n  color: rgba(0, 0, 0, 0.26);\n  background-color: #eeeeee;\n}\n.deeppurple-amber .mat-button-toggle-disabled.mat-button-toggle-appearance-standard {\n  background: white;\n}\n.deeppurple-amber .mat-button-toggle-disabled.mat-button-toggle-checked {\n  background-color: #bdbdbd;\n}\n.deeppurple-amber .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n.deeppurple-amber .mat-button-toggle-group-appearance-standard {\n  border: solid 1px rgba(0, 0, 0, 0.12);\n}\n.mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n  line-height: 48px;\n}\n.deeppurple-amber .mat-card {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-card:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-card.mat-card-flat:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-card-subtitle {\n  color: rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-checkbox-frame {\n  border-color: rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-checkbox-checkmark {\n  fill: #fafafa;\n}\n.deeppurple-amber .mat-checkbox-checkmark-path {\n  stroke: #fafafa !important;\n}\n.deeppurple-amber .mat-checkbox-mixedmark {\n  background-color: #fafafa;\n}\n.deeppurple-amber .mat-checkbox-indeterminate.mat-primary .mat-checkbox-background, .deeppurple-amber .mat-checkbox-checked.mat-primary .mat-checkbox-background {\n  background-color: #673ab7;\n}\n.deeppurple-amber .mat-checkbox-indeterminate.mat-accent .mat-checkbox-background, .deeppurple-amber .mat-checkbox-checked.mat-accent .mat-checkbox-background {\n  background-color: #ffd740;\n}\n.deeppurple-amber .mat-checkbox-indeterminate.mat-warn .mat-checkbox-background, .deeppurple-amber .mat-checkbox-checked.mat-warn .mat-checkbox-background {\n  background-color: #f44336;\n}\n.deeppurple-amber .mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background, .deeppurple-amber .mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background {\n  background-color: #b0b0b0;\n}\n.deeppurple-amber .mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame {\n  border-color: #b0b0b0;\n}\n.deeppurple-amber .mat-checkbox-disabled .mat-checkbox-label {\n  color: rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-checkbox .mat-ripple-element {\n  background-color: black;\n}\n.deeppurple-amber .mat-checkbox-checked:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element,\n.deeppurple-amber .mat-checkbox:active:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element {\n  background: #673ab7;\n}\n.deeppurple-amber .mat-checkbox-checked:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element,\n.deeppurple-amber .mat-checkbox:active:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element {\n  background: #ffd740;\n}\n.deeppurple-amber .mat-checkbox-checked:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element,\n.deeppurple-amber .mat-checkbox:active:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element {\n  background: #f44336;\n}\n.deeppurple-amber .mat-chip.mat-standard-chip {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-chip.mat-standard-chip .mat-chip-remove {\n  color: rgba(0, 0, 0, 0.87);\n  opacity: 0.4;\n}\n.deeppurple-amber .mat-chip.mat-standard-chip:not(.mat-chip-disabled):active {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover {\n  opacity: 0.54;\n}\n.deeppurple-amber .mat-chip.mat-standard-chip.mat-chip-disabled {\n  opacity: 0.4;\n}\n.deeppurple-amber .mat-chip.mat-standard-chip::after {\n  background: black;\n}\n.deeppurple-amber .mat-chip.mat-standard-chip.mat-chip-selected.mat-primary {\n  background-color: #673ab7;\n  color: white;\n}\n.deeppurple-amber .mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.deeppurple-amber .mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.deeppurple-amber .mat-chip.mat-standard-chip.mat-chip-selected.mat-warn {\n  background-color: #f44336;\n  color: white;\n}\n.deeppurple-amber .mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.deeppurple-amber .mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.deeppurple-amber .mat-chip.mat-standard-chip.mat-chip-selected.mat-accent {\n  background-color: #ffd740;\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove {\n  color: rgba(0, 0, 0, 0.87);\n  opacity: 0.4;\n}\n.deeppurple-amber .mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.deeppurple-amber .mat-table {\n  background: white;\n}\n.deeppurple-amber .mat-table thead, .deeppurple-amber .mat-table tbody, .deeppurple-amber .mat-table tfoot,\n.deeppurple-amber mat-header-row, .deeppurple-amber mat-row, .deeppurple-amber mat-footer-row,\n.deeppurple-amber [mat-header-row], .deeppurple-amber [mat-row], .deeppurple-amber [mat-footer-row],\n.deeppurple-amber .mat-table-sticky {\n  background: inherit;\n}\n.deeppurple-amber mat-row, .deeppurple-amber mat-header-row, .deeppurple-amber mat-footer-row,\n.deeppurple-amber th.mat-header-cell, .deeppurple-amber td.mat-cell, .deeppurple-amber td.mat-footer-cell {\n  border-bottom-color: rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-header-cell {\n  color: rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-cell, .deeppurple-amber .mat-footer-cell {\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-calendar-arrow {\n  border-top-color: rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-datepicker-toggle,\n.deeppurple-amber .mat-datepicker-content .mat-calendar-next-button,\n.deeppurple-amber .mat-datepicker-content .mat-calendar-previous-button {\n  color: rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-calendar-table-header {\n  color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-calendar-table-header-divider::after {\n  background: rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-calendar-body-label {\n  color: rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-calendar-body-cell-content,\n.deeppurple-amber .mat-date-range-input-separator {\n  color: rgba(0, 0, 0, 0.87);\n  border-color: transparent;\n}\n.deeppurple-amber .mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-form-field-disabled .mat-date-range-input-separator {\n  color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-calendar-body-in-preview {\n  color: rgba(0, 0, 0, 0.24);\n}\n.deeppurple-amber .mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.18);\n}\n.deeppurple-amber .mat-calendar-body-in-range::before {\n  background: rgba(103, 58, 183, 0.2);\n}\n.deeppurple-amber .mat-calendar-body-comparison-identical,\n.deeppurple-amber .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.deeppurple-amber .mat-calendar-body-comparison-bridge-start::before,\n.deeppurple-amber [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(103, 58, 183, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.deeppurple-amber .mat-calendar-body-comparison-bridge-end::before,\n.deeppurple-amber [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(103, 58, 183, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.deeppurple-amber .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.deeppurple-amber .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.deeppurple-amber .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.deeppurple-amber .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.deeppurple-amber .mat-calendar-body-selected {\n  background-color: #673ab7;\n  color: white;\n}\n.deeppurple-amber .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(103, 58, 183, 0.4);\n}\n.deeppurple-amber .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\n.deeppurple-amber .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.deeppurple-amber .cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.deeppurple-amber .cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(103, 58, 183, 0.3);\n}\n.deeppurple-amber .mat-datepicker-content {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-datepicker-content.mat-accent .mat-calendar-body-in-range::before {\n  background: rgba(255, 215, 64, 0.2);\n}\n.deeppurple-amber .mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical,\n.deeppurple-amber .mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.deeppurple-amber .mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-start::before,\n.deeppurple-amber .mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(255, 215, 64, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.deeppurple-amber .mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-end::before,\n.deeppurple-amber .mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(255, 215, 64, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.deeppurple-amber .mat-datepicker-content.mat-accent .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.deeppurple-amber .mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.deeppurple-amber .mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.deeppurple-amber .mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.deeppurple-amber .mat-datepicker-content.mat-accent .mat-calendar-body-selected {\n  background-color: #ffd740;\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-datepicker-content.mat-accent .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(255, 215, 64, 0.4);\n}\n.deeppurple-amber .mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-datepicker-content.mat-accent .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.deeppurple-amber .mat-datepicker-content.mat-accent .cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.deeppurple-amber .mat-datepicker-content.mat-accent .cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(255, 215, 64, 0.3);\n}\n.deeppurple-amber .mat-datepicker-content.mat-warn .mat-calendar-body-in-range::before {\n  background: rgba(244, 67, 54, 0.2);\n}\n.deeppurple-amber .mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical,\n.deeppurple-amber .mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.deeppurple-amber .mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-start::before,\n.deeppurple-amber .mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.deeppurple-amber .mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-end::before,\n.deeppurple-amber .mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.deeppurple-amber .mat-datepicker-content.mat-warn .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.deeppurple-amber .mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.deeppurple-amber .mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.deeppurple-amber .mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.deeppurple-amber .mat-datepicker-content.mat-warn .mat-calendar-body-selected {\n  background-color: #f44336;\n  color: white;\n}\n.deeppurple-amber .mat-datepicker-content.mat-warn .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(244, 67, 54, 0.4);\n}\n.deeppurple-amber .mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\n.deeppurple-amber .mat-datepicker-content.mat-warn .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.deeppurple-amber .mat-datepicker-content.mat-warn .cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.deeppurple-amber .mat-datepicker-content.mat-warn .cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(244, 67, 54, 0.3);\n}\n.deeppurple-amber .mat-datepicker-content-touch {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-datepicker-toggle-active {\n  color: #673ab7;\n}\n.deeppurple-amber .mat-datepicker-toggle-active.mat-accent {\n  color: #ffd740;\n}\n.deeppurple-amber .mat-datepicker-toggle-active.mat-warn {\n  color: #f44336;\n}\n.deeppurple-amber .mat-date-range-input-inner[disabled] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-dialog-container {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-divider {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-divider-vertical {\n  border-right-color: rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-expansion-panel {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-expansion-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-action-row {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]), .deeppurple-amber .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]), .deeppurple-amber .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n@media (hover: none) {\n  .deeppurple-amber .mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover {\n    background: white;\n  }\n}\n.deeppurple-amber .mat-expansion-panel-header-title {\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-expansion-panel-header-description,\n.deeppurple-amber .mat-expansion-indicator::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-expansion-panel-header[aria-disabled=true] {\n  color: rgba(0, 0, 0, 0.26);\n}\n.deeppurple-amber .mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,\n.deeppurple-amber .mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description {\n  color: inherit;\n}\n.mat-expansion-panel-header {\n  height: 48px;\n}\n.mat-expansion-panel-header.mat-expanded {\n  height: 64px;\n}\n.deeppurple-amber .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.6);\n}\n.deeppurple-amber .mat-hint {\n  color: rgba(0, 0, 0, 0.6);\n}\n.deeppurple-amber .mat-form-field.mat-focused .mat-form-field-label {\n  color: #673ab7;\n}\n.deeppurple-amber .mat-form-field.mat-focused .mat-form-field-label.mat-accent {\n  color: #ffd740;\n}\n.deeppurple-amber .mat-form-field.mat-focused .mat-form-field-label.mat-warn {\n  color: #f44336;\n}\n.deeppurple-amber .mat-focused .mat-form-field-required-marker {\n  color: #ffd740;\n}\n.deeppurple-amber .mat-form-field-ripple {\n  background-color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-form-field.mat-focused .mat-form-field-ripple {\n  background-color: #673ab7;\n}\n.deeppurple-amber .mat-form-field.mat-focused .mat-form-field-ripple.mat-accent {\n  background-color: #ffd740;\n}\n.deeppurple-amber .mat-form-field.mat-focused .mat-form-field-ripple.mat-warn {\n  background-color: #f44336;\n}\n.deeppurple-amber .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after {\n  color: #673ab7;\n}\n.deeppurple-amber .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after {\n  color: #ffd740;\n}\n.deeppurple-amber .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after {\n  color: #f44336;\n}\n.deeppurple-amber .mat-form-field.mat-form-field-invalid .mat-form-field-label {\n  color: #f44336;\n}\n.deeppurple-amber .mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent,\n.deeppurple-amber .mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker {\n  color: #f44336;\n}\n.deeppurple-amber .mat-form-field.mat-form-field-invalid .mat-form-field-ripple,\n.deeppurple-amber .mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent {\n  background-color: #f44336;\n}\n.deeppurple-amber .mat-error {\n  color: #f44336;\n}\n.deeppurple-amber .mat-form-field-appearance-legacy .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-form-field-appearance-legacy .mat-hint {\n  color: rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-form-field-appearance-legacy .mat-form-field-underline {\n  background-color: rgba(0, 0, 0, 0.42);\n}\n.deeppurple-amber .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n.deeppurple-amber .mat-form-field-appearance-standard .mat-form-field-underline {\n  background-color: rgba(0, 0, 0, 0.42);\n}\n.deeppurple-amber .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n.deeppurple-amber .mat-form-field-appearance-fill .mat-form-field-flex {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.deeppurple-amber .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex {\n  background-color: rgba(0, 0, 0, 0.02);\n}\n.deeppurple-amber .mat-form-field-appearance-fill .mat-form-field-underline::before {\n  background-color: rgba(0, 0, 0, 0.42);\n}\n.deeppurple-amber .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before {\n  background-color: transparent;\n}\n.deeppurple-amber .mat-form-field-appearance-outline .mat-form-field-outline {\n  color: rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-form-field-appearance-outline .mat-form-field-outline-thick {\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #673ab7;\n}\n.deeppurple-amber .mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick {\n  color: #ffd740;\n}\n.deeppurple-amber .mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick {\n  color: #f44336;\n}\n.deeppurple-amber .mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\n  color: #f44336;\n}\n.deeppurple-amber .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\n  color: rgba(0, 0, 0, 0.06);\n}\n.deeppurple-amber .mat-icon.mat-primary {\n  color: #673ab7;\n}\n.deeppurple-amber .mat-icon.mat-accent {\n  color: #ffd740;\n}\n.deeppurple-amber .mat-icon.mat-warn {\n  color: #f44336;\n}\n.deeppurple-amber .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-input-element:disabled,\n.deeppurple-amber .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n  color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-input-element {\n  caret-color: #673ab7;\n}\n.deeppurple-amber .mat-input-element::-moz-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.deeppurple-amber .mat-input-element::placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.deeppurple-amber .mat-input-element::-moz-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.deeppurple-amber .mat-input-element::-webkit-input-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.deeppurple-amber .mat-input-element:-ms-input-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.deeppurple-amber .mat-form-field.mat-accent .mat-input-element {\n  caret-color: #ffd740;\n}\n.deeppurple-amber .mat-form-field.mat-warn .mat-input-element,\n.deeppurple-amber .mat-form-field-invalid .mat-input-element {\n  caret-color: #f44336;\n}\n.deeppurple-amber .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n  color: #f44336;\n}\n.deeppurple-amber .mat-list-base .mat-list-item {\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-list-base .mat-list-option {\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-list-base .mat-subheader {\n  color: rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-list-item-disabled {\n  background-color: #eeeeee;\n}\n.deeppurple-amber .mat-list-option:hover, .deeppurple-amber .mat-list-option:focus,\n.deeppurple-amber .mat-nav-list .mat-list-item:hover,\n.deeppurple-amber .mat-nav-list .mat-list-item:focus,\n.deeppurple-amber .mat-action-list .mat-list-item:hover,\n.deeppurple-amber .mat-action-list .mat-list-item:focus {\n  background: rgba(0, 0, 0, 0.04);\n}\n.deeppurple-amber .mat-list-single-selected-option, .deeppurple-amber .mat-list-single-selected-option:hover, .deeppurple-amber .mat-list-single-selected-option:focus {\n  background: rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-menu-panel {\n  background: white;\n}\n.deeppurple-amber .mat-menu-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-menu-item {\n  background: transparent;\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-menu-item[disabled], .deeppurple-amber .mat-menu-item[disabled]::after,\n.deeppurple-amber .mat-menu-item[disabled] .mat-icon-no-color {\n  color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-menu-item .mat-icon-no-color,\n.deeppurple-amber .mat-menu-item-submenu-trigger::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-menu-item:hover:not([disabled]),\n.deeppurple-amber .mat-menu-item.cdk-program-focused:not([disabled]),\n.deeppurple-amber .mat-menu-item.cdk-keyboard-focused:not([disabled]),\n.deeppurple-amber .mat-menu-item-highlighted:not([disabled]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.deeppurple-amber .mat-paginator {\n  background: white;\n}\n.deeppurple-amber .mat-paginator,\n.deeppurple-amber .mat-paginator-page-size .mat-select-trigger {\n  color: rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-paginator-decrement,\n.deeppurple-amber .mat-paginator-increment {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n  border-right: 2px solid rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-paginator-first,\n.deeppurple-amber .mat-paginator-last {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-icon-button[disabled] .mat-paginator-decrement,\n.deeppurple-amber .mat-icon-button[disabled] .mat-paginator-increment,\n.deeppurple-amber .mat-icon-button[disabled] .mat-paginator-first,\n.deeppurple-amber .mat-icon-button[disabled] .mat-paginator-last {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.mat-paginator-container {\n  min-height: 56px;\n}\n.deeppurple-amber .mat-progress-bar-background {\n  fill: #d1c4e9;\n}\n.deeppurple-amber .mat-progress-bar-buffer {\n  background-color: #d1c4e9;\n}\n.deeppurple-amber .mat-progress-bar-fill::after {\n  background-color: #673ab7;\n}\n.deeppurple-amber .mat-progress-bar.mat-accent .mat-progress-bar-background {\n  fill: #ffe57f;\n}\n.deeppurple-amber .mat-progress-bar.mat-accent .mat-progress-bar-buffer {\n  background-color: #ffe57f;\n}\n.deeppurple-amber .mat-progress-bar.mat-accent .mat-progress-bar-fill::after {\n  background-color: #ffd740;\n}\n.deeppurple-amber .mat-progress-bar.mat-warn .mat-progress-bar-background {\n  fill: #ffcdd2;\n}\n.deeppurple-amber .mat-progress-bar.mat-warn .mat-progress-bar-buffer {\n  background-color: #ffcdd2;\n}\n.deeppurple-amber .mat-progress-bar.mat-warn .mat-progress-bar-fill::after {\n  background-color: #f44336;\n}\n.deeppurple-amber .mat-progress-spinner circle, .deeppurple-amber .mat-spinner circle {\n  stroke: #673ab7;\n}\n.deeppurple-amber .mat-progress-spinner.mat-accent circle, .deeppurple-amber .mat-spinner.mat-accent circle {\n  stroke: #ffd740;\n}\n.deeppurple-amber .mat-progress-spinner.mat-warn circle, .deeppurple-amber .mat-spinner.mat-warn circle {\n  stroke: #f44336;\n}\n.deeppurple-amber .mat-radio-outer-circle {\n  border-color: rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #673ab7;\n}\n.deeppurple-amber .mat-radio-button.mat-primary .mat-radio-inner-circle,\n.deeppurple-amber .mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .deeppurple-amber .mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple, .deeppurple-amber .mat-radio-button.mat-primary:active .mat-radio-persistent-ripple {\n  background-color: #673ab7;\n}\n.deeppurple-amber .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #ffd740;\n}\n.deeppurple-amber .mat-radio-button.mat-accent .mat-radio-inner-circle,\n.deeppurple-amber .mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .deeppurple-amber .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple, .deeppurple-amber .mat-radio-button.mat-accent:active .mat-radio-persistent-ripple {\n  background-color: #ffd740;\n}\n.deeppurple-amber .mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #f44336;\n}\n.deeppurple-amber .mat-radio-button.mat-warn .mat-radio-inner-circle,\n.deeppurple-amber .mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .deeppurple-amber .mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple, .deeppurple-amber .mat-radio-button.mat-warn:active .mat-radio-persistent-ripple {\n  background-color: #f44336;\n}\n.deeppurple-amber .mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle,\n.deeppurple-amber .mat-radio-button.mat-radio-disabled .mat-radio-outer-circle {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element,\n.deeppurple-amber .mat-radio-button.mat-radio-disabled .mat-radio-inner-circle {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-radio-button.mat-radio-disabled .mat-radio-label-content {\n  color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-radio-button .mat-ripple-element {\n  background-color: black;\n}\n.deeppurple-amber .mat-select-value {\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-select-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.deeppurple-amber .mat-select-disabled .mat-select-value {\n  color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-select-arrow {\n  color: rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-select-panel {\n  background: white;\n}\n.deeppurple-amber .mat-select-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple) {\n  background: rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-form-field.mat-focused.mat-primary .mat-select-arrow {\n  color: #673ab7;\n}\n.deeppurple-amber .mat-form-field.mat-focused.mat-accent .mat-select-arrow {\n  color: #ffd740;\n}\n.deeppurple-amber .mat-form-field.mat-focused.mat-warn .mat-select-arrow {\n  color: #f44336;\n}\n.deeppurple-amber .mat-form-field .mat-select.mat-select-invalid .mat-select-arrow {\n  color: #f44336;\n}\n.deeppurple-amber .mat-form-field .mat-select.mat-select-disabled .mat-select-arrow {\n  color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-drawer-container {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-drawer {\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-drawer.mat-drawer-push {\n  background-color: white;\n}\n.deeppurple-amber .mat-drawer:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-drawer-side {\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-drawer-side.mat-drawer-end {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n.deeppurple-amber [dir=rtl] .mat-drawer-side {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n.deeppurple-amber [dir=rtl] .mat-drawer-side.mat-drawer-end {\n  border-left: none;\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-drawer-backdrop.mat-drawer-shown {\n  background-color: rgba(0, 0, 0, 0.6);\n}\n.deeppurple-amber .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb {\n  background-color: #ffd740;\n}\n.deeppurple-amber .mat-slide-toggle.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(255, 215, 64, 0.54);\n}\n.deeppurple-amber .mat-slide-toggle.mat-checked .mat-ripple-element {\n  background-color: #ffd740;\n}\n.deeppurple-amber .mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb {\n  background-color: #673ab7;\n}\n.deeppurple-amber .mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(103, 58, 183, 0.54);\n}\n.deeppurple-amber .mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element {\n  background-color: #673ab7;\n}\n.deeppurple-amber .mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb {\n  background-color: #f44336;\n}\n.deeppurple-amber .mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(244, 67, 54, 0.54);\n}\n.deeppurple-amber .mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element {\n  background-color: #f44336;\n}\n.deeppurple-amber .mat-slide-toggle:not(.mat-checked) .mat-ripple-element {\n  background-color: black;\n}\n.deeppurple-amber .mat-slide-toggle-thumb {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  background-color: #fafafa;\n}\n.deeppurple-amber .mat-slide-toggle-bar {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.26);\n}\n.deeppurple-amber .mat-primary .mat-slider-track-fill,\n.deeppurple-amber .mat-primary .mat-slider-thumb,\n.deeppurple-amber .mat-primary .mat-slider-thumb-label {\n  background-color: #673ab7;\n}\n.deeppurple-amber .mat-primary .mat-slider-thumb-label-text {\n  color: white;\n}\n.deeppurple-amber .mat-primary .mat-slider-focus-ring {\n  background-color: rgba(103, 58, 183, 0.2);\n}\n.deeppurple-amber .mat-accent .mat-slider-track-fill,\n.deeppurple-amber .mat-accent .mat-slider-thumb,\n.deeppurple-amber .mat-accent .mat-slider-thumb-label {\n  background-color: #ffd740;\n}\n.deeppurple-amber .mat-accent .mat-slider-thumb-label-text {\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-accent .mat-slider-focus-ring {\n  background-color: rgba(255, 215, 64, 0.2);\n}\n.deeppurple-amber .mat-warn .mat-slider-track-fill,\n.deeppurple-amber .mat-warn .mat-slider-thumb,\n.deeppurple-amber .mat-warn .mat-slider-thumb-label {\n  background-color: #f44336;\n}\n.deeppurple-amber .mat-warn .mat-slider-thumb-label-text {\n  color: white;\n}\n.deeppurple-amber .mat-warn .mat-slider-focus-ring {\n  background-color: rgba(244, 67, 54, 0.2);\n}\n.deeppurple-amber .mat-slider:hover .mat-slider-track-background,\n.deeppurple-amber .cdk-focused .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-slider-disabled .mat-slider-track-background,\n.deeppurple-amber .mat-slider-disabled .mat-slider-track-fill,\n.deeppurple-amber .mat-slider-disabled .mat-slider-thumb {\n  background-color: rgba(0, 0, 0, 0.26);\n}\n.deeppurple-amber .mat-slider-disabled:hover .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.26);\n}\n.deeppurple-amber .mat-slider-min-value .mat-slider-focus-ring {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,\n.deeppurple-amber .mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label {\n  background-color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,\n.deeppurple-amber .mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label {\n  background-color: rgba(0, 0, 0, 0.26);\n}\n.deeppurple-amber .mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.26);\n  background-color: transparent;\n}\n.deeppurple-amber .mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb, .deeppurple-amber .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb, .deeppurple-amber .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.26);\n}\n.deeppurple-amber .mat-slider-has-ticks .mat-slider-wrapper::after {\n  border-color: rgba(0, 0, 0, 0.7);\n}\n.deeppurple-amber .mat-slider-horizontal .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to right, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\n  background-image: -moz-repeating-linear-gradient(0.0001deg, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\n}\n.deeppurple-amber .mat-slider-vertical .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\n}\n.deeppurple-amber .mat-step-header.cdk-keyboard-focused, .deeppurple-amber .mat-step-header.cdk-program-focused, .deeppurple-amber .mat-step-header:hover {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n@media (hover: none) {\n  .deeppurple-amber .mat-step-header:hover {\n    background: none;\n  }\n}\n.deeppurple-amber .mat-step-header .mat-step-label,\n.deeppurple-amber .mat-step-header .mat-step-optional {\n  color: rgba(0, 0, 0, 0.54);\n}\n.deeppurple-amber .mat-step-header .mat-step-icon {\n  background-color: rgba(0, 0, 0, 0.54);\n  color: white;\n}\n.deeppurple-amber .mat-step-header .mat-step-icon-selected,\n.deeppurple-amber .mat-step-header .mat-step-icon-state-done,\n.deeppurple-amber .mat-step-header .mat-step-icon-state-edit {\n  background-color: #673ab7;\n  color: white;\n}\n.deeppurple-amber .mat-step-header.mat-accent .mat-step-icon {\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-step-header.mat-accent .mat-step-icon-selected,\n.deeppurple-amber .mat-step-header.mat-accent .mat-step-icon-state-done,\n.deeppurple-amber .mat-step-header.mat-accent .mat-step-icon-state-edit {\n  background-color: #ffd740;\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-step-header.mat-warn .mat-step-icon {\n  color: white;\n}\n.deeppurple-amber .mat-step-header.mat-warn .mat-step-icon-selected,\n.deeppurple-amber .mat-step-header.mat-warn .mat-step-icon-state-done,\n.deeppurple-amber .mat-step-header.mat-warn .mat-step-icon-state-edit {\n  background-color: #f44336;\n  color: white;\n}\n.deeppurple-amber .mat-step-header .mat-step-icon-state-error {\n  background-color: transparent;\n  color: #f44336;\n}\n.deeppurple-amber .mat-step-header .mat-step-label.mat-step-label-active {\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-step-header .mat-step-label.mat-step-label-error {\n  color: #f44336;\n}\n.deeppurple-amber .mat-stepper-horizontal, .deeppurple-amber .mat-stepper-vertical {\n  background-color: white;\n}\n.deeppurple-amber .mat-stepper-vertical-line::before {\n  border-left-color: rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-horizontal-stepper-header::before,\n.deeppurple-amber .mat-horizontal-stepper-header::after,\n.deeppurple-amber .mat-stepper-horizontal-line {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.mat-horizontal-stepper-header {\n  height: 72px;\n}\n.mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n.mat-vertical-stepper-header {\n  padding: 24px 24px;\n}\n.mat-stepper-vertical-line::before {\n  top: -16px;\n  bottom: -16px;\n}\n.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after, .mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before {\n  top: 36px;\n}\n.mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n  top: 36px;\n}\n.deeppurple-amber .mat-sort-header-arrow {\n  color: #757575;\n}\n.deeppurple-amber .mat-tab-nav-bar,\n.deeppurple-amber .mat-tab-header {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-tab-group-inverted-header .mat-tab-nav-bar,\n.deeppurple-amber .mat-tab-group-inverted-header .mat-tab-header {\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  border-bottom: none;\n}\n.deeppurple-amber .mat-tab-label, .deeppurple-amber .mat-tab-link {\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-tab-label.mat-tab-disabled, .deeppurple-amber .mat-tab-link.mat-tab-disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-tab-header-pagination-chevron {\n  border-color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.deeppurple-amber .mat-tab-group[class*=mat-background-] .mat-tab-header,\n.deeppurple-amber .mat-tab-nav-bar[class*=mat-background-] {\n  border-bottom: none;\n  border-top: none;\n}\n.deeppurple-amber .mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .deeppurple-amber .mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .deeppurple-amber .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .deeppurple-amber .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(209, 196, 233, 0.3);\n}\n.deeppurple-amber .mat-tab-group.mat-primary .mat-ink-bar, .deeppurple-amber .mat-tab-nav-bar.mat-primary .mat-ink-bar {\n  background-color: #673ab7;\n}\n.deeppurple-amber .mat-tab-group.mat-primary.mat-background-primary > .mat-tab-header .mat-ink-bar, .deeppurple-amber .mat-tab-group.mat-primary.mat-background-primary > .mat-tab-link-container .mat-ink-bar, .deeppurple-amber .mat-tab-nav-bar.mat-primary.mat-background-primary > .mat-tab-header .mat-ink-bar, .deeppurple-amber .mat-tab-nav-bar.mat-primary.mat-background-primary > .mat-tab-link-container .mat-ink-bar {\n  background-color: white;\n}\n.deeppurple-amber .mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .deeppurple-amber .mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .deeppurple-amber .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .deeppurple-amber .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 229, 127, 0.3);\n}\n.deeppurple-amber .mat-tab-group.mat-accent .mat-ink-bar, .deeppurple-amber .mat-tab-nav-bar.mat-accent .mat-ink-bar {\n  background-color: #ffd740;\n}\n.deeppurple-amber .mat-tab-group.mat-accent.mat-background-accent > .mat-tab-header .mat-ink-bar, .deeppurple-amber .mat-tab-group.mat-accent.mat-background-accent > .mat-tab-link-container .mat-ink-bar, .deeppurple-amber .mat-tab-nav-bar.mat-accent.mat-background-accent > .mat-tab-header .mat-ink-bar, .deeppurple-amber .mat-tab-nav-bar.mat-accent.mat-background-accent > .mat-tab-link-container .mat-ink-bar {\n  background-color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .deeppurple-amber .mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .deeppurple-amber .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .deeppurple-amber .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 205, 210, 0.3);\n}\n.deeppurple-amber .mat-tab-group.mat-warn .mat-ink-bar, .deeppurple-amber .mat-tab-nav-bar.mat-warn .mat-ink-bar {\n  background-color: #f44336;\n}\n.deeppurple-amber .mat-tab-group.mat-warn.mat-background-warn > .mat-tab-header .mat-ink-bar, .deeppurple-amber .mat-tab-group.mat-warn.mat-background-warn > .mat-tab-link-container .mat-ink-bar, .deeppurple-amber .mat-tab-nav-bar.mat-warn.mat-background-warn > .mat-tab-header .mat-ink-bar, .deeppurple-amber .mat-tab-nav-bar.mat-warn.mat-background-warn > .mat-tab-link-container .mat-ink-bar {\n  background-color: white;\n}\n.deeppurple-amber .mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .deeppurple-amber .mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .deeppurple-amber .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .deeppurple-amber .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(209, 196, 233, 0.3);\n}\n.deeppurple-amber .mat-tab-group.mat-background-primary > .mat-tab-header, .deeppurple-amber .mat-tab-group.mat-background-primary > .mat-tab-link-container, .deeppurple-amber .mat-tab-group.mat-background-primary > .mat-tab-header-pagination, .deeppurple-amber .mat-tab-nav-bar.mat-background-primary > .mat-tab-header, .deeppurple-amber .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container, .deeppurple-amber .mat-tab-nav-bar.mat-background-primary > .mat-tab-header-pagination {\n  background-color: #673ab7;\n}\n.deeppurple-amber .mat-tab-group.mat-background-primary > .mat-tab-header .mat-tab-label, .deeppurple-amber .mat-tab-group.mat-background-primary > .mat-tab-link-container .mat-tab-link, .deeppurple-amber .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-tab-label, .deeppurple-amber .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container .mat-tab-link {\n  color: white;\n}\n.deeppurple-amber .mat-tab-group.mat-background-primary > .mat-tab-header .mat-tab-label.mat-tab-disabled, .deeppurple-amber .mat-tab-group.mat-background-primary > .mat-tab-link-container .mat-tab-link.mat-tab-disabled, .deeppurple-amber .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-tab-label.mat-tab-disabled, .deeppurple-amber .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\n.deeppurple-amber .mat-tab-group.mat-background-primary > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.deeppurple-amber .mat-tab-group.mat-background-primary > .mat-tab-links .mat-focus-indicator::before,\n.deeppurple-amber .mat-tab-group.mat-background-primary > .mat-tab-header .mat-focus-indicator::before, .deeppurple-amber .mat-tab-nav-bar.mat-background-primary > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.deeppurple-amber .mat-tab-nav-bar.mat-background-primary > .mat-tab-links .mat-focus-indicator::before,\n.deeppurple-amber .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-focus-indicator::before {\n  border-color: white;\n}\n.deeppurple-amber .mat-tab-group.mat-background-primary > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .deeppurple-amber .mat-tab-nav-bar.mat-background-primary > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.4);\n}\n.deeppurple-amber .mat-tab-group.mat-background-primary > .mat-tab-header .mat-ripple-element,\n.deeppurple-amber .mat-tab-group.mat-background-primary > .mat-tab-link-container .mat-ripple-element, .deeppurple-amber .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-ripple-element,\n.deeppurple-amber .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.deeppurple-amber .mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .deeppurple-amber .mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .deeppurple-amber .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .deeppurple-amber .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 229, 127, 0.3);\n}\n.deeppurple-amber .mat-tab-group.mat-background-accent > .mat-tab-header, .deeppurple-amber .mat-tab-group.mat-background-accent > .mat-tab-link-container, .deeppurple-amber .mat-tab-group.mat-background-accent > .mat-tab-header-pagination, .deeppurple-amber .mat-tab-nav-bar.mat-background-accent > .mat-tab-header, .deeppurple-amber .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container, .deeppurple-amber .mat-tab-nav-bar.mat-background-accent > .mat-tab-header-pagination {\n  background-color: #ffd740;\n}\n.deeppurple-amber .mat-tab-group.mat-background-accent > .mat-tab-header .mat-tab-label, .deeppurple-amber .mat-tab-group.mat-background-accent > .mat-tab-link-container .mat-tab-link, .deeppurple-amber .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-tab-label, .deeppurple-amber .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container .mat-tab-link {\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-tab-group.mat-background-accent > .mat-tab-header .mat-tab-label.mat-tab-disabled, .deeppurple-amber .mat-tab-group.mat-background-accent > .mat-tab-link-container .mat-tab-link.mat-tab-disabled, .deeppurple-amber .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-tab-label.mat-tab-disabled, .deeppurple-amber .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container .mat-tab-link.mat-tab-disabled {\n  color: rgba(0, 0, 0, 0.4);\n}\n.deeppurple-amber .mat-tab-group.mat-background-accent > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.deeppurple-amber .mat-tab-group.mat-background-accent > .mat-tab-links .mat-focus-indicator::before,\n.deeppurple-amber .mat-tab-group.mat-background-accent > .mat-tab-header .mat-focus-indicator::before, .deeppurple-amber .mat-tab-nav-bar.mat-background-accent > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.deeppurple-amber .mat-tab-nav-bar.mat-background-accent > .mat-tab-links .mat-focus-indicator::before,\n.deeppurple-amber .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-focus-indicator::before {\n  border-color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-tab-group.mat-background-accent > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .deeppurple-amber .mat-tab-nav-bar.mat-background-accent > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(0, 0, 0, 0.4);\n}\n.deeppurple-amber .mat-tab-group.mat-background-accent > .mat-tab-header .mat-ripple-element,\n.deeppurple-amber .mat-tab-group.mat-background-accent > .mat-tab-link-container .mat-ripple-element, .deeppurple-amber .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-ripple-element,\n.deeppurple-amber .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container .mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .deeppurple-amber .mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .deeppurple-amber .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .deeppurple-amber .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.deeppurple-amber .mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 205, 210, 0.3);\n}\n.deeppurple-amber .mat-tab-group.mat-background-warn > .mat-tab-header, .deeppurple-amber .mat-tab-group.mat-background-warn > .mat-tab-link-container, .deeppurple-amber .mat-tab-group.mat-background-warn > .mat-tab-header-pagination, .deeppurple-amber .mat-tab-nav-bar.mat-background-warn > .mat-tab-header, .deeppurple-amber .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container, .deeppurple-amber .mat-tab-nav-bar.mat-background-warn > .mat-tab-header-pagination {\n  background-color: #f44336;\n}\n.deeppurple-amber .mat-tab-group.mat-background-warn > .mat-tab-header .mat-tab-label, .deeppurple-amber .mat-tab-group.mat-background-warn > .mat-tab-link-container .mat-tab-link, .deeppurple-amber .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-tab-label, .deeppurple-amber .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container .mat-tab-link {\n  color: white;\n}\n.deeppurple-amber .mat-tab-group.mat-background-warn > .mat-tab-header .mat-tab-label.mat-tab-disabled, .deeppurple-amber .mat-tab-group.mat-background-warn > .mat-tab-link-container .mat-tab-link.mat-tab-disabled, .deeppurple-amber .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-tab-label.mat-tab-disabled, .deeppurple-amber .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\n.deeppurple-amber .mat-tab-group.mat-background-warn > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.deeppurple-amber .mat-tab-group.mat-background-warn > .mat-tab-links .mat-focus-indicator::before,\n.deeppurple-amber .mat-tab-group.mat-background-warn > .mat-tab-header .mat-focus-indicator::before, .deeppurple-amber .mat-tab-nav-bar.mat-background-warn > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.deeppurple-amber .mat-tab-nav-bar.mat-background-warn > .mat-tab-links .mat-focus-indicator::before,\n.deeppurple-amber .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-focus-indicator::before {\n  border-color: white;\n}\n.deeppurple-amber .mat-tab-group.mat-background-warn > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .deeppurple-amber .mat-tab-nav-bar.mat-background-warn > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.4);\n}\n.deeppurple-amber .mat-tab-group.mat-background-warn > .mat-tab-header .mat-ripple-element,\n.deeppurple-amber .mat-tab-group.mat-background-warn > .mat-tab-link-container .mat-ripple-element, .deeppurple-amber .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-ripple-element,\n.deeppurple-amber .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.deeppurple-amber .mat-toolbar {\n  background: whitesmoke;\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-toolbar.mat-primary {\n  background: #673ab7;\n  color: white;\n}\n.deeppurple-amber .mat-toolbar.mat-accent {\n  background: #ffd740;\n  color: rgba(0, 0, 0, 0.87);\n}\n.deeppurple-amber .mat-toolbar.mat-warn {\n  background: #f44336;\n  color: white;\n}\n.deeppurple-amber .mat-toolbar .mat-form-field-underline,\n.deeppurple-amber .mat-toolbar .mat-form-field-ripple,\n.deeppurple-amber .mat-toolbar .mat-focused .mat-form-field-ripple {\n  background-color: currentColor;\n}\n.deeppurple-amber .mat-toolbar .mat-form-field-label,\n.deeppurple-amber .mat-toolbar .mat-focused .mat-form-field-label,\n.deeppurple-amber .mat-toolbar .mat-select-value,\n.deeppurple-amber .mat-toolbar .mat-select-arrow,\n.deeppurple-amber .mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\n  color: inherit;\n}\n.deeppurple-amber .mat-toolbar .mat-input-element {\n  caret-color: currentColor;\n}\n.mat-toolbar-multiple-rows {\n  min-height: 64px;\n}\n.mat-toolbar-row, .mat-toolbar-single-row {\n  height: 64px;\n}\n@media (max-width: 599px) {\n  .mat-toolbar-multiple-rows {\n    min-height: 56px;\n  }\n\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: 56px;\n  }\n}\n.deeppurple-amber .mat-tooltip {\n  background: rgba(97, 97, 97, 0.9);\n}\n.deeppurple-amber .mat-tree {\n  background: white;\n}\n.deeppurple-amber .mat-tree-node,\n.deeppurple-amber .mat-nested-tree-node {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-tree-node {\n  min-height: 48px;\n}\n.deeppurple-amber .mat-snack-bar-container {\n  color: rgba(255, 255, 255, 0.7);\n  background: #323232;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.deeppurple-amber .mat-simple-snackbar-action {\n  color: #ffd740;\n}\n.deeppurple-amber .hljs {\n  display: block;\n  overflow-x: auto;\n  padding: 1em;\n  background: #FAFAFA;\n  color: #37474f;\n  -webkit-font-smoothing: antialiased;\n  -webkit-text-size-adjust: 100%;\n     -moz-text-size-adjust: 100%;\n          text-size-adjust: 100%;\n  font: 300 100%/1 Roboto Mono, monospace;\n  font-size: 14px;\n}\n.deeppurple-amber .hljs > *::-moz-selection {\n  background-color: #D6EDEA;\n}\n.deeppurple-amber .hljs > *::selection,\n.deeppurple-amber .hljs-section {\n  background-color: #D6EDEA;\n}\n.deeppurple-amber .hljs-comment {\n  color: #B0BEC5;\n  font-style: italic;\n}\n.deeppurple-amber .hljs-tag,\n.deeppurple-amber .hljs-selector-tag,\n.deeppurple-amber .hljs-regexp,\n.deeppurple-amber .hljs-meta {\n  color: #9c27b0;\n}\n.deeppurple-amber .hljs-string,\n.deeppurple-amber .hljs-subst {\n  color: #0d904f;\n}\n.deeppurple-amber .hljs-number,\n.deeppurple-amber .hljs-variable,\n.deeppurple-amber .hljs-template-variable {\n  color: #80CBC4;\n}\n.deeppurple-amber .hljs-name,\n.deeppurple-amber .hljs-keyword,\n.deeppurple-amber .hljs-type,\n.deeppurple-amber .hljs-attribute {\n  color: #3b78e7;\n}\n.deeppurple-amber .hljs-title,\n.deeppurple-amber .hljs-function > .hljs-title,\n.deeppurple-amber .hljs-symbol,\n.deeppurple-amber .hljs-bullet,\n.deeppurple-amber .hljs-built_in,\n.deeppurple-amber .hljs-builtin-name,\n.deeppurple-amber .hljs-link {\n  color: #6182B8;\n}\n.deeppurple-amber .hljs-params {\n  color: #d81b60;\n}\n.deeppurple-amber .hljs-addition {\n  color: #3b78e7;\n  display: inline-block;\n  width: 100%;\n}\n.deeppurple-amber .hljs-deletion {\n  color: #E53935;\n  display: inline-block;\n  width: 100%;\n}\n.deeppurple-amber .hljs-selector-id,\n.deeppurple-amber .hljs-selector-class {\n  color: #8796B0;\n}\n.deeppurple-amber .hljs-emphasis {\n  font-style: italic;\n}\n.deeppurple-amber .hljs-strong {\n  font-weight: bold;\n}\n.deeppurple-amber .hljs-link {\n  text-decoration: underline;\n}\n.pink-bluegrey table.app-table {\n  color: white;\n}\n.pink-bluegrey table.app-table th {\n  background: #212121;\n}\n.pink-bluegrey table.app-table td {\n  border: 1px solid rgba(255, 255, 255, 0.08);\n}\n.pink-bluegrey .hljs {\n  display: block;\n  overflow-x: auto;\n  padding: 1em;\n  background: #2b2b2d;\n  color: #cdd3d8;\n  -webkit-font-smoothing: antialiased;\n  -webkit-text-size-adjust: 100%;\n     -moz-text-size-adjust: 100%;\n          text-size-adjust: 100%;\n  font: 300 100%/1 Roboto Mono, monospace;\n  font-size: 14px;\n}\n.pink-bluegrey .hljs > *::-moz-selection {\n  background-color: #3e4451;\n}\n.pink-bluegrey .hljs > *::selection {\n  background-color: #3e4451;\n}\n.pink-bluegrey .hljs-comment {\n  color: #656565;\n  font-style: italic;\n}\n.pink-bluegrey .hljs-selector-tag {\n  color: #c792ea;\n}\n.pink-bluegrey .hljs-string,\n.pink-bluegrey .hljs-subst {\n  color: #9ccc65;\n}\n.pink-bluegrey .hljs-number,\n.pink-bluegrey .hljs-regexp,\n.pink-bluegrey .hljs-variable,\n.pink-bluegrey .hljs-template-variable {\n  color: #f77669;\n}\n.pink-bluegrey .hljs-keyword {\n  color: #c792ea;\n}\n.pink-bluegrey .hljs-function > .hljs-title {\n  color: #75a5ff;\n}\n.pink-bluegrey .hljs-tag {\n  color: #ce93d8;\n}\n.pink-bluegrey .hljs-name {\n  color: #4dd0e1;\n}\n.pink-bluegrey .hljs-type {\n  color: #da4939;\n}\n.pink-bluegrey .hljs-attribute {\n  color: #80cbbf;\n}\n.pink-bluegrey .hljs-symbol,\n.pink-bluegrey .hljs-bullet,\n.pink-bluegrey .hljs-built_in,\n.pink-bluegrey .hljs-builtin-name,\n.pink-bluegrey .hljs-link {\n  color: #c792ea;\n}\n.pink-bluegrey .hljs-params {\n  color: #eefff7;\n}\n.pink-bluegrey .hljs-meta {\n  color: #75a5ff;\n}\n.pink-bluegrey .hljs-title {\n  color: #75a5ff;\n}\n.pink-bluegrey .hljs-section {\n  color: #ffc66d;\n}\n.pink-bluegrey .hljs-addition {\n  background-color: #144212;\n  color: #e6e1dc;\n  display: inline-block;\n  width: 100%;\n}\n.pink-bluegrey .hljs-deletion {\n  background-color: #600;\n  color: #e6e1dc;\n  display: inline-block;\n  width: 100%;\n}\n.pink-bluegrey .hljs-selector-class {\n  color: #ffcb68;\n}\n.pink-bluegrey .hljs-selector-id {\n  color: #f77669;\n}\n.pink-bluegrey .hljs-emphasis {\n  font-style: italic;\n}\n.pink-bluegrey .hljs-strong {\n  font-weight: bold;\n}\n.pink-bluegrey .hljs-link {\n  text-decoration: underline;\n}\n.pink-bluegrey .active-link {\n  color: #b0bec5 !important;\n  background-color: #595959 !important;\n}\n.pink-bluegrey .active-link mat-icon {\n  color: #b0bec5 !important;\n}\n.pink-bluegrey .warning-icon {\n  color: #f44336 !important;\n}\n.pink-bluegrey a.anchor-link {\n  color: #f48fb1;\n  text-decoration: none;\n}\n.pink-bluegrey a.anchor-link:hover {\n  text-decoration: underline;\n}\n.pink-bluegrey .mat-list-item-content mat-icon,\n.pink-bluegrey .icon {\n  color: white;\n}\n.pink-bluegrey .onboarding-content {\n  color: #FFF;\n}\n.pink-bluegrey .onboarding-card {\n  background-color: #303030;\n}\n.pink-bluegrey .indicator-active {\n  background-color: #b0bec5 !important;\n}\n.pink-bluegrey .indicator {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .badge {\n  color: white;\n  background-color: #616161;\n}\n.pink-bluegrey .badge.badge--colored {\n  background-color: #b0bec5;\n  color: rgba(0, 0, 0, 0.87);\n}\n.pink-bluegrey .badge.badge--primary {\n  background-color: #e91e63;\n  color: white;\n}\n.pink-bluegrey .badge.badge--accent {\n  background-color: #b0bec5;\n  color: rgba(0, 0, 0, 0.87);\n}\n.pink-bluegrey .badge.badge--warn {\n  background-color: #f44336;\n  color: white;\n}\n.pink-bluegrey .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.pink-bluegrey .mat-option {\n  color: white;\n}\n.pink-bluegrey .mat-option:hover:not(.mat-option-disabled), .pink-bluegrey .mat-option:focus:not(.mat-option-disabled) {\n  background: rgba(255, 255, 255, 0.04);\n}\n.pink-bluegrey .mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n  background: rgba(255, 255, 255, 0.04);\n}\n.pink-bluegrey .mat-option.mat-active {\n  background: rgba(255, 255, 255, 0.04);\n  color: white;\n}\n.pink-bluegrey .mat-option.mat-option-disabled {\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #e91e63;\n}\n.pink-bluegrey .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #b0bec5;\n}\n.pink-bluegrey .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #f44336;\n}\n.pink-bluegrey .mat-optgroup-label {\n  color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-optgroup-disabled .mat-optgroup-label {\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-pseudo-checkbox {\n  color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-pseudo-checkbox::after {\n  color: #303030;\n}\n.pink-bluegrey .mat-pseudo-checkbox-disabled {\n  color: #686868;\n}\n.pink-bluegrey .mat-primary .mat-pseudo-checkbox-checked,\n.pink-bluegrey .mat-primary .mat-pseudo-checkbox-indeterminate {\n  background: #e91e63;\n}\n.pink-bluegrey .mat-pseudo-checkbox-checked,\n.pink-bluegrey .mat-pseudo-checkbox-indeterminate,\n.pink-bluegrey .mat-accent .mat-pseudo-checkbox-checked,\n.pink-bluegrey .mat-accent .mat-pseudo-checkbox-indeterminate {\n  background: #b0bec5;\n}\n.pink-bluegrey .mat-warn .mat-pseudo-checkbox-checked,\n.pink-bluegrey .mat-warn .mat-pseudo-checkbox-indeterminate {\n  background: #f44336;\n}\n.pink-bluegrey .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,\n.pink-bluegrey .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled {\n  background: #686868;\n}\n.pink-bluegrey .mat-app-background, .pink-bluegrey.mat-app-background {\n  background-color: #303030;\n  color: white;\n}\n.pink-bluegrey .mat-elevation-z0 {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z1 {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z2 {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z3 {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z4 {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z5 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z6 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z7 {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z8 {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z9 {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z10 {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z11 {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z12 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z13 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z14 {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z15 {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z16 {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z17 {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z18 {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z19 {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z20 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z21 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z22 {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z23 {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-elevation-z24 {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.mat-theme-loaded-marker {\n  display: none;\n}\n.pink-bluegrey .mat-autocomplete-panel {\n  background: #424242;\n  color: white;\n}\n.pink-bluegrey .mat-autocomplete-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover) {\n  background: #424242;\n}\n.pink-bluegrey .mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled) {\n  color: white;\n}\n.pink-bluegrey .mat-badge-content {\n  color: white;\n  background: #e91e63;\n}\n.cdk-high-contrast-active .pink-bluegrey .mat-badge-content {\n  outline: solid 1px;\n  border-radius: 0;\n}\n.pink-bluegrey .mat-badge-accent .mat-badge-content {\n  background: #b0bec5;\n  color: rgba(0, 0, 0, 0.87);\n}\n.pink-bluegrey .mat-badge-warn .mat-badge-content {\n  color: white;\n  background: #f44336;\n}\n.pink-bluegrey .mat-badge {\n  position: relative;\n}\n.pink-bluegrey .mat-badge-hidden .mat-badge-content {\n  display: none;\n}\n.pink-bluegrey .mat-badge-disabled .mat-badge-content {\n  background: #6e6e6e;\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-badge-content {\n  position: absolute;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  transition: transform 200ms ease-in-out;\n  transform: scale(0.6);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n}\n.pink-bluegrey .ng-animate-disabled .mat-badge-content,\n.pink-bluegrey .mat-badge-content._mat-animation-noopable {\n  transition: none;\n}\n.pink-bluegrey .mat-badge-content.mat-badge-active {\n  transform: none;\n}\n.pink-bluegrey .mat-badge-small .mat-badge-content {\n  width: 16px;\n  height: 16px;\n  line-height: 16px;\n}\n.pink-bluegrey .mat-badge-small.mat-badge-above .mat-badge-content {\n  top: -8px;\n}\n.pink-bluegrey .mat-badge-small.mat-badge-below .mat-badge-content {\n  bottom: -8px;\n}\n.pink-bluegrey .mat-badge-small.mat-badge-before .mat-badge-content {\n  left: -16px;\n}\n[dir=rtl] .pink-bluegrey .mat-badge-small.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -16px;\n}\n.pink-bluegrey .mat-badge-small.mat-badge-after .mat-badge-content {\n  right: -16px;\n}\n[dir=rtl] .pink-bluegrey .mat-badge-small.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -16px;\n}\n.pink-bluegrey .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -8px;\n}\n[dir=rtl] .pink-bluegrey .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -8px;\n}\n.pink-bluegrey .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -8px;\n}\n[dir=rtl] .pink-bluegrey .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -8px;\n}\n.pink-bluegrey .mat-badge-medium .mat-badge-content {\n  width: 22px;\n  height: 22px;\n  line-height: 22px;\n}\n.pink-bluegrey .mat-badge-medium.mat-badge-above .mat-badge-content {\n  top: -11px;\n}\n.pink-bluegrey .mat-badge-medium.mat-badge-below .mat-badge-content {\n  bottom: -11px;\n}\n.pink-bluegrey .mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: -22px;\n}\n[dir=rtl] .pink-bluegrey .mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -22px;\n}\n.pink-bluegrey .mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: -22px;\n}\n[dir=rtl] .pink-bluegrey .mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -22px;\n}\n.pink-bluegrey .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -11px;\n}\n[dir=rtl] .pink-bluegrey .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -11px;\n}\n.pink-bluegrey .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -11px;\n}\n[dir=rtl] .pink-bluegrey .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -11px;\n}\n.pink-bluegrey .mat-badge-large .mat-badge-content {\n  width: 28px;\n  height: 28px;\n  line-height: 28px;\n}\n.pink-bluegrey .mat-badge-large.mat-badge-above .mat-badge-content {\n  top: -14px;\n}\n.pink-bluegrey .mat-badge-large.mat-badge-below .mat-badge-content {\n  bottom: -14px;\n}\n.pink-bluegrey .mat-badge-large.mat-badge-before .mat-badge-content {\n  left: -28px;\n}\n[dir=rtl] .pink-bluegrey .mat-badge-large.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -28px;\n}\n.pink-bluegrey .mat-badge-large.mat-badge-after .mat-badge-content {\n  right: -28px;\n}\n[dir=rtl] .pink-bluegrey .mat-badge-large.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -28px;\n}\n.pink-bluegrey .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -14px;\n}\n[dir=rtl] .pink-bluegrey .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -14px;\n}\n.pink-bluegrey .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -14px;\n}\n[dir=rtl] .pink-bluegrey .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -14px;\n}\n.pink-bluegrey .mat-bottom-sheet-container {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: #424242;\n  color: white;\n}\n.pink-bluegrey .mat-button, .pink-bluegrey .mat-icon-button, .pink-bluegrey .mat-stroked-button {\n  color: inherit;\n  background: transparent;\n}\n.pink-bluegrey .mat-button.mat-primary, .pink-bluegrey .mat-icon-button.mat-primary, .pink-bluegrey .mat-stroked-button.mat-primary {\n  color: #e91e63;\n}\n.pink-bluegrey .mat-button.mat-accent, .pink-bluegrey .mat-icon-button.mat-accent, .pink-bluegrey .mat-stroked-button.mat-accent {\n  color: #b0bec5;\n}\n.pink-bluegrey .mat-button.mat-warn, .pink-bluegrey .mat-icon-button.mat-warn, .pink-bluegrey .mat-stroked-button.mat-warn {\n  color: #f44336;\n}\n.pink-bluegrey .mat-button.mat-primary.mat-button-disabled, .pink-bluegrey .mat-button.mat-accent.mat-button-disabled, .pink-bluegrey .mat-button.mat-warn.mat-button-disabled, .pink-bluegrey .mat-button.mat-button-disabled.mat-button-disabled, .pink-bluegrey .mat-icon-button.mat-primary.mat-button-disabled, .pink-bluegrey .mat-icon-button.mat-accent.mat-button-disabled, .pink-bluegrey .mat-icon-button.mat-warn.mat-button-disabled, .pink-bluegrey .mat-icon-button.mat-button-disabled.mat-button-disabled, .pink-bluegrey .mat-stroked-button.mat-primary.mat-button-disabled, .pink-bluegrey .mat-stroked-button.mat-accent.mat-button-disabled, .pink-bluegrey .mat-stroked-button.mat-warn.mat-button-disabled, .pink-bluegrey .mat-stroked-button.mat-button-disabled.mat-button-disabled {\n  color: rgba(255, 255, 255, 0.3);\n}\n.pink-bluegrey .mat-button.mat-primary .mat-button-focus-overlay, .pink-bluegrey .mat-icon-button.mat-primary .mat-button-focus-overlay, .pink-bluegrey .mat-stroked-button.mat-primary .mat-button-focus-overlay {\n  background-color: #e91e63;\n}\n.pink-bluegrey .mat-button.mat-accent .mat-button-focus-overlay, .pink-bluegrey .mat-icon-button.mat-accent .mat-button-focus-overlay, .pink-bluegrey .mat-stroked-button.mat-accent .mat-button-focus-overlay {\n  background-color: #b0bec5;\n}\n.pink-bluegrey .mat-button.mat-warn .mat-button-focus-overlay, .pink-bluegrey .mat-icon-button.mat-warn .mat-button-focus-overlay, .pink-bluegrey .mat-stroked-button.mat-warn .mat-button-focus-overlay {\n  background-color: #f44336;\n}\n.pink-bluegrey .mat-button.mat-button-disabled .mat-button-focus-overlay, .pink-bluegrey .mat-icon-button.mat-button-disabled .mat-button-focus-overlay, .pink-bluegrey .mat-stroked-button.mat-button-disabled .mat-button-focus-overlay {\n  background-color: transparent;\n}\n.pink-bluegrey .mat-button .mat-ripple-element, .pink-bluegrey .mat-icon-button .mat-ripple-element, .pink-bluegrey .mat-stroked-button .mat-ripple-element {\n  opacity: 0.1;\n  background-color: currentColor;\n}\n.pink-bluegrey .mat-button-focus-overlay {\n  background: white;\n}\n.pink-bluegrey .mat-stroked-button:not(.mat-button-disabled) {\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey .mat-flat-button, .pink-bluegrey .mat-raised-button, .pink-bluegrey .mat-fab, .pink-bluegrey .mat-mini-fab {\n  color: white;\n  background-color: #424242;\n}\n.pink-bluegrey .mat-flat-button.mat-primary, .pink-bluegrey .mat-raised-button.mat-primary, .pink-bluegrey .mat-fab.mat-primary, .pink-bluegrey .mat-mini-fab.mat-primary {\n  color: white;\n}\n.pink-bluegrey .mat-flat-button.mat-accent, .pink-bluegrey .mat-raised-button.mat-accent, .pink-bluegrey .mat-fab.mat-accent, .pink-bluegrey .mat-mini-fab.mat-accent {\n  color: rgba(0, 0, 0, 0.87);\n}\n.pink-bluegrey .mat-flat-button.mat-warn, .pink-bluegrey .mat-raised-button.mat-warn, .pink-bluegrey .mat-fab.mat-warn, .pink-bluegrey .mat-mini-fab.mat-warn {\n  color: white;\n}\n.pink-bluegrey .mat-flat-button.mat-primary.mat-button-disabled, .pink-bluegrey .mat-flat-button.mat-accent.mat-button-disabled, .pink-bluegrey .mat-flat-button.mat-warn.mat-button-disabled, .pink-bluegrey .mat-flat-button.mat-button-disabled.mat-button-disabled, .pink-bluegrey .mat-raised-button.mat-primary.mat-button-disabled, .pink-bluegrey .mat-raised-button.mat-accent.mat-button-disabled, .pink-bluegrey .mat-raised-button.mat-warn.mat-button-disabled, .pink-bluegrey .mat-raised-button.mat-button-disabled.mat-button-disabled, .pink-bluegrey .mat-fab.mat-primary.mat-button-disabled, .pink-bluegrey .mat-fab.mat-accent.mat-button-disabled, .pink-bluegrey .mat-fab.mat-warn.mat-button-disabled, .pink-bluegrey .mat-fab.mat-button-disabled.mat-button-disabled, .pink-bluegrey .mat-mini-fab.mat-primary.mat-button-disabled, .pink-bluegrey .mat-mini-fab.mat-accent.mat-button-disabled, .pink-bluegrey .mat-mini-fab.mat-warn.mat-button-disabled, .pink-bluegrey .mat-mini-fab.mat-button-disabled.mat-button-disabled {\n  color: rgba(255, 255, 255, 0.3);\n}\n.pink-bluegrey .mat-flat-button.mat-primary, .pink-bluegrey .mat-raised-button.mat-primary, .pink-bluegrey .mat-fab.mat-primary, .pink-bluegrey .mat-mini-fab.mat-primary {\n  background-color: #e91e63;\n}\n.pink-bluegrey .mat-flat-button.mat-accent, .pink-bluegrey .mat-raised-button.mat-accent, .pink-bluegrey .mat-fab.mat-accent, .pink-bluegrey .mat-mini-fab.mat-accent {\n  background-color: #b0bec5;\n}\n.pink-bluegrey .mat-flat-button.mat-warn, .pink-bluegrey .mat-raised-button.mat-warn, .pink-bluegrey .mat-fab.mat-warn, .pink-bluegrey .mat-mini-fab.mat-warn {\n  background-color: #f44336;\n}\n.pink-bluegrey .mat-flat-button.mat-primary.mat-button-disabled, .pink-bluegrey .mat-flat-button.mat-accent.mat-button-disabled, .pink-bluegrey .mat-flat-button.mat-warn.mat-button-disabled, .pink-bluegrey .mat-flat-button.mat-button-disabled.mat-button-disabled, .pink-bluegrey .mat-raised-button.mat-primary.mat-button-disabled, .pink-bluegrey .mat-raised-button.mat-accent.mat-button-disabled, .pink-bluegrey .mat-raised-button.mat-warn.mat-button-disabled, .pink-bluegrey .mat-raised-button.mat-button-disabled.mat-button-disabled, .pink-bluegrey .mat-fab.mat-primary.mat-button-disabled, .pink-bluegrey .mat-fab.mat-accent.mat-button-disabled, .pink-bluegrey .mat-fab.mat-warn.mat-button-disabled, .pink-bluegrey .mat-fab.mat-button-disabled.mat-button-disabled, .pink-bluegrey .mat-mini-fab.mat-primary.mat-button-disabled, .pink-bluegrey .mat-mini-fab.mat-accent.mat-button-disabled, .pink-bluegrey .mat-mini-fab.mat-warn.mat-button-disabled, .pink-bluegrey .mat-mini-fab.mat-button-disabled.mat-button-disabled {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey .mat-flat-button.mat-primary .mat-ripple-element, .pink-bluegrey .mat-raised-button.mat-primary .mat-ripple-element, .pink-bluegrey .mat-fab.mat-primary .mat-ripple-element, .pink-bluegrey .mat-mini-fab.mat-primary .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.pink-bluegrey .mat-flat-button.mat-accent .mat-ripple-element, .pink-bluegrey .mat-raised-button.mat-accent .mat-ripple-element, .pink-bluegrey .mat-fab.mat-accent .mat-ripple-element, .pink-bluegrey .mat-mini-fab.mat-accent .mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.pink-bluegrey .mat-flat-button.mat-warn .mat-ripple-element, .pink-bluegrey .mat-raised-button.mat-warn .mat-ripple-element, .pink-bluegrey .mat-fab.mat-warn .mat-ripple-element, .pink-bluegrey .mat-mini-fab.mat-warn .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.pink-bluegrey .mat-stroked-button:not([class*=mat-elevation-z]), .pink-bluegrey .mat-flat-button:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-raised-button:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-raised-button:not(.mat-button-disabled):active:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-raised-button.mat-button-disabled:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-fab:not([class*=mat-elevation-z]), .pink-bluegrey .mat-mini-fab:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]), .pink-bluegrey .mat-mini-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-fab.mat-button-disabled:not([class*=mat-elevation-z]), .pink-bluegrey .mat-mini-fab.mat-button-disabled:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-button-toggle-standalone,\n.pink-bluegrey .mat-button-toggle-group {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n.pink-bluegrey .mat-button-toggle-group-appearance-standard {\n  box-shadow: none;\n}\n.pink-bluegrey .mat-button-toggle {\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-button-toggle .mat-button-toggle-focus-overlay {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey .mat-button-toggle-appearance-standard {\n  color: white;\n  background: #424242;\n}\n.pink-bluegrey .mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay {\n  background-color: white;\n}\n.pink-bluegrey .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey [dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey .mat-button-toggle-checked {\n  background-color: #212121;\n  color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-button-toggle-checked.mat-button-toggle-appearance-standard {\n  color: white;\n}\n.pink-bluegrey .mat-button-toggle-disabled {\n  color: rgba(255, 255, 255, 0.3);\n  background-color: black;\n}\n.pink-bluegrey .mat-button-toggle-disabled.mat-button-toggle-appearance-standard {\n  background: #424242;\n}\n.pink-bluegrey .mat-button-toggle-disabled.mat-button-toggle-checked {\n  background-color: #424242;\n}\n.pink-bluegrey .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n.pink-bluegrey .mat-button-toggle-group-appearance-standard {\n  border: solid 1px rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey .mat-card {\n  background: #424242;\n  color: white;\n}\n.pink-bluegrey .mat-card:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-card.mat-card-flat:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-card-subtitle {\n  color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-checkbox-frame {\n  border-color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-checkbox-checkmark {\n  fill: #303030;\n}\n.pink-bluegrey .mat-checkbox-checkmark-path {\n  stroke: #303030 !important;\n}\n.pink-bluegrey .mat-checkbox-mixedmark {\n  background-color: #303030;\n}\n.pink-bluegrey .mat-checkbox-indeterminate.mat-primary .mat-checkbox-background, .pink-bluegrey .mat-checkbox-checked.mat-primary .mat-checkbox-background {\n  background-color: #e91e63;\n}\n.pink-bluegrey .mat-checkbox-indeterminate.mat-accent .mat-checkbox-background, .pink-bluegrey .mat-checkbox-checked.mat-accent .mat-checkbox-background {\n  background-color: #b0bec5;\n}\n.pink-bluegrey .mat-checkbox-indeterminate.mat-warn .mat-checkbox-background, .pink-bluegrey .mat-checkbox-checked.mat-warn .mat-checkbox-background {\n  background-color: #f44336;\n}\n.pink-bluegrey .mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background, .pink-bluegrey .mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background {\n  background-color: #686868;\n}\n.pink-bluegrey .mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame {\n  border-color: #686868;\n}\n.pink-bluegrey .mat-checkbox-disabled .mat-checkbox-label {\n  color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-checkbox .mat-ripple-element {\n  background-color: white;\n}\n.pink-bluegrey .mat-checkbox-checked:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element,\n.pink-bluegrey .mat-checkbox:active:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element {\n  background: #e91e63;\n}\n.pink-bluegrey .mat-checkbox-checked:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element,\n.pink-bluegrey .mat-checkbox:active:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element {\n  background: #b0bec5;\n}\n.pink-bluegrey .mat-checkbox-checked:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element,\n.pink-bluegrey .mat-checkbox:active:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element {\n  background: #f44336;\n}\n.pink-bluegrey .mat-chip.mat-standard-chip {\n  background-color: #616161;\n  color: white;\n}\n.pink-bluegrey .mat-chip.mat-standard-chip .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.pink-bluegrey .mat-chip.mat-standard-chip:not(.mat-chip-disabled):active {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover {\n  opacity: 0.54;\n}\n.pink-bluegrey .mat-chip.mat-standard-chip.mat-chip-disabled {\n  opacity: 0.4;\n}\n.pink-bluegrey .mat-chip.mat-standard-chip::after {\n  background: white;\n}\n.pink-bluegrey .mat-chip.mat-standard-chip.mat-chip-selected.mat-primary {\n  background-color: #e91e63;\n  color: white;\n}\n.pink-bluegrey .mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.pink-bluegrey .mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.pink-bluegrey .mat-chip.mat-standard-chip.mat-chip-selected.mat-warn {\n  background-color: #f44336;\n  color: white;\n}\n.pink-bluegrey .mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.pink-bluegrey .mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.pink-bluegrey .mat-chip.mat-standard-chip.mat-chip-selected.mat-accent {\n  background-color: #b0bec5;\n  color: rgba(0, 0, 0, 0.87);\n}\n.pink-bluegrey .mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove {\n  color: rgba(0, 0, 0, 0.87);\n  opacity: 0.4;\n}\n.pink-bluegrey .mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.pink-bluegrey .mat-table {\n  background: #424242;\n}\n.pink-bluegrey .mat-table thead, .pink-bluegrey .mat-table tbody, .pink-bluegrey .mat-table tfoot,\n.pink-bluegrey mat-header-row, .pink-bluegrey mat-row, .pink-bluegrey mat-footer-row,\n.pink-bluegrey [mat-header-row], .pink-bluegrey [mat-row], .pink-bluegrey [mat-footer-row],\n.pink-bluegrey .mat-table-sticky {\n  background: inherit;\n}\n.pink-bluegrey mat-row, .pink-bluegrey mat-header-row, .pink-bluegrey mat-footer-row,\n.pink-bluegrey th.mat-header-cell, .pink-bluegrey td.mat-cell, .pink-bluegrey td.mat-footer-cell {\n  border-bottom-color: rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey .mat-header-cell {\n  color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-cell, .pink-bluegrey .mat-footer-cell {\n  color: white;\n}\n.pink-bluegrey .mat-calendar-arrow {\n  border-top-color: white;\n}\n.pink-bluegrey .mat-datepicker-toggle,\n.pink-bluegrey .mat-datepicker-content .mat-calendar-next-button,\n.pink-bluegrey .mat-datepicker-content .mat-calendar-previous-button {\n  color: white;\n}\n.pink-bluegrey .mat-calendar-table-header {\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-calendar-table-header-divider::after {\n  background: rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey .mat-calendar-body-label {\n  color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-calendar-body-cell-content,\n.pink-bluegrey .mat-date-range-input-separator {\n  color: white;\n  border-color: transparent;\n}\n.pink-bluegrey .mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-form-field-disabled .mat-date-range-input-separator {\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-calendar-body-in-preview {\n  color: rgba(255, 255, 255, 0.24);\n}\n.pink-bluegrey .mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.3);\n}\n.pink-bluegrey .mat-calendar-body-in-range::before {\n  background: rgba(233, 30, 99, 0.2);\n}\n.pink-bluegrey .mat-calendar-body-comparison-identical,\n.pink-bluegrey .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.pink-bluegrey .mat-calendar-body-comparison-bridge-start::before,\n.pink-bluegrey [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(233, 30, 99, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.pink-bluegrey .mat-calendar-body-comparison-bridge-end::before,\n.pink-bluegrey [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(233, 30, 99, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.pink-bluegrey .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.pink-bluegrey .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.pink-bluegrey .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.pink-bluegrey .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.pink-bluegrey .mat-calendar-body-selected {\n  background-color: #e91e63;\n  color: white;\n}\n.pink-bluegrey .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(233, 30, 99, 0.4);\n}\n.pink-bluegrey .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\n.pink-bluegrey .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.pink-bluegrey .cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.pink-bluegrey .cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(233, 30, 99, 0.3);\n}\n.pink-bluegrey .mat-datepicker-content {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: #424242;\n  color: white;\n}\n.pink-bluegrey .mat-datepicker-content.mat-accent .mat-calendar-body-in-range::before {\n  background: rgba(176, 190, 197, 0.2);\n}\n.pink-bluegrey .mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical,\n.pink-bluegrey .mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.pink-bluegrey .mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-start::before,\n.pink-bluegrey .mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(176, 190, 197, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.pink-bluegrey .mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-end::before,\n.pink-bluegrey .mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(176, 190, 197, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.pink-bluegrey .mat-datepicker-content.mat-accent .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.pink-bluegrey .mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.pink-bluegrey .mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.pink-bluegrey .mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.pink-bluegrey .mat-datepicker-content.mat-accent .mat-calendar-body-selected {\n  background-color: #b0bec5;\n  color: rgba(0, 0, 0, 0.87);\n}\n.pink-bluegrey .mat-datepicker-content.mat-accent .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(176, 190, 197, 0.4);\n}\n.pink-bluegrey .mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.87);\n}\n.pink-bluegrey .mat-datepicker-content.mat-accent .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.pink-bluegrey .mat-datepicker-content.mat-accent .cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.pink-bluegrey .mat-datepicker-content.mat-accent .cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(176, 190, 197, 0.3);\n}\n.pink-bluegrey .mat-datepicker-content.mat-warn .mat-calendar-body-in-range::before {\n  background: rgba(244, 67, 54, 0.2);\n}\n.pink-bluegrey .mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical,\n.pink-bluegrey .mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.pink-bluegrey .mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-start::before,\n.pink-bluegrey .mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.pink-bluegrey .mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-end::before,\n.pink-bluegrey .mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.pink-bluegrey .mat-datepicker-content.mat-warn .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.pink-bluegrey .mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.pink-bluegrey .mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.pink-bluegrey .mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.pink-bluegrey .mat-datepicker-content.mat-warn .mat-calendar-body-selected {\n  background-color: #f44336;\n  color: white;\n}\n.pink-bluegrey .mat-datepicker-content.mat-warn .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(244, 67, 54, 0.4);\n}\n.pink-bluegrey .mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\n.pink-bluegrey .mat-datepicker-content.mat-warn .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.pink-bluegrey .mat-datepicker-content.mat-warn .cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.pink-bluegrey .mat-datepicker-content.mat-warn .cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(244, 67, 54, 0.3);\n}\n.pink-bluegrey .mat-datepicker-content-touch {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-datepicker-toggle-active {\n  color: #e91e63;\n}\n.pink-bluegrey .mat-datepicker-toggle-active.mat-accent {\n  color: #b0bec5;\n}\n.pink-bluegrey .mat-datepicker-toggle-active.mat-warn {\n  color: #f44336;\n}\n.pink-bluegrey .mat-date-range-input-inner[disabled] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-dialog-container {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n  background: #424242;\n  color: white;\n}\n.pink-bluegrey .mat-divider {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey .mat-divider-vertical {\n  border-right-color: rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey .mat-expansion-panel {\n  background: #424242;\n  color: white;\n}\n.pink-bluegrey .mat-expansion-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-action-row {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]), .pink-bluegrey .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]), .pink-bluegrey .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]) {\n  background: rgba(255, 255, 255, 0.04);\n}\n@media (hover: none) {\n  .pink-bluegrey .mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover {\n    background: #424242;\n  }\n}\n.pink-bluegrey .mat-expansion-panel-header-title {\n  color: white;\n}\n.pink-bluegrey .mat-expansion-panel-header-description,\n.pink-bluegrey .mat-expansion-indicator::after {\n  color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-expansion-panel-header[aria-disabled=true] {\n  color: rgba(255, 255, 255, 0.3);\n}\n.pink-bluegrey .mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,\n.pink-bluegrey .mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description {\n  color: inherit;\n}\n.pink-bluegrey .mat-form-field-label {\n  color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-hint {\n  color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-form-field.mat-focused .mat-form-field-label {\n  color: #e91e63;\n}\n.pink-bluegrey .mat-form-field.mat-focused .mat-form-field-label.mat-accent {\n  color: #b0bec5;\n}\n.pink-bluegrey .mat-form-field.mat-focused .mat-form-field-label.mat-warn {\n  color: #f44336;\n}\n.pink-bluegrey .mat-focused .mat-form-field-required-marker {\n  color: #b0bec5;\n}\n.pink-bluegrey .mat-form-field-ripple {\n  background-color: white;\n}\n.pink-bluegrey .mat-form-field.mat-focused .mat-form-field-ripple {\n  background-color: #e91e63;\n}\n.pink-bluegrey .mat-form-field.mat-focused .mat-form-field-ripple.mat-accent {\n  background-color: #b0bec5;\n}\n.pink-bluegrey .mat-form-field.mat-focused .mat-form-field-ripple.mat-warn {\n  background-color: #f44336;\n}\n.pink-bluegrey .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after {\n  color: #e91e63;\n}\n.pink-bluegrey .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after {\n  color: #b0bec5;\n}\n.pink-bluegrey .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after {\n  color: #f44336;\n}\n.pink-bluegrey .mat-form-field.mat-form-field-invalid .mat-form-field-label {\n  color: #f44336;\n}\n.pink-bluegrey .mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent,\n.pink-bluegrey .mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker {\n  color: #f44336;\n}\n.pink-bluegrey .mat-form-field.mat-form-field-invalid .mat-form-field-ripple,\n.pink-bluegrey .mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent {\n  background-color: #f44336;\n}\n.pink-bluegrey .mat-error {\n  color: #f44336;\n}\n.pink-bluegrey .mat-form-field-appearance-legacy .mat-form-field-label {\n  color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-form-field-appearance-legacy .mat-hint {\n  color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-form-field-appearance-legacy .mat-form-field-underline {\n  background-color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(255, 255, 255, 0.7) 0%, rgba(255, 255, 255, 0.7) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n.pink-bluegrey .mat-form-field-appearance-standard .mat-form-field-underline {\n  background-color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(255, 255, 255, 0.7) 0%, rgba(255, 255, 255, 0.7) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n.pink-bluegrey .mat-form-field-appearance-fill .mat-form-field-flex {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.pink-bluegrey .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n.pink-bluegrey .mat-form-field-appearance-fill .mat-form-field-underline::before {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before {\n  background-color: transparent;\n}\n.pink-bluegrey .mat-form-field-appearance-outline .mat-form-field-outline {\n  color: rgba(255, 255, 255, 0.3);\n}\n.pink-bluegrey .mat-form-field-appearance-outline .mat-form-field-outline-thick {\n  color: white;\n}\n.pink-bluegrey .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #e91e63;\n}\n.pink-bluegrey .mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick {\n  color: #b0bec5;\n}\n.pink-bluegrey .mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick {\n  color: #f44336;\n}\n.pink-bluegrey .mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\n  color: #f44336;\n}\n.pink-bluegrey .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\n  color: rgba(255, 255, 255, 0.15);\n}\n.pink-bluegrey .mat-icon.mat-primary {\n  color: #e91e63;\n}\n.pink-bluegrey .mat-icon.mat-accent {\n  color: #b0bec5;\n}\n.pink-bluegrey .mat-icon.mat-warn {\n  color: #f44336;\n}\n.pink-bluegrey .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n  color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-input-element:disabled,\n.pink-bluegrey .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-input-element {\n  caret-color: #e91e63;\n}\n.pink-bluegrey .mat-input-element::-moz-placeholder {\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-input-element::placeholder {\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-input-element::-moz-placeholder {\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-input-element::-webkit-input-placeholder {\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-input-element:-ms-input-placeholder {\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-input-element option {\n  color: rgba(0, 0, 0, 0.87);\n}\n.pink-bluegrey .mat-input-element option:disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\n.pink-bluegrey .mat-form-field.mat-accent .mat-input-element {\n  caret-color: #b0bec5;\n}\n.pink-bluegrey .mat-form-field.mat-warn .mat-input-element,\n.pink-bluegrey .mat-form-field-invalid .mat-input-element {\n  caret-color: #f44336;\n}\n.pink-bluegrey .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n  color: #f44336;\n}\n.pink-bluegrey .mat-list-base .mat-list-item {\n  color: white;\n}\n.pink-bluegrey .mat-list-base .mat-list-option {\n  color: white;\n}\n.pink-bluegrey .mat-list-base .mat-subheader {\n  color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-list-item-disabled {\n  background-color: black;\n}\n.pink-bluegrey .mat-list-option:hover, .pink-bluegrey .mat-list-option:focus,\n.pink-bluegrey .mat-nav-list .mat-list-item:hover,\n.pink-bluegrey .mat-nav-list .mat-list-item:focus,\n.pink-bluegrey .mat-action-list .mat-list-item:hover,\n.pink-bluegrey .mat-action-list .mat-list-item:focus {\n  background: rgba(255, 255, 255, 0.04);\n}\n.pink-bluegrey .mat-list-single-selected-option, .pink-bluegrey .mat-list-single-selected-option:hover, .pink-bluegrey .mat-list-single-selected-option:focus {\n  background: rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey .mat-menu-panel {\n  background: #424242;\n}\n.pink-bluegrey .mat-menu-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-menu-item {\n  background: transparent;\n  color: white;\n}\n.pink-bluegrey .mat-menu-item[disabled], .pink-bluegrey .mat-menu-item[disabled]::after,\n.pink-bluegrey .mat-menu-item[disabled] .mat-icon-no-color {\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-menu-item .mat-icon-no-color,\n.pink-bluegrey .mat-menu-item-submenu-trigger::after {\n  color: white;\n}\n.pink-bluegrey .mat-menu-item:hover:not([disabled]),\n.pink-bluegrey .mat-menu-item.cdk-program-focused:not([disabled]),\n.pink-bluegrey .mat-menu-item.cdk-keyboard-focused:not([disabled]),\n.pink-bluegrey .mat-menu-item-highlighted:not([disabled]) {\n  background: rgba(255, 255, 255, 0.04);\n}\n.pink-bluegrey .mat-paginator {\n  background: #424242;\n}\n.pink-bluegrey .mat-paginator,\n.pink-bluegrey .mat-paginator-page-size .mat-select-trigger {\n  color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-paginator-decrement,\n.pink-bluegrey .mat-paginator-increment {\n  border-top: 2px solid white;\n  border-right: 2px solid white;\n}\n.pink-bluegrey .mat-paginator-first,\n.pink-bluegrey .mat-paginator-last {\n  border-top: 2px solid white;\n}\n.pink-bluegrey .mat-icon-button[disabled] .mat-paginator-decrement,\n.pink-bluegrey .mat-icon-button[disabled] .mat-paginator-increment,\n.pink-bluegrey .mat-icon-button[disabled] .mat-paginator-first,\n.pink-bluegrey .mat-icon-button[disabled] .mat-paginator-last {\n  border-color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-progress-bar-background {\n  fill: #f8bbd0;\n}\n.pink-bluegrey .mat-progress-bar-buffer {\n  background-color: #f8bbd0;\n}\n.pink-bluegrey .mat-progress-bar-fill::after {\n  background-color: #e91e63;\n}\n.pink-bluegrey .mat-progress-bar.mat-accent .mat-progress-bar-background {\n  fill: #cfd8dc;\n}\n.pink-bluegrey .mat-progress-bar.mat-accent .mat-progress-bar-buffer {\n  background-color: #cfd8dc;\n}\n.pink-bluegrey .mat-progress-bar.mat-accent .mat-progress-bar-fill::after {\n  background-color: #b0bec5;\n}\n.pink-bluegrey .mat-progress-bar.mat-warn .mat-progress-bar-background {\n  fill: #ffcdd2;\n}\n.pink-bluegrey .mat-progress-bar.mat-warn .mat-progress-bar-buffer {\n  background-color: #ffcdd2;\n}\n.pink-bluegrey .mat-progress-bar.mat-warn .mat-progress-bar-fill::after {\n  background-color: #f44336;\n}\n.pink-bluegrey .mat-progress-spinner circle, .pink-bluegrey .mat-spinner circle {\n  stroke: #e91e63;\n}\n.pink-bluegrey .mat-progress-spinner.mat-accent circle, .pink-bluegrey .mat-spinner.mat-accent circle {\n  stroke: #b0bec5;\n}\n.pink-bluegrey .mat-progress-spinner.mat-warn circle, .pink-bluegrey .mat-spinner.mat-warn circle {\n  stroke: #f44336;\n}\n.pink-bluegrey .mat-radio-outer-circle {\n  border-color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #e91e63;\n}\n.pink-bluegrey .mat-radio-button.mat-primary .mat-radio-inner-circle,\n.pink-bluegrey .mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .pink-bluegrey .mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple, .pink-bluegrey .mat-radio-button.mat-primary:active .mat-radio-persistent-ripple {\n  background-color: #e91e63;\n}\n.pink-bluegrey .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #b0bec5;\n}\n.pink-bluegrey .mat-radio-button.mat-accent .mat-radio-inner-circle,\n.pink-bluegrey .mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .pink-bluegrey .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple, .pink-bluegrey .mat-radio-button.mat-accent:active .mat-radio-persistent-ripple {\n  background-color: #b0bec5;\n}\n.pink-bluegrey .mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #f44336;\n}\n.pink-bluegrey .mat-radio-button.mat-warn .mat-radio-inner-circle,\n.pink-bluegrey .mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .pink-bluegrey .mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple, .pink-bluegrey .mat-radio-button.mat-warn:active .mat-radio-persistent-ripple {\n  background-color: #f44336;\n}\n.pink-bluegrey .mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle,\n.pink-bluegrey .mat-radio-button.mat-radio-disabled .mat-radio-outer-circle {\n  border-color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element,\n.pink-bluegrey .mat-radio-button.mat-radio-disabled .mat-radio-inner-circle {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-radio-button.mat-radio-disabled .mat-radio-label-content {\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-radio-button .mat-ripple-element {\n  background-color: white;\n}\n.pink-bluegrey .mat-select-value {\n  color: white;\n}\n.pink-bluegrey .mat-select-placeholder {\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-select-disabled .mat-select-value {\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-select-arrow {\n  color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-select-panel {\n  background: #424242;\n}\n.pink-bluegrey .mat-select-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple) {\n  background: rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey .mat-form-field.mat-focused.mat-primary .mat-select-arrow {\n  color: #e91e63;\n}\n.pink-bluegrey .mat-form-field.mat-focused.mat-accent .mat-select-arrow {\n  color: #b0bec5;\n}\n.pink-bluegrey .mat-form-field.mat-focused.mat-warn .mat-select-arrow {\n  color: #f44336;\n}\n.pink-bluegrey .mat-form-field .mat-select.mat-select-invalid .mat-select-arrow {\n  color: #f44336;\n}\n.pink-bluegrey .mat-form-field .mat-select.mat-select-disabled .mat-select-arrow {\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-drawer-container {\n  background-color: #303030;\n  color: white;\n}\n.pink-bluegrey .mat-drawer {\n  background-color: #424242;\n  color: white;\n}\n.pink-bluegrey .mat-drawer.mat-drawer-push {\n  background-color: #424242;\n}\n.pink-bluegrey .mat-drawer:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-drawer-side {\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey .mat-drawer-side.mat-drawer-end {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n.pink-bluegrey [dir=rtl] .mat-drawer-side {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n.pink-bluegrey [dir=rtl] .mat-drawer-side.mat-drawer-end {\n  border-left: none;\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey .mat-drawer-backdrop.mat-drawer-shown {\n  background-color: rgba(189, 189, 189, 0.6);\n}\n.pink-bluegrey .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb {\n  background-color: #b0bec5;\n}\n.pink-bluegrey .mat-slide-toggle.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(176, 190, 197, 0.54);\n}\n.pink-bluegrey .mat-slide-toggle.mat-checked .mat-ripple-element {\n  background-color: #b0bec5;\n}\n.pink-bluegrey .mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb {\n  background-color: #e91e63;\n}\n.pink-bluegrey .mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(233, 30, 99, 0.54);\n}\n.pink-bluegrey .mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element {\n  background-color: #e91e63;\n}\n.pink-bluegrey .mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb {\n  background-color: #f44336;\n}\n.pink-bluegrey .mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(244, 67, 54, 0.54);\n}\n.pink-bluegrey .mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element {\n  background-color: #f44336;\n}\n.pink-bluegrey .mat-slide-toggle:not(.mat-checked) .mat-ripple-element {\n  background-color: white;\n}\n.pink-bluegrey .mat-slide-toggle-thumb {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  background-color: #bdbdbd;\n}\n.pink-bluegrey .mat-slide-toggle-bar {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-slider-track-background {\n  background-color: rgba(255, 255, 255, 0.3);\n}\n.pink-bluegrey .mat-primary .mat-slider-track-fill,\n.pink-bluegrey .mat-primary .mat-slider-thumb,\n.pink-bluegrey .mat-primary .mat-slider-thumb-label {\n  background-color: #e91e63;\n}\n.pink-bluegrey .mat-primary .mat-slider-thumb-label-text {\n  color: white;\n}\n.pink-bluegrey .mat-primary .mat-slider-focus-ring {\n  background-color: rgba(233, 30, 99, 0.2);\n}\n.pink-bluegrey .mat-accent .mat-slider-track-fill,\n.pink-bluegrey .mat-accent .mat-slider-thumb,\n.pink-bluegrey .mat-accent .mat-slider-thumb-label {\n  background-color: #b0bec5;\n}\n.pink-bluegrey .mat-accent .mat-slider-thumb-label-text {\n  color: rgba(0, 0, 0, 0.87);\n}\n.pink-bluegrey .mat-accent .mat-slider-focus-ring {\n  background-color: rgba(176, 190, 197, 0.2);\n}\n.pink-bluegrey .mat-warn .mat-slider-track-fill,\n.pink-bluegrey .mat-warn .mat-slider-thumb,\n.pink-bluegrey .mat-warn .mat-slider-thumb-label {\n  background-color: #f44336;\n}\n.pink-bluegrey .mat-warn .mat-slider-thumb-label-text {\n  color: white;\n}\n.pink-bluegrey .mat-warn .mat-slider-focus-ring {\n  background-color: rgba(244, 67, 54, 0.2);\n}\n.pink-bluegrey .mat-slider:hover .mat-slider-track-background,\n.pink-bluegrey .cdk-focused .mat-slider-track-background {\n  background-color: rgba(255, 255, 255, 0.3);\n}\n.pink-bluegrey .mat-slider-disabled .mat-slider-track-background,\n.pink-bluegrey .mat-slider-disabled .mat-slider-track-fill,\n.pink-bluegrey .mat-slider-disabled .mat-slider-thumb {\n  background-color: rgba(255, 255, 255, 0.3);\n}\n.pink-bluegrey .mat-slider-disabled:hover .mat-slider-track-background {\n  background-color: rgba(255, 255, 255, 0.3);\n}\n.pink-bluegrey .mat-slider-min-value .mat-slider-focus-ring {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey .mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,\n.pink-bluegrey .mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label {\n  background-color: white;\n}\n.pink-bluegrey .mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,\n.pink-bluegrey .mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label {\n  background-color: rgba(255, 255, 255, 0.3);\n}\n.pink-bluegrey .mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb {\n  border-color: rgba(255, 255, 255, 0.3);\n  background-color: transparent;\n}\n.pink-bluegrey .mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb, .pink-bluegrey .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb {\n  border-color: rgba(255, 255, 255, 0.3);\n}\n.pink-bluegrey .mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb, .pink-bluegrey .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb {\n  border-color: rgba(255, 255, 255, 0.3);\n}\n.pink-bluegrey .mat-slider-has-ticks .mat-slider-wrapper::after {\n  border-color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-slider-horizontal .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to right, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.7) 2px, transparent 0, transparent);\n  background-image: -moz-repeating-linear-gradient(0.0001deg, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.7) 2px, transparent 0, transparent);\n}\n.pink-bluegrey .mat-slider-vertical .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to bottom, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.7) 2px, transparent 0, transparent);\n}\n.pink-bluegrey .mat-step-header.cdk-keyboard-focused, .pink-bluegrey .mat-step-header.cdk-program-focused, .pink-bluegrey .mat-step-header:hover {\n  background-color: rgba(255, 255, 255, 0.04);\n}\n@media (hover: none) {\n  .pink-bluegrey .mat-step-header:hover {\n    background: none;\n  }\n}\n.pink-bluegrey .mat-step-header .mat-step-label,\n.pink-bluegrey .mat-step-header .mat-step-optional {\n  color: rgba(255, 255, 255, 0.7);\n}\n.pink-bluegrey .mat-step-header .mat-step-icon {\n  background-color: rgba(255, 255, 255, 0.7);\n  color: white;\n}\n.pink-bluegrey .mat-step-header .mat-step-icon-selected,\n.pink-bluegrey .mat-step-header .mat-step-icon-state-done,\n.pink-bluegrey .mat-step-header .mat-step-icon-state-edit {\n  background-color: #e91e63;\n  color: white;\n}\n.pink-bluegrey .mat-step-header.mat-accent .mat-step-icon {\n  color: rgba(0, 0, 0, 0.87);\n}\n.pink-bluegrey .mat-step-header.mat-accent .mat-step-icon-selected,\n.pink-bluegrey .mat-step-header.mat-accent .mat-step-icon-state-done,\n.pink-bluegrey .mat-step-header.mat-accent .mat-step-icon-state-edit {\n  background-color: #b0bec5;\n  color: rgba(0, 0, 0, 0.87);\n}\n.pink-bluegrey .mat-step-header.mat-warn .mat-step-icon {\n  color: white;\n}\n.pink-bluegrey .mat-step-header.mat-warn .mat-step-icon-selected,\n.pink-bluegrey .mat-step-header.mat-warn .mat-step-icon-state-done,\n.pink-bluegrey .mat-step-header.mat-warn .mat-step-icon-state-edit {\n  background-color: #f44336;\n  color: white;\n}\n.pink-bluegrey .mat-step-header .mat-step-icon-state-error {\n  background-color: transparent;\n  color: #f44336;\n}\n.pink-bluegrey .mat-step-header .mat-step-label.mat-step-label-active {\n  color: white;\n}\n.pink-bluegrey .mat-step-header .mat-step-label.mat-step-label-error {\n  color: #f44336;\n}\n.pink-bluegrey .mat-stepper-horizontal, .pink-bluegrey .mat-stepper-vertical {\n  background-color: #424242;\n}\n.pink-bluegrey .mat-stepper-vertical-line::before {\n  border-left-color: rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey .mat-horizontal-stepper-header::before,\n.pink-bluegrey .mat-horizontal-stepper-header::after,\n.pink-bluegrey .mat-stepper-horizontal-line {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey .mat-sort-header-arrow {\n  color: #c6c6c6;\n}\n.pink-bluegrey .mat-tab-nav-bar,\n.pink-bluegrey .mat-tab-header {\n  border-bottom: 1px solid rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey .mat-tab-group-inverted-header .mat-tab-nav-bar,\n.pink-bluegrey .mat-tab-group-inverted-header .mat-tab-header {\n  border-top: 1px solid rgba(255, 255, 255, 0.12);\n  border-bottom: none;\n}\n.pink-bluegrey .mat-tab-label, .pink-bluegrey .mat-tab-link {\n  color: white;\n}\n.pink-bluegrey .mat-tab-label.mat-tab-disabled, .pink-bluegrey .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-tab-header-pagination-chevron {\n  border-color: white;\n}\n.pink-bluegrey .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.5);\n}\n.pink-bluegrey .mat-tab-group[class*=mat-background-] .mat-tab-header,\n.pink-bluegrey .mat-tab-nav-bar[class*=mat-background-] {\n  border-bottom: none;\n  border-top: none;\n}\n.pink-bluegrey .mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .pink-bluegrey .mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .pink-bluegrey .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .pink-bluegrey .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(248, 187, 208, 0.3);\n}\n.pink-bluegrey .mat-tab-group.mat-primary .mat-ink-bar, .pink-bluegrey .mat-tab-nav-bar.mat-primary .mat-ink-bar {\n  background-color: #e91e63;\n}\n.pink-bluegrey .mat-tab-group.mat-primary.mat-background-primary > .mat-tab-header .mat-ink-bar, .pink-bluegrey .mat-tab-group.mat-primary.mat-background-primary > .mat-tab-link-container .mat-ink-bar, .pink-bluegrey .mat-tab-nav-bar.mat-primary.mat-background-primary > .mat-tab-header .mat-ink-bar, .pink-bluegrey .mat-tab-nav-bar.mat-primary.mat-background-primary > .mat-tab-link-container .mat-ink-bar {\n  background-color: white;\n}\n.pink-bluegrey .mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .pink-bluegrey .mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .pink-bluegrey .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .pink-bluegrey .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(207, 216, 220, 0.3);\n}\n.pink-bluegrey .mat-tab-group.mat-accent .mat-ink-bar, .pink-bluegrey .mat-tab-nav-bar.mat-accent .mat-ink-bar {\n  background-color: #b0bec5;\n}\n.pink-bluegrey .mat-tab-group.mat-accent.mat-background-accent > .mat-tab-header .mat-ink-bar, .pink-bluegrey .mat-tab-group.mat-accent.mat-background-accent > .mat-tab-link-container .mat-ink-bar, .pink-bluegrey .mat-tab-nav-bar.mat-accent.mat-background-accent > .mat-tab-header .mat-ink-bar, .pink-bluegrey .mat-tab-nav-bar.mat-accent.mat-background-accent > .mat-tab-link-container .mat-ink-bar {\n  background-color: rgba(0, 0, 0, 0.87);\n}\n.pink-bluegrey .mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .pink-bluegrey .mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .pink-bluegrey .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .pink-bluegrey .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 205, 210, 0.3);\n}\n.pink-bluegrey .mat-tab-group.mat-warn .mat-ink-bar, .pink-bluegrey .mat-tab-nav-bar.mat-warn .mat-ink-bar {\n  background-color: #f44336;\n}\n.pink-bluegrey .mat-tab-group.mat-warn.mat-background-warn > .mat-tab-header .mat-ink-bar, .pink-bluegrey .mat-tab-group.mat-warn.mat-background-warn > .mat-tab-link-container .mat-ink-bar, .pink-bluegrey .mat-tab-nav-bar.mat-warn.mat-background-warn > .mat-tab-header .mat-ink-bar, .pink-bluegrey .mat-tab-nav-bar.mat-warn.mat-background-warn > .mat-tab-link-container .mat-ink-bar {\n  background-color: white;\n}\n.pink-bluegrey .mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .pink-bluegrey .mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .pink-bluegrey .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .pink-bluegrey .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(248, 187, 208, 0.3);\n}\n.pink-bluegrey .mat-tab-group.mat-background-primary > .mat-tab-header, .pink-bluegrey .mat-tab-group.mat-background-primary > .mat-tab-link-container, .pink-bluegrey .mat-tab-group.mat-background-primary > .mat-tab-header-pagination, .pink-bluegrey .mat-tab-nav-bar.mat-background-primary > .mat-tab-header, .pink-bluegrey .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container, .pink-bluegrey .mat-tab-nav-bar.mat-background-primary > .mat-tab-header-pagination {\n  background-color: #e91e63;\n}\n.pink-bluegrey .mat-tab-group.mat-background-primary > .mat-tab-header .mat-tab-label, .pink-bluegrey .mat-tab-group.mat-background-primary > .mat-tab-link-container .mat-tab-link, .pink-bluegrey .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-tab-label, .pink-bluegrey .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container .mat-tab-link {\n  color: white;\n}\n.pink-bluegrey .mat-tab-group.mat-background-primary > .mat-tab-header .mat-tab-label.mat-tab-disabled, .pink-bluegrey .mat-tab-group.mat-background-primary > .mat-tab-link-container .mat-tab-link.mat-tab-disabled, .pink-bluegrey .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-tab-label.mat-tab-disabled, .pink-bluegrey .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\n.pink-bluegrey .mat-tab-group.mat-background-primary > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.pink-bluegrey .mat-tab-group.mat-background-primary > .mat-tab-links .mat-focus-indicator::before,\n.pink-bluegrey .mat-tab-group.mat-background-primary > .mat-tab-header .mat-focus-indicator::before, .pink-bluegrey .mat-tab-nav-bar.mat-background-primary > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.pink-bluegrey .mat-tab-nav-bar.mat-background-primary > .mat-tab-links .mat-focus-indicator::before,\n.pink-bluegrey .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-focus-indicator::before {\n  border-color: white;\n}\n.pink-bluegrey .mat-tab-group.mat-background-primary > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .pink-bluegrey .mat-tab-nav-bar.mat-background-primary > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.4);\n}\n.pink-bluegrey .mat-tab-group.mat-background-primary > .mat-tab-header .mat-ripple-element,\n.pink-bluegrey .mat-tab-group.mat-background-primary > .mat-tab-link-container .mat-ripple-element, .pink-bluegrey .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-ripple-element,\n.pink-bluegrey .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey .mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .pink-bluegrey .mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .pink-bluegrey .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .pink-bluegrey .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(207, 216, 220, 0.3);\n}\n.pink-bluegrey .mat-tab-group.mat-background-accent > .mat-tab-header, .pink-bluegrey .mat-tab-group.mat-background-accent > .mat-tab-link-container, .pink-bluegrey .mat-tab-group.mat-background-accent > .mat-tab-header-pagination, .pink-bluegrey .mat-tab-nav-bar.mat-background-accent > .mat-tab-header, .pink-bluegrey .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container, .pink-bluegrey .mat-tab-nav-bar.mat-background-accent > .mat-tab-header-pagination {\n  background-color: #b0bec5;\n}\n.pink-bluegrey .mat-tab-group.mat-background-accent > .mat-tab-header .mat-tab-label, .pink-bluegrey .mat-tab-group.mat-background-accent > .mat-tab-link-container .mat-tab-link, .pink-bluegrey .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-tab-label, .pink-bluegrey .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container .mat-tab-link {\n  color: rgba(0, 0, 0, 0.87);\n}\n.pink-bluegrey .mat-tab-group.mat-background-accent > .mat-tab-header .mat-tab-label.mat-tab-disabled, .pink-bluegrey .mat-tab-group.mat-background-accent > .mat-tab-link-container .mat-tab-link.mat-tab-disabled, .pink-bluegrey .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-tab-label.mat-tab-disabled, .pink-bluegrey .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container .mat-tab-link.mat-tab-disabled {\n  color: rgba(0, 0, 0, 0.4);\n}\n.pink-bluegrey .mat-tab-group.mat-background-accent > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.pink-bluegrey .mat-tab-group.mat-background-accent > .mat-tab-links .mat-focus-indicator::before,\n.pink-bluegrey .mat-tab-group.mat-background-accent > .mat-tab-header .mat-focus-indicator::before, .pink-bluegrey .mat-tab-nav-bar.mat-background-accent > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.pink-bluegrey .mat-tab-nav-bar.mat-background-accent > .mat-tab-links .mat-focus-indicator::before,\n.pink-bluegrey .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-focus-indicator::before {\n  border-color: rgba(0, 0, 0, 0.87);\n}\n.pink-bluegrey .mat-tab-group.mat-background-accent > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .pink-bluegrey .mat-tab-nav-bar.mat-background-accent > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(0, 0, 0, 0.4);\n}\n.pink-bluegrey .mat-tab-group.mat-background-accent > .mat-tab-header .mat-ripple-element,\n.pink-bluegrey .mat-tab-group.mat-background-accent > .mat-tab-link-container .mat-ripple-element, .pink-bluegrey .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-ripple-element,\n.pink-bluegrey .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container .mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .pink-bluegrey .mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .pink-bluegrey .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .pink-bluegrey .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.pink-bluegrey .mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 205, 210, 0.3);\n}\n.pink-bluegrey .mat-tab-group.mat-background-warn > .mat-tab-header, .pink-bluegrey .mat-tab-group.mat-background-warn > .mat-tab-link-container, .pink-bluegrey .mat-tab-group.mat-background-warn > .mat-tab-header-pagination, .pink-bluegrey .mat-tab-nav-bar.mat-background-warn > .mat-tab-header, .pink-bluegrey .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container, .pink-bluegrey .mat-tab-nav-bar.mat-background-warn > .mat-tab-header-pagination {\n  background-color: #f44336;\n}\n.pink-bluegrey .mat-tab-group.mat-background-warn > .mat-tab-header .mat-tab-label, .pink-bluegrey .mat-tab-group.mat-background-warn > .mat-tab-link-container .mat-tab-link, .pink-bluegrey .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-tab-label, .pink-bluegrey .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container .mat-tab-link {\n  color: white;\n}\n.pink-bluegrey .mat-tab-group.mat-background-warn > .mat-tab-header .mat-tab-label.mat-tab-disabled, .pink-bluegrey .mat-tab-group.mat-background-warn > .mat-tab-link-container .mat-tab-link.mat-tab-disabled, .pink-bluegrey .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-tab-label.mat-tab-disabled, .pink-bluegrey .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\n.pink-bluegrey .mat-tab-group.mat-background-warn > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.pink-bluegrey .mat-tab-group.mat-background-warn > .mat-tab-links .mat-focus-indicator::before,\n.pink-bluegrey .mat-tab-group.mat-background-warn > .mat-tab-header .mat-focus-indicator::before, .pink-bluegrey .mat-tab-nav-bar.mat-background-warn > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.pink-bluegrey .mat-tab-nav-bar.mat-background-warn > .mat-tab-links .mat-focus-indicator::before,\n.pink-bluegrey .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-focus-indicator::before {\n  border-color: white;\n}\n.pink-bluegrey .mat-tab-group.mat-background-warn > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .pink-bluegrey .mat-tab-nav-bar.mat-background-warn > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.4);\n}\n.pink-bluegrey .mat-tab-group.mat-background-warn > .mat-tab-header .mat-ripple-element,\n.pink-bluegrey .mat-tab-group.mat-background-warn > .mat-tab-link-container .mat-ripple-element, .pink-bluegrey .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-ripple-element,\n.pink-bluegrey .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.pink-bluegrey .mat-toolbar {\n  background: #212121;\n  color: white;\n}\n.pink-bluegrey .mat-toolbar.mat-primary {\n  background: #e91e63;\n  color: white;\n}\n.pink-bluegrey .mat-toolbar.mat-accent {\n  background: #b0bec5;\n  color: rgba(0, 0, 0, 0.87);\n}\n.pink-bluegrey .mat-toolbar.mat-warn {\n  background: #f44336;\n  color: white;\n}\n.pink-bluegrey .mat-toolbar .mat-form-field-underline,\n.pink-bluegrey .mat-toolbar .mat-form-field-ripple,\n.pink-bluegrey .mat-toolbar .mat-focused .mat-form-field-ripple {\n  background-color: currentColor;\n}\n.pink-bluegrey .mat-toolbar .mat-form-field-label,\n.pink-bluegrey .mat-toolbar .mat-focused .mat-form-field-label,\n.pink-bluegrey .mat-toolbar .mat-select-value,\n.pink-bluegrey .mat-toolbar .mat-select-arrow,\n.pink-bluegrey .mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\n  color: inherit;\n}\n.pink-bluegrey .mat-toolbar .mat-input-element {\n  caret-color: currentColor;\n}\n.pink-bluegrey .mat-tooltip {\n  background: rgba(97, 97, 97, 0.9);\n}\n.pink-bluegrey .mat-tree {\n  background: #424242;\n}\n.pink-bluegrey .mat-tree-node,\n.pink-bluegrey .mat-nested-tree-node {\n  color: white;\n}\n.pink-bluegrey .mat-snack-bar-container {\n  color: rgba(0, 0, 0, 0.87);\n  background: #fafafa;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.pink-bluegrey .mat-simple-snackbar-action {\n  color: inherit;\n}\n.purple-green table.app-table {\n  color: white;\n}\n.purple-green table.app-table th {\n  background: #212121;\n}\n.purple-green table.app-table td {\n  border: 1px solid rgba(255, 255, 255, 0.08);\n}\n.purple-green .hljs {\n  display: block;\n  overflow-x: auto;\n  padding: 1em;\n  background: #2b2b2d;\n  color: #cdd3d8;\n  -webkit-font-smoothing: antialiased;\n  -webkit-text-size-adjust: 100%;\n     -moz-text-size-adjust: 100%;\n          text-size-adjust: 100%;\n  font: 300 100%/1 Roboto Mono, monospace;\n  font-size: 14px;\n}\n.purple-green .hljs > *::-moz-selection {\n  background-color: #3e4451;\n}\n.purple-green .hljs > *::selection {\n  background-color: #3e4451;\n}\n.purple-green .hljs-comment {\n  color: #656565;\n  font-style: italic;\n}\n.purple-green .hljs-selector-tag {\n  color: #c792ea;\n}\n.purple-green .hljs-string,\n.purple-green .hljs-subst {\n  color: #9ccc65;\n}\n.purple-green .hljs-number,\n.purple-green .hljs-regexp,\n.purple-green .hljs-variable,\n.purple-green .hljs-template-variable {\n  color: #f77669;\n}\n.purple-green .hljs-keyword {\n  color: #c792ea;\n}\n.purple-green .hljs-function > .hljs-title {\n  color: #75a5ff;\n}\n.purple-green .hljs-tag {\n  color: #ce93d8;\n}\n.purple-green .hljs-name {\n  color: #4dd0e1;\n}\n.purple-green .hljs-type {\n  color: #da4939;\n}\n.purple-green .hljs-attribute {\n  color: #80cbbf;\n}\n.purple-green .hljs-symbol,\n.purple-green .hljs-bullet,\n.purple-green .hljs-built_in,\n.purple-green .hljs-builtin-name,\n.purple-green .hljs-link {\n  color: #c792ea;\n}\n.purple-green .hljs-params {\n  color: #eefff7;\n}\n.purple-green .hljs-meta {\n  color: #75a5ff;\n}\n.purple-green .hljs-title {\n  color: #75a5ff;\n}\n.purple-green .hljs-section {\n  color: #ffc66d;\n}\n.purple-green .hljs-addition {\n  background-color: #144212;\n  color: #e6e1dc;\n  display: inline-block;\n  width: 100%;\n}\n.purple-green .hljs-deletion {\n  background-color: #600;\n  color: #e6e1dc;\n  display: inline-block;\n  width: 100%;\n}\n.purple-green .hljs-selector-class {\n  color: #ffcb68;\n}\n.purple-green .hljs-selector-id {\n  color: #f77669;\n}\n.purple-green .hljs-emphasis {\n  font-style: italic;\n}\n.purple-green .hljs-strong {\n  font-weight: bold;\n}\n.purple-green .hljs-link {\n  text-decoration: underline;\n}\n.purple-green .active-link {\n  color: #69f0ae !important;\n  background-color: #595959 !important;\n}\n.purple-green .active-link mat-icon {\n  color: #69f0ae !important;\n}\n.purple-green .warning-icon {\n  color: #f44336 !important;\n}\n.purple-green a.anchor-link {\n  color: #ce93d8;\n  text-decoration: none;\n}\n.purple-green a.anchor-link:hover {\n  text-decoration: underline;\n}\n.purple-green .mat-list-item-content mat-icon,\n.purple-green .icon {\n  color: white;\n}\n.purple-green .onboarding-content {\n  color: #FFF;\n}\n.purple-green .onboarding-card {\n  background-color: #303030;\n}\n.purple-green .indicator-active {\n  background-color: #69f0ae !important;\n}\n.purple-green .indicator {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .badge {\n  color: white;\n  background-color: #616161;\n}\n.purple-green .badge.badge--colored {\n  background-color: #69f0ae;\n  color: rgba(0, 0, 0, 0.87);\n}\n.purple-green .badge.badge--primary {\n  background-color: #9c27b0;\n  color: white;\n}\n.purple-green .badge.badge--accent {\n  background-color: #69f0ae;\n  color: rgba(0, 0, 0, 0.87);\n}\n.purple-green .badge.badge--warn {\n  background-color: #f44336;\n  color: white;\n}\n.purple-green .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.purple-green .mat-option {\n  color: white;\n}\n.purple-green .mat-option:hover:not(.mat-option-disabled), .purple-green .mat-option:focus:not(.mat-option-disabled) {\n  background: rgba(255, 255, 255, 0.04);\n}\n.purple-green .mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n  background: rgba(255, 255, 255, 0.04);\n}\n.purple-green .mat-option.mat-active {\n  background: rgba(255, 255, 255, 0.04);\n  color: white;\n}\n.purple-green .mat-option.mat-option-disabled {\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #9c27b0;\n}\n.purple-green .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #69f0ae;\n}\n.purple-green .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #f44336;\n}\n.purple-green .mat-optgroup-label {\n  color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-optgroup-disabled .mat-optgroup-label {\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-pseudo-checkbox {\n  color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-pseudo-checkbox::after {\n  color: #303030;\n}\n.purple-green .mat-pseudo-checkbox-disabled {\n  color: #686868;\n}\n.purple-green .mat-primary .mat-pseudo-checkbox-checked,\n.purple-green .mat-primary .mat-pseudo-checkbox-indeterminate {\n  background: #9c27b0;\n}\n.purple-green .mat-pseudo-checkbox-checked,\n.purple-green .mat-pseudo-checkbox-indeterminate,\n.purple-green .mat-accent .mat-pseudo-checkbox-checked,\n.purple-green .mat-accent .mat-pseudo-checkbox-indeterminate {\n  background: #69f0ae;\n}\n.purple-green .mat-warn .mat-pseudo-checkbox-checked,\n.purple-green .mat-warn .mat-pseudo-checkbox-indeterminate {\n  background: #f44336;\n}\n.purple-green .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,\n.purple-green .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled {\n  background: #686868;\n}\n.purple-green .mat-app-background, .purple-green.mat-app-background {\n  background-color: #303030;\n  color: white;\n}\n.purple-green .mat-elevation-z0 {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z1 {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z2 {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z3 {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z4 {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z5 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z6 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z7 {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z8 {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z9 {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z10 {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z11 {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z12 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z13 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z14 {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z15 {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z16 {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z17 {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z18 {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z19 {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z20 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z21 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z22 {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z23 {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-elevation-z24 {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.mat-theme-loaded-marker {\n  display: none;\n}\n.purple-green .mat-autocomplete-panel {\n  background: #424242;\n  color: white;\n}\n.purple-green .mat-autocomplete-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover) {\n  background: #424242;\n}\n.purple-green .mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled) {\n  color: white;\n}\n.purple-green .mat-badge-content {\n  color: white;\n  background: #9c27b0;\n}\n.cdk-high-contrast-active .purple-green .mat-badge-content {\n  outline: solid 1px;\n  border-radius: 0;\n}\n.purple-green .mat-badge-accent .mat-badge-content {\n  background: #69f0ae;\n  color: rgba(0, 0, 0, 0.87);\n}\n.purple-green .mat-badge-warn .mat-badge-content {\n  color: white;\n  background: #f44336;\n}\n.purple-green .mat-badge {\n  position: relative;\n}\n.purple-green .mat-badge-hidden .mat-badge-content {\n  display: none;\n}\n.purple-green .mat-badge-disabled .mat-badge-content {\n  background: #6e6e6e;\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-badge-content {\n  position: absolute;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  transition: transform 200ms ease-in-out;\n  transform: scale(0.6);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n}\n.purple-green .ng-animate-disabled .mat-badge-content,\n.purple-green .mat-badge-content._mat-animation-noopable {\n  transition: none;\n}\n.purple-green .mat-badge-content.mat-badge-active {\n  transform: none;\n}\n.purple-green .mat-badge-small .mat-badge-content {\n  width: 16px;\n  height: 16px;\n  line-height: 16px;\n}\n.purple-green .mat-badge-small.mat-badge-above .mat-badge-content {\n  top: -8px;\n}\n.purple-green .mat-badge-small.mat-badge-below .mat-badge-content {\n  bottom: -8px;\n}\n.purple-green .mat-badge-small.mat-badge-before .mat-badge-content {\n  left: -16px;\n}\n[dir=rtl] .purple-green .mat-badge-small.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -16px;\n}\n.purple-green .mat-badge-small.mat-badge-after .mat-badge-content {\n  right: -16px;\n}\n[dir=rtl] .purple-green .mat-badge-small.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -16px;\n}\n.purple-green .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -8px;\n}\n[dir=rtl] .purple-green .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -8px;\n}\n.purple-green .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -8px;\n}\n[dir=rtl] .purple-green .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -8px;\n}\n.purple-green .mat-badge-medium .mat-badge-content {\n  width: 22px;\n  height: 22px;\n  line-height: 22px;\n}\n.purple-green .mat-badge-medium.mat-badge-above .mat-badge-content {\n  top: -11px;\n}\n.purple-green .mat-badge-medium.mat-badge-below .mat-badge-content {\n  bottom: -11px;\n}\n.purple-green .mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: -22px;\n}\n[dir=rtl] .purple-green .mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -22px;\n}\n.purple-green .mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: -22px;\n}\n[dir=rtl] .purple-green .mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -22px;\n}\n.purple-green .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -11px;\n}\n[dir=rtl] .purple-green .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -11px;\n}\n.purple-green .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -11px;\n}\n[dir=rtl] .purple-green .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -11px;\n}\n.purple-green .mat-badge-large .mat-badge-content {\n  width: 28px;\n  height: 28px;\n  line-height: 28px;\n}\n.purple-green .mat-badge-large.mat-badge-above .mat-badge-content {\n  top: -14px;\n}\n.purple-green .mat-badge-large.mat-badge-below .mat-badge-content {\n  bottom: -14px;\n}\n.purple-green .mat-badge-large.mat-badge-before .mat-badge-content {\n  left: -28px;\n}\n[dir=rtl] .purple-green .mat-badge-large.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -28px;\n}\n.purple-green .mat-badge-large.mat-badge-after .mat-badge-content {\n  right: -28px;\n}\n[dir=rtl] .purple-green .mat-badge-large.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -28px;\n}\n.purple-green .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -14px;\n}\n[dir=rtl] .purple-green .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -14px;\n}\n.purple-green .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -14px;\n}\n[dir=rtl] .purple-green .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -14px;\n}\n.purple-green .mat-bottom-sheet-container {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: #424242;\n  color: white;\n}\n.purple-green .mat-button, .purple-green .mat-icon-button, .purple-green .mat-stroked-button {\n  color: inherit;\n  background: transparent;\n}\n.purple-green .mat-button.mat-primary, .purple-green .mat-icon-button.mat-primary, .purple-green .mat-stroked-button.mat-primary {\n  color: #9c27b0;\n}\n.purple-green .mat-button.mat-accent, .purple-green .mat-icon-button.mat-accent, .purple-green .mat-stroked-button.mat-accent {\n  color: #69f0ae;\n}\n.purple-green .mat-button.mat-warn, .purple-green .mat-icon-button.mat-warn, .purple-green .mat-stroked-button.mat-warn {\n  color: #f44336;\n}\n.purple-green .mat-button.mat-primary.mat-button-disabled, .purple-green .mat-button.mat-accent.mat-button-disabled, .purple-green .mat-button.mat-warn.mat-button-disabled, .purple-green .mat-button.mat-button-disabled.mat-button-disabled, .purple-green .mat-icon-button.mat-primary.mat-button-disabled, .purple-green .mat-icon-button.mat-accent.mat-button-disabled, .purple-green .mat-icon-button.mat-warn.mat-button-disabled, .purple-green .mat-icon-button.mat-button-disabled.mat-button-disabled, .purple-green .mat-stroked-button.mat-primary.mat-button-disabled, .purple-green .mat-stroked-button.mat-accent.mat-button-disabled, .purple-green .mat-stroked-button.mat-warn.mat-button-disabled, .purple-green .mat-stroked-button.mat-button-disabled.mat-button-disabled {\n  color: rgba(255, 255, 255, 0.3);\n}\n.purple-green .mat-button.mat-primary .mat-button-focus-overlay, .purple-green .mat-icon-button.mat-primary .mat-button-focus-overlay, .purple-green .mat-stroked-button.mat-primary .mat-button-focus-overlay {\n  background-color: #9c27b0;\n}\n.purple-green .mat-button.mat-accent .mat-button-focus-overlay, .purple-green .mat-icon-button.mat-accent .mat-button-focus-overlay, .purple-green .mat-stroked-button.mat-accent .mat-button-focus-overlay {\n  background-color: #69f0ae;\n}\n.purple-green .mat-button.mat-warn .mat-button-focus-overlay, .purple-green .mat-icon-button.mat-warn .mat-button-focus-overlay, .purple-green .mat-stroked-button.mat-warn .mat-button-focus-overlay {\n  background-color: #f44336;\n}\n.purple-green .mat-button.mat-button-disabled .mat-button-focus-overlay, .purple-green .mat-icon-button.mat-button-disabled .mat-button-focus-overlay, .purple-green .mat-stroked-button.mat-button-disabled .mat-button-focus-overlay {\n  background-color: transparent;\n}\n.purple-green .mat-button .mat-ripple-element, .purple-green .mat-icon-button .mat-ripple-element, .purple-green .mat-stroked-button .mat-ripple-element {\n  opacity: 0.1;\n  background-color: currentColor;\n}\n.purple-green .mat-button-focus-overlay {\n  background: white;\n}\n.purple-green .mat-stroked-button:not(.mat-button-disabled) {\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.purple-green .mat-flat-button, .purple-green .mat-raised-button, .purple-green .mat-fab, .purple-green .mat-mini-fab {\n  color: white;\n  background-color: #424242;\n}\n.purple-green .mat-flat-button.mat-primary, .purple-green .mat-raised-button.mat-primary, .purple-green .mat-fab.mat-primary, .purple-green .mat-mini-fab.mat-primary {\n  color: white;\n}\n.purple-green .mat-flat-button.mat-accent, .purple-green .mat-raised-button.mat-accent, .purple-green .mat-fab.mat-accent, .purple-green .mat-mini-fab.mat-accent {\n  color: rgba(0, 0, 0, 0.87);\n}\n.purple-green .mat-flat-button.mat-warn, .purple-green .mat-raised-button.mat-warn, .purple-green .mat-fab.mat-warn, .purple-green .mat-mini-fab.mat-warn {\n  color: white;\n}\n.purple-green .mat-flat-button.mat-primary.mat-button-disabled, .purple-green .mat-flat-button.mat-accent.mat-button-disabled, .purple-green .mat-flat-button.mat-warn.mat-button-disabled, .purple-green .mat-flat-button.mat-button-disabled.mat-button-disabled, .purple-green .mat-raised-button.mat-primary.mat-button-disabled, .purple-green .mat-raised-button.mat-accent.mat-button-disabled, .purple-green .mat-raised-button.mat-warn.mat-button-disabled, .purple-green .mat-raised-button.mat-button-disabled.mat-button-disabled, .purple-green .mat-fab.mat-primary.mat-button-disabled, .purple-green .mat-fab.mat-accent.mat-button-disabled, .purple-green .mat-fab.mat-warn.mat-button-disabled, .purple-green .mat-fab.mat-button-disabled.mat-button-disabled, .purple-green .mat-mini-fab.mat-primary.mat-button-disabled, .purple-green .mat-mini-fab.mat-accent.mat-button-disabled, .purple-green .mat-mini-fab.mat-warn.mat-button-disabled, .purple-green .mat-mini-fab.mat-button-disabled.mat-button-disabled {\n  color: rgba(255, 255, 255, 0.3);\n}\n.purple-green .mat-flat-button.mat-primary, .purple-green .mat-raised-button.mat-primary, .purple-green .mat-fab.mat-primary, .purple-green .mat-mini-fab.mat-primary {\n  background-color: #9c27b0;\n}\n.purple-green .mat-flat-button.mat-accent, .purple-green .mat-raised-button.mat-accent, .purple-green .mat-fab.mat-accent, .purple-green .mat-mini-fab.mat-accent {\n  background-color: #69f0ae;\n}\n.purple-green .mat-flat-button.mat-warn, .purple-green .mat-raised-button.mat-warn, .purple-green .mat-fab.mat-warn, .purple-green .mat-mini-fab.mat-warn {\n  background-color: #f44336;\n}\n.purple-green .mat-flat-button.mat-primary.mat-button-disabled, .purple-green .mat-flat-button.mat-accent.mat-button-disabled, .purple-green .mat-flat-button.mat-warn.mat-button-disabled, .purple-green .mat-flat-button.mat-button-disabled.mat-button-disabled, .purple-green .mat-raised-button.mat-primary.mat-button-disabled, .purple-green .mat-raised-button.mat-accent.mat-button-disabled, .purple-green .mat-raised-button.mat-warn.mat-button-disabled, .purple-green .mat-raised-button.mat-button-disabled.mat-button-disabled, .purple-green .mat-fab.mat-primary.mat-button-disabled, .purple-green .mat-fab.mat-accent.mat-button-disabled, .purple-green .mat-fab.mat-warn.mat-button-disabled, .purple-green .mat-fab.mat-button-disabled.mat-button-disabled, .purple-green .mat-mini-fab.mat-primary.mat-button-disabled, .purple-green .mat-mini-fab.mat-accent.mat-button-disabled, .purple-green .mat-mini-fab.mat-warn.mat-button-disabled, .purple-green .mat-mini-fab.mat-button-disabled.mat-button-disabled {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.purple-green .mat-flat-button.mat-primary .mat-ripple-element, .purple-green .mat-raised-button.mat-primary .mat-ripple-element, .purple-green .mat-fab.mat-primary .mat-ripple-element, .purple-green .mat-mini-fab.mat-primary .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.purple-green .mat-flat-button.mat-accent .mat-ripple-element, .purple-green .mat-raised-button.mat-accent .mat-ripple-element, .purple-green .mat-fab.mat-accent .mat-ripple-element, .purple-green .mat-mini-fab.mat-accent .mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.purple-green .mat-flat-button.mat-warn .mat-ripple-element, .purple-green .mat-raised-button.mat-warn .mat-ripple-element, .purple-green .mat-fab.mat-warn .mat-ripple-element, .purple-green .mat-mini-fab.mat-warn .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.purple-green .mat-stroked-button:not([class*=mat-elevation-z]), .purple-green .mat-flat-button:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-raised-button:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-raised-button:not(.mat-button-disabled):active:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-raised-button.mat-button-disabled:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-fab:not([class*=mat-elevation-z]), .purple-green .mat-mini-fab:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]), .purple-green .mat-mini-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-fab.mat-button-disabled:not([class*=mat-elevation-z]), .purple-green .mat-mini-fab.mat-button-disabled:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-button-toggle-standalone,\n.purple-green .mat-button-toggle-group {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n.purple-green .mat-button-toggle-group-appearance-standard {\n  box-shadow: none;\n}\n.purple-green .mat-button-toggle {\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-button-toggle .mat-button-toggle-focus-overlay {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.purple-green .mat-button-toggle-appearance-standard {\n  color: white;\n  background: #424242;\n}\n.purple-green .mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay {\n  background-color: white;\n}\n.purple-green .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n}\n.purple-green [dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n.purple-green .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px rgba(255, 255, 255, 0.12);\n}\n.purple-green .mat-button-toggle-checked {\n  background-color: #212121;\n  color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-button-toggle-checked.mat-button-toggle-appearance-standard {\n  color: white;\n}\n.purple-green .mat-button-toggle-disabled {\n  color: rgba(255, 255, 255, 0.3);\n  background-color: black;\n}\n.purple-green .mat-button-toggle-disabled.mat-button-toggle-appearance-standard {\n  background: #424242;\n}\n.purple-green .mat-button-toggle-disabled.mat-button-toggle-checked {\n  background-color: #424242;\n}\n.purple-green .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n.purple-green .mat-button-toggle-group-appearance-standard {\n  border: solid 1px rgba(255, 255, 255, 0.12);\n}\n.purple-green .mat-card {\n  background: #424242;\n  color: white;\n}\n.purple-green .mat-card:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-card.mat-card-flat:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-card-subtitle {\n  color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-checkbox-frame {\n  border-color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-checkbox-checkmark {\n  fill: #303030;\n}\n.purple-green .mat-checkbox-checkmark-path {\n  stroke: #303030 !important;\n}\n.purple-green .mat-checkbox-mixedmark {\n  background-color: #303030;\n}\n.purple-green .mat-checkbox-indeterminate.mat-primary .mat-checkbox-background, .purple-green .mat-checkbox-checked.mat-primary .mat-checkbox-background {\n  background-color: #9c27b0;\n}\n.purple-green .mat-checkbox-indeterminate.mat-accent .mat-checkbox-background, .purple-green .mat-checkbox-checked.mat-accent .mat-checkbox-background {\n  background-color: #69f0ae;\n}\n.purple-green .mat-checkbox-indeterminate.mat-warn .mat-checkbox-background, .purple-green .mat-checkbox-checked.mat-warn .mat-checkbox-background {\n  background-color: #f44336;\n}\n.purple-green .mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background, .purple-green .mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background {\n  background-color: #686868;\n}\n.purple-green .mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame {\n  border-color: #686868;\n}\n.purple-green .mat-checkbox-disabled .mat-checkbox-label {\n  color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-checkbox .mat-ripple-element {\n  background-color: white;\n}\n.purple-green .mat-checkbox-checked:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element,\n.purple-green .mat-checkbox:active:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element {\n  background: #9c27b0;\n}\n.purple-green .mat-checkbox-checked:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element,\n.purple-green .mat-checkbox:active:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element {\n  background: #69f0ae;\n}\n.purple-green .mat-checkbox-checked:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element,\n.purple-green .mat-checkbox:active:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element {\n  background: #f44336;\n}\n.purple-green .mat-chip.mat-standard-chip {\n  background-color: #616161;\n  color: white;\n}\n.purple-green .mat-chip.mat-standard-chip .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.purple-green .mat-chip.mat-standard-chip:not(.mat-chip-disabled):active {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover {\n  opacity: 0.54;\n}\n.purple-green .mat-chip.mat-standard-chip.mat-chip-disabled {\n  opacity: 0.4;\n}\n.purple-green .mat-chip.mat-standard-chip::after {\n  background: white;\n}\n.purple-green .mat-chip.mat-standard-chip.mat-chip-selected.mat-primary {\n  background-color: #9c27b0;\n  color: white;\n}\n.purple-green .mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.purple-green .mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.purple-green .mat-chip.mat-standard-chip.mat-chip-selected.mat-warn {\n  background-color: #f44336;\n  color: white;\n}\n.purple-green .mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.purple-green .mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.purple-green .mat-chip.mat-standard-chip.mat-chip-selected.mat-accent {\n  background-color: #69f0ae;\n  color: rgba(0, 0, 0, 0.87);\n}\n.purple-green .mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove {\n  color: rgba(0, 0, 0, 0.87);\n  opacity: 0.4;\n}\n.purple-green .mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.purple-green .mat-table {\n  background: #424242;\n}\n.purple-green .mat-table thead, .purple-green .mat-table tbody, .purple-green .mat-table tfoot,\n.purple-green mat-header-row, .purple-green mat-row, .purple-green mat-footer-row,\n.purple-green [mat-header-row], .purple-green [mat-row], .purple-green [mat-footer-row],\n.purple-green .mat-table-sticky {\n  background: inherit;\n}\n.purple-green mat-row, .purple-green mat-header-row, .purple-green mat-footer-row,\n.purple-green th.mat-header-cell, .purple-green td.mat-cell, .purple-green td.mat-footer-cell {\n  border-bottom-color: rgba(255, 255, 255, 0.12);\n}\n.purple-green .mat-header-cell {\n  color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-cell, .purple-green .mat-footer-cell {\n  color: white;\n}\n.purple-green .mat-calendar-arrow {\n  border-top-color: white;\n}\n.purple-green .mat-datepicker-toggle,\n.purple-green .mat-datepicker-content .mat-calendar-next-button,\n.purple-green .mat-datepicker-content .mat-calendar-previous-button {\n  color: white;\n}\n.purple-green .mat-calendar-table-header {\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-calendar-table-header-divider::after {\n  background: rgba(255, 255, 255, 0.12);\n}\n.purple-green .mat-calendar-body-label {\n  color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-calendar-body-cell-content,\n.purple-green .mat-date-range-input-separator {\n  color: white;\n  border-color: transparent;\n}\n.purple-green .mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-form-field-disabled .mat-date-range-input-separator {\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-calendar-body-in-preview {\n  color: rgba(255, 255, 255, 0.24);\n}\n.purple-green .mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.3);\n}\n.purple-green .mat-calendar-body-in-range::before {\n  background: rgba(156, 39, 176, 0.2);\n}\n.purple-green .mat-calendar-body-comparison-identical,\n.purple-green .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.purple-green .mat-calendar-body-comparison-bridge-start::before,\n.purple-green [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(156, 39, 176, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.purple-green .mat-calendar-body-comparison-bridge-end::before,\n.purple-green [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(156, 39, 176, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.purple-green .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.purple-green .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.purple-green .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.purple-green .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.purple-green .mat-calendar-body-selected {\n  background-color: #9c27b0;\n  color: white;\n}\n.purple-green .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(156, 39, 176, 0.4);\n}\n.purple-green .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\n.purple-green .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.purple-green .cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.purple-green .cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(156, 39, 176, 0.3);\n}\n.purple-green .mat-datepicker-content {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: #424242;\n  color: white;\n}\n.purple-green .mat-datepicker-content.mat-accent .mat-calendar-body-in-range::before {\n  background: rgba(105, 240, 174, 0.2);\n}\n.purple-green .mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical,\n.purple-green .mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.purple-green .mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-start::before,\n.purple-green .mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(105, 240, 174, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.purple-green .mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-end::before,\n.purple-green .mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(105, 240, 174, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.purple-green .mat-datepicker-content.mat-accent .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.purple-green .mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.purple-green .mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.purple-green .mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.purple-green .mat-datepicker-content.mat-accent .mat-calendar-body-selected {\n  background-color: #69f0ae;\n  color: rgba(0, 0, 0, 0.87);\n}\n.purple-green .mat-datepicker-content.mat-accent .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(105, 240, 174, 0.4);\n}\n.purple-green .mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.87);\n}\n.purple-green .mat-datepicker-content.mat-accent .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.purple-green .mat-datepicker-content.mat-accent .cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.purple-green .mat-datepicker-content.mat-accent .cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(105, 240, 174, 0.3);\n}\n.purple-green .mat-datepicker-content.mat-warn .mat-calendar-body-in-range::before {\n  background: rgba(244, 67, 54, 0.2);\n}\n.purple-green .mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical,\n.purple-green .mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.purple-green .mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-start::before,\n.purple-green .mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.purple-green .mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-end::before,\n.purple-green .mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.purple-green .mat-datepicker-content.mat-warn .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.purple-green .mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.purple-green .mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.purple-green .mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.purple-green .mat-datepicker-content.mat-warn .mat-calendar-body-selected {\n  background-color: #f44336;\n  color: white;\n}\n.purple-green .mat-datepicker-content.mat-warn .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(244, 67, 54, 0.4);\n}\n.purple-green .mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\n.purple-green .mat-datepicker-content.mat-warn .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.purple-green .mat-datepicker-content.mat-warn .cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.purple-green .mat-datepicker-content.mat-warn .cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(244, 67, 54, 0.3);\n}\n.purple-green .mat-datepicker-content-touch {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-datepicker-toggle-active {\n  color: #9c27b0;\n}\n.purple-green .mat-datepicker-toggle-active.mat-accent {\n  color: #69f0ae;\n}\n.purple-green .mat-datepicker-toggle-active.mat-warn {\n  color: #f44336;\n}\n.purple-green .mat-date-range-input-inner[disabled] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-dialog-container {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n  background: #424242;\n  color: white;\n}\n.purple-green .mat-divider {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n.purple-green .mat-divider-vertical {\n  border-right-color: rgba(255, 255, 255, 0.12);\n}\n.purple-green .mat-expansion-panel {\n  background: #424242;\n  color: white;\n}\n.purple-green .mat-expansion-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-action-row {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n.purple-green .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]), .purple-green .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]), .purple-green .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]) {\n  background: rgba(255, 255, 255, 0.04);\n}\n@media (hover: none) {\n  .purple-green .mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover {\n    background: #424242;\n  }\n}\n.purple-green .mat-expansion-panel-header-title {\n  color: white;\n}\n.purple-green .mat-expansion-panel-header-description,\n.purple-green .mat-expansion-indicator::after {\n  color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-expansion-panel-header[aria-disabled=true] {\n  color: rgba(255, 255, 255, 0.3);\n}\n.purple-green .mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,\n.purple-green .mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description {\n  color: inherit;\n}\n.purple-green .mat-form-field-label {\n  color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-hint {\n  color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-form-field.mat-focused .mat-form-field-label {\n  color: #9c27b0;\n}\n.purple-green .mat-form-field.mat-focused .mat-form-field-label.mat-accent {\n  color: #69f0ae;\n}\n.purple-green .mat-form-field.mat-focused .mat-form-field-label.mat-warn {\n  color: #f44336;\n}\n.purple-green .mat-focused .mat-form-field-required-marker {\n  color: #69f0ae;\n}\n.purple-green .mat-form-field-ripple {\n  background-color: white;\n}\n.purple-green .mat-form-field.mat-focused .mat-form-field-ripple {\n  background-color: #9c27b0;\n}\n.purple-green .mat-form-field.mat-focused .mat-form-field-ripple.mat-accent {\n  background-color: #69f0ae;\n}\n.purple-green .mat-form-field.mat-focused .mat-form-field-ripple.mat-warn {\n  background-color: #f44336;\n}\n.purple-green .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after {\n  color: #9c27b0;\n}\n.purple-green .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after {\n  color: #69f0ae;\n}\n.purple-green .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after {\n  color: #f44336;\n}\n.purple-green .mat-form-field.mat-form-field-invalid .mat-form-field-label {\n  color: #f44336;\n}\n.purple-green .mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent,\n.purple-green .mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker {\n  color: #f44336;\n}\n.purple-green .mat-form-field.mat-form-field-invalid .mat-form-field-ripple,\n.purple-green .mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent {\n  background-color: #f44336;\n}\n.purple-green .mat-error {\n  color: #f44336;\n}\n.purple-green .mat-form-field-appearance-legacy .mat-form-field-label {\n  color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-form-field-appearance-legacy .mat-hint {\n  color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-form-field-appearance-legacy .mat-form-field-underline {\n  background-color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(255, 255, 255, 0.7) 0%, rgba(255, 255, 255, 0.7) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n.purple-green .mat-form-field-appearance-standard .mat-form-field-underline {\n  background-color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(255, 255, 255, 0.7) 0%, rgba(255, 255, 255, 0.7) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n.purple-green .mat-form-field-appearance-fill .mat-form-field-flex {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.purple-green .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n.purple-green .mat-form-field-appearance-fill .mat-form-field-underline::before {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before {\n  background-color: transparent;\n}\n.purple-green .mat-form-field-appearance-outline .mat-form-field-outline {\n  color: rgba(255, 255, 255, 0.3);\n}\n.purple-green .mat-form-field-appearance-outline .mat-form-field-outline-thick {\n  color: white;\n}\n.purple-green .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #9c27b0;\n}\n.purple-green .mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick {\n  color: #69f0ae;\n}\n.purple-green .mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick {\n  color: #f44336;\n}\n.purple-green .mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\n  color: #f44336;\n}\n.purple-green .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\n  color: rgba(255, 255, 255, 0.15);\n}\n.purple-green .mat-icon.mat-primary {\n  color: #9c27b0;\n}\n.purple-green .mat-icon.mat-accent {\n  color: #69f0ae;\n}\n.purple-green .mat-icon.mat-warn {\n  color: #f44336;\n}\n.purple-green .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n  color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-input-element:disabled,\n.purple-green .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-input-element {\n  caret-color: #9c27b0;\n}\n.purple-green .mat-input-element::-moz-placeholder {\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-input-element::placeholder {\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-input-element::-moz-placeholder {\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-input-element::-webkit-input-placeholder {\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-input-element:-ms-input-placeholder {\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-input-element option {\n  color: rgba(0, 0, 0, 0.87);\n}\n.purple-green .mat-input-element option:disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\n.purple-green .mat-form-field.mat-accent .mat-input-element {\n  caret-color: #69f0ae;\n}\n.purple-green .mat-form-field.mat-warn .mat-input-element,\n.purple-green .mat-form-field-invalid .mat-input-element {\n  caret-color: #f44336;\n}\n.purple-green .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n  color: #f44336;\n}\n.purple-green .mat-list-base .mat-list-item {\n  color: white;\n}\n.purple-green .mat-list-base .mat-list-option {\n  color: white;\n}\n.purple-green .mat-list-base .mat-subheader {\n  color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-list-item-disabled {\n  background-color: black;\n}\n.purple-green .mat-list-option:hover, .purple-green .mat-list-option:focus,\n.purple-green .mat-nav-list .mat-list-item:hover,\n.purple-green .mat-nav-list .mat-list-item:focus,\n.purple-green .mat-action-list .mat-list-item:hover,\n.purple-green .mat-action-list .mat-list-item:focus {\n  background: rgba(255, 255, 255, 0.04);\n}\n.purple-green .mat-list-single-selected-option, .purple-green .mat-list-single-selected-option:hover, .purple-green .mat-list-single-selected-option:focus {\n  background: rgba(255, 255, 255, 0.12);\n}\n.purple-green .mat-menu-panel {\n  background: #424242;\n}\n.purple-green .mat-menu-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-menu-item {\n  background: transparent;\n  color: white;\n}\n.purple-green .mat-menu-item[disabled], .purple-green .mat-menu-item[disabled]::after,\n.purple-green .mat-menu-item[disabled] .mat-icon-no-color {\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-menu-item .mat-icon-no-color,\n.purple-green .mat-menu-item-submenu-trigger::after {\n  color: white;\n}\n.purple-green .mat-menu-item:hover:not([disabled]),\n.purple-green .mat-menu-item.cdk-program-focused:not([disabled]),\n.purple-green .mat-menu-item.cdk-keyboard-focused:not([disabled]),\n.purple-green .mat-menu-item-highlighted:not([disabled]) {\n  background: rgba(255, 255, 255, 0.04);\n}\n.purple-green .mat-paginator {\n  background: #424242;\n}\n.purple-green .mat-paginator,\n.purple-green .mat-paginator-page-size .mat-select-trigger {\n  color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-paginator-decrement,\n.purple-green .mat-paginator-increment {\n  border-top: 2px solid white;\n  border-right: 2px solid white;\n}\n.purple-green .mat-paginator-first,\n.purple-green .mat-paginator-last {\n  border-top: 2px solid white;\n}\n.purple-green .mat-icon-button[disabled] .mat-paginator-decrement,\n.purple-green .mat-icon-button[disabled] .mat-paginator-increment,\n.purple-green .mat-icon-button[disabled] .mat-paginator-first,\n.purple-green .mat-icon-button[disabled] .mat-paginator-last {\n  border-color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-progress-bar-background {\n  fill: #e1bee7;\n}\n.purple-green .mat-progress-bar-buffer {\n  background-color: #e1bee7;\n}\n.purple-green .mat-progress-bar-fill::after {\n  background-color: #9c27b0;\n}\n.purple-green .mat-progress-bar.mat-accent .mat-progress-bar-background {\n  fill: #b9f6ca;\n}\n.purple-green .mat-progress-bar.mat-accent .mat-progress-bar-buffer {\n  background-color: #b9f6ca;\n}\n.purple-green .mat-progress-bar.mat-accent .mat-progress-bar-fill::after {\n  background-color: #69f0ae;\n}\n.purple-green .mat-progress-bar.mat-warn .mat-progress-bar-background {\n  fill: #ffcdd2;\n}\n.purple-green .mat-progress-bar.mat-warn .mat-progress-bar-buffer {\n  background-color: #ffcdd2;\n}\n.purple-green .mat-progress-bar.mat-warn .mat-progress-bar-fill::after {\n  background-color: #f44336;\n}\n.purple-green .mat-progress-spinner circle, .purple-green .mat-spinner circle {\n  stroke: #9c27b0;\n}\n.purple-green .mat-progress-spinner.mat-accent circle, .purple-green .mat-spinner.mat-accent circle {\n  stroke: #69f0ae;\n}\n.purple-green .mat-progress-spinner.mat-warn circle, .purple-green .mat-spinner.mat-warn circle {\n  stroke: #f44336;\n}\n.purple-green .mat-radio-outer-circle {\n  border-color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #9c27b0;\n}\n.purple-green .mat-radio-button.mat-primary .mat-radio-inner-circle,\n.purple-green .mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .purple-green .mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple, .purple-green .mat-radio-button.mat-primary:active .mat-radio-persistent-ripple {\n  background-color: #9c27b0;\n}\n.purple-green .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #69f0ae;\n}\n.purple-green .mat-radio-button.mat-accent .mat-radio-inner-circle,\n.purple-green .mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .purple-green .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple, .purple-green .mat-radio-button.mat-accent:active .mat-radio-persistent-ripple {\n  background-color: #69f0ae;\n}\n.purple-green .mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #f44336;\n}\n.purple-green .mat-radio-button.mat-warn .mat-radio-inner-circle,\n.purple-green .mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .purple-green .mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple, .purple-green .mat-radio-button.mat-warn:active .mat-radio-persistent-ripple {\n  background-color: #f44336;\n}\n.purple-green .mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle,\n.purple-green .mat-radio-button.mat-radio-disabled .mat-radio-outer-circle {\n  border-color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element,\n.purple-green .mat-radio-button.mat-radio-disabled .mat-radio-inner-circle {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-radio-button.mat-radio-disabled .mat-radio-label-content {\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-radio-button .mat-ripple-element {\n  background-color: white;\n}\n.purple-green .mat-select-value {\n  color: white;\n}\n.purple-green .mat-select-placeholder {\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-select-disabled .mat-select-value {\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-select-arrow {\n  color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-select-panel {\n  background: #424242;\n}\n.purple-green .mat-select-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple) {\n  background: rgba(255, 255, 255, 0.12);\n}\n.purple-green .mat-form-field.mat-focused.mat-primary .mat-select-arrow {\n  color: #9c27b0;\n}\n.purple-green .mat-form-field.mat-focused.mat-accent .mat-select-arrow {\n  color: #69f0ae;\n}\n.purple-green .mat-form-field.mat-focused.mat-warn .mat-select-arrow {\n  color: #f44336;\n}\n.purple-green .mat-form-field .mat-select.mat-select-invalid .mat-select-arrow {\n  color: #f44336;\n}\n.purple-green .mat-form-field .mat-select.mat-select-disabled .mat-select-arrow {\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-drawer-container {\n  background-color: #303030;\n  color: white;\n}\n.purple-green .mat-drawer {\n  background-color: #424242;\n  color: white;\n}\n.purple-green .mat-drawer.mat-drawer-push {\n  background-color: #424242;\n}\n.purple-green .mat-drawer:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-drawer-side {\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n.purple-green .mat-drawer-side.mat-drawer-end {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n.purple-green [dir=rtl] .mat-drawer-side {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n.purple-green [dir=rtl] .mat-drawer-side.mat-drawer-end {\n  border-left: none;\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n.purple-green .mat-drawer-backdrop.mat-drawer-shown {\n  background-color: rgba(189, 189, 189, 0.6);\n}\n.purple-green .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb {\n  background-color: #69f0ae;\n}\n.purple-green .mat-slide-toggle.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(105, 240, 174, 0.54);\n}\n.purple-green .mat-slide-toggle.mat-checked .mat-ripple-element {\n  background-color: #69f0ae;\n}\n.purple-green .mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb {\n  background-color: #9c27b0;\n}\n.purple-green .mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(156, 39, 176, 0.54);\n}\n.purple-green .mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element {\n  background-color: #9c27b0;\n}\n.purple-green .mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb {\n  background-color: #f44336;\n}\n.purple-green .mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(244, 67, 54, 0.54);\n}\n.purple-green .mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element {\n  background-color: #f44336;\n}\n.purple-green .mat-slide-toggle:not(.mat-checked) .mat-ripple-element {\n  background-color: white;\n}\n.purple-green .mat-slide-toggle-thumb {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  background-color: #bdbdbd;\n}\n.purple-green .mat-slide-toggle-bar {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-slider-track-background {\n  background-color: rgba(255, 255, 255, 0.3);\n}\n.purple-green .mat-primary .mat-slider-track-fill,\n.purple-green .mat-primary .mat-slider-thumb,\n.purple-green .mat-primary .mat-slider-thumb-label {\n  background-color: #9c27b0;\n}\n.purple-green .mat-primary .mat-slider-thumb-label-text {\n  color: white;\n}\n.purple-green .mat-primary .mat-slider-focus-ring {\n  background-color: rgba(156, 39, 176, 0.2);\n}\n.purple-green .mat-accent .mat-slider-track-fill,\n.purple-green .mat-accent .mat-slider-thumb,\n.purple-green .mat-accent .mat-slider-thumb-label {\n  background-color: #69f0ae;\n}\n.purple-green .mat-accent .mat-slider-thumb-label-text {\n  color: rgba(0, 0, 0, 0.87);\n}\n.purple-green .mat-accent .mat-slider-focus-ring {\n  background-color: rgba(105, 240, 174, 0.2);\n}\n.purple-green .mat-warn .mat-slider-track-fill,\n.purple-green .mat-warn .mat-slider-thumb,\n.purple-green .mat-warn .mat-slider-thumb-label {\n  background-color: #f44336;\n}\n.purple-green .mat-warn .mat-slider-thumb-label-text {\n  color: white;\n}\n.purple-green .mat-warn .mat-slider-focus-ring {\n  background-color: rgba(244, 67, 54, 0.2);\n}\n.purple-green .mat-slider:hover .mat-slider-track-background,\n.purple-green .cdk-focused .mat-slider-track-background {\n  background-color: rgba(255, 255, 255, 0.3);\n}\n.purple-green .mat-slider-disabled .mat-slider-track-background,\n.purple-green .mat-slider-disabled .mat-slider-track-fill,\n.purple-green .mat-slider-disabled .mat-slider-thumb {\n  background-color: rgba(255, 255, 255, 0.3);\n}\n.purple-green .mat-slider-disabled:hover .mat-slider-track-background {\n  background-color: rgba(255, 255, 255, 0.3);\n}\n.purple-green .mat-slider-min-value .mat-slider-focus-ring {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.purple-green .mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,\n.purple-green .mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label {\n  background-color: white;\n}\n.purple-green .mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,\n.purple-green .mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label {\n  background-color: rgba(255, 255, 255, 0.3);\n}\n.purple-green .mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb {\n  border-color: rgba(255, 255, 255, 0.3);\n  background-color: transparent;\n}\n.purple-green .mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb, .purple-green .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb {\n  border-color: rgba(255, 255, 255, 0.3);\n}\n.purple-green .mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb, .purple-green .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb {\n  border-color: rgba(255, 255, 255, 0.3);\n}\n.purple-green .mat-slider-has-ticks .mat-slider-wrapper::after {\n  border-color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-slider-horizontal .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to right, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.7) 2px, transparent 0, transparent);\n  background-image: -moz-repeating-linear-gradient(0.0001deg, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.7) 2px, transparent 0, transparent);\n}\n.purple-green .mat-slider-vertical .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to bottom, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.7) 2px, transparent 0, transparent);\n}\n.purple-green .mat-step-header.cdk-keyboard-focused, .purple-green .mat-step-header.cdk-program-focused, .purple-green .mat-step-header:hover {\n  background-color: rgba(255, 255, 255, 0.04);\n}\n@media (hover: none) {\n  .purple-green .mat-step-header:hover {\n    background: none;\n  }\n}\n.purple-green .mat-step-header .mat-step-label,\n.purple-green .mat-step-header .mat-step-optional {\n  color: rgba(255, 255, 255, 0.7);\n}\n.purple-green .mat-step-header .mat-step-icon {\n  background-color: rgba(255, 255, 255, 0.7);\n  color: white;\n}\n.purple-green .mat-step-header .mat-step-icon-selected,\n.purple-green .mat-step-header .mat-step-icon-state-done,\n.purple-green .mat-step-header .mat-step-icon-state-edit {\n  background-color: #9c27b0;\n  color: white;\n}\n.purple-green .mat-step-header.mat-accent .mat-step-icon {\n  color: rgba(0, 0, 0, 0.87);\n}\n.purple-green .mat-step-header.mat-accent .mat-step-icon-selected,\n.purple-green .mat-step-header.mat-accent .mat-step-icon-state-done,\n.purple-green .mat-step-header.mat-accent .mat-step-icon-state-edit {\n  background-color: #69f0ae;\n  color: rgba(0, 0, 0, 0.87);\n}\n.purple-green .mat-step-header.mat-warn .mat-step-icon {\n  color: white;\n}\n.purple-green .mat-step-header.mat-warn .mat-step-icon-selected,\n.purple-green .mat-step-header.mat-warn .mat-step-icon-state-done,\n.purple-green .mat-step-header.mat-warn .mat-step-icon-state-edit {\n  background-color: #f44336;\n  color: white;\n}\n.purple-green .mat-step-header .mat-step-icon-state-error {\n  background-color: transparent;\n  color: #f44336;\n}\n.purple-green .mat-step-header .mat-step-label.mat-step-label-active {\n  color: white;\n}\n.purple-green .mat-step-header .mat-step-label.mat-step-label-error {\n  color: #f44336;\n}\n.purple-green .mat-stepper-horizontal, .purple-green .mat-stepper-vertical {\n  background-color: #424242;\n}\n.purple-green .mat-stepper-vertical-line::before {\n  border-left-color: rgba(255, 255, 255, 0.12);\n}\n.purple-green .mat-horizontal-stepper-header::before,\n.purple-green .mat-horizontal-stepper-header::after,\n.purple-green .mat-stepper-horizontal-line {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n.purple-green .mat-sort-header-arrow {\n  color: #c6c6c6;\n}\n.purple-green .mat-tab-nav-bar,\n.purple-green .mat-tab-header {\n  border-bottom: 1px solid rgba(255, 255, 255, 0.12);\n}\n.purple-green .mat-tab-group-inverted-header .mat-tab-nav-bar,\n.purple-green .mat-tab-group-inverted-header .mat-tab-header {\n  border-top: 1px solid rgba(255, 255, 255, 0.12);\n  border-bottom: none;\n}\n.purple-green .mat-tab-label, .purple-green .mat-tab-link {\n  color: white;\n}\n.purple-green .mat-tab-label.mat-tab-disabled, .purple-green .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-tab-header-pagination-chevron {\n  border-color: white;\n}\n.purple-green .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.5);\n}\n.purple-green .mat-tab-group[class*=mat-background-] .mat-tab-header,\n.purple-green .mat-tab-nav-bar[class*=mat-background-] {\n  border-bottom: none;\n  border-top: none;\n}\n.purple-green .mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .purple-green .mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .purple-green .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .purple-green .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(225, 190, 231, 0.3);\n}\n.purple-green .mat-tab-group.mat-primary .mat-ink-bar, .purple-green .mat-tab-nav-bar.mat-primary .mat-ink-bar {\n  background-color: #9c27b0;\n}\n.purple-green .mat-tab-group.mat-primary.mat-background-primary > .mat-tab-header .mat-ink-bar, .purple-green .mat-tab-group.mat-primary.mat-background-primary > .mat-tab-link-container .mat-ink-bar, .purple-green .mat-tab-nav-bar.mat-primary.mat-background-primary > .mat-tab-header .mat-ink-bar, .purple-green .mat-tab-nav-bar.mat-primary.mat-background-primary > .mat-tab-link-container .mat-ink-bar {\n  background-color: white;\n}\n.purple-green .mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .purple-green .mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .purple-green .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .purple-green .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(185, 246, 202, 0.3);\n}\n.purple-green .mat-tab-group.mat-accent .mat-ink-bar, .purple-green .mat-tab-nav-bar.mat-accent .mat-ink-bar {\n  background-color: #69f0ae;\n}\n.purple-green .mat-tab-group.mat-accent.mat-background-accent > .mat-tab-header .mat-ink-bar, .purple-green .mat-tab-group.mat-accent.mat-background-accent > .mat-tab-link-container .mat-ink-bar, .purple-green .mat-tab-nav-bar.mat-accent.mat-background-accent > .mat-tab-header .mat-ink-bar, .purple-green .mat-tab-nav-bar.mat-accent.mat-background-accent > .mat-tab-link-container .mat-ink-bar {\n  background-color: rgba(0, 0, 0, 0.87);\n}\n.purple-green .mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .purple-green .mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .purple-green .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .purple-green .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 205, 210, 0.3);\n}\n.purple-green .mat-tab-group.mat-warn .mat-ink-bar, .purple-green .mat-tab-nav-bar.mat-warn .mat-ink-bar {\n  background-color: #f44336;\n}\n.purple-green .mat-tab-group.mat-warn.mat-background-warn > .mat-tab-header .mat-ink-bar, .purple-green .mat-tab-group.mat-warn.mat-background-warn > .mat-tab-link-container .mat-ink-bar, .purple-green .mat-tab-nav-bar.mat-warn.mat-background-warn > .mat-tab-header .mat-ink-bar, .purple-green .mat-tab-nav-bar.mat-warn.mat-background-warn > .mat-tab-link-container .mat-ink-bar {\n  background-color: white;\n}\n.purple-green .mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .purple-green .mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .purple-green .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .purple-green .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(225, 190, 231, 0.3);\n}\n.purple-green .mat-tab-group.mat-background-primary > .mat-tab-header, .purple-green .mat-tab-group.mat-background-primary > .mat-tab-link-container, .purple-green .mat-tab-group.mat-background-primary > .mat-tab-header-pagination, .purple-green .mat-tab-nav-bar.mat-background-primary > .mat-tab-header, .purple-green .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container, .purple-green .mat-tab-nav-bar.mat-background-primary > .mat-tab-header-pagination {\n  background-color: #9c27b0;\n}\n.purple-green .mat-tab-group.mat-background-primary > .mat-tab-header .mat-tab-label, .purple-green .mat-tab-group.mat-background-primary > .mat-tab-link-container .mat-tab-link, .purple-green .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-tab-label, .purple-green .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container .mat-tab-link {\n  color: white;\n}\n.purple-green .mat-tab-group.mat-background-primary > .mat-tab-header .mat-tab-label.mat-tab-disabled, .purple-green .mat-tab-group.mat-background-primary > .mat-tab-link-container .mat-tab-link.mat-tab-disabled, .purple-green .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-tab-label.mat-tab-disabled, .purple-green .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\n.purple-green .mat-tab-group.mat-background-primary > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.purple-green .mat-tab-group.mat-background-primary > .mat-tab-links .mat-focus-indicator::before,\n.purple-green .mat-tab-group.mat-background-primary > .mat-tab-header .mat-focus-indicator::before, .purple-green .mat-tab-nav-bar.mat-background-primary > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.purple-green .mat-tab-nav-bar.mat-background-primary > .mat-tab-links .mat-focus-indicator::before,\n.purple-green .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-focus-indicator::before {\n  border-color: white;\n}\n.purple-green .mat-tab-group.mat-background-primary > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .purple-green .mat-tab-nav-bar.mat-background-primary > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.4);\n}\n.purple-green .mat-tab-group.mat-background-primary > .mat-tab-header .mat-ripple-element,\n.purple-green .mat-tab-group.mat-background-primary > .mat-tab-link-container .mat-ripple-element, .purple-green .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-ripple-element,\n.purple-green .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.purple-green .mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .purple-green .mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .purple-green .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .purple-green .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(185, 246, 202, 0.3);\n}\n.purple-green .mat-tab-group.mat-background-accent > .mat-tab-header, .purple-green .mat-tab-group.mat-background-accent > .mat-tab-link-container, .purple-green .mat-tab-group.mat-background-accent > .mat-tab-header-pagination, .purple-green .mat-tab-nav-bar.mat-background-accent > .mat-tab-header, .purple-green .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container, .purple-green .mat-tab-nav-bar.mat-background-accent > .mat-tab-header-pagination {\n  background-color: #69f0ae;\n}\n.purple-green .mat-tab-group.mat-background-accent > .mat-tab-header .mat-tab-label, .purple-green .mat-tab-group.mat-background-accent > .mat-tab-link-container .mat-tab-link, .purple-green .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-tab-label, .purple-green .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container .mat-tab-link {\n  color: rgba(0, 0, 0, 0.87);\n}\n.purple-green .mat-tab-group.mat-background-accent > .mat-tab-header .mat-tab-label.mat-tab-disabled, .purple-green .mat-tab-group.mat-background-accent > .mat-tab-link-container .mat-tab-link.mat-tab-disabled, .purple-green .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-tab-label.mat-tab-disabled, .purple-green .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container .mat-tab-link.mat-tab-disabled {\n  color: rgba(0, 0, 0, 0.4);\n}\n.purple-green .mat-tab-group.mat-background-accent > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.purple-green .mat-tab-group.mat-background-accent > .mat-tab-links .mat-focus-indicator::before,\n.purple-green .mat-tab-group.mat-background-accent > .mat-tab-header .mat-focus-indicator::before, .purple-green .mat-tab-nav-bar.mat-background-accent > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.purple-green .mat-tab-nav-bar.mat-background-accent > .mat-tab-links .mat-focus-indicator::before,\n.purple-green .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-focus-indicator::before {\n  border-color: rgba(0, 0, 0, 0.87);\n}\n.purple-green .mat-tab-group.mat-background-accent > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .purple-green .mat-tab-nav-bar.mat-background-accent > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(0, 0, 0, 0.4);\n}\n.purple-green .mat-tab-group.mat-background-accent > .mat-tab-header .mat-ripple-element,\n.purple-green .mat-tab-group.mat-background-accent > .mat-tab-link-container .mat-ripple-element, .purple-green .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-ripple-element,\n.purple-green .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container .mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .purple-green .mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .purple-green .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .purple-green .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.purple-green .mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 205, 210, 0.3);\n}\n.purple-green .mat-tab-group.mat-background-warn > .mat-tab-header, .purple-green .mat-tab-group.mat-background-warn > .mat-tab-link-container, .purple-green .mat-tab-group.mat-background-warn > .mat-tab-header-pagination, .purple-green .mat-tab-nav-bar.mat-background-warn > .mat-tab-header, .purple-green .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container, .purple-green .mat-tab-nav-bar.mat-background-warn > .mat-tab-header-pagination {\n  background-color: #f44336;\n}\n.purple-green .mat-tab-group.mat-background-warn > .mat-tab-header .mat-tab-label, .purple-green .mat-tab-group.mat-background-warn > .mat-tab-link-container .mat-tab-link, .purple-green .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-tab-label, .purple-green .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container .mat-tab-link {\n  color: white;\n}\n.purple-green .mat-tab-group.mat-background-warn > .mat-tab-header .mat-tab-label.mat-tab-disabled, .purple-green .mat-tab-group.mat-background-warn > .mat-tab-link-container .mat-tab-link.mat-tab-disabled, .purple-green .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-tab-label.mat-tab-disabled, .purple-green .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\n.purple-green .mat-tab-group.mat-background-warn > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.purple-green .mat-tab-group.mat-background-warn > .mat-tab-links .mat-focus-indicator::before,\n.purple-green .mat-tab-group.mat-background-warn > .mat-tab-header .mat-focus-indicator::before, .purple-green .mat-tab-nav-bar.mat-background-warn > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n.purple-green .mat-tab-nav-bar.mat-background-warn > .mat-tab-links .mat-focus-indicator::before,\n.purple-green .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-focus-indicator::before {\n  border-color: white;\n}\n.purple-green .mat-tab-group.mat-background-warn > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .purple-green .mat-tab-nav-bar.mat-background-warn > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.4);\n}\n.purple-green .mat-tab-group.mat-background-warn > .mat-tab-header .mat-ripple-element,\n.purple-green .mat-tab-group.mat-background-warn > .mat-tab-link-container .mat-ripple-element, .purple-green .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-ripple-element,\n.purple-green .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.purple-green .mat-toolbar {\n  background: #212121;\n  color: white;\n}\n.purple-green .mat-toolbar.mat-primary {\n  background: #9c27b0;\n  color: white;\n}\n.purple-green .mat-toolbar.mat-accent {\n  background: #69f0ae;\n  color: rgba(0, 0, 0, 0.87);\n}\n.purple-green .mat-toolbar.mat-warn {\n  background: #f44336;\n  color: white;\n}\n.purple-green .mat-toolbar .mat-form-field-underline,\n.purple-green .mat-toolbar .mat-form-field-ripple,\n.purple-green .mat-toolbar .mat-focused .mat-form-field-ripple {\n  background-color: currentColor;\n}\n.purple-green .mat-toolbar .mat-form-field-label,\n.purple-green .mat-toolbar .mat-focused .mat-form-field-label,\n.purple-green .mat-toolbar .mat-select-value,\n.purple-green .mat-toolbar .mat-select-arrow,\n.purple-green .mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\n  color: inherit;\n}\n.purple-green .mat-toolbar .mat-input-element {\n  caret-color: currentColor;\n}\n.purple-green .mat-tooltip {\n  background: rgba(97, 97, 97, 0.9);\n}\n.purple-green .mat-tree {\n  background: #424242;\n}\n.purple-green .mat-tree-node,\n.purple-green .mat-nested-tree-node {\n  color: white;\n}\n.purple-green .mat-snack-bar-container {\n  color: rgba(0, 0, 0, 0.87);\n  background: #fafafa;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.purple-green .mat-simple-snackbar-action {\n  color: inherit;\n}\nbody table.app-table {\n  color: rgba(0, 0, 0, 0.87);\n}\nbody table.app-table th {\n  background: whitesmoke;\n}\nbody table.app-table td {\n  border: 1px solid rgba(0, 0, 0, 0.03);\n}\nbody .hljs {\n  display: block;\n  overflow-x: auto;\n  padding: 1em;\n  background: #fafafa;\n  color: #37474f;\n  -webkit-font-smoothing: antialiased;\n  -webkit-text-size-adjust: 100%;\n     -moz-text-size-adjust: 100%;\n          text-size-adjust: 100%;\n  font: 300 100%/1 Roboto Mono, monospace;\n  font-size: 14px;\n}\nbody .hljs > *::-moz-selection {\n  background-color: #d6edea;\n}\nbody .hljs > *::selection,\nbody .hljs-section {\n  background-color: #d6edea;\n}\nbody .hljs-comment {\n  color: #b0bec5;\n  font-style: italic;\n}\nbody .hljs-tag,\nbody .hljs-selector-tag,\nbody .hljs-regexp,\nbody .hljs-meta {\n  color: #9c27b0;\n}\nbody .hljs-string,\nbody .hljs-subst {\n  color: #0d904f;\n}\nbody .hljs-number,\nbody .hljs-variable,\nbody .hljs-template-variable {\n  color: #80cbc4;\n}\nbody .hljs-name,\nbody .hljs-keyword,\nbody .hljs-type,\nbody .hljs-attribute {\n  color: #3b78e7;\n}\nbody .hljs-title,\nbody .hljs-function > .hljs-title,\nbody .hljs-symbol,\nbody .hljs-bullet,\nbody .hljs-built_in,\nbody .hljs-builtin-name,\nbody .hljs-link {\n  color: #6182b8;\n}\nbody .hljs-params {\n  color: #d81b60;\n}\nbody .hljs-addition {\n  color: #3b78e7;\n  display: inline-block;\n  width: 100%;\n}\nbody .hljs-deletion {\n  color: #e53935;\n  display: inline-block;\n  width: 100%;\n}\nbody .hljs-selector-id,\nbody .hljs-selector-class {\n  color: #8796b0;\n}\nbody .hljs-emphasis {\n  font-style: italic;\n}\nbody .hljs-strong {\n  font-weight: bold;\n}\nbody .hljs-link {\n  text-decoration: underline;\n}\nbody .active-link {\n  color: #3f51b5 !important;\n  background-color: #DCDCDC !important;\n}\nbody .active-link mat-icon {\n  color: #3f51b5 !important;\n}\nbody .warning-icon {\n  color: #f44336 !important;\n}\nbody a.anchor-link {\n  color: #3f51b5;\n  text-decoration: none;\n}\nbody a.anchor-link:hover {\n  text-decoration: underline;\n}\nbody .mat-list-item-content mat-icon,\nbody .icon {\n  color: rgba(0, 0, 0, 0.54);\n}\nbody .onboarding-content {\n  color: #000;\n}\nbody .onboarding-card {\n  background-color: #FAFAFA;\n}\nbody .indicator-active {\n  background-color: #ff4081 !important;\n}\nbody .indicator {\n  background-color: rgba(255, 255, 255, 0.5);\n}\nbody .badge {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: #e0e0e0;\n}\nbody .badge.badge--colored {\n  background-color: #3f51b5;\n  color: white;\n}\nbody .badge.badge--primary {\n  background-color: #3f51b5;\n  color: white;\n}\nbody .badge.badge--accent {\n  background-color: #ff4081;\n  color: white;\n}\nbody .badge.badge--warn {\n  background-color: #f44336;\n  color: white;\n}\nbody .mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.1);\n}\nbody .mat-option {\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-option:hover:not(.mat-option-disabled), body .mat-option:focus:not(.mat-option-disabled) {\n  background: rgba(0, 0, 0, 0.04);\n}\nbody .mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n  background: rgba(0, 0, 0, 0.04);\n}\nbody .mat-option.mat-active {\n  background: rgba(0, 0, 0, 0.04);\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-option.mat-option-disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #3f51b5;\n}\nbody .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #ff4081;\n}\nbody .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #f44336;\n}\nbody .mat-optgroup-label {\n  color: rgba(0, 0, 0, 0.54);\n}\nbody .mat-optgroup-disabled .mat-optgroup-label {\n  color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-pseudo-checkbox {\n  color: rgba(0, 0, 0, 0.54);\n}\nbody .mat-pseudo-checkbox::after {\n  color: #fafafa;\n}\nbody .mat-pseudo-checkbox-disabled {\n  color: #b0b0b0;\n}\nbody .mat-primary .mat-pseudo-checkbox-checked,\nbody .mat-primary .mat-pseudo-checkbox-indeterminate {\n  background: #3f51b5;\n}\nbody .mat-pseudo-checkbox-checked,\nbody .mat-pseudo-checkbox-indeterminate,\nbody .mat-accent .mat-pseudo-checkbox-checked,\nbody .mat-accent .mat-pseudo-checkbox-indeterminate {\n  background: #ff4081;\n}\nbody .mat-warn .mat-pseudo-checkbox-checked,\nbody .mat-warn .mat-pseudo-checkbox-indeterminate {\n  background: #f44336;\n}\nbody .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,\nbody .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled {\n  background: #b0b0b0;\n}\nbody .mat-app-background, body.mat-app-background {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-elevation-z0 {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z1 {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z2 {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z3 {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z4 {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z5 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z6 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z7 {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z8 {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z9 {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z10 {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z11 {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z12 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z13 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z14 {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z15 {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z16 {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z17 {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z18 {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z19 {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z20 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z21 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z22 {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z23 {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\nbody .mat-elevation-z24 {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.mat-theme-loaded-marker {\n  display: none;\n}\nbody .mat-autocomplete-panel {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-autocomplete-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover) {\n  background: white;\n}\nbody .mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled) {\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-badge-content {\n  color: white;\n  background: #3f51b5;\n}\n.cdk-high-contrast-active body .mat-badge-content {\n  outline: solid 1px;\n  border-radius: 0;\n}\nbody .mat-badge-accent .mat-badge-content {\n  background: #ff4081;\n  color: white;\n}\nbody .mat-badge-warn .mat-badge-content {\n  color: white;\n  background: #f44336;\n}\nbody .mat-badge {\n  position: relative;\n}\nbody .mat-badge-hidden .mat-badge-content {\n  display: none;\n}\nbody .mat-badge-disabled .mat-badge-content {\n  background: #b9b9b9;\n  color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-badge-content {\n  position: absolute;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  transition: transform 200ms ease-in-out;\n  transform: scale(0.6);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n}\nbody .ng-animate-disabled .mat-badge-content,\nbody .mat-badge-content._mat-animation-noopable {\n  transition: none;\n}\nbody .mat-badge-content.mat-badge-active {\n  transform: none;\n}\nbody .mat-badge-small .mat-badge-content {\n  width: 16px;\n  height: 16px;\n  line-height: 16px;\n}\nbody .mat-badge-small.mat-badge-above .mat-badge-content {\n  top: -8px;\n}\nbody .mat-badge-small.mat-badge-below .mat-badge-content {\n  bottom: -8px;\n}\nbody .mat-badge-small.mat-badge-before .mat-badge-content {\n  left: -16px;\n}\n[dir=rtl] body .mat-badge-small.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -16px;\n}\nbody .mat-badge-small.mat-badge-after .mat-badge-content {\n  right: -16px;\n}\n[dir=rtl] body .mat-badge-small.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -16px;\n}\nbody .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -8px;\n}\n[dir=rtl] body .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -8px;\n}\nbody .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -8px;\n}\n[dir=rtl] body .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -8px;\n}\nbody .mat-badge-medium .mat-badge-content {\n  width: 22px;\n  height: 22px;\n  line-height: 22px;\n}\nbody .mat-badge-medium.mat-badge-above .mat-badge-content {\n  top: -11px;\n}\nbody .mat-badge-medium.mat-badge-below .mat-badge-content {\n  bottom: -11px;\n}\nbody .mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: -22px;\n}\n[dir=rtl] body .mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -22px;\n}\nbody .mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: -22px;\n}\n[dir=rtl] body .mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -22px;\n}\nbody .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -11px;\n}\n[dir=rtl] body .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -11px;\n}\nbody .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -11px;\n}\n[dir=rtl] body .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -11px;\n}\nbody .mat-badge-large .mat-badge-content {\n  width: 28px;\n  height: 28px;\n  line-height: 28px;\n}\nbody .mat-badge-large.mat-badge-above .mat-badge-content {\n  top: -14px;\n}\nbody .mat-badge-large.mat-badge-below .mat-badge-content {\n  bottom: -14px;\n}\nbody .mat-badge-large.mat-badge-before .mat-badge-content {\n  left: -28px;\n}\n[dir=rtl] body .mat-badge-large.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -28px;\n}\nbody .mat-badge-large.mat-badge-after .mat-badge-content {\n  right: -28px;\n}\n[dir=rtl] body .mat-badge-large.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -28px;\n}\nbody .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -14px;\n}\n[dir=rtl] body .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -14px;\n}\nbody .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -14px;\n}\n[dir=rtl] body .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -14px;\n}\nbody .mat-bottom-sheet-container {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-button, body .mat-icon-button, body .mat-stroked-button {\n  color: inherit;\n  background: transparent;\n}\nbody .mat-button.mat-primary, body .mat-icon-button.mat-primary, body .mat-stroked-button.mat-primary {\n  color: #3f51b5;\n}\nbody .mat-button.mat-accent, body .mat-icon-button.mat-accent, body .mat-stroked-button.mat-accent {\n  color: #ff4081;\n}\nbody .mat-button.mat-warn, body .mat-icon-button.mat-warn, body .mat-stroked-button.mat-warn {\n  color: #f44336;\n}\nbody .mat-button.mat-primary.mat-button-disabled, body .mat-button.mat-accent.mat-button-disabled, body .mat-button.mat-warn.mat-button-disabled, body .mat-button.mat-button-disabled.mat-button-disabled, body .mat-icon-button.mat-primary.mat-button-disabled, body .mat-icon-button.mat-accent.mat-button-disabled, body .mat-icon-button.mat-warn.mat-button-disabled, body .mat-icon-button.mat-button-disabled.mat-button-disabled, body .mat-stroked-button.mat-primary.mat-button-disabled, body .mat-stroked-button.mat-accent.mat-button-disabled, body .mat-stroked-button.mat-warn.mat-button-disabled, body .mat-stroked-button.mat-button-disabled.mat-button-disabled {\n  color: rgba(0, 0, 0, 0.26);\n}\nbody .mat-button.mat-primary .mat-button-focus-overlay, body .mat-icon-button.mat-primary .mat-button-focus-overlay, body .mat-stroked-button.mat-primary .mat-button-focus-overlay {\n  background-color: #3f51b5;\n}\nbody .mat-button.mat-accent .mat-button-focus-overlay, body .mat-icon-button.mat-accent .mat-button-focus-overlay, body .mat-stroked-button.mat-accent .mat-button-focus-overlay {\n  background-color: #ff4081;\n}\nbody .mat-button.mat-warn .mat-button-focus-overlay, body .mat-icon-button.mat-warn .mat-button-focus-overlay, body .mat-stroked-button.mat-warn .mat-button-focus-overlay {\n  background-color: #f44336;\n}\nbody .mat-button.mat-button-disabled .mat-button-focus-overlay, body .mat-icon-button.mat-button-disabled .mat-button-focus-overlay, body .mat-stroked-button.mat-button-disabled .mat-button-focus-overlay {\n  background-color: transparent;\n}\nbody .mat-button .mat-ripple-element, body .mat-icon-button .mat-ripple-element, body .mat-stroked-button .mat-ripple-element {\n  opacity: 0.1;\n  background-color: currentColor;\n}\nbody .mat-button-focus-overlay {\n  background: black;\n}\nbody .mat-stroked-button:not(.mat-button-disabled) {\n  border-color: rgba(0, 0, 0, 0.12);\n}\nbody .mat-flat-button, body .mat-raised-button, body .mat-fab, body .mat-mini-fab {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: white;\n}\nbody .mat-flat-button.mat-primary, body .mat-raised-button.mat-primary, body .mat-fab.mat-primary, body .mat-mini-fab.mat-primary {\n  color: white;\n}\nbody .mat-flat-button.mat-accent, body .mat-raised-button.mat-accent, body .mat-fab.mat-accent, body .mat-mini-fab.mat-accent {\n  color: white;\n}\nbody .mat-flat-button.mat-warn, body .mat-raised-button.mat-warn, body .mat-fab.mat-warn, body .mat-mini-fab.mat-warn {\n  color: white;\n}\nbody .mat-flat-button.mat-primary.mat-button-disabled, body .mat-flat-button.mat-accent.mat-button-disabled, body .mat-flat-button.mat-warn.mat-button-disabled, body .mat-flat-button.mat-button-disabled.mat-button-disabled, body .mat-raised-button.mat-primary.mat-button-disabled, body .mat-raised-button.mat-accent.mat-button-disabled, body .mat-raised-button.mat-warn.mat-button-disabled, body .mat-raised-button.mat-button-disabled.mat-button-disabled, body .mat-fab.mat-primary.mat-button-disabled, body .mat-fab.mat-accent.mat-button-disabled, body .mat-fab.mat-warn.mat-button-disabled, body .mat-fab.mat-button-disabled.mat-button-disabled, body .mat-mini-fab.mat-primary.mat-button-disabled, body .mat-mini-fab.mat-accent.mat-button-disabled, body .mat-mini-fab.mat-warn.mat-button-disabled, body .mat-mini-fab.mat-button-disabled.mat-button-disabled {\n  color: rgba(0, 0, 0, 0.26);\n}\nbody .mat-flat-button.mat-primary, body .mat-raised-button.mat-primary, body .mat-fab.mat-primary, body .mat-mini-fab.mat-primary {\n  background-color: #3f51b5;\n}\nbody .mat-flat-button.mat-accent, body .mat-raised-button.mat-accent, body .mat-fab.mat-accent, body .mat-mini-fab.mat-accent {\n  background-color: #ff4081;\n}\nbody .mat-flat-button.mat-warn, body .mat-raised-button.mat-warn, body .mat-fab.mat-warn, body .mat-mini-fab.mat-warn {\n  background-color: #f44336;\n}\nbody .mat-flat-button.mat-primary.mat-button-disabled, body .mat-flat-button.mat-accent.mat-button-disabled, body .mat-flat-button.mat-warn.mat-button-disabled, body .mat-flat-button.mat-button-disabled.mat-button-disabled, body .mat-raised-button.mat-primary.mat-button-disabled, body .mat-raised-button.mat-accent.mat-button-disabled, body .mat-raised-button.mat-warn.mat-button-disabled, body .mat-raised-button.mat-button-disabled.mat-button-disabled, body .mat-fab.mat-primary.mat-button-disabled, body .mat-fab.mat-accent.mat-button-disabled, body .mat-fab.mat-warn.mat-button-disabled, body .mat-fab.mat-button-disabled.mat-button-disabled, body .mat-mini-fab.mat-primary.mat-button-disabled, body .mat-mini-fab.mat-accent.mat-button-disabled, body .mat-mini-fab.mat-warn.mat-button-disabled, body .mat-mini-fab.mat-button-disabled.mat-button-disabled {\n  background-color: rgba(0, 0, 0, 0.12);\n}\nbody .mat-flat-button.mat-primary .mat-ripple-element, body .mat-raised-button.mat-primary .mat-ripple-element, body .mat-fab.mat-primary .mat-ripple-element, body .mat-mini-fab.mat-primary .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\nbody .mat-flat-button.mat-accent .mat-ripple-element, body .mat-raised-button.mat-accent .mat-ripple-element, body .mat-fab.mat-accent .mat-ripple-element, body .mat-mini-fab.mat-accent .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\nbody .mat-flat-button.mat-warn .mat-ripple-element, body .mat-raised-button.mat-warn .mat-ripple-element, body .mat-fab.mat-warn .mat-ripple-element, body .mat-mini-fab.mat-warn .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\nbody .mat-stroked-button:not([class*=mat-elevation-z]), body .mat-flat-button:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-raised-button:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-raised-button:not(.mat-button-disabled):active:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\nbody .mat-raised-button.mat-button-disabled:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-fab:not([class*=mat-elevation-z]), body .mat-mini-fab:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]), body .mat-mini-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\nbody .mat-fab.mat-button-disabled:not([class*=mat-elevation-z]), body .mat-mini-fab.mat-button-disabled:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-button-toggle-standalone,\nbody .mat-button-toggle-group {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\nbody .mat-button-toggle-group-appearance-standard {\n  box-shadow: none;\n}\nbody .mat-button-toggle {\n  color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-button-toggle .mat-button-toggle-focus-overlay {\n  background-color: rgba(0, 0, 0, 0.12);\n}\nbody .mat-button-toggle-appearance-standard {\n  color: rgba(0, 0, 0, 0.87);\n  background: white;\n}\nbody .mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay {\n  background-color: black;\n}\nbody .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n}\nbody [dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\nbody .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px rgba(0, 0, 0, 0.12);\n}\nbody .mat-button-toggle-checked {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.54);\n}\nbody .mat-button-toggle-checked.mat-button-toggle-appearance-standard {\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-button-toggle-disabled {\n  color: rgba(0, 0, 0, 0.26);\n  background-color: #eeeeee;\n}\nbody .mat-button-toggle-disabled.mat-button-toggle-appearance-standard {\n  background: white;\n}\nbody .mat-button-toggle-disabled.mat-button-toggle-checked {\n  background-color: #bdbdbd;\n}\nbody .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\nbody .mat-button-toggle-group-appearance-standard {\n  border: solid 1px rgba(0, 0, 0, 0.12);\n}\nbody .mat-card {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-card:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-card.mat-card-flat:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-card-subtitle {\n  color: rgba(0, 0, 0, 0.54);\n}\nbody .mat-checkbox-frame {\n  border-color: rgba(0, 0, 0, 0.54);\n}\nbody .mat-checkbox-checkmark {\n  fill: #fafafa;\n}\nbody .mat-checkbox-checkmark-path {\n  stroke: #fafafa !important;\n}\nbody .mat-checkbox-mixedmark {\n  background-color: #fafafa;\n}\nbody .mat-checkbox-indeterminate.mat-primary .mat-checkbox-background, body .mat-checkbox-checked.mat-primary .mat-checkbox-background {\n  background-color: #3f51b5;\n}\nbody .mat-checkbox-indeterminate.mat-accent .mat-checkbox-background, body .mat-checkbox-checked.mat-accent .mat-checkbox-background {\n  background-color: #ff4081;\n}\nbody .mat-checkbox-indeterminate.mat-warn .mat-checkbox-background, body .mat-checkbox-checked.mat-warn .mat-checkbox-background {\n  background-color: #f44336;\n}\nbody .mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background, body .mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background {\n  background-color: #b0b0b0;\n}\nbody .mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame {\n  border-color: #b0b0b0;\n}\nbody .mat-checkbox-disabled .mat-checkbox-label {\n  color: rgba(0, 0, 0, 0.54);\n}\nbody .mat-checkbox .mat-ripple-element {\n  background-color: black;\n}\nbody .mat-checkbox-checked:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element,\nbody .mat-checkbox:active:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element {\n  background: #3f51b5;\n}\nbody .mat-checkbox-checked:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element,\nbody .mat-checkbox:active:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element {\n  background: #ff4081;\n}\nbody .mat-checkbox-checked:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element,\nbody .mat-checkbox:active:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element {\n  background: #f44336;\n}\nbody .mat-chip.mat-standard-chip {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-chip.mat-standard-chip .mat-chip-remove {\n  color: rgba(0, 0, 0, 0.87);\n  opacity: 0.4;\n}\nbody .mat-chip.mat-standard-chip:not(.mat-chip-disabled):active {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover {\n  opacity: 0.54;\n}\nbody .mat-chip.mat-standard-chip.mat-chip-disabled {\n  opacity: 0.4;\n}\nbody .mat-chip.mat-standard-chip::after {\n  background: black;\n}\nbody .mat-chip.mat-standard-chip.mat-chip-selected.mat-primary {\n  background-color: #3f51b5;\n  color: white;\n}\nbody .mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\nbody .mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\nbody .mat-chip.mat-standard-chip.mat-chip-selected.mat-warn {\n  background-color: #f44336;\n  color: white;\n}\nbody .mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\nbody .mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\nbody .mat-chip.mat-standard-chip.mat-chip-selected.mat-accent {\n  background-color: #ff4081;\n  color: white;\n}\nbody .mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\nbody .mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\nbody .mat-table {\n  background: white;\n}\nbody .mat-table thead, body .mat-table tbody, body .mat-table tfoot,\nbody mat-header-row, body mat-row, body mat-footer-row,\nbody [mat-header-row], body [mat-row], body [mat-footer-row],\nbody .mat-table-sticky {\n  background: inherit;\n}\nbody mat-row, body mat-header-row, body mat-footer-row,\nbody th.mat-header-cell, body td.mat-cell, body td.mat-footer-cell {\n  border-bottom-color: rgba(0, 0, 0, 0.12);\n}\nbody .mat-header-cell {\n  color: rgba(0, 0, 0, 0.54);\n}\nbody .mat-cell, body .mat-footer-cell {\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-calendar-arrow {\n  border-top-color: rgba(0, 0, 0, 0.54);\n}\nbody .mat-datepicker-toggle,\nbody .mat-datepicker-content .mat-calendar-next-button,\nbody .mat-datepicker-content .mat-calendar-previous-button {\n  color: rgba(0, 0, 0, 0.54);\n}\nbody .mat-calendar-table-header {\n  color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-calendar-table-header-divider::after {\n  background: rgba(0, 0, 0, 0.12);\n}\nbody .mat-calendar-body-label {\n  color: rgba(0, 0, 0, 0.54);\n}\nbody .mat-calendar-body-cell-content,\nbody .mat-date-range-input-separator {\n  color: rgba(0, 0, 0, 0.87);\n  border-color: transparent;\n}\nbody .mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-form-field-disabled .mat-date-range-input-separator {\n  color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-calendar-body-in-preview {\n  color: rgba(0, 0, 0, 0.24);\n}\nbody .mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.18);\n}\nbody .mat-calendar-body-in-range::before {\n  background: rgba(63, 81, 181, 0.2);\n}\nbody .mat-calendar-body-comparison-identical,\nbody .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\nbody .mat-calendar-body-comparison-bridge-start::before,\nbody [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(63, 81, 181, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\nbody .mat-calendar-body-comparison-bridge-end::before,\nbody [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(63, 81, 181, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\nbody .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\nbody .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\nbody .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\nbody .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\nbody .mat-calendar-body-selected {\n  background-color: #3f51b5;\n  color: white;\n}\nbody .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(63, 81, 181, 0.4);\n}\nbody .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\nbody .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\nbody .cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\nbody .cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(63, 81, 181, 0.3);\n}\nbody .mat-datepicker-content {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-datepicker-content.mat-accent .mat-calendar-body-in-range::before {\n  background: rgba(255, 64, 129, 0.2);\n}\nbody .mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical,\nbody .mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\nbody .mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-start::before,\nbody .mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(255, 64, 129, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\nbody .mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-end::before,\nbody .mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(255, 64, 129, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\nbody .mat-datepicker-content.mat-accent .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\nbody .mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\nbody .mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\nbody .mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\nbody .mat-datepicker-content.mat-accent .mat-calendar-body-selected {\n  background-color: #ff4081;\n  color: white;\n}\nbody .mat-datepicker-content.mat-accent .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(255, 64, 129, 0.4);\n}\nbody .mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\nbody .mat-datepicker-content.mat-accent .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\nbody .mat-datepicker-content.mat-accent .cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\nbody .mat-datepicker-content.mat-accent .cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(255, 64, 129, 0.3);\n}\nbody .mat-datepicker-content.mat-warn .mat-calendar-body-in-range::before {\n  background: rgba(244, 67, 54, 0.2);\n}\nbody .mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical,\nbody .mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\nbody .mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-start::before,\nbody .mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\nbody .mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-end::before,\nbody .mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\nbody .mat-datepicker-content.mat-warn .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\nbody .mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\nbody .mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\nbody .mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\nbody .mat-datepicker-content.mat-warn .mat-calendar-body-selected {\n  background-color: #f44336;\n  color: white;\n}\nbody .mat-datepicker-content.mat-warn .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(244, 67, 54, 0.4);\n}\nbody .mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\nbody .mat-datepicker-content.mat-warn .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\nbody .mat-datepicker-content.mat-warn .cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\nbody .mat-datepicker-content.mat-warn .cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(244, 67, 54, 0.3);\n}\nbody .mat-datepicker-content-touch {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-datepicker-toggle-active {\n  color: #3f51b5;\n}\nbody .mat-datepicker-toggle-active.mat-accent {\n  color: #ff4081;\n}\nbody .mat-datepicker-toggle-active.mat-warn {\n  color: #f44336;\n}\nbody .mat-date-range-input-inner[disabled] {\n  color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-dialog-container {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-divider {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\nbody .mat-divider-vertical {\n  border-right-color: rgba(0, 0, 0, 0.12);\n}\nbody .mat-expansion-panel {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-expansion-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-action-row {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\nbody .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]), body .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]), body .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n@media (hover: none) {\n  body .mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover {\n    background: white;\n  }\n}\nbody .mat-expansion-panel-header-title {\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-expansion-panel-header-description,\nbody .mat-expansion-indicator::after {\n  color: rgba(0, 0, 0, 0.54);\n}\nbody .mat-expansion-panel-header[aria-disabled=true] {\n  color: rgba(0, 0, 0, 0.26);\n}\nbody .mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,\nbody .mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description {\n  color: inherit;\n}\nbody .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.6);\n}\nbody .mat-hint {\n  color: rgba(0, 0, 0, 0.6);\n}\nbody .mat-form-field.mat-focused .mat-form-field-label {\n  color: #3f51b5;\n}\nbody .mat-form-field.mat-focused .mat-form-field-label.mat-accent {\n  color: #ff4081;\n}\nbody .mat-form-field.mat-focused .mat-form-field-label.mat-warn {\n  color: #f44336;\n}\nbody .mat-focused .mat-form-field-required-marker {\n  color: #ff4081;\n}\nbody .mat-form-field-ripple {\n  background-color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-form-field.mat-focused .mat-form-field-ripple {\n  background-color: #3f51b5;\n}\nbody .mat-form-field.mat-focused .mat-form-field-ripple.mat-accent {\n  background-color: #ff4081;\n}\nbody .mat-form-field.mat-focused .mat-form-field-ripple.mat-warn {\n  background-color: #f44336;\n}\nbody .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after {\n  color: #3f51b5;\n}\nbody .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after {\n  color: #ff4081;\n}\nbody .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after {\n  color: #f44336;\n}\nbody .mat-form-field.mat-form-field-invalid .mat-form-field-label {\n  color: #f44336;\n}\nbody .mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent,\nbody .mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker {\n  color: #f44336;\n}\nbody .mat-form-field.mat-form-field-invalid .mat-form-field-ripple,\nbody .mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent {\n  background-color: #f44336;\n}\nbody .mat-error {\n  color: #f44336;\n}\nbody .mat-form-field-appearance-legacy .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.54);\n}\nbody .mat-form-field-appearance-legacy .mat-hint {\n  color: rgba(0, 0, 0, 0.54);\n}\nbody .mat-form-field-appearance-legacy .mat-form-field-underline {\n  background-color: rgba(0, 0, 0, 0.42);\n}\nbody .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\nbody .mat-form-field-appearance-standard .mat-form-field-underline {\n  background-color: rgba(0, 0, 0, 0.42);\n}\nbody .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\nbody .mat-form-field-appearance-fill .mat-form-field-flex {\n  background-color: rgba(0, 0, 0, 0.04);\n}\nbody .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex {\n  background-color: rgba(0, 0, 0, 0.02);\n}\nbody .mat-form-field-appearance-fill .mat-form-field-underline::before {\n  background-color: rgba(0, 0, 0, 0.42);\n}\nbody .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before {\n  background-color: transparent;\n}\nbody .mat-form-field-appearance-outline .mat-form-field-outline {\n  color: rgba(0, 0, 0, 0.12);\n}\nbody .mat-form-field-appearance-outline .mat-form-field-outline-thick {\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #3f51b5;\n}\nbody .mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick {\n  color: #ff4081;\n}\nbody .mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick {\n  color: #f44336;\n}\nbody .mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\n  color: #f44336;\n}\nbody .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\n  color: rgba(0, 0, 0, 0.06);\n}\nbody .mat-icon.mat-primary {\n  color: #3f51b5;\n}\nbody .mat-icon.mat-accent {\n  color: #ff4081;\n}\nbody .mat-icon.mat-warn {\n  color: #f44336;\n}\nbody .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n  color: rgba(0, 0, 0, 0.54);\n}\nbody .mat-input-element:disabled,\nbody .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n  color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-input-element {\n  caret-color: #3f51b5;\n}\nbody .mat-input-element::-moz-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\nbody .mat-input-element::placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\nbody .mat-input-element::-moz-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\nbody .mat-input-element::-webkit-input-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\nbody .mat-input-element:-ms-input-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\nbody .mat-form-field.mat-accent .mat-input-element {\n  caret-color: #ff4081;\n}\nbody .mat-form-field.mat-warn .mat-input-element,\nbody .mat-form-field-invalid .mat-input-element {\n  caret-color: #f44336;\n}\nbody .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n  color: #f44336;\n}\nbody .mat-list-base .mat-list-item {\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-list-base .mat-list-option {\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-list-base .mat-subheader {\n  color: rgba(0, 0, 0, 0.54);\n}\nbody .mat-list-item-disabled {\n  background-color: #eeeeee;\n}\nbody .mat-list-option:hover, body .mat-list-option:focus,\nbody .mat-nav-list .mat-list-item:hover,\nbody .mat-nav-list .mat-list-item:focus,\nbody .mat-action-list .mat-list-item:hover,\nbody .mat-action-list .mat-list-item:focus {\n  background: rgba(0, 0, 0, 0.04);\n}\nbody .mat-list-single-selected-option, body .mat-list-single-selected-option:hover, body .mat-list-single-selected-option:focus {\n  background: rgba(0, 0, 0, 0.12);\n}\nbody .mat-menu-panel {\n  background: white;\n}\nbody .mat-menu-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-menu-item {\n  background: transparent;\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-menu-item[disabled], body .mat-menu-item[disabled]::after,\nbody .mat-menu-item[disabled] .mat-icon-no-color {\n  color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-menu-item .mat-icon-no-color,\nbody .mat-menu-item-submenu-trigger::after {\n  color: rgba(0, 0, 0, 0.54);\n}\nbody .mat-menu-item:hover:not([disabled]),\nbody .mat-menu-item.cdk-program-focused:not([disabled]),\nbody .mat-menu-item.cdk-keyboard-focused:not([disabled]),\nbody .mat-menu-item-highlighted:not([disabled]) {\n  background: rgba(0, 0, 0, 0.04);\n}\nbody .mat-paginator {\n  background: white;\n}\nbody .mat-paginator,\nbody .mat-paginator-page-size .mat-select-trigger {\n  color: rgba(0, 0, 0, 0.54);\n}\nbody .mat-paginator-decrement,\nbody .mat-paginator-increment {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n  border-right: 2px solid rgba(0, 0, 0, 0.54);\n}\nbody .mat-paginator-first,\nbody .mat-paginator-last {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n}\nbody .mat-icon-button[disabled] .mat-paginator-decrement,\nbody .mat-icon-button[disabled] .mat-paginator-increment,\nbody .mat-icon-button[disabled] .mat-paginator-first,\nbody .mat-icon-button[disabled] .mat-paginator-last {\n  border-color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-progress-bar-background {\n  fill: #c5cae9;\n}\nbody .mat-progress-bar-buffer {\n  background-color: #c5cae9;\n}\nbody .mat-progress-bar-fill::after {\n  background-color: #3f51b5;\n}\nbody .mat-progress-bar.mat-accent .mat-progress-bar-background {\n  fill: #ff80ab;\n}\nbody .mat-progress-bar.mat-accent .mat-progress-bar-buffer {\n  background-color: #ff80ab;\n}\nbody .mat-progress-bar.mat-accent .mat-progress-bar-fill::after {\n  background-color: #ff4081;\n}\nbody .mat-progress-bar.mat-warn .mat-progress-bar-background {\n  fill: #ffcdd2;\n}\nbody .mat-progress-bar.mat-warn .mat-progress-bar-buffer {\n  background-color: #ffcdd2;\n}\nbody .mat-progress-bar.mat-warn .mat-progress-bar-fill::after {\n  background-color: #f44336;\n}\nbody .mat-progress-spinner circle, body .mat-spinner circle {\n  stroke: #3f51b5;\n}\nbody .mat-progress-spinner.mat-accent circle, body .mat-spinner.mat-accent circle {\n  stroke: #ff4081;\n}\nbody .mat-progress-spinner.mat-warn circle, body .mat-spinner.mat-warn circle {\n  stroke: #f44336;\n}\nbody .mat-radio-outer-circle {\n  border-color: rgba(0, 0, 0, 0.54);\n}\nbody .mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #3f51b5;\n}\nbody .mat-radio-button.mat-primary .mat-radio-inner-circle,\nbody .mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), body .mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple, body .mat-radio-button.mat-primary:active .mat-radio-persistent-ripple {\n  background-color: #3f51b5;\n}\nbody .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #ff4081;\n}\nbody .mat-radio-button.mat-accent .mat-radio-inner-circle,\nbody .mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), body .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple, body .mat-radio-button.mat-accent:active .mat-radio-persistent-ripple {\n  background-color: #ff4081;\n}\nbody .mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #f44336;\n}\nbody .mat-radio-button.mat-warn .mat-radio-inner-circle,\nbody .mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), body .mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple, body .mat-radio-button.mat-warn:active .mat-radio-persistent-ripple {\n  background-color: #f44336;\n}\nbody .mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle,\nbody .mat-radio-button.mat-radio-disabled .mat-radio-outer-circle {\n  border-color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element,\nbody .mat-radio-button.mat-radio-disabled .mat-radio-inner-circle {\n  background-color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-radio-button.mat-radio-disabled .mat-radio-label-content {\n  color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-radio-button .mat-ripple-element {\n  background-color: black;\n}\nbody .mat-select-value {\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-select-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\nbody .mat-select-disabled .mat-select-value {\n  color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-select-arrow {\n  color: rgba(0, 0, 0, 0.54);\n}\nbody .mat-select-panel {\n  background: white;\n}\nbody .mat-select-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple) {\n  background: rgba(0, 0, 0, 0.12);\n}\nbody .mat-form-field.mat-focused.mat-primary .mat-select-arrow {\n  color: #3f51b5;\n}\nbody .mat-form-field.mat-focused.mat-accent .mat-select-arrow {\n  color: #ff4081;\n}\nbody .mat-form-field.mat-focused.mat-warn .mat-select-arrow {\n  color: #f44336;\n}\nbody .mat-form-field .mat-select.mat-select-invalid .mat-select-arrow {\n  color: #f44336;\n}\nbody .mat-form-field .mat-select.mat-select-disabled .mat-select-arrow {\n  color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-drawer-container {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-drawer {\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-drawer.mat-drawer-push {\n  background-color: white;\n}\nbody .mat-drawer:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\nbody .mat-drawer-side {\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\nbody .mat-drawer-side.mat-drawer-end {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\nbody [dir=rtl] .mat-drawer-side {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\nbody [dir=rtl] .mat-drawer-side.mat-drawer-end {\n  border-left: none;\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\nbody .mat-drawer-backdrop.mat-drawer-shown {\n  background-color: rgba(0, 0, 0, 0.6);\n}\nbody .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb {\n  background-color: #ff4081;\n}\nbody .mat-slide-toggle.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(255, 64, 129, 0.54);\n}\nbody .mat-slide-toggle.mat-checked .mat-ripple-element {\n  background-color: #ff4081;\n}\nbody .mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb {\n  background-color: #3f51b5;\n}\nbody .mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(63, 81, 181, 0.54);\n}\nbody .mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element {\n  background-color: #3f51b5;\n}\nbody .mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb {\n  background-color: #f44336;\n}\nbody .mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(244, 67, 54, 0.54);\n}\nbody .mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element {\n  background-color: #f44336;\n}\nbody .mat-slide-toggle:not(.mat-checked) .mat-ripple-element {\n  background-color: black;\n}\nbody .mat-slide-toggle-thumb {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  background-color: #fafafa;\n}\nbody .mat-slide-toggle-bar {\n  background-color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.26);\n}\nbody .mat-primary .mat-slider-track-fill,\nbody .mat-primary .mat-slider-thumb,\nbody .mat-primary .mat-slider-thumb-label {\n  background-color: #3f51b5;\n}\nbody .mat-primary .mat-slider-thumb-label-text {\n  color: white;\n}\nbody .mat-primary .mat-slider-focus-ring {\n  background-color: rgba(63, 81, 181, 0.2);\n}\nbody .mat-accent .mat-slider-track-fill,\nbody .mat-accent .mat-slider-thumb,\nbody .mat-accent .mat-slider-thumb-label {\n  background-color: #ff4081;\n}\nbody .mat-accent .mat-slider-thumb-label-text {\n  color: white;\n}\nbody .mat-accent .mat-slider-focus-ring {\n  background-color: rgba(255, 64, 129, 0.2);\n}\nbody .mat-warn .mat-slider-track-fill,\nbody .mat-warn .mat-slider-thumb,\nbody .mat-warn .mat-slider-thumb-label {\n  background-color: #f44336;\n}\nbody .mat-warn .mat-slider-thumb-label-text {\n  color: white;\n}\nbody .mat-warn .mat-slider-focus-ring {\n  background-color: rgba(244, 67, 54, 0.2);\n}\nbody .mat-slider:hover .mat-slider-track-background,\nbody .cdk-focused .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-slider-disabled .mat-slider-track-background,\nbody .mat-slider-disabled .mat-slider-track-fill,\nbody .mat-slider-disabled .mat-slider-thumb {\n  background-color: rgba(0, 0, 0, 0.26);\n}\nbody .mat-slider-disabled:hover .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.26);\n}\nbody .mat-slider-min-value .mat-slider-focus-ring {\n  background-color: rgba(0, 0, 0, 0.12);\n}\nbody .mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,\nbody .mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label {\n  background-color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,\nbody .mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label {\n  background-color: rgba(0, 0, 0, 0.26);\n}\nbody .mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.26);\n  background-color: transparent;\n}\nbody .mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb, body .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb, body .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.26);\n}\nbody .mat-slider-has-ticks .mat-slider-wrapper::after {\n  border-color: rgba(0, 0, 0, 0.7);\n}\nbody .mat-slider-horizontal .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to right, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\n  background-image: -moz-repeating-linear-gradient(0.0001deg, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\n}\nbody .mat-slider-vertical .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\n}\nbody .mat-step-header.cdk-keyboard-focused, body .mat-step-header.cdk-program-focused, body .mat-step-header:hover {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n@media (hover: none) {\n  body .mat-step-header:hover {\n    background: none;\n  }\n}\nbody .mat-step-header .mat-step-label,\nbody .mat-step-header .mat-step-optional {\n  color: rgba(0, 0, 0, 0.54);\n}\nbody .mat-step-header .mat-step-icon {\n  background-color: rgba(0, 0, 0, 0.54);\n  color: white;\n}\nbody .mat-step-header .mat-step-icon-selected,\nbody .mat-step-header .mat-step-icon-state-done,\nbody .mat-step-header .mat-step-icon-state-edit {\n  background-color: #3f51b5;\n  color: white;\n}\nbody .mat-step-header.mat-accent .mat-step-icon {\n  color: white;\n}\nbody .mat-step-header.mat-accent .mat-step-icon-selected,\nbody .mat-step-header.mat-accent .mat-step-icon-state-done,\nbody .mat-step-header.mat-accent .mat-step-icon-state-edit {\n  background-color: #ff4081;\n  color: white;\n}\nbody .mat-step-header.mat-warn .mat-step-icon {\n  color: white;\n}\nbody .mat-step-header.mat-warn .mat-step-icon-selected,\nbody .mat-step-header.mat-warn .mat-step-icon-state-done,\nbody .mat-step-header.mat-warn .mat-step-icon-state-edit {\n  background-color: #f44336;\n  color: white;\n}\nbody .mat-step-header .mat-step-icon-state-error {\n  background-color: transparent;\n  color: #f44336;\n}\nbody .mat-step-header .mat-step-label.mat-step-label-active {\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-step-header .mat-step-label.mat-step-label-error {\n  color: #f44336;\n}\nbody .mat-stepper-horizontal, body .mat-stepper-vertical {\n  background-color: white;\n}\nbody .mat-stepper-vertical-line::before {\n  border-left-color: rgba(0, 0, 0, 0.12);\n}\nbody .mat-horizontal-stepper-header::before,\nbody .mat-horizontal-stepper-header::after,\nbody .mat-stepper-horizontal-line {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\nbody .mat-sort-header-arrow {\n  color: #757575;\n}\nbody .mat-tab-nav-bar,\nbody .mat-tab-header {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n}\nbody .mat-tab-group-inverted-header .mat-tab-nav-bar,\nbody .mat-tab-group-inverted-header .mat-tab-header {\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  border-bottom: none;\n}\nbody .mat-tab-label, body .mat-tab-link {\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-tab-label.mat-tab-disabled, body .mat-tab-link.mat-tab-disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-tab-header-pagination-chevron {\n  border-color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(0, 0, 0, 0.38);\n}\nbody .mat-tab-group[class*=mat-background-] .mat-tab-header,\nbody .mat-tab-nav-bar[class*=mat-background-] {\n  border-bottom: none;\n  border-top: none;\n}\nbody .mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), body .mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\nbody .mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\nbody .mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), body .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), body .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\nbody .mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\nbody .mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(197, 202, 233, 0.3);\n}\nbody .mat-tab-group.mat-primary .mat-ink-bar, body .mat-tab-nav-bar.mat-primary .mat-ink-bar {\n  background-color: #3f51b5;\n}\nbody .mat-tab-group.mat-primary.mat-background-primary > .mat-tab-header .mat-ink-bar, body .mat-tab-group.mat-primary.mat-background-primary > .mat-tab-link-container .mat-ink-bar, body .mat-tab-nav-bar.mat-primary.mat-background-primary > .mat-tab-header .mat-ink-bar, body .mat-tab-nav-bar.mat-primary.mat-background-primary > .mat-tab-link-container .mat-ink-bar {\n  background-color: white;\n}\nbody .mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), body .mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\nbody .mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\nbody .mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), body .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), body .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\nbody .mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\nbody .mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 128, 171, 0.3);\n}\nbody .mat-tab-group.mat-accent .mat-ink-bar, body .mat-tab-nav-bar.mat-accent .mat-ink-bar {\n  background-color: #ff4081;\n}\nbody .mat-tab-group.mat-accent.mat-background-accent > .mat-tab-header .mat-ink-bar, body .mat-tab-group.mat-accent.mat-background-accent > .mat-tab-link-container .mat-ink-bar, body .mat-tab-nav-bar.mat-accent.mat-background-accent > .mat-tab-header .mat-ink-bar, body .mat-tab-nav-bar.mat-accent.mat-background-accent > .mat-tab-link-container .mat-ink-bar {\n  background-color: white;\n}\nbody .mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), body .mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\nbody .mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\nbody .mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), body .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), body .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\nbody .mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\nbody .mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 205, 210, 0.3);\n}\nbody .mat-tab-group.mat-warn .mat-ink-bar, body .mat-tab-nav-bar.mat-warn .mat-ink-bar {\n  background-color: #f44336;\n}\nbody .mat-tab-group.mat-warn.mat-background-warn > .mat-tab-header .mat-ink-bar, body .mat-tab-group.mat-warn.mat-background-warn > .mat-tab-link-container .mat-ink-bar, body .mat-tab-nav-bar.mat-warn.mat-background-warn > .mat-tab-header .mat-ink-bar, body .mat-tab-nav-bar.mat-warn.mat-background-warn > .mat-tab-link-container .mat-ink-bar {\n  background-color: white;\n}\nbody .mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), body .mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\nbody .mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\nbody .mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), body .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), body .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\nbody .mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\nbody .mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(197, 202, 233, 0.3);\n}\nbody .mat-tab-group.mat-background-primary > .mat-tab-header, body .mat-tab-group.mat-background-primary > .mat-tab-link-container, body .mat-tab-group.mat-background-primary > .mat-tab-header-pagination, body .mat-tab-nav-bar.mat-background-primary > .mat-tab-header, body .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container, body .mat-tab-nav-bar.mat-background-primary > .mat-tab-header-pagination {\n  background-color: #3f51b5;\n}\nbody .mat-tab-group.mat-background-primary > .mat-tab-header .mat-tab-label, body .mat-tab-group.mat-background-primary > .mat-tab-link-container .mat-tab-link, body .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-tab-label, body .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container .mat-tab-link {\n  color: white;\n}\nbody .mat-tab-group.mat-background-primary > .mat-tab-header .mat-tab-label.mat-tab-disabled, body .mat-tab-group.mat-background-primary > .mat-tab-link-container .mat-tab-link.mat-tab-disabled, body .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-tab-label.mat-tab-disabled, body .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\nbody .mat-tab-group.mat-background-primary > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\nbody .mat-tab-group.mat-background-primary > .mat-tab-links .mat-focus-indicator::before,\nbody .mat-tab-group.mat-background-primary > .mat-tab-header .mat-focus-indicator::before, body .mat-tab-nav-bar.mat-background-primary > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\nbody .mat-tab-nav-bar.mat-background-primary > .mat-tab-links .mat-focus-indicator::before,\nbody .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-focus-indicator::before {\n  border-color: white;\n}\nbody .mat-tab-group.mat-background-primary > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, body .mat-tab-nav-bar.mat-background-primary > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.4);\n}\nbody .mat-tab-group.mat-background-primary > .mat-tab-header .mat-ripple-element,\nbody .mat-tab-group.mat-background-primary > .mat-tab-link-container .mat-ripple-element, body .mat-tab-nav-bar.mat-background-primary > .mat-tab-header .mat-ripple-element,\nbody .mat-tab-nav-bar.mat-background-primary > .mat-tab-link-container .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.12);\n}\nbody .mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), body .mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\nbody .mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\nbody .mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), body .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), body .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\nbody .mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\nbody .mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 128, 171, 0.3);\n}\nbody .mat-tab-group.mat-background-accent > .mat-tab-header, body .mat-tab-group.mat-background-accent > .mat-tab-link-container, body .mat-tab-group.mat-background-accent > .mat-tab-header-pagination, body .mat-tab-nav-bar.mat-background-accent > .mat-tab-header, body .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container, body .mat-tab-nav-bar.mat-background-accent > .mat-tab-header-pagination {\n  background-color: #ff4081;\n}\nbody .mat-tab-group.mat-background-accent > .mat-tab-header .mat-tab-label, body .mat-tab-group.mat-background-accent > .mat-tab-link-container .mat-tab-link, body .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-tab-label, body .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container .mat-tab-link {\n  color: white;\n}\nbody .mat-tab-group.mat-background-accent > .mat-tab-header .mat-tab-label.mat-tab-disabled, body .mat-tab-group.mat-background-accent > .mat-tab-link-container .mat-tab-link.mat-tab-disabled, body .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-tab-label.mat-tab-disabled, body .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\nbody .mat-tab-group.mat-background-accent > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\nbody .mat-tab-group.mat-background-accent > .mat-tab-links .mat-focus-indicator::before,\nbody .mat-tab-group.mat-background-accent > .mat-tab-header .mat-focus-indicator::before, body .mat-tab-nav-bar.mat-background-accent > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\nbody .mat-tab-nav-bar.mat-background-accent > .mat-tab-links .mat-focus-indicator::before,\nbody .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-focus-indicator::before {\n  border-color: white;\n}\nbody .mat-tab-group.mat-background-accent > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, body .mat-tab-nav-bar.mat-background-accent > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.4);\n}\nbody .mat-tab-group.mat-background-accent > .mat-tab-header .mat-ripple-element,\nbody .mat-tab-group.mat-background-accent > .mat-tab-link-container .mat-ripple-element, body .mat-tab-nav-bar.mat-background-accent > .mat-tab-header .mat-ripple-element,\nbody .mat-tab-nav-bar.mat-background-accent > .mat-tab-link-container .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.12);\n}\nbody .mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), body .mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\nbody .mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\nbody .mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), body .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), body .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\nbody .mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\nbody .mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 205, 210, 0.3);\n}\nbody .mat-tab-group.mat-background-warn > .mat-tab-header, body .mat-tab-group.mat-background-warn > .mat-tab-link-container, body .mat-tab-group.mat-background-warn > .mat-tab-header-pagination, body .mat-tab-nav-bar.mat-background-warn > .mat-tab-header, body .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container, body .mat-tab-nav-bar.mat-background-warn > .mat-tab-header-pagination {\n  background-color: #f44336;\n}\nbody .mat-tab-group.mat-background-warn > .mat-tab-header .mat-tab-label, body .mat-tab-group.mat-background-warn > .mat-tab-link-container .mat-tab-link, body .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-tab-label, body .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container .mat-tab-link {\n  color: white;\n}\nbody .mat-tab-group.mat-background-warn > .mat-tab-header .mat-tab-label.mat-tab-disabled, body .mat-tab-group.mat-background-warn > .mat-tab-link-container .mat-tab-link.mat-tab-disabled, body .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-tab-label.mat-tab-disabled, body .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\nbody .mat-tab-group.mat-background-warn > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\nbody .mat-tab-group.mat-background-warn > .mat-tab-links .mat-focus-indicator::before,\nbody .mat-tab-group.mat-background-warn > .mat-tab-header .mat-focus-indicator::before, body .mat-tab-nav-bar.mat-background-warn > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\nbody .mat-tab-nav-bar.mat-background-warn > .mat-tab-links .mat-focus-indicator::before,\nbody .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-focus-indicator::before {\n  border-color: white;\n}\nbody .mat-tab-group.mat-background-warn > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, body .mat-tab-nav-bar.mat-background-warn > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.4);\n}\nbody .mat-tab-group.mat-background-warn > .mat-tab-header .mat-ripple-element,\nbody .mat-tab-group.mat-background-warn > .mat-tab-link-container .mat-ripple-element, body .mat-tab-nav-bar.mat-background-warn > .mat-tab-header .mat-ripple-element,\nbody .mat-tab-nav-bar.mat-background-warn > .mat-tab-link-container .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.12);\n}\nbody .mat-toolbar {\n  background: whitesmoke;\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-toolbar.mat-primary {\n  background: #3f51b5;\n  color: white;\n}\nbody .mat-toolbar.mat-accent {\n  background: #ff4081;\n  color: white;\n}\nbody .mat-toolbar.mat-warn {\n  background: #f44336;\n  color: white;\n}\nbody .mat-toolbar .mat-form-field-underline,\nbody .mat-toolbar .mat-form-field-ripple,\nbody .mat-toolbar .mat-focused .mat-form-field-ripple {\n  background-color: currentColor;\n}\nbody .mat-toolbar .mat-form-field-label,\nbody .mat-toolbar .mat-focused .mat-form-field-label,\nbody .mat-toolbar .mat-select-value,\nbody .mat-toolbar .mat-select-arrow,\nbody .mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\n  color: inherit;\n}\nbody .mat-toolbar .mat-input-element {\n  caret-color: currentColor;\n}\nbody .mat-tooltip {\n  background: rgba(97, 97, 97, 0.9);\n}\nbody .mat-tree {\n  background: white;\n}\nbody .mat-tree-node,\nbody .mat-nested-tree-node {\n  color: rgba(0, 0, 0, 0.87);\n}\nbody .mat-snack-bar-container {\n  color: rgba(255, 255, 255, 0.7);\n  background: #323232;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\nbody .mat-simple-snackbar-action {\n  color: #ff4081;\n}\n.rss-reader-card {\n  width: 350px;\n  box-sizing: border-box;\n  margin: 16px;\n}\n.rss-reader-cards-container {\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-evenly;\n}\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing.dark-backdrop {\n  background: #000;\n}\n.open-in-new-icon {\n  width: 20px;\n  height: 20px;\n  font-size: 20px;\n}\n.mat-button:not([no-caps]),\n.mat-raised-button:not([no-caps]),\n.mat-simple-snackbar-action:not([no-caps]) {\n  text-transform: uppercase;\n}\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n}\nbody {\n  margin: 0;\n  height: 100%;\n}\npre.hljs,\ncode.hljs {\n  white-space: pre-wrap;\n}\n.refreshing > div {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  justify-content: center;\n}\n/* Extracted from market2 */\nmat-spinner.start-indicator svg,\nmat-spinner.start-indicator {\n  width: 22px !important;\n  height: 22px !important;\n}\n.start,\n.center {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: -1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n}\n.checkbox {\n  margin: 6px;\n}\n.custom-snackbar {\n  display: flex;\n  justify-content: space-between;\n  line-height: 20px;\n}\n.custom-snackbar-action {\n  flex-shrink: 0;\n  margin-left: 48px;\n}\n.app-sidenav {\n  width: 240px;\n}\n.selection-dialog > mat-dialog-container > selection-dialog > mat-dialog-content {\n  padding: 0;\n}\n.text-center {\n  text-align: center;\n}\n.warning-icon,\n.build-icon {\n  font-size: 72px;\n  width: 72px !important;\n  height: 72px !important;\n}\n.page-not-found-container {\n  padding: 4px;\n}\n.app-content {\n  margin: 2.5%;\n}\n.party {\n  -webkit-animation: party 5000ms infinite;\n          animation: party 5000ms infinite;\n}\n@-webkit-keyframes party {\n  0% {\n    background-color: #00f;\n  }\n  10% {\n    background-color: #8e44ad;\n  }\n  20% {\n    background-color: #1abc9c;\n  }\n  30% {\n    background-color: #d35400;\n  }\n  40% {\n    background-color: #00f;\n  }\n  50% {\n    background-color: #34495e;\n  }\n  60% {\n    background-color: #00f;\n  }\n  70% {\n    background-color: #2980b9;\n  }\n  80% {\n    background-color: #f1c40f;\n  }\n  90% {\n    background-color: #2980b9;\n  }\n  100% {\n    background-color: #0ff;\n  }\n}\n@keyframes party {\n  0% {\n    background-color: #00f;\n  }\n  10% {\n    background-color: #8e44ad;\n  }\n  20% {\n    background-color: #1abc9c;\n  }\n  30% {\n    background-color: #d35400;\n  }\n  40% {\n    background-color: #00f;\n  }\n  50% {\n    background-color: #34495e;\n  }\n  60% {\n    background-color: #00f;\n  }\n  70% {\n    background-color: #2980b9;\n  }\n  80% {\n    background-color: #f1c40f;\n  }\n  90% {\n    background-color: #2980b9;\n  }\n  100% {\n    background-color: #0ff;\n  }\n}\n.red {\n  background-color: red !important;\n}\ntable {\n  border-collapse: collapse;\n  border-radius: 2px;\n  border-spacing: 0;\n  margin: 0 0 32px 0;\n  width: 100%;\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.24), 0 0 2px rgba(0, 0, 0, 0.12);\n}\nth {\n  font-weight: 400;\n  max-width: 100px;\n  padding: 13px 32px;\n  text-align: left;\n}\ntd {\n  font-weight: 400;\n  padding: 8px 16px;\n}\n.post-dialog .mat-dialog-container {\n  position: absolute;\n  top: 18px;\n  bottom: 0px;\n  width: 100%;\n}\n.post-dialog {\n  position: relative;\n}\n.autocomplete-option .autocomplete-option-img {\n  vertical-align: middle;\n  margin-right: 8px;\n}\n.autocomplete-option .autocomplete-option-img[dir=rtl] {\n  margin-right: 0;\n  margin-left: 8px;\n}\n.form-group {\n  min-width: 150px;\n  max-width: 500px;\n  width: 100%;\n}\n.form-full-width {\n  width: 100%;\n}\nhtml,\nbody {\n  width: 100%;\n  height: 100%;\n}\nkbd {\n  display: inline-block;\n  margin: 0 0.1em;\n  padding: 0.1em 0.6em;\n  font-size: 11px;\n  line-height: 1.4;\n  border: 1px solid #adb3b9;\n  border-radius: 3px;\n  white-space: nowrap;\n}\n.badge {\n  letter-spacing: 0.04em;\n  font-weight: 500;\n  font-size: 0.8em;\n  padding: 2px 8px;\n  border-radius: 16px;\n}\n/* End styles */",""]),__webpack_exports__.a=___CSS_LOADER_EXPORT___},515:function(module,exports){function webpackEmptyAsyncContext(req){return Promise.resolve().then((function(){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}))}webpackEmptyAsyncContext.keys=function(){return[]},webpackEmptyAsyncContext.resolve=webpackEmptyAsyncContext,module.exports=webpackEmptyAsyncContext,webpackEmptyAsyncContext.id=515},577:function(module){module.exports=JSON.parse('{"pipes":[{"name":"OrderByPipe","id":"pipe-OrderByPipe-bf172d4d9084333b338d3f5aa82d3602","file":"projects/rss-reader/src/app/pipe/orderby.pipe.ts","type":"pipe","description":"","properties":[],"methods":[{"name":"transform","args":[{"name":"array","type":"string[]"},{"name":"args","type":"string"}],"optional":false,"returnType":"string[]","typeParameters":[],"line":7,"jsdoctags":[{"name":"array","type":"string[]","tagName":{"text":"param"}},{"name":"args","type":"string","tagName":{"text":"param"}}]}],"ngname":"orderby","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n\\n@Pipe({\\n  name: \'orderby\'\\n  })\\n  export class OrderByPipe implements PipeTransform {\\n  transform(array: string[], args: string): string[] {\\n    array.sort((a: any, b: any) => {\\n    if (a < b) {\\n      return -1;\\n    } else if (a > b) {\\n      return 1;\\n    } else {\\n      return 0;\\n    }\\n    });\\n    return array;\\n  }\\n  }\\n"},{"name":"StripHtmlTagsPipe","id":"pipe-StripHtmlTagsPipe-7d14023316cdd9538a02308b8c587041","file":"projects/rss-reader/src/app/pipe/strip-html-tags.pipe.ts","type":"pipe","description":"","properties":[{"name":"tagBody","defaultValue":"\'(?:[^\\"\\\\\'>]|\\"[^\\"]*\\"|\\\\\'[^\\\\\']*\\\\\')*\'","type":"string","optional":false,"description":"","line":8,"modifierKind":[112]},{"name":"tagOrComment","defaultValue":"new RegExp(\\n    \'<(?:\'\\n    // Comment body.\\n    + \'!--(?:(?:-*[^->])*--+|-?)\'\\n    // Special \\"raw text\\" elements whose content should be elided.\\n    + \'|script\\\\\\\\b\' + this.tagBody + \'>[\\\\\\\\s\\\\\\\\S]*?</script\\\\\\\\s*\'\\n    + \'|style\\\\\\\\b\' + this.tagBody + \'>[\\\\\\\\s\\\\\\\\S]*?</style\\\\\\\\s*\'\\n    // Regular name\\n    + \'|/?[a-z]\'\\n    + this.tagBody\\n    + \')>\',\\n    \'gi\')","type":"RegExp","optional":false,"description":"","line":9,"modifierKind":[112]}],"methods":[{"name":"transform","args":[{"name":"value","type":"string"}],"optional":false,"returnType":"string","typeParameters":[],"line":22,"jsdoctags":[{"name":"value","type":"string","tagName":{"text":"param"}}]}],"ngname":"stripHtmlTags","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n\\n@Pipe({\\n  name: \'stripHtmlTags\'\\n})\\nexport class StripHtmlTagsPipe implements PipeTransform {\\n\\n  private tagBody = \'(?:[^\\"\\\\\'>]|\\"[^\\"]*\\"|\\\\\'[^\\\\\']*\\\\\')*\';\\n  private tagOrComment: RegExp = new RegExp(\\n    \'<(?:\'\\n    // Comment body.\\n    + \'!--(?:(?:-*[^->])*--+|-?)\'\\n    // Special \\"raw text\\" elements whose content should be elided.\\n    + \'|script\\\\\\\\b\' + this.tagBody + \'>[\\\\\\\\s\\\\\\\\S]*?</script\\\\\\\\s*\'\\n    + \'|style\\\\\\\\b\' + this.tagBody + \'>[\\\\\\\\s\\\\\\\\S]*?</style\\\\\\\\s*\'\\n    // Regular name\\n    + \'|/?[a-z]\'\\n    + this.tagBody\\n    + \')>\',\\n    \'gi\');\\n\\n  transform(value: string): string {\\n    let oldHtml;\\n    do {\\n      oldHtml = value;\\n      value = value.replace(this.tagOrComment, \'\');\\n    } while (value !== oldHtml);\\n    return value.replace(/<[^>]+>/gm, \'\');\\n  }\\n\\n}\\n"},{"name":"TruncatePipe","id":"pipe-TruncatePipe-a419c66f9ed7132ddeb113e941b93e0c","file":"projects/rss-reader/src/app/pipe/truncate.pipe.ts","type":"pipe","description":"","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"string"},{"name":"args","type":"any[]","dotDotDotToken":true}],"optional":false,"returnType":"string","typeParameters":[],"line":8,"jsdoctags":[{"name":"value","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any[]","dotDotDotToken":true,"tagName":{"text":"param"}}]}],"ngname":"truncate","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n\\n@Pipe({\\n  name: \'truncate\'\\n})\\nexport class TruncatePipe implements PipeTransform {\\n\\n  transform(value: string, ...args: any[]): string {\\n    const limit = args.length > 0 ? parseInt(args[0], 10) : 20;\\n    const trail = args.length > 1 ? args[1] : \'&hellip;\';\\n    return value.length > limit ? value.substring(0, limit) + trail : value;\\n  }\\n}\\n"}],"interfaces":[{"name":"ActionItem","id":"interface-ActionItem-c871e14c41d3b304fef149fb7ba551ae","file":"projects/rss-reader/src/app/actionitem.service.ts","type":"interface","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { Component, Injectable, NgModule } from \'@angular/core\';\\nimport { MatButtonModule } from \'@angular/material/button\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport { MatMenuModule } from \'@angular/material/menu\';\\nimport { MatTooltipModule } from \'@angular/material/tooltip\';\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\nimport { RouterModule } from \'@angular/router\';\\n\\n/** ID used to generate new action items with no explicitly-defined ID. */\\nlet nextKeyId = 0;\\n\\n@Injectable()\\n/**\\n * A action icon service for the toolbar.\\n */\\nexport class ActionItemService {\\n\\n  readonly actionItems = new Map<string, ActionItem>();\\n  /**\\n   * Adds an action item\\n   * @param actionItem The action item\\n   */\\n  addActionItem(actionItem: ActionItem) {\\n    this.actionItems.set(`actionItem-${nextKeyId++}`, actionItem);\\n  }\\n  /**\\n   * Adds an action item toggle\\n   * @param actionItem The action item\\n   * @deprecated\\n   * @experimental Do not use!\\n   */\\n  addActionItemToggle(actionItem: ActionItemToggle) {\\n    console.warn(\'%cThis method is experimental and may break. Continue at your own risk.\', \'font-weight: 600\');\\n    actionItem.onClickListener = () => {\\n      actionItem.toggleBind = !actionItem.toggleBind;\\n    };\\n    this.actionItems.set(`actionItem-${nextKeyId++}`, actionItem);\\n  }\\n  /**\\n   * Updates an action item by its key\\n   * @param key The key of the action item\\n   * @param actionItem The action item\\n   */\\n  updateActionItemByKey(key: string, actionItem: ActionItem) {\\n    try {\\n      this.actionItems[key] = actionItem;\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Gets all action items\\n   */\\n  getActionItems(): ActionItem[] {\\n    return Array.from(this.actionItems.values());\\n  }\\n  /**\\n   * Removes an action item\\n   * @param key The key of the action item to remove\\n   */\\n  removeActionItemByKey(key: string) {\\n    try {\\n      this.actionItems.delete(key);\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Removes all action items\\n   */\\n  removeActionItems() {\\n    this.actionItems.clear();\\n  }\\n  /**\\n   * Gets a action item by its key\\n   * @param key The key of the action item to retrieve\\n   */\\n  getActionItemByKey(key: string): ActionItem {\\n    try {\\n      return this.actionItems[key];\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Adds a action item on click listener to the specified action item\\n   * Note: This can also be declared manually\\n   * @deprecated Please set the onclick listener in the {@link ActionItem} object itself.\\n   * @param id The id of the action item\\n   * @param callback The callback when the action item is clicked (has to be arrow function)\\n   */\\n  addActionItemOnClickListener(key: string, callback: (ev?: Event) => void) {\\n    try {\\n      this.actionItems[key].onClickListener = callback;\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Throws an error where the id couldn\'t be found\\n   */\\n  private throwKeyNotFoundError(id: string) {\\n    throw new Error(`Could not find an action item with key ${id}`);\\n  }\\n  /**\\n   * Throws an error where the title couldn\'t be found\\n   */\\n  private throwTitleNotFoundError(title: string) {\\n    throw new Error(`Could not find an action item with title ${title}`);\\n  }\\n}\\n\\n/**\\n * An action item\\n */\\nexport interface ActionItem {\\n  /**\\n   * The title of the action item\\n   */\\n  title: string;\\n  /** The ID of the action item */\\n  id?: string;\\n  /**\\n   * The icon of the action item\\n   */\\n  icon?: string;\\n  /**\\n   * The href of the action item\\n   * NOTE: If `routerLink` is specified, don\'t use `href`.\\n   */\\n  href?: string;\\n  /**\\n   * Similar to what Android does.\\n   */\\n  showAsAction?: boolean;\\n  /** Whether the action item should be disabled. */\\n  disabled?: boolean;\\n  /**\\n   * The router link of the action item\\n   * NOTE: If `href` is specified, don\'t use `routerLink`.\\n   */\\n  routerLink?: string;\\n  /**\\n   * The on click listener of the action item\\n   * Note: This can also be set by {@link ActionItemService#addActionItemOnClickListener}\\n   */\\n  onClickListener?: (ev?: Event) => void;\\n  /**\\n   * The submenu of the action item\\n   */\\n  subMenu?: ActionItem[];\\n}\\n/**\\n * An action item toggle\\n */\\nexport interface ActionItemToggle extends ActionItem {\\n  /**\\n   * The toggle boolean to bind to\\n   */\\n  toggleBind: boolean;\\n}\\n\\n@Component({\\n  selector: \'app-action-items\',\\n  template: `\\n\\t<ng-container *ngFor=\\"let actionItem of actionItems\\">\\n    <button\\n    mat-icon-button\\n    *ngIf=\\"actionItem.onClickListener\\"\\n    (click)=\\"actionItem.onClickListener($event)\\"\\n    [matTooltip]=\\"actionItem.title\\"\\n    [disabled]=\\"actionItem.disabled\\">\\n      <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n    </button>\\n    <a mat-icon-button *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [matTooltip]=\\"actionItem.title\\" [disabled]=\\"actionItem.disabled\\">\\n    <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n    </a>\\n    <a\\n      mat-icon-button\\n      *ngIf=\\"actionItem.routerLink\\"\\n      [routerLink]=\\"[actionItem.routerLink]\\"\\n      [matTooltip]=\\"actionItem.title\\"\\n      [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t</a>\\n\\t</ng-container>\\n  <button mat-icon-button *ngIf=\\"showMoreMenu\\" [matMenuTriggerFor]=\\"moreMenu\\"\\n    matTooltip=\\"More options\\">\\n\\t\\t<mat-icon>more_vert</mat-icon>\\n\\t</button>\\n\\t<mat-menu #moreMenu=\\"matMenu\\">\\n\\t\\t<ng-container *ngFor=\\"let actionItem of overflowActionItems\\">\\n\\t\\t\\t<button mat-menu-item *ngIf=\\"actionItem.onClickListener\\" (click)=\\"actionItem.onClickListener($event)\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</button>\\n\\t\\t\\t<a mat-menu-item *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</a>\\n\\t\\t\\t<a mat-menu-item *ngIf=\\"actionItem.routerLink\\" [routerLink]=\\"[actionItem.routerLink]\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</a>\\n\\t\\t</ng-container>\\n\\t</mat-menu>\\n\\t\\t\\t\\t`\\n})\\nexport class ActionItemsComponent {\\n  constructor(private actionItemService: ActionItemService) { }\\n  get actionItems(): ActionItem[] {\\n    return this.actionItemService.getActionItems().filter(item => item.showAsAction);\\n  }\\n  get overflowActionItems(): ActionItem[] {\\n    return this.actionItemService.getActionItems().filter(item => !item.showAsAction);\\n  }\\n  get showMoreMenu() {\\n    return this.actionItemService.getActionItems().find((actionItem: ActionItem): boolean => {\\n      return actionItem.showAsAction !== true;\\n    });\\n  }\\n}\\n\\n@NgModule({\\n  declarations: [\\n    ActionItemsComponent\\n  ],\\n  exports: [\\n    ActionItemsComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    BrowserAnimationsModule,\\n    MatButtonModule,\\n    MatIconModule,\\n    MatMenuModule,\\n    MatTooltipModule,\\n    RouterModule\\n  ],\\n  providers: [\\n    ActionItemService\\n  ]\\n})\\nexport class ActionItemsModule { }\\n","properties":[{"name":"disabled","type":"boolean","optional":true,"description":"<p>Whether the action item should be disabled. </p>\\n","line":138},{"name":"href","type":"string","optional":true,"description":"<p>The href of the action item\\nNOTE: If <code>routerLink</code> is specified, don&#39;t use <code>href</code>.</p>\\n","line":132},{"name":"icon","type":"string","optional":true,"description":"<p>The icon of the action item</p>\\n","line":127},{"name":"id","type":"string","optional":true,"description":"<p>The ID of the action item </p>\\n","line":123},{"name":"onClickListener","type":"function","optional":true,"description":"<p>The on click listener of the action item\\nNote: This can also be set by {@link ActionItemService#addActionItemOnClickListener}</p>\\n","line":148},{"name":"routerLink","type":"string","optional":true,"description":"<p>The router link of the action item\\nNOTE: If <code>href</code> is specified, don&#39;t use <code>routerLink</code>.</p>\\n","line":143},{"name":"showAsAction","type":"boolean","optional":true,"description":"<p>Similar to what Android does.</p>\\n","line":136},{"name":"subMenu","type":"ActionItem[]","optional":true,"description":"<p>The submenu of the action item</p>\\n","line":152},{"name":"title","type":"string","optional":false,"description":"<p>The title of the action item</p>\\n","line":121}],"indexSignatures":[],"kind":150,"description":"<p>An action item</p>\\n","methods":[]},{"name":"ActionItemToggle","id":"interface-ActionItemToggle-c871e14c41d3b304fef149fb7ba551ae","file":"projects/rss-reader/src/app/actionitem.service.ts","type":"interface","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { Component, Injectable, NgModule } from \'@angular/core\';\\nimport { MatButtonModule } from \'@angular/material/button\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport { MatMenuModule } from \'@angular/material/menu\';\\nimport { MatTooltipModule } from \'@angular/material/tooltip\';\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\nimport { RouterModule } from \'@angular/router\';\\n\\n/** ID used to generate new action items with no explicitly-defined ID. */\\nlet nextKeyId = 0;\\n\\n@Injectable()\\n/**\\n * A action icon service for the toolbar.\\n */\\nexport class ActionItemService {\\n\\n  readonly actionItems = new Map<string, ActionItem>();\\n  /**\\n   * Adds an action item\\n   * @param actionItem The action item\\n   */\\n  addActionItem(actionItem: ActionItem) {\\n    this.actionItems.set(`actionItem-${nextKeyId++}`, actionItem);\\n  }\\n  /**\\n   * Adds an action item toggle\\n   * @param actionItem The action item\\n   * @deprecated\\n   * @experimental Do not use!\\n   */\\n  addActionItemToggle(actionItem: ActionItemToggle) {\\n    console.warn(\'%cThis method is experimental and may break. Continue at your own risk.\', \'font-weight: 600\');\\n    actionItem.onClickListener = () => {\\n      actionItem.toggleBind = !actionItem.toggleBind;\\n    };\\n    this.actionItems.set(`actionItem-${nextKeyId++}`, actionItem);\\n  }\\n  /**\\n   * Updates an action item by its key\\n   * @param key The key of the action item\\n   * @param actionItem The action item\\n   */\\n  updateActionItemByKey(key: string, actionItem: ActionItem) {\\n    try {\\n      this.actionItems[key] = actionItem;\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Gets all action items\\n   */\\n  getActionItems(): ActionItem[] {\\n    return Array.from(this.actionItems.values());\\n  }\\n  /**\\n   * Removes an action item\\n   * @param key The key of the action item to remove\\n   */\\n  removeActionItemByKey(key: string) {\\n    try {\\n      this.actionItems.delete(key);\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Removes all action items\\n   */\\n  removeActionItems() {\\n    this.actionItems.clear();\\n  }\\n  /**\\n   * Gets a action item by its key\\n   * @param key The key of the action item to retrieve\\n   */\\n  getActionItemByKey(key: string): ActionItem {\\n    try {\\n      return this.actionItems[key];\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Adds a action item on click listener to the specified action item\\n   * Note: This can also be declared manually\\n   * @deprecated Please set the onclick listener in the {@link ActionItem} object itself.\\n   * @param id The id of the action item\\n   * @param callback The callback when the action item is clicked (has to be arrow function)\\n   */\\n  addActionItemOnClickListener(key: string, callback: (ev?: Event) => void) {\\n    try {\\n      this.actionItems[key].onClickListener = callback;\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Throws an error where the id couldn\'t be found\\n   */\\n  private throwKeyNotFoundError(id: string) {\\n    throw new Error(`Could not find an action item with key ${id}`);\\n  }\\n  /**\\n   * Throws an error where the title couldn\'t be found\\n   */\\n  private throwTitleNotFoundError(title: string) {\\n    throw new Error(`Could not find an action item with title ${title}`);\\n  }\\n}\\n\\n/**\\n * An action item\\n */\\nexport interface ActionItem {\\n  /**\\n   * The title of the action item\\n   */\\n  title: string;\\n  /** The ID of the action item */\\n  id?: string;\\n  /**\\n   * The icon of the action item\\n   */\\n  icon?: string;\\n  /**\\n   * The href of the action item\\n   * NOTE: If `routerLink` is specified, don\'t use `href`.\\n   */\\n  href?: string;\\n  /**\\n   * Similar to what Android does.\\n   */\\n  showAsAction?: boolean;\\n  /** Whether the action item should be disabled. */\\n  disabled?: boolean;\\n  /**\\n   * The router link of the action item\\n   * NOTE: If `href` is specified, don\'t use `routerLink`.\\n   */\\n  routerLink?: string;\\n  /**\\n   * The on click listener of the action item\\n   * Note: This can also be set by {@link ActionItemService#addActionItemOnClickListener}\\n   */\\n  onClickListener?: (ev?: Event) => void;\\n  /**\\n   * The submenu of the action item\\n   */\\n  subMenu?: ActionItem[];\\n}\\n/**\\n * An action item toggle\\n */\\nexport interface ActionItemToggle extends ActionItem {\\n  /**\\n   * The toggle boolean to bind to\\n   */\\n  toggleBind: boolean;\\n}\\n\\n@Component({\\n  selector: \'app-action-items\',\\n  template: `\\n\\t<ng-container *ngFor=\\"let actionItem of actionItems\\">\\n    <button\\n    mat-icon-button\\n    *ngIf=\\"actionItem.onClickListener\\"\\n    (click)=\\"actionItem.onClickListener($event)\\"\\n    [matTooltip]=\\"actionItem.title\\"\\n    [disabled]=\\"actionItem.disabled\\">\\n      <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n    </button>\\n    <a mat-icon-button *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [matTooltip]=\\"actionItem.title\\" [disabled]=\\"actionItem.disabled\\">\\n    <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n    </a>\\n    <a\\n      mat-icon-button\\n      *ngIf=\\"actionItem.routerLink\\"\\n      [routerLink]=\\"[actionItem.routerLink]\\"\\n      [matTooltip]=\\"actionItem.title\\"\\n      [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t</a>\\n\\t</ng-container>\\n  <button mat-icon-button *ngIf=\\"showMoreMenu\\" [matMenuTriggerFor]=\\"moreMenu\\"\\n    matTooltip=\\"More options\\">\\n\\t\\t<mat-icon>more_vert</mat-icon>\\n\\t</button>\\n\\t<mat-menu #moreMenu=\\"matMenu\\">\\n\\t\\t<ng-container *ngFor=\\"let actionItem of overflowActionItems\\">\\n\\t\\t\\t<button mat-menu-item *ngIf=\\"actionItem.onClickListener\\" (click)=\\"actionItem.onClickListener($event)\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</button>\\n\\t\\t\\t<a mat-menu-item *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</a>\\n\\t\\t\\t<a mat-menu-item *ngIf=\\"actionItem.routerLink\\" [routerLink]=\\"[actionItem.routerLink]\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</a>\\n\\t\\t</ng-container>\\n\\t</mat-menu>\\n\\t\\t\\t\\t`\\n})\\nexport class ActionItemsComponent {\\n  constructor(private actionItemService: ActionItemService) { }\\n  get actionItems(): ActionItem[] {\\n    return this.actionItemService.getActionItems().filter(item => item.showAsAction);\\n  }\\n  get overflowActionItems(): ActionItem[] {\\n    return this.actionItemService.getActionItems().filter(item => !item.showAsAction);\\n  }\\n  get showMoreMenu() {\\n    return this.actionItemService.getActionItems().find((actionItem: ActionItem): boolean => {\\n      return actionItem.showAsAction !== true;\\n    });\\n  }\\n}\\n\\n@NgModule({\\n  declarations: [\\n    ActionItemsComponent\\n  ],\\n  exports: [\\n    ActionItemsComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    BrowserAnimationsModule,\\n    MatButtonModule,\\n    MatIconModule,\\n    MatMenuModule,\\n    MatTooltipModule,\\n    RouterModule\\n  ],\\n  providers: [\\n    ActionItemService\\n  ]\\n})\\nexport class ActionItemsModule { }\\n","properties":[{"name":"toggleBind","type":"boolean","optional":false,"description":"<p>The toggle boolean to bind to</p>\\n","line":161}],"indexSignatures":[],"kind":150,"description":"<p>An action item toggle</p>\\n","methods":[],"extends":"ActionItem"},{"name":"ArticleCardComponentHarnessFilters","id":"interface-ArticleCardComponentHarnessFilters-4c251211c504f3f7b940564c328e83ed","file":"projects/rss-reader/src/app/components/article-card/testing/article-card-harness-filters.ts","type":"interface","sourceCode":"import { BaseHarnessFilters } from \'@angular/cdk/testing\';\\n\\nexport interface ArticleCardComponentHarnessFilters extends BaseHarnessFilters {\\n  /** Filters based on the text of the author. */\\n  author?: string | RegExp;\\n  /** Filters based on the published date. */\\n  // TODO: Add support for JS Dates.\\n  pubDate?: string | RegExp;\\n  /** Filters based on the title. */\\n  title?: string | RegExp;\\n  /** Filters based on the image\'s source. */\\n  imgSrc?: string | RegExp;\\n  /** Filters based on the description. */\\n  desc?: string | RegExp;\\n}\\n","properties":[{"name":"author","type":"string | RegExp","optional":true,"description":"<p>Filters based on the text of the author. </p>\\n","line":5},{"name":"desc","type":"string | RegExp","optional":true,"description":"<p>Filters based on the description. </p>\\n","line":14},{"name":"imgSrc","type":"string | RegExp","optional":true,"description":"<p>Filters based on the image&#39;s source. </p>\\n","line":12},{"name":"pubDate","type":"string | RegExp","optional":true,"description":"<p>Filters based on the published date. </p>\\n","line":8},{"name":"title","type":"string | RegExp","optional":true,"description":"<p>Filters based on the title. </p>\\n","line":10}],"indexSignatures":[],"kind":150,"methods":[],"extends":"BaseHarnessFilters"},{"name":"BaseDialogOpts","id":"interface-BaseDialogOpts-b2552c1f9e6d368b51f3e050d9ff84c9","file":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","sourceCode":"import { Portal } from \'@angular/cdk/portal\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\n\\nexport type ButtonType = \'negative\' | \'neutral\' | \'positive\';\\n\\nexport type DialogType = \'alert\' | \'confirm\' | \'message\' | \'prompt\' | \'portal\'\\n  | \'selection\';\\n\\nexport interface BaseDialogOpts {\\n  /** The dialog\'s title. */\\n  title?: string;\\n}\\n\\nexport interface DialogBtnOpts {\\n  /** The positive button\'s text. */\\n  positiveBtnText?: string;\\n  /** The positive button\'s color. */\\n  positiveBtnColor?: ThemePalette;\\n  /** The negative button\'s text. */\\n  negativeBtnText?: string;\\n  /** The negative button\'s color. */\\n  negativeBtnColor?: ThemePalette;\\n  /** The neutral button\'s text. */\\n  neutralBtnText?: string;\\n  /** The neutral button\'s color. */\\n  neutralBtnColor?: ThemePalette;\\n  /**\\n   * Whether to hide the action buttons.\\n   *\\n   * Optionally, you can specify which buttons to hide.\\n   */\\n  hideActionBtns?: ButtonType[] | boolean;\\n  /** The initial button to focus on. */\\n  initialActionBtnFocus?: ButtonType;\\n}\\n\\nexport interface DialogOptsWithMsg {\\n  /** The dialog\'s message. */\\n  msg?: string | SafeHtml;\\n  /** The dialog\'s title. */\\n  title?: string;\\n  /** Whether the dialog\'s message is in HTML. */\\n  isHtml?: boolean;\\n}\\n\\nexport interface DialogOpts extends BaseDialogOpts, DialogBtnOpts,\\n  DialogOptsWithMsg { }\\n\\nexport interface PromptDialogInputConfig {\\n  /** The input\'s placeholder. */\\n  placeholder?: string;\\n  /** The input\'s label. */\\n  label?: string;\\n  /** The input type. */\\n  inputType?: string;\\n  /** The input\'s initial value. */\\n  value?: string;\\n  /** The input\'s color. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PromptDialogOpts extends DialogOpts {\\n  /** Configuration for the input. */\\n  inputConfig?: PromptDialogInputConfig;\\n  /**\\n   * The input\'s placeholder.\\n   * @deprecated Use {@link PromptDialogInputConfig#placeholder} instead\\n   */\\n  placeholder?: string;\\n  /**\\n   * The input type.\\n   * @deprecated Use {@link PromptDialogInputConfig#inputType} instead\\n   */\\n  inputType?: \'text\' | \'email\' | \'password\' | \'number\';\\n  /**\\n   * The initial value of the input\\n   * @deprecated Use {@link PromptDialogInputConfig#value} instead\\n   */\\n  value?: string | number;\\n  /**\\n   * The color of the input\\n   * @deprecated Use {@link PromptDialogInputConfig#color} instead\\n   */\\n  color?: ThemePalette;\\n}\\n\\nexport interface SelectionDialogOpts extends DialogOpts {\\n  /** Options to be shown in the dialog. */\\n  options: SelectionDialogOption[];\\n}\\n\\nexport interface SelectionDialogOption {\\n  /** The title of the option. */\\n  title: string;\\n  /** The value of the option. */\\n  value: any;\\n  /** Whether the option is disabled. */\\n  disabled?: boolean;\\n  /** Whether the option is initially selected. */\\n  selected?: boolean;\\n  /** The checkbox position of the option. */\\n  checkboxPosition?: \'before\' | \'after\';\\n  /** The color of the option. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PortalDialogOpts<T> extends DialogOpts {\\n  /** The portal to render in the dialog. */\\n  portal: Portal<T>;\\n}\\n\\n/** The result returned by the dialog. */\\nexport enum DialogResult {\\n  /** Indicates that the user clicked the \\"Cancel\\" (or negative) button. */\\n  NEGATIVE = \'cancel\',\\n  /** Alias for {@link DialogResult#NEGATIVE}. */\\n  CANCEL = \'cancel\',\\n  /** Indicates that the user clicked the neutral button. */\\n  NEUTRAL = \'neutral\',\\n  /** Indicates that the user clicked the \\"OK\\" (or positive) button. */\\n  POSITIVE = \'ok\',\\n  /** Alias for {@link DialogResult#POSITIVE}. */\\n  OK = \'ok\'\\n}\\n","properties":[{"name":"title","type":"string","optional":true,"description":"<p>The dialog&#39;s title. </p>\\n","line":12}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"DialogBtnOpts","id":"interface-DialogBtnOpts-b2552c1f9e6d368b51f3e050d9ff84c9","file":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","sourceCode":"import { Portal } from \'@angular/cdk/portal\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\n\\nexport type ButtonType = \'negative\' | \'neutral\' | \'positive\';\\n\\nexport type DialogType = \'alert\' | \'confirm\' | \'message\' | \'prompt\' | \'portal\'\\n  | \'selection\';\\n\\nexport interface BaseDialogOpts {\\n  /** The dialog\'s title. */\\n  title?: string;\\n}\\n\\nexport interface DialogBtnOpts {\\n  /** The positive button\'s text. */\\n  positiveBtnText?: string;\\n  /** The positive button\'s color. */\\n  positiveBtnColor?: ThemePalette;\\n  /** The negative button\'s text. */\\n  negativeBtnText?: string;\\n  /** The negative button\'s color. */\\n  negativeBtnColor?: ThemePalette;\\n  /** The neutral button\'s text. */\\n  neutralBtnText?: string;\\n  /** The neutral button\'s color. */\\n  neutralBtnColor?: ThemePalette;\\n  /**\\n   * Whether to hide the action buttons.\\n   *\\n   * Optionally, you can specify which buttons to hide.\\n   */\\n  hideActionBtns?: ButtonType[] | boolean;\\n  /** The initial button to focus on. */\\n  initialActionBtnFocus?: ButtonType;\\n}\\n\\nexport interface DialogOptsWithMsg {\\n  /** The dialog\'s message. */\\n  msg?: string | SafeHtml;\\n  /** The dialog\'s title. */\\n  title?: string;\\n  /** Whether the dialog\'s message is in HTML. */\\n  isHtml?: boolean;\\n}\\n\\nexport interface DialogOpts extends BaseDialogOpts, DialogBtnOpts,\\n  DialogOptsWithMsg { }\\n\\nexport interface PromptDialogInputConfig {\\n  /** The input\'s placeholder. */\\n  placeholder?: string;\\n  /** The input\'s label. */\\n  label?: string;\\n  /** The input type. */\\n  inputType?: string;\\n  /** The input\'s initial value. */\\n  value?: string;\\n  /** The input\'s color. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PromptDialogOpts extends DialogOpts {\\n  /** Configuration for the input. */\\n  inputConfig?: PromptDialogInputConfig;\\n  /**\\n   * The input\'s placeholder.\\n   * @deprecated Use {@link PromptDialogInputConfig#placeholder} instead\\n   */\\n  placeholder?: string;\\n  /**\\n   * The input type.\\n   * @deprecated Use {@link PromptDialogInputConfig#inputType} instead\\n   */\\n  inputType?: \'text\' | \'email\' | \'password\' | \'number\';\\n  /**\\n   * The initial value of the input\\n   * @deprecated Use {@link PromptDialogInputConfig#value} instead\\n   */\\n  value?: string | number;\\n  /**\\n   * The color of the input\\n   * @deprecated Use {@link PromptDialogInputConfig#color} instead\\n   */\\n  color?: ThemePalette;\\n}\\n\\nexport interface SelectionDialogOpts extends DialogOpts {\\n  /** Options to be shown in the dialog. */\\n  options: SelectionDialogOption[];\\n}\\n\\nexport interface SelectionDialogOption {\\n  /** The title of the option. */\\n  title: string;\\n  /** The value of the option. */\\n  value: any;\\n  /** Whether the option is disabled. */\\n  disabled?: boolean;\\n  /** Whether the option is initially selected. */\\n  selected?: boolean;\\n  /** The checkbox position of the option. */\\n  checkboxPosition?: \'before\' | \'after\';\\n  /** The color of the option. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PortalDialogOpts<T> extends DialogOpts {\\n  /** The portal to render in the dialog. */\\n  portal: Portal<T>;\\n}\\n\\n/** The result returned by the dialog. */\\nexport enum DialogResult {\\n  /** Indicates that the user clicked the \\"Cancel\\" (or negative) button. */\\n  NEGATIVE = \'cancel\',\\n  /** Alias for {@link DialogResult#NEGATIVE}. */\\n  CANCEL = \'cancel\',\\n  /** Indicates that the user clicked the neutral button. */\\n  NEUTRAL = \'neutral\',\\n  /** Indicates that the user clicked the \\"OK\\" (or positive) button. */\\n  POSITIVE = \'ok\',\\n  /** Alias for {@link DialogResult#POSITIVE}. */\\n  OK = \'ok\'\\n}\\n","properties":[{"name":"hideActionBtns","type":"ButtonType[] | boolean","optional":true,"description":"<p>Whether to hide the action buttons.</p>\\n<p>Optionally, you can specify which buttons to hide.</p>\\n","line":33},{"name":"initialActionBtnFocus","type":"ButtonType","optional":true,"description":"<p>The initial button to focus on. </p>\\n","line":35},{"name":"negativeBtnColor","type":"ThemePalette","optional":true,"description":"<p>The negative button&#39;s color. </p>\\n","line":23},{"name":"negativeBtnText","type":"string","optional":true,"description":"<p>The negative button&#39;s text. </p>\\n","line":21},{"name":"neutralBtnColor","type":"ThemePalette","optional":true,"description":"<p>The neutral button&#39;s color. </p>\\n","line":27},{"name":"neutralBtnText","type":"string","optional":true,"description":"<p>The neutral button&#39;s text. </p>\\n","line":25},{"name":"positiveBtnColor","type":"ThemePalette","optional":true,"description":"<p>The positive button&#39;s color. </p>\\n","line":19},{"name":"positiveBtnText","type":"string","optional":true,"description":"<p>The positive button&#39;s text. </p>\\n","line":17}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"DialogOpts","id":"interface-DialogOpts-b2552c1f9e6d368b51f3e050d9ff84c9","file":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","sourceCode":"import { Portal } from \'@angular/cdk/portal\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\n\\nexport type ButtonType = \'negative\' | \'neutral\' | \'positive\';\\n\\nexport type DialogType = \'alert\' | \'confirm\' | \'message\' | \'prompt\' | \'portal\'\\n  | \'selection\';\\n\\nexport interface BaseDialogOpts {\\n  /** The dialog\'s title. */\\n  title?: string;\\n}\\n\\nexport interface DialogBtnOpts {\\n  /** The positive button\'s text. */\\n  positiveBtnText?: string;\\n  /** The positive button\'s color. */\\n  positiveBtnColor?: ThemePalette;\\n  /** The negative button\'s text. */\\n  negativeBtnText?: string;\\n  /** The negative button\'s color. */\\n  negativeBtnColor?: ThemePalette;\\n  /** The neutral button\'s text. */\\n  neutralBtnText?: string;\\n  /** The neutral button\'s color. */\\n  neutralBtnColor?: ThemePalette;\\n  /**\\n   * Whether to hide the action buttons.\\n   *\\n   * Optionally, you can specify which buttons to hide.\\n   */\\n  hideActionBtns?: ButtonType[] | boolean;\\n  /** The initial button to focus on. */\\n  initialActionBtnFocus?: ButtonType;\\n}\\n\\nexport interface DialogOptsWithMsg {\\n  /** The dialog\'s message. */\\n  msg?: string | SafeHtml;\\n  /** The dialog\'s title. */\\n  title?: string;\\n  /** Whether the dialog\'s message is in HTML. */\\n  isHtml?: boolean;\\n}\\n\\nexport interface DialogOpts extends BaseDialogOpts, DialogBtnOpts,\\n  DialogOptsWithMsg { }\\n\\nexport interface PromptDialogInputConfig {\\n  /** The input\'s placeholder. */\\n  placeholder?: string;\\n  /** The input\'s label. */\\n  label?: string;\\n  /** The input type. */\\n  inputType?: string;\\n  /** The input\'s initial value. */\\n  value?: string;\\n  /** The input\'s color. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PromptDialogOpts extends DialogOpts {\\n  /** Configuration for the input. */\\n  inputConfig?: PromptDialogInputConfig;\\n  /**\\n   * The input\'s placeholder.\\n   * @deprecated Use {@link PromptDialogInputConfig#placeholder} instead\\n   */\\n  placeholder?: string;\\n  /**\\n   * The input type.\\n   * @deprecated Use {@link PromptDialogInputConfig#inputType} instead\\n   */\\n  inputType?: \'text\' | \'email\' | \'password\' | \'number\';\\n  /**\\n   * The initial value of the input\\n   * @deprecated Use {@link PromptDialogInputConfig#value} instead\\n   */\\n  value?: string | number;\\n  /**\\n   * The color of the input\\n   * @deprecated Use {@link PromptDialogInputConfig#color} instead\\n   */\\n  color?: ThemePalette;\\n}\\n\\nexport interface SelectionDialogOpts extends DialogOpts {\\n  /** Options to be shown in the dialog. */\\n  options: SelectionDialogOption[];\\n}\\n\\nexport interface SelectionDialogOption {\\n  /** The title of the option. */\\n  title: string;\\n  /** The value of the option. */\\n  value: any;\\n  /** Whether the option is disabled. */\\n  disabled?: boolean;\\n  /** Whether the option is initially selected. */\\n  selected?: boolean;\\n  /** The checkbox position of the option. */\\n  checkboxPosition?: \'before\' | \'after\';\\n  /** The color of the option. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PortalDialogOpts<T> extends DialogOpts {\\n  /** The portal to render in the dialog. */\\n  portal: Portal<T>;\\n}\\n\\n/** The result returned by the dialog. */\\nexport enum DialogResult {\\n  /** Indicates that the user clicked the \\"Cancel\\" (or negative) button. */\\n  NEGATIVE = \'cancel\',\\n  /** Alias for {@link DialogResult#NEGATIVE}. */\\n  CANCEL = \'cancel\',\\n  /** Indicates that the user clicked the neutral button. */\\n  NEUTRAL = \'neutral\',\\n  /** Indicates that the user clicked the \\"OK\\" (or positive) button. */\\n  POSITIVE = \'ok\',\\n  /** Alias for {@link DialogResult#POSITIVE}. */\\n  OK = \'ok\'\\n}\\n","properties":[],"indexSignatures":[],"methods":[],"extends":"BaseDialogOpts"},{"name":"DialogOptsWithMsg","id":"interface-DialogOptsWithMsg-b2552c1f9e6d368b51f3e050d9ff84c9","file":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","sourceCode":"import { Portal } from \'@angular/cdk/portal\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\n\\nexport type ButtonType = \'negative\' | \'neutral\' | \'positive\';\\n\\nexport type DialogType = \'alert\' | \'confirm\' | \'message\' | \'prompt\' | \'portal\'\\n  | \'selection\';\\n\\nexport interface BaseDialogOpts {\\n  /** The dialog\'s title. */\\n  title?: string;\\n}\\n\\nexport interface DialogBtnOpts {\\n  /** The positive button\'s text. */\\n  positiveBtnText?: string;\\n  /** The positive button\'s color. */\\n  positiveBtnColor?: ThemePalette;\\n  /** The negative button\'s text. */\\n  negativeBtnText?: string;\\n  /** The negative button\'s color. */\\n  negativeBtnColor?: ThemePalette;\\n  /** The neutral button\'s text. */\\n  neutralBtnText?: string;\\n  /** The neutral button\'s color. */\\n  neutralBtnColor?: ThemePalette;\\n  /**\\n   * Whether to hide the action buttons.\\n   *\\n   * Optionally, you can specify which buttons to hide.\\n   */\\n  hideActionBtns?: ButtonType[] | boolean;\\n  /** The initial button to focus on. */\\n  initialActionBtnFocus?: ButtonType;\\n}\\n\\nexport interface DialogOptsWithMsg {\\n  /** The dialog\'s message. */\\n  msg?: string | SafeHtml;\\n  /** The dialog\'s title. */\\n  title?: string;\\n  /** Whether the dialog\'s message is in HTML. */\\n  isHtml?: boolean;\\n}\\n\\nexport interface DialogOpts extends BaseDialogOpts, DialogBtnOpts,\\n  DialogOptsWithMsg { }\\n\\nexport interface PromptDialogInputConfig {\\n  /** The input\'s placeholder. */\\n  placeholder?: string;\\n  /** The input\'s label. */\\n  label?: string;\\n  /** The input type. */\\n  inputType?: string;\\n  /** The input\'s initial value. */\\n  value?: string;\\n  /** The input\'s color. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PromptDialogOpts extends DialogOpts {\\n  /** Configuration for the input. */\\n  inputConfig?: PromptDialogInputConfig;\\n  /**\\n   * The input\'s placeholder.\\n   * @deprecated Use {@link PromptDialogInputConfig#placeholder} instead\\n   */\\n  placeholder?: string;\\n  /**\\n   * The input type.\\n   * @deprecated Use {@link PromptDialogInputConfig#inputType} instead\\n   */\\n  inputType?: \'text\' | \'email\' | \'password\' | \'number\';\\n  /**\\n   * The initial value of the input\\n   * @deprecated Use {@link PromptDialogInputConfig#value} instead\\n   */\\n  value?: string | number;\\n  /**\\n   * The color of the input\\n   * @deprecated Use {@link PromptDialogInputConfig#color} instead\\n   */\\n  color?: ThemePalette;\\n}\\n\\nexport interface SelectionDialogOpts extends DialogOpts {\\n  /** Options to be shown in the dialog. */\\n  options: SelectionDialogOption[];\\n}\\n\\nexport interface SelectionDialogOption {\\n  /** The title of the option. */\\n  title: string;\\n  /** The value of the option. */\\n  value: any;\\n  /** Whether the option is disabled. */\\n  disabled?: boolean;\\n  /** Whether the option is initially selected. */\\n  selected?: boolean;\\n  /** The checkbox position of the option. */\\n  checkboxPosition?: \'before\' | \'after\';\\n  /** The color of the option. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PortalDialogOpts<T> extends DialogOpts {\\n  /** The portal to render in the dialog. */\\n  portal: Portal<T>;\\n}\\n\\n/** The result returned by the dialog. */\\nexport enum DialogResult {\\n  /** Indicates that the user clicked the \\"Cancel\\" (or negative) button. */\\n  NEGATIVE = \'cancel\',\\n  /** Alias for {@link DialogResult#NEGATIVE}. */\\n  CANCEL = \'cancel\',\\n  /** Indicates that the user clicked the neutral button. */\\n  NEUTRAL = \'neutral\',\\n  /** Indicates that the user clicked the \\"OK\\" (or positive) button. */\\n  POSITIVE = \'ok\',\\n  /** Alias for {@link DialogResult#POSITIVE}. */\\n  OK = \'ok\'\\n}\\n","properties":[{"name":"isHtml","type":"boolean","optional":true,"description":"<p>Whether the dialog&#39;s message is in HTML. </p>\\n","line":44},{"name":"msg","type":"string | SafeHtml","optional":true,"description":"<p>The dialog&#39;s message. </p>\\n","line":40},{"name":"title","type":"string","optional":true,"description":"<p>The dialog&#39;s title. </p>\\n","line":42}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"Environment","id":"interface-Environment-433802bf2ceda6396ce0e3d28fdc2971","file":"projects/rss-reader/src/environment.base.ts","type":"interface","sourceCode":"import { Version } from \'@angular/core\';\\nimport { ExtraOptions } from \'@angular/router\';\\nimport { GitRepo } from \'./app/pages/release-notes/models/release-notes\';\\nimport { latestVersion as versionJson } from \'./assets/release-notes/release-notes.json\';\\n\\n// This file contains the constants that all of the environments\\n// that the app defines.\\n\\n/** Environment interface */\\nexport interface Environment {\\n  /** The app\'s latest version. */\\n  latestVersion: Version;\\n  /** Whether the environment is in production mode. */\\n  production: boolean;\\n  /** Location of the service worker file. */\\n  swLocation?: string;\\n  /**\\n   * Router options to be passed to `RouterModule.forRoot` in the main routing\\n   * module.\\n   */\\n  routerOptions?: ExtraOptions;\\n  /** Default Git repo options to be used in-place for the release notes options. */\\n  gitRepoDefaults?: GitRepo;\\n}\\n\\n/** The latest version of the app. */\\nexport const latestVersion = new Version(versionJson);\\n\\n/** Default configuration for the Git repository. */\\nexport const gitRepoDefaults: GitRepo = {\\n  host: \'https://github.com\',\\n  username: \'EdricChan03\',\\n  repo: \'rss-reader\'\\n};\\n\\n/** Default environment that other enviroments can extend from. */\\nexport const defaultEnvironment: Environment = {\\n  production: false,\\n  swLocation: \'/ngsw-worker.js\',\\n  latestVersion,\\n  gitRepoDefaults\\n};\\n\\n/**\\n * Merges the specified environment with the default environment\\n * and returns the result.\\n * @param env The enviroment to merge\\n */\\nexport function mergeWithDefaultEnv(env: Partial<Environment>): Environment {\\n  return { ...defaultEnvironment, ...env };\\n}\\n","properties":[{"name":"gitRepoDefaults","type":"GitRepo","optional":true,"description":"<p>Default Git repo options to be used in-place for the release notes options. </p>\\n","line":23},{"name":"latestVersion","type":"Version","optional":false,"description":"<p>The app&#39;s latest version. </p>\\n","line":12},{"name":"production","type":"boolean","optional":false,"description":"<p>Whether the environment is in production mode. </p>\\n","line":14},{"name":"routerOptions","type":"ExtraOptions","optional":true,"description":"<p>Router options to be passed to <code>RouterModule.forRoot</code> in the main routing\\nmodule.</p>\\n","line":21},{"name":"swLocation","type":"string","optional":true,"description":"<p>Location of the service worker file. </p>\\n","line":16}],"indexSignatures":[],"kind":150,"description":"<p>Environment interface </p>\\n","methods":[]},{"name":"Feed","id":"interface-Feed-5b3fcdb3ad6d1f943f4cddb5decab155","file":"projects/rss-reader/src/app/models/feed.ts","type":"interface","sourceCode":"import { FeedCategory } from \'./feed-category\';\\n\\nexport interface Feed {\\n  // status: string;\\n  // feed: FeedInfo;\\n  // items: FeedEntry[];\\n  $schema: string;\\n  feedUrls: FeedCategory[];\\n}\\n","properties":[{"name":"$schema","type":"string","optional":false,"description":"","line":9},{"name":"feedUrls","type":"FeedCategory[]","optional":false,"description":"","line":10}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"FeedCategory","id":"interface-FeedCategory-97a2d745c186f9f58fab61104a443109","file":"projects/rss-reader/src/app/models/feed-category.ts","type":"interface","sourceCode":"import { FeedChannel } from \'./feed-channel\';\\n\\nexport interface FeedCategory {\\n  categoryName: string;\\n  categoryId: string;\\n  channels: FeedChannel[];\\n}\\n","properties":[{"name":"categoryId","type":"string","optional":false,"description":"","line":5},{"name":"categoryName","type":"string","optional":false,"description":"","line":4},{"name":"channels","type":"FeedChannel[]","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"FeedChannel","id":"interface-FeedChannel-c263777fc7155ef288ed87e66ed588fb","file":"projects/rss-reader/src/app/models/feed-channel.ts","type":"interface","sourceCode":"export interface FeedChannel {\\n  /**\\n   * The name of the RSS channel\\n   */\\n  feedName: string;\\n  /**\\n   * The RSS feed URL of the RSS channel\\n   */\\n  feedUrl: string;\\n  /**\\n   * More info about the RSS channel\\n   */\\n  feedDescription?: string;\\n}\\n","properties":[{"name":"feedDescription","type":"string","optional":true,"description":"<p>More info about the RSS channel</p>\\n","line":13},{"name":"feedName","type":"string","optional":false,"description":"<p>The name of the RSS channel</p>\\n","line":5},{"name":"feedUrl","type":"string","optional":false,"description":"<p>The RSS feed URL of the RSS channel</p>\\n","line":9}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"FeedEntry","id":"interface-FeedEntry-75d7974a08f30aa45ce91dc8be94fff7","file":"projects/rss-reader/src/app/models/feed-entry.ts","type":"interface","sourceCode":"export interface FeedEntry {\\n  /**\\n   * The title of the entry\\n   */\\n  title?: string;\\n  /**\\n   * The link of the entry\\n   */\\n  link?: string;\\n  guid?: string;\\n  /**\\n   * The date that the entry was published on\\n   */\\n  pubDate?: string;\\n  /**\\n   * An array of categories/tags assigned to the entry\\n   */\\n  categories?: string[];\\n  /**\\n   * The person who wrote the entry\\n   */\\n  author?: string;\\n  /**\\n   * A thumbnail of the entry\\n   */\\n  thumbnail?: string;\\n  /**\\n   * Description/the contents of the entry\\n   */\\n  description?: string;\\n  content?: string;\\n  enclosure?: {\\n    link?: string;\\n    length?: number;\\n    type?: string;\\n  } | {\\n    [key: string]: string;\\n  };\\n}\\n","properties":[{"name":"author","type":"string","optional":true,"description":"<p>The person who wrote the entry</p>\\n","line":22},{"name":"categories","type":"string[]","optional":true,"description":"<p>An array of categories/tags assigned to the entry</p>\\n","line":18},{"name":"content","type":"string","optional":true,"description":"","line":31},{"name":"description","type":"string","optional":true,"description":"<p>Description/the contents of the entry</p>\\n","line":30},{"name":"enclosure","type":"literal type | literal type","optional":true,"description":"","line":32},{"name":"guid","type":"string","optional":true,"description":"","line":10},{"name":"link","type":"string","optional":true,"description":"<p>The link of the entry</p>\\n","line":9},{"name":"pubDate","type":"string","optional":true,"description":"<p>The date that the entry was published on</p>\\n","line":14},{"name":"thumbnail","type":"string","optional":true,"description":"<p>A thumbnail of the entry</p>\\n","line":26},{"name":"title","type":"string","optional":true,"description":"<p>The title of the entry</p>\\n","line":5}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"FeedInfo","id":"interface-FeedInfo-8fb44af98db89ef8083d10798b3b5e59","file":"projects/rss-reader/src/app/models/feed-info.ts","type":"interface","sourceCode":"export interface FeedInfo {\\n  title: string;\\n  link: string;\\n  author: string;\\n  description: string;\\n  image: string;\\n}\\n","properties":[{"name":"author","type":"string","optional":false,"description":"","line":4},{"name":"description","type":"string","optional":false,"description":"","line":5},{"name":"image","type":"string","optional":false,"description":"","line":6},{"name":"link","type":"string","optional":false,"description":"","line":3},{"name":"title","type":"string","optional":false,"description":"","line":2}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"FeedOptions","id":"interface-FeedOptions-fbe9a407fabad7d8ae218c498f6f5125","file":"projects/rss-reader/src/app/feed/feed.component.ts","type":"interface","sourceCode":"import { HttpClient, HttpErrorResponse, HttpParams } from \'@angular/common/http\';\\nimport { Component, OnDestroy, OnInit } from \'@angular/core\';\\nimport { MatDialog } from \'@angular/material/dialog\';\\nimport { Observable, Subject, Subscription, throwError } from \'rxjs\';\\nimport { catchError, map, tap } from \'rxjs/operators\';\\n\\nimport { ActionItemService } from \'../actionitem.service\';\\nimport { DialogsService } from \'../core/dialogs/dialogs.service\';\\nimport { CodeViewerDialogComponent, FeedDialogComponent, RSSChannelInfoDialogComponent } from \'../dialogs\';\\nimport { HotkeysService } from \'../hotkeys/hotkeys.service\';\\nimport { Rss2JsonResponseItem } from \'../models/rss2json-api/item\';\\nimport { migrateKeys } from \'../models/rss2json-api/migrate-keys\';\\nimport { Rss2JsonParams } from \'../models/rss2json-api/params\';\\nimport { Rss2JsonResponse } from \'../models/rss2json-api/response\';\\nimport { SharedService } from \'../shared.service\';\\n\\n\\n@Component({\\n  selector: \'app-feed\',\\n  templateUrl: \'./feed.component.html\'\\n})\\nexport class FeedComponent implements OnDestroy, OnInit {\\n  isRefreshing = true;\\n  errorObject = new Subject<HttpErrorResponse>();\\n  rss2JsonResponse$: Observable<Rss2JsonResponse>;\\n  feedItems$: Observable<Rss2JsonResponseItem[]>;\\n  rssToJsonServiceBaseUrl = \'https://api.rss2json.com/v1/api.json\';\\n  // See https://stackoverflow.com/a/12444641 for more info\\n  shortcutHandlers: Subscription[] = [];\\n  constructor(\\n    private coreDialogs: DialogsService,\\n    private dialog: MatDialog,\\n    private http: HttpClient,\\n    private shared: SharedService,\\n    private actionItemService: ActionItemService,\\n    private hotkeys: HotkeysService\\n  ) {\\n    const refreshShortcut = hotkeys.addShortcut({ keys: \'r\', description: \'Refresh the feed\', shortcutBlacklistEls: [\'input\', \'textarea\'] })\\n      .subscribe(() => {\\n        this.reloadFeed();\\n      });\\n    this.shortcutHandlers.push(refreshShortcut);\\n    this.actionItemService.addActionItem({\\n      title: \'RSS Options...\', icon: \'tune\', showAsAction: true, onClickListener: () => {\\n        this.selectRss();\\n      }\\n    });\\n    this.actionItemService.addActionItem({\\n      title: \'Refresh feed\',\\n      icon: \'sync\',\\n      showAsAction: true,\\n      onClickListener: () => {\\n        this.reloadFeed();\\n      }\\n    });\\n    this.actionItemService.addActionItem({\\n      title: \'View API response\',\\n      icon: \'code\',\\n      onClickListener: () => {\\n        this.openCodeViewerDialog();\\n      }\\n    });\\n  }\\n\\n  openRSSInfoDialog() {\\n    this.dialog.open(RSSChannelInfoDialogComponent);\\n  }\\n\\n  openCodeViewerDialog() {\\n    this.rss2JsonResponse$.subscribe(res => {\\n      this.dialog.open(CodeViewerDialogComponent, {\\n        data: res\\n      });\\n    }, error => {\\n      this.shared.openSnackBar({\\n        msg: \'Could not view API response because an error occurred. Please try again later\'\\n      });\\n      console.error(\'Could not view API response:\', error);\\n    });\\n  }\\n\\n  reload() {\\n    this.coreDialogs.openConfirmDialog({\\n      msg: \'Are you sure you want to refresh? Changes will not be saved!\',\\n      title: \'Reload?\'\\n    }).afterClosed().subscribe(result => {\\n      if (result === \'ok\') {\\n        window.location.reload();\\n      }\\n    });\\n  }\\n\\n  getFeed(options: Rss2JsonParams) {\\n    let params = new HttpParams();\\n    for (const key in options) {\\n      if (options[key] !== null) {\\n        // HttpParams is immutable, so we have to manually set the new value\\n        params = params.append(key, options[key]);\\n      }\\n    }\\n    return this.http.get<Rss2JsonResponse>(this.rssToJsonServiceBaseUrl, { params });\\n  }\\n\\n  reloadFeed() {\\n    let params: Rss2JsonParams = {\\n      rss_url: \'\'\\n    };\\n    if (localStorage.feedOptions) {\\n      if (\'feedUrl\' in JSON.parse(localStorage.feedOptions)) {\\n        // feedOptions is using the old values - so we migrate the values\\n        const migratedOpts: Partial<Rss2JsonParams> = {};\\n\\n        const opts = JSON.parse(localStorage.feedOptions) as FeedOptions;\\n        for (const key in opts) {\\n          if (opts[key] !== null) {\\n            migratedOpts[migrateKeys[key]] = opts[key];\\n          }\\n        }\\n        console.log(\'Old feed options:\', opts);\\n        console.log(\'Migrated feed options:\', migratedOpts);\\n        localStorage.feedOptions = JSON.stringify(migratedOpts);\\n      }\\n      params = JSON.parse(localStorage.feedOptions) as Rss2JsonParams;\\n    }\\n    this.isRefreshing = true;\\n    this.errorObject.next(null);\\n    this.rss2JsonResponse$ = this.getFeed(params).pipe(tap(() => {\\n      this.isRefreshing = false;\\n    }), catchError(error => {\\n      this.errorObject.next(error);\\n      console.error(\'An error occurred:\', error);\\n      return throwError(error);\\n    }));\\n    this.feedItems$ = this.rss2JsonResponse$.pipe(map(res => res.items));\\n  }\\n\\n  selectRss() {\\n    const dialogRef = this.dialog.open(FeedDialogComponent);\\n    dialogRef.afterClosed().subscribe(result => {\\n      if (result !== \'save\' && typeof result === \'object\') {\\n        localStorage.feedOptions = JSON.stringify(result);\\n        this.reloadFeed();\\n      }\\n    });\\n  }\\n\\n  ngOnInit() {\\n    if (!localStorage.feedOptions) {\\n      this.selectRss();\\n    }\\n    this.reloadFeed();\\n  }\\n\\n  ngOnDestroy() {\\n    if (this.shortcutHandlers.length > 0) {\\n      this.shortcutHandlers.forEach((handler) => {\\n        handler.unsubscribe();\\n      });\\n    }\\n  }\\n\\n}\\n\\nexport interface FeedOptions {\\n  feedUrl?: string;\\n  apiKey?: string;\\n  amount?: number;\\n}\\n","properties":[{"name":"amount","type":"number","optional":true,"description":"","line":167},{"name":"apiKey","type":"string","optional":true,"description":"","line":166},{"name":"feedUrl","type":"string","optional":true,"description":"","line":165}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"GuideItem","id":"interface-GuideItem-a53e621fcfcdd038ec554e0b375b5297","file":"projects/rss-reader/src/app/guide-items.ts","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\n\\nexport interface GuideItem {\\n  id: string;\\n  name: string;\\n  document: string;\\n  url: string;\\n}\\n\\nconst GUIDES: GuideItem[] = [\\n  {\\n    id: \'getting-started\',\\n    document: \'assets/docs/guides/getting-started.html\',\\n    url: \'doc/guides/getting-started\',\\n    name: \'Getting Started\'\\n  },\\n  {\\n    id: \'generate-api-key\',\\n    document: \'assets/docs/guides/generate-api-key.html\',\\n    url: \'doc/guides/generate-api-key\',\\n    name: \'Generating an API Key\'\\n  },\\n  {\\n    id: \'troubleshooting\',\\n    document: \'assets/docs/guides/troubleshooting.html\',\\n    url: \'doc/guides/troubleshooting\',\\n    name: \'Troubleshooting\'\\n  }\\n];\\n\\n@Injectable()\\nexport class GuideItemsService {\\n  getAllItems(): GuideItem[] {\\n    return this.getGuideItems();\\n  }\\n  getGuideItems(): GuideItem[] {\\n    return GUIDES;\\n  }\\n  getGuideItemById(id: string): GuideItem {\\n    return GUIDES.find(i => i.id === id);\\n  }\\n}\\n","properties":[{"name":"document","type":"string","optional":false,"description":"","line":6},{"name":"id","type":"string","optional":false,"description":"","line":4},{"name":"name","type":"string","optional":false,"description":"","line":5},{"name":"url","type":"string","optional":false,"description":"","line":7}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"HeadlineOptions","id":"interface-HeadlineOptions-370e0c44e1ec32472acae153b580631a","file":"projects/rss-reader/src/app/dialogs/headline-options-dialog/headline-options-dialog.component.ts","type":"interface","sourceCode":"import { Component, OnInit, Inject } from \'@angular/core\';\\nimport { FormBuilder, FormGroup, Validators } from \'@angular/forms\';\\nimport { Observable } from \'rxjs\';\\nimport { RestCountriesAPICountry } from \'../../models/rest-countries-api\';\\nimport { switchMap, debounceTime } from \'rxjs/operators\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\n\\nexport interface HeadlineOptions {\\n  /**\\n   * The API key\\n   */\\n  apiKey?: string;\\n  /**\\n   * A country code\\n   */\\n  country?: string;\\n  /**\\n   * The category to fetch\\n   */\\n  category?: string;\\n  /**\\n   * The number of articles to return\\n   */\\n  pageSize?: number;\\n}\\n\\n@Component({\\n  selector: \'app-headline-options-dialog\',\\n  templateUrl: \'./headline-options-dialog.component.html\'\\n})\\nexport class HeadlineOptionsDialogComponent implements OnInit {\\n\\n  filteredOptions: Observable<RestCountriesAPICountry[]>;\\n  headlineOptForm: FormGroup;\\n  categories = [\'business\', \'entertainment\', \'general\', \'health\', \'science\', \'sports\', \'technology\'];\\n  constructor(\\n    private fb: FormBuilder,\\n    private http: HttpClient,\\n    @Inject(MAT_DIALOG_DATA) public headlineOpts: HeadlineOptions\\n  ) {\\n    this.headlineOptForm = fb.group({\\n      apiKey: [\'\', Validators.required],\\n      q: \'\',\\n      country: \'\',\\n      // country: [\'\', [Validators.required, Validators.minLength(2), Validators.maxLength(2)]],\\n      category: \'\',\\n      pageSize: 20\\n    });\\n  }\\n\\n  ngOnInit() {\\n    if (this.headlineOpts) {\\n      this.headlineOptForm.patchValue(this.headlineOpts);\\n    }\\n    setTimeout(() => {\\n      this.filteredOptions = this.headlineOptForm.get(\'country\').valueChanges\\n        .pipe(\\n          // debounceTime(150),\\n          switchMap(value => this.filter(value))\\n        );\\n    });\\n  }\\n  filter(name: string): Observable<RestCountriesAPICountry[]> {\\n    return this.http.get<RestCountriesAPICountry[]>(`https://restcountries.eu/rest/v2/name/${encodeURIComponent(name)}`);\\n  }\\n\\n}\\n","properties":[{"name":"apiKey","type":"string","optional":true,"description":"<p>The API key</p>\\n","line":13},{"name":"category","type":"string","optional":true,"description":"<p>The category to fetch</p>\\n","line":21},{"name":"country","type":"string","optional":true,"description":"<p>A country code</p>\\n","line":17},{"name":"pageSize","type":"number","optional":true,"description":"<p>The number of articles to return</p>\\n","line":25}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"Hotkey","id":"interface-Hotkey-59a6be4da50fe9652ff34dace1f476b2","file":"projects/rss-reader/src/app/hotkeys/hotkeys.service.ts","type":"interface","sourceCode":"import { Injectable, Inject } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { EventManager } from \'@angular/platform-browser\';\\nimport { DOCUMENT } from \'@angular/common\';\\nimport { MatDialog } from \'@angular/material/dialog\';\\nimport { HotkeyHelpDialogComponent } from \'./hotkey-help-dialog/hotkey-help-dialog.component\';\\n\\ntype Platform = \'windows\' | \'macos\' | \'linux\' | \'other\';\\n\\ninterface Hotkey {\\n  /** A valid hotkey bind. */\\n  keys: string;\\n  /** The platform where this hotkey will be valid for. */\\n  platform?: Platform;\\n}\\ninterface HotkeyOptions {\\n  /** The element to bind the hotkey to. */\\n  element: any;\\n  /** A valid hotkey bind, or a list of hotkey binds. */\\n  keys: string | Hotkey[];\\n  /** The description of the hotkey, if any. */\\n  description?: string;\\n  /**\\n   * Blacklist for elements that should not have keyboard shortcuts\\n   *\\n   * When specified, it is assumed that all other elements are whitelisted.\\n   */\\n  shortcutBlacklistEls?: string[];\\n  /**\\n   * Whitelist for elements that should have keyboard shortcuts\\n   *\\n   * When specified, it is assumed that all other elements are blacklisted.\\n   */\\n  shortcutWhitelistEls?: string[];\\n}\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class HotkeysService {\\n  hotkeys = new Map<string, string>();\\n  readonly hotkeyHelpDialogId = \'hotkey-help-dialog\';\\n  defaults: Partial<HotkeyOptions> = {\\n    // Specify a default description for hotkeys with no specified desc\\n    description: \'<No description>\',\\n    element: this.document\\n  };\\n\\n  constructor(\\n    private eventManager: EventManager,\\n    private dialog: MatDialog,\\n    @Inject(DOCUMENT) private document: Document\\n  ) {\\n    this.addShortcut({ keys: \'shift.?\', description: \'Show this help dialog\', shortcutBlacklistEls: [\'input\', \'textarea\'] })\\n      .subscribe(() => {\\n        this.openHotkeyHelpDialog();\\n      });\\n  }\\n\\n  /**\\n   * Adds a keyboard shortcut which binds to the specified `element`\\n   * @param options Options for the shortcut\\n   * @returns The observable\\n   */\\n  addShortcut(options: Partial<HotkeyOptions>): Observable<KeyboardEvent> {\\n    const merged = { ...this.defaults, ...options };\\n    const event = `keydown.${merged.keys}`;\\n\\n    if (merged.description) {\\n      if (typeof merged.keys === \'string\') {\\n        this.hotkeys.set(merged.keys, merged.description);\\n      } else {\\n        merged.keys.forEach(hotkey => {\\n          if (this.isPlatform(hotkey.platform)) {\\n            this.hotkeys.set(hotkey.keys, merged.description);\\n          }\\n        });\\n      }\\n    }\\n\\n    return new Observable(observer => {\\n      const handler = (e: KeyboardEvent) => {\\n        let skipHotkey = false;\\n        if (merged.shortcutBlacklistEls !== undefined) {\\n          const blacklistEls = merged.shortcutBlacklistEls.map(el => el.toUpperCase());\\n          // We can\'t just assume that the target is always a HTML element\\n          // See https://stackoverflow.com/q/28900077/6782707\\n          if (e.target instanceof Element) {\\n            // Target is a HTML element\\n            if (blacklistEls.includes(e.target.tagName)) {\\n              skipHotkey = true;\\n            }\\n          }\\n        }\\n        if (merged.shortcutWhitelistEls !== undefined) {\\n          const whitelistEls = merged.shortcutWhitelistEls.map(el => el.toUpperCase());\\n          // We can\'t just assume that the target is always a HTML element\\n          // See https://stackoverflow.com/q/28900077/6782707\\n          if (e.target instanceof Element) {\\n            // Target is a HTML element\\n            if (!whitelistEls.includes(e.target.tagName)) {\\n              skipHotkey = true;\\n            }\\n          }\\n        }\\n\\n        if (!skipHotkey) {\\n          e.preventDefault();\\n          observer.next(e);\\n        }\\n      };\\n\\n      const dispose = this.eventManager.addEventListener(\\n        merged.element, event, handler\\n      );\\n\\n      return () => {\\n        dispose();\\n        if (typeof merged.keys === \'string\') {\\n          this.hotkeys.delete(merged.keys);\\n        } else {\\n          merged.keys.forEach(hotkey => {\\n            if (this.isPlatform(hotkey.platform)) {\\n              this.hotkeys.delete(hotkey.keys);\\n            }\\n          });\\n        }\\n      };\\n    });\\n  }\\n\\n  openHotkeyHelpDialog() {\\n    // Interesting tidbit: as it turns out, MatDialog#getDialogById actually\\n    // returns undefined, not null if the dialog doesn\'t exist\\n    if (this.dialog.getDialogById(this.hotkeyHelpDialogId) !== undefined) {\\n      // Close existing dialog\\n      this.dialog.getDialogById(this.hotkeyHelpDialogId).close();\\n    } else {\\n      this.dialog.open(HotkeyHelpDialogComponent, {\\n        data: this.hotkeys,\\n        id: this.hotkeyHelpDialogId\\n      });\\n    }\\n  }\\n\\n  /**\\n   * Whether the platform matches the specified `platform`.\\n   * @param platform The platform to check.\\n   */\\n  private isPlatform(platform: Platform): boolean {\\n    // See https://stackoverflow.com/a/19883965/6782707\\n    let result = false;\\n    switch (window.navigator.platform) {\\n      case \'Macintosh\':\\n      case \'MacIntel\':\\n        result = platform === \'macos\';\\n        break;\\n      case \'Windows\':\\n      case \'Win16\':\\n      case \'Win32\':\\n      case \'WinCE\':\\n        result = platform === \'windows\';\\n        break;\\n      default:\\n        if (window.navigator.platform.includes(\'Linux\')) {\\n          result = platform === \'linux\';\\n        } else {\\n          result = platform === \'other\';\\n        }\\n        break;\\n    }\\n    return result;\\n  }\\n}\\n","properties":[{"name":"keys","type":"string","optional":false,"description":"<p>A valid hotkey bind. </p>\\n","line":14},{"name":"platform","type":"Platform","optional":true,"description":"<p>The platform where this hotkey will be valid for. </p>\\n","line":16}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"HotkeyOptions","id":"interface-HotkeyOptions-59a6be4da50fe9652ff34dace1f476b2","file":"projects/rss-reader/src/app/hotkeys/hotkeys.service.ts","type":"interface","sourceCode":"import { Injectable, Inject } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { EventManager } from \'@angular/platform-browser\';\\nimport { DOCUMENT } from \'@angular/common\';\\nimport { MatDialog } from \'@angular/material/dialog\';\\nimport { HotkeyHelpDialogComponent } from \'./hotkey-help-dialog/hotkey-help-dialog.component\';\\n\\ntype Platform = \'windows\' | \'macos\' | \'linux\' | \'other\';\\n\\ninterface Hotkey {\\n  /** A valid hotkey bind. */\\n  keys: string;\\n  /** The platform where this hotkey will be valid for. */\\n  platform?: Platform;\\n}\\ninterface HotkeyOptions {\\n  /** The element to bind the hotkey to. */\\n  element: any;\\n  /** A valid hotkey bind, or a list of hotkey binds. */\\n  keys: string | Hotkey[];\\n  /** The description of the hotkey, if any. */\\n  description?: string;\\n  /**\\n   * Blacklist for elements that should not have keyboard shortcuts\\n   *\\n   * When specified, it is assumed that all other elements are whitelisted.\\n   */\\n  shortcutBlacklistEls?: string[];\\n  /**\\n   * Whitelist for elements that should have keyboard shortcuts\\n   *\\n   * When specified, it is assumed that all other elements are blacklisted.\\n   */\\n  shortcutWhitelistEls?: string[];\\n}\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class HotkeysService {\\n  hotkeys = new Map<string, string>();\\n  readonly hotkeyHelpDialogId = \'hotkey-help-dialog\';\\n  defaults: Partial<HotkeyOptions> = {\\n    // Specify a default description for hotkeys with no specified desc\\n    description: \'<No description>\',\\n    element: this.document\\n  };\\n\\n  constructor(\\n    private eventManager: EventManager,\\n    private dialog: MatDialog,\\n    @Inject(DOCUMENT) private document: Document\\n  ) {\\n    this.addShortcut({ keys: \'shift.?\', description: \'Show this help dialog\', shortcutBlacklistEls: [\'input\', \'textarea\'] })\\n      .subscribe(() => {\\n        this.openHotkeyHelpDialog();\\n      });\\n  }\\n\\n  /**\\n   * Adds a keyboard shortcut which binds to the specified `element`\\n   * @param options Options for the shortcut\\n   * @returns The observable\\n   */\\n  addShortcut(options: Partial<HotkeyOptions>): Observable<KeyboardEvent> {\\n    const merged = { ...this.defaults, ...options };\\n    const event = `keydown.${merged.keys}`;\\n\\n    if (merged.description) {\\n      if (typeof merged.keys === \'string\') {\\n        this.hotkeys.set(merged.keys, merged.description);\\n      } else {\\n        merged.keys.forEach(hotkey => {\\n          if (this.isPlatform(hotkey.platform)) {\\n            this.hotkeys.set(hotkey.keys, merged.description);\\n          }\\n        });\\n      }\\n    }\\n\\n    return new Observable(observer => {\\n      const handler = (e: KeyboardEvent) => {\\n        let skipHotkey = false;\\n        if (merged.shortcutBlacklistEls !== undefined) {\\n          const blacklistEls = merged.shortcutBlacklistEls.map(el => el.toUpperCase());\\n          // We can\'t just assume that the target is always a HTML element\\n          // See https://stackoverflow.com/q/28900077/6782707\\n          if (e.target instanceof Element) {\\n            // Target is a HTML element\\n            if (blacklistEls.includes(e.target.tagName)) {\\n              skipHotkey = true;\\n            }\\n          }\\n        }\\n        if (merged.shortcutWhitelistEls !== undefined) {\\n          const whitelistEls = merged.shortcutWhitelistEls.map(el => el.toUpperCase());\\n          // We can\'t just assume that the target is always a HTML element\\n          // See https://stackoverflow.com/q/28900077/6782707\\n          if (e.target instanceof Element) {\\n            // Target is a HTML element\\n            if (!whitelistEls.includes(e.target.tagName)) {\\n              skipHotkey = true;\\n            }\\n          }\\n        }\\n\\n        if (!skipHotkey) {\\n          e.preventDefault();\\n          observer.next(e);\\n        }\\n      };\\n\\n      const dispose = this.eventManager.addEventListener(\\n        merged.element, event, handler\\n      );\\n\\n      return () => {\\n        dispose();\\n        if (typeof merged.keys === \'string\') {\\n          this.hotkeys.delete(merged.keys);\\n        } else {\\n          merged.keys.forEach(hotkey => {\\n            if (this.isPlatform(hotkey.platform)) {\\n              this.hotkeys.delete(hotkey.keys);\\n            }\\n          });\\n        }\\n      };\\n    });\\n  }\\n\\n  openHotkeyHelpDialog() {\\n    // Interesting tidbit: as it turns out, MatDialog#getDialogById actually\\n    // returns undefined, not null if the dialog doesn\'t exist\\n    if (this.dialog.getDialogById(this.hotkeyHelpDialogId) !== undefined) {\\n      // Close existing dialog\\n      this.dialog.getDialogById(this.hotkeyHelpDialogId).close();\\n    } else {\\n      this.dialog.open(HotkeyHelpDialogComponent, {\\n        data: this.hotkeys,\\n        id: this.hotkeyHelpDialogId\\n      });\\n    }\\n  }\\n\\n  /**\\n   * Whether the platform matches the specified `platform`.\\n   * @param platform The platform to check.\\n   */\\n  private isPlatform(platform: Platform): boolean {\\n    // See https://stackoverflow.com/a/19883965/6782707\\n    let result = false;\\n    switch (window.navigator.platform) {\\n      case \'Macintosh\':\\n      case \'MacIntel\':\\n        result = platform === \'macos\';\\n        break;\\n      case \'Windows\':\\n      case \'Win16\':\\n      case \'Win32\':\\n      case \'WinCE\':\\n        result = platform === \'windows\';\\n        break;\\n      default:\\n        if (window.navigator.platform.includes(\'Linux\')) {\\n          result = platform === \'linux\';\\n        } else {\\n          result = platform === \'other\';\\n        }\\n        break;\\n    }\\n    return result;\\n  }\\n}\\n","properties":[{"name":"description","type":"string","optional":true,"description":"<p>The description of the hotkey, if any. </p>\\n","line":24},{"name":"element","type":"any","optional":false,"description":"<p>The element to bind the hotkey to. </p>\\n","line":20},{"name":"keys","type":"string | Hotkey[]","optional":false,"description":"<p>A valid hotkey bind, or a list of hotkey binds. </p>\\n","line":22},{"name":"shortcutBlacklistEls","type":"string[]","optional":true,"description":"<p>Blacklist for elements that should not have keyboard shortcuts</p>\\n<p>When specified, it is assumed that all other elements are whitelisted.</p>\\n","line":30},{"name":"shortcutWhitelistEls","type":"string[]","optional":true,"description":"<p>Whitelist for elements that should have keyboard shortcuts</p>\\n<p>When specified, it is assumed that all other elements are blacklisted.</p>\\n","line":36}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"NewsAPITopHeadlines","id":"interface-NewsAPITopHeadlines-89464fdfec65776032bbce586dd68c1e","file":"projects/rss-reader/src/app/models/news-api/top-headlines.ts","type":"interface","sourceCode":"import { NewsAPITopHeadlinesArticle } from \'./top-headlines-article\';\\n\\nexport interface NewsAPITopHeadlines {\\n  /**\\n   * The status of the API result.\\n   */\\n  status: string;\\n  /**\\n   * The total number of articles returned.\\n   */\\n  totalResults?: string;\\n  /**\\n   * The articles returned from the API.\\n   */\\n  articles?: NewsAPITopHeadlinesArticle[];\\n}\\n\\nexport interface NewsAPITopHeadlinesOpts {\\n  /**\\n   * The API key\\n   * Go to https://newsapi.org/register to get an API key\\n   */\\n  apiKey?: string;\\n  /** The category to get headlines for. */\\n  category?: string;\\n  /** Keywords or a phrase to search for. */\\n  q?: string;\\n  /**\\n   * A list/comma-separated string of identifiers for the news sources/\\n   * blogs to get headlines from.\\n   */\\n  sources?: string | string[];\\n  /**\\n   * The country to get headlines from\\n   * Note: This parameter only accepts a 2-letter country code.\\n   */\\n  country?: string;\\n  /** The number of results to return per page. (Default: 20, Max: 100) */\\n  pageSize?: number;\\n}\\n","properties":[{"name":"articles","type":"NewsAPITopHeadlinesArticle[]","optional":true,"description":"<p>The articles returned from the API.</p>\\n","line":15},{"name":"status","type":"string","optional":false,"description":"<p>The status of the API result.</p>\\n","line":7},{"name":"totalResults","type":"string","optional":true,"description":"<p>The total number of articles returned.</p>\\n","line":11}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"NewsAPITopHeadlinesArticle","id":"interface-NewsAPITopHeadlinesArticle-9f62d21dbf84564cba58dab2f886dc35","file":"projects/rss-reader/src/app/models/news-api/top-headlines-article.ts","type":"interface","sourceCode":"export interface NewsAPITopHeadlinesArticle {\\n  /**\\n   * The source of where the article originated from.\\n   */\\n  source?: {\\n    id?: string;\\n    /**\\n     * The name of the source of where the article originated from.\\n     */\\n    name?: string;\\n  };\\n  /**\\n   * The author of the article.\\n   */\\n  author?: string;\\n  /**\\n   * The article\'s title.\\n   */\\n  title?: string;\\n  /**\\n   * The article\'s description.\\n   */\\n  description?: string;\\n  /**\\n   * The URL of the actual article.\\n   */\\n  url?: string;\\n  /**\\n   * A thumbnail of the article.\\n   */\\n  urlToImage?: string;\\n  /**\\n   * When the article was published on.\\n   */\\n  publishedAt?: string;\\n  /**\\n   * The article\'s content.\\n   */\\n  content?: string;\\n}\\n","properties":[{"name":"author","type":"string","optional":true,"description":"<p>The author of the article.</p>\\n","line":15},{"name":"content","type":"string","optional":true,"description":"<p>The article&#39;s content.</p>\\n","line":39},{"name":"description","type":"string","optional":true,"description":"<p>The article&#39;s description.</p>\\n","line":23},{"name":"publishedAt","type":"string","optional":true,"description":"<p>When the article was published on.</p>\\n","line":35},{"name":"source","type":"literal type","optional":true,"description":"<p>The source of where the article originated from.</p>\\n","line":5},{"name":"title","type":"string","optional":true,"description":"<p>The article&#39;s title.</p>\\n","line":19},{"name":"url","type":"string","optional":true,"description":"<p>The URL of the actual article.</p>\\n","line":27},{"name":"urlToImage","type":"string","optional":true,"description":"<p>A thumbnail of the article.</p>\\n","line":31}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"NewsAPITopHeadlinesOpts","id":"interface-NewsAPITopHeadlinesOpts-89464fdfec65776032bbce586dd68c1e","file":"projects/rss-reader/src/app/models/news-api/top-headlines.ts","type":"interface","sourceCode":"import { NewsAPITopHeadlinesArticle } from \'./top-headlines-article\';\\n\\nexport interface NewsAPITopHeadlines {\\n  /**\\n   * The status of the API result.\\n   */\\n  status: string;\\n  /**\\n   * The total number of articles returned.\\n   */\\n  totalResults?: string;\\n  /**\\n   * The articles returned from the API.\\n   */\\n  articles?: NewsAPITopHeadlinesArticle[];\\n}\\n\\nexport interface NewsAPITopHeadlinesOpts {\\n  /**\\n   * The API key\\n   * Go to https://newsapi.org/register to get an API key\\n   */\\n  apiKey?: string;\\n  /** The category to get headlines for. */\\n  category?: string;\\n  /** Keywords or a phrase to search for. */\\n  q?: string;\\n  /**\\n   * A list/comma-separated string of identifiers for the news sources/\\n   * blogs to get headlines from.\\n   */\\n  sources?: string | string[];\\n  /**\\n   * The country to get headlines from\\n   * Note: This parameter only accepts a 2-letter country code.\\n   */\\n  country?: string;\\n  /** The number of results to return per page. (Default: 20, Max: 100) */\\n  pageSize?: number;\\n}\\n","properties":[{"name":"apiKey","type":"string","optional":true,"description":"<p>The API key\\nGo to <a href=\\"https://newsapi.org/register\\">https://newsapi.org/register</a> to get an API key</p>\\n","line":23},{"name":"category","type":"string","optional":true,"description":"<p>The category to get headlines for. </p>\\n","line":25},{"name":"country","type":"string","optional":true,"description":"<p>The country to get headlines from\\nNote: This parameter only accepts a 2-letter country code.</p>\\n","line":37},{"name":"pageSize","type":"number","optional":true,"description":"<p>The number of results to return per page. (Default: 20, Max: 100) </p>\\n","line":39},{"name":"q","type":"string","optional":true,"description":"<p>Keywords or a phrase to search for. </p>\\n","line":27},{"name":"sources","type":"string | string[]","optional":true,"description":"<p>A list/comma-separated string of identifiers for the news sources/\\nblogs to get headlines from.</p>\\n","line":32}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"PortalDialogOpts","id":"interface-PortalDialogOpts-b2552c1f9e6d368b51f3e050d9ff84c9","file":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","sourceCode":"import { Portal } from \'@angular/cdk/portal\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\n\\nexport type ButtonType = \'negative\' | \'neutral\' | \'positive\';\\n\\nexport type DialogType = \'alert\' | \'confirm\' | \'message\' | \'prompt\' | \'portal\'\\n  | \'selection\';\\n\\nexport interface BaseDialogOpts {\\n  /** The dialog\'s title. */\\n  title?: string;\\n}\\n\\nexport interface DialogBtnOpts {\\n  /** The positive button\'s text. */\\n  positiveBtnText?: string;\\n  /** The positive button\'s color. */\\n  positiveBtnColor?: ThemePalette;\\n  /** The negative button\'s text. */\\n  negativeBtnText?: string;\\n  /** The negative button\'s color. */\\n  negativeBtnColor?: ThemePalette;\\n  /** The neutral button\'s text. */\\n  neutralBtnText?: string;\\n  /** The neutral button\'s color. */\\n  neutralBtnColor?: ThemePalette;\\n  /**\\n   * Whether to hide the action buttons.\\n   *\\n   * Optionally, you can specify which buttons to hide.\\n   */\\n  hideActionBtns?: ButtonType[] | boolean;\\n  /** The initial button to focus on. */\\n  initialActionBtnFocus?: ButtonType;\\n}\\n\\nexport interface DialogOptsWithMsg {\\n  /** The dialog\'s message. */\\n  msg?: string | SafeHtml;\\n  /** The dialog\'s title. */\\n  title?: string;\\n  /** Whether the dialog\'s message is in HTML. */\\n  isHtml?: boolean;\\n}\\n\\nexport interface DialogOpts extends BaseDialogOpts, DialogBtnOpts,\\n  DialogOptsWithMsg { }\\n\\nexport interface PromptDialogInputConfig {\\n  /** The input\'s placeholder. */\\n  placeholder?: string;\\n  /** The input\'s label. */\\n  label?: string;\\n  /** The input type. */\\n  inputType?: string;\\n  /** The input\'s initial value. */\\n  value?: string;\\n  /** The input\'s color. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PromptDialogOpts extends DialogOpts {\\n  /** Configuration for the input. */\\n  inputConfig?: PromptDialogInputConfig;\\n  /**\\n   * The input\'s placeholder.\\n   * @deprecated Use {@link PromptDialogInputConfig#placeholder} instead\\n   */\\n  placeholder?: string;\\n  /**\\n   * The input type.\\n   * @deprecated Use {@link PromptDialogInputConfig#inputType} instead\\n   */\\n  inputType?: \'text\' | \'email\' | \'password\' | \'number\';\\n  /**\\n   * The initial value of the input\\n   * @deprecated Use {@link PromptDialogInputConfig#value} instead\\n   */\\n  value?: string | number;\\n  /**\\n   * The color of the input\\n   * @deprecated Use {@link PromptDialogInputConfig#color} instead\\n   */\\n  color?: ThemePalette;\\n}\\n\\nexport interface SelectionDialogOpts extends DialogOpts {\\n  /** Options to be shown in the dialog. */\\n  options: SelectionDialogOption[];\\n}\\n\\nexport interface SelectionDialogOption {\\n  /** The title of the option. */\\n  title: string;\\n  /** The value of the option. */\\n  value: any;\\n  /** Whether the option is disabled. */\\n  disabled?: boolean;\\n  /** Whether the option is initially selected. */\\n  selected?: boolean;\\n  /** The checkbox position of the option. */\\n  checkboxPosition?: \'before\' | \'after\';\\n  /** The color of the option. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PortalDialogOpts<T> extends DialogOpts {\\n  /** The portal to render in the dialog. */\\n  portal: Portal<T>;\\n}\\n\\n/** The result returned by the dialog. */\\nexport enum DialogResult {\\n  /** Indicates that the user clicked the \\"Cancel\\" (or negative) button. */\\n  NEGATIVE = \'cancel\',\\n  /** Alias for {@link DialogResult#NEGATIVE}. */\\n  CANCEL = \'cancel\',\\n  /** Indicates that the user clicked the neutral button. */\\n  NEUTRAL = \'neutral\',\\n  /** Indicates that the user clicked the \\"OK\\" (or positive) button. */\\n  POSITIVE = \'ok\',\\n  /** Alias for {@link DialogResult#POSITIVE}. */\\n  OK = \'ok\'\\n}\\n","properties":[{"name":"portal","type":"Portal<T>","optional":false,"description":"<p>The portal to render in the dialog. </p>\\n","line":110}],"indexSignatures":[],"kind":150,"methods":[],"extends":"DialogOpts"},{"name":"PromptDialogInputConfig","id":"interface-PromptDialogInputConfig-b2552c1f9e6d368b51f3e050d9ff84c9","file":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","sourceCode":"import { Portal } from \'@angular/cdk/portal\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\n\\nexport type ButtonType = \'negative\' | \'neutral\' | \'positive\';\\n\\nexport type DialogType = \'alert\' | \'confirm\' | \'message\' | \'prompt\' | \'portal\'\\n  | \'selection\';\\n\\nexport interface BaseDialogOpts {\\n  /** The dialog\'s title. */\\n  title?: string;\\n}\\n\\nexport interface DialogBtnOpts {\\n  /** The positive button\'s text. */\\n  positiveBtnText?: string;\\n  /** The positive button\'s color. */\\n  positiveBtnColor?: ThemePalette;\\n  /** The negative button\'s text. */\\n  negativeBtnText?: string;\\n  /** The negative button\'s color. */\\n  negativeBtnColor?: ThemePalette;\\n  /** The neutral button\'s text. */\\n  neutralBtnText?: string;\\n  /** The neutral button\'s color. */\\n  neutralBtnColor?: ThemePalette;\\n  /**\\n   * Whether to hide the action buttons.\\n   *\\n   * Optionally, you can specify which buttons to hide.\\n   */\\n  hideActionBtns?: ButtonType[] | boolean;\\n  /** The initial button to focus on. */\\n  initialActionBtnFocus?: ButtonType;\\n}\\n\\nexport interface DialogOptsWithMsg {\\n  /** The dialog\'s message. */\\n  msg?: string | SafeHtml;\\n  /** The dialog\'s title. */\\n  title?: string;\\n  /** Whether the dialog\'s message is in HTML. */\\n  isHtml?: boolean;\\n}\\n\\nexport interface DialogOpts extends BaseDialogOpts, DialogBtnOpts,\\n  DialogOptsWithMsg { }\\n\\nexport interface PromptDialogInputConfig {\\n  /** The input\'s placeholder. */\\n  placeholder?: string;\\n  /** The input\'s label. */\\n  label?: string;\\n  /** The input type. */\\n  inputType?: string;\\n  /** The input\'s initial value. */\\n  value?: string;\\n  /** The input\'s color. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PromptDialogOpts extends DialogOpts {\\n  /** Configuration for the input. */\\n  inputConfig?: PromptDialogInputConfig;\\n  /**\\n   * The input\'s placeholder.\\n   * @deprecated Use {@link PromptDialogInputConfig#placeholder} instead\\n   */\\n  placeholder?: string;\\n  /**\\n   * The input type.\\n   * @deprecated Use {@link PromptDialogInputConfig#inputType} instead\\n   */\\n  inputType?: \'text\' | \'email\' | \'password\' | \'number\';\\n  /**\\n   * The initial value of the input\\n   * @deprecated Use {@link PromptDialogInputConfig#value} instead\\n   */\\n  value?: string | number;\\n  /**\\n   * The color of the input\\n   * @deprecated Use {@link PromptDialogInputConfig#color} instead\\n   */\\n  color?: ThemePalette;\\n}\\n\\nexport interface SelectionDialogOpts extends DialogOpts {\\n  /** Options to be shown in the dialog. */\\n  options: SelectionDialogOption[];\\n}\\n\\nexport interface SelectionDialogOption {\\n  /** The title of the option. */\\n  title: string;\\n  /** The value of the option. */\\n  value: any;\\n  /** Whether the option is disabled. */\\n  disabled?: boolean;\\n  /** Whether the option is initially selected. */\\n  selected?: boolean;\\n  /** The checkbox position of the option. */\\n  checkboxPosition?: \'before\' | \'after\';\\n  /** The color of the option. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PortalDialogOpts<T> extends DialogOpts {\\n  /** The portal to render in the dialog. */\\n  portal: Portal<T>;\\n}\\n\\n/** The result returned by the dialog. */\\nexport enum DialogResult {\\n  /** Indicates that the user clicked the \\"Cancel\\" (or negative) button. */\\n  NEGATIVE = \'cancel\',\\n  /** Alias for {@link DialogResult#NEGATIVE}. */\\n  CANCEL = \'cancel\',\\n  /** Indicates that the user clicked the neutral button. */\\n  NEUTRAL = \'neutral\',\\n  /** Indicates that the user clicked the \\"OK\\" (or positive) button. */\\n  POSITIVE = \'ok\',\\n  /** Alias for {@link DialogResult#POSITIVE}. */\\n  OK = \'ok\'\\n}\\n","properties":[{"name":"color","type":"ThemePalette","optional":true,"description":"<p>The input&#39;s color. </p>\\n","line":60},{"name":"inputType","type":"string","optional":true,"description":"<p>The input type. </p>\\n","line":56},{"name":"label","type":"string","optional":true,"description":"<p>The input&#39;s label. </p>\\n","line":54},{"name":"placeholder","type":"string","optional":true,"description":"<p>The input&#39;s placeholder. </p>\\n","line":52},{"name":"value","type":"string","optional":true,"description":"<p>The input&#39;s initial value. </p>\\n","line":58}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"PromptDialogOpts","id":"interface-PromptDialogOpts-b2552c1f9e6d368b51f3e050d9ff84c9","file":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","sourceCode":"import { Portal } from \'@angular/cdk/portal\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\n\\nexport type ButtonType = \'negative\' | \'neutral\' | \'positive\';\\n\\nexport type DialogType = \'alert\' | \'confirm\' | \'message\' | \'prompt\' | \'portal\'\\n  | \'selection\';\\n\\nexport interface BaseDialogOpts {\\n  /** The dialog\'s title. */\\n  title?: string;\\n}\\n\\nexport interface DialogBtnOpts {\\n  /** The positive button\'s text. */\\n  positiveBtnText?: string;\\n  /** The positive button\'s color. */\\n  positiveBtnColor?: ThemePalette;\\n  /** The negative button\'s text. */\\n  negativeBtnText?: string;\\n  /** The negative button\'s color. */\\n  negativeBtnColor?: ThemePalette;\\n  /** The neutral button\'s text. */\\n  neutralBtnText?: string;\\n  /** The neutral button\'s color. */\\n  neutralBtnColor?: ThemePalette;\\n  /**\\n   * Whether to hide the action buttons.\\n   *\\n   * Optionally, you can specify which buttons to hide.\\n   */\\n  hideActionBtns?: ButtonType[] | boolean;\\n  /** The initial button to focus on. */\\n  initialActionBtnFocus?: ButtonType;\\n}\\n\\nexport interface DialogOptsWithMsg {\\n  /** The dialog\'s message. */\\n  msg?: string | SafeHtml;\\n  /** The dialog\'s title. */\\n  title?: string;\\n  /** Whether the dialog\'s message is in HTML. */\\n  isHtml?: boolean;\\n}\\n\\nexport interface DialogOpts extends BaseDialogOpts, DialogBtnOpts,\\n  DialogOptsWithMsg { }\\n\\nexport interface PromptDialogInputConfig {\\n  /** The input\'s placeholder. */\\n  placeholder?: string;\\n  /** The input\'s label. */\\n  label?: string;\\n  /** The input type. */\\n  inputType?: string;\\n  /** The input\'s initial value. */\\n  value?: string;\\n  /** The input\'s color. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PromptDialogOpts extends DialogOpts {\\n  /** Configuration for the input. */\\n  inputConfig?: PromptDialogInputConfig;\\n  /**\\n   * The input\'s placeholder.\\n   * @deprecated Use {@link PromptDialogInputConfig#placeholder} instead\\n   */\\n  placeholder?: string;\\n  /**\\n   * The input type.\\n   * @deprecated Use {@link PromptDialogInputConfig#inputType} instead\\n   */\\n  inputType?: \'text\' | \'email\' | \'password\' | \'number\';\\n  /**\\n   * The initial value of the input\\n   * @deprecated Use {@link PromptDialogInputConfig#value} instead\\n   */\\n  value?: string | number;\\n  /**\\n   * The color of the input\\n   * @deprecated Use {@link PromptDialogInputConfig#color} instead\\n   */\\n  color?: ThemePalette;\\n}\\n\\nexport interface SelectionDialogOpts extends DialogOpts {\\n  /** Options to be shown in the dialog. */\\n  options: SelectionDialogOption[];\\n}\\n\\nexport interface SelectionDialogOption {\\n  /** The title of the option. */\\n  title: string;\\n  /** The value of the option. */\\n  value: any;\\n  /** Whether the option is disabled. */\\n  disabled?: boolean;\\n  /** Whether the option is initially selected. */\\n  selected?: boolean;\\n  /** The checkbox position of the option. */\\n  checkboxPosition?: \'before\' | \'after\';\\n  /** The color of the option. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PortalDialogOpts<T> extends DialogOpts {\\n  /** The portal to render in the dialog. */\\n  portal: Portal<T>;\\n}\\n\\n/** The result returned by the dialog. */\\nexport enum DialogResult {\\n  /** Indicates that the user clicked the \\"Cancel\\" (or negative) button. */\\n  NEGATIVE = \'cancel\',\\n  /** Alias for {@link DialogResult#NEGATIVE}. */\\n  CANCEL = \'cancel\',\\n  /** Indicates that the user clicked the neutral button. */\\n  NEUTRAL = \'neutral\',\\n  /** Indicates that the user clicked the \\"OK\\" (or positive) button. */\\n  POSITIVE = \'ok\',\\n  /** Alias for {@link DialogResult#POSITIVE}. */\\n  OK = \'ok\'\\n}\\n","properties":[{"name":"color","type":"ThemePalette","optional":true,"description":"<p>The color of the input</p>\\n","line":85,"jsdoctags":[{"pos":2306,"end":2318,"flags":0,"kind":288,"atToken":{"pos":2306,"end":2307,"flags":0,"kind":57},"tagName":{"pos":2307,"end":2317,"flags":0,"escapedText":"deprecated"},"comment":"<p>Use {</p>\\n"},{"pos":2323,"end":2329,"flags":0,"kind":288,"atToken":{"pos":2323,"end":2324,"flags":0,"kind":57},"tagName":{"pos":2324,"end":2328,"flags":0,"escapedText":"link"},"comment":"<p>PromptDialogInputConfig#color} instead</p>\\n"}]},{"name":"inputConfig","type":"PromptDialogInputConfig","optional":true,"description":"<p>Configuration for the input. </p>\\n","line":65},{"name":"inputType","type":"\\"text\\" | \\"email\\" | \\"password\\" | \\"number\\"","optional":true,"description":"<p>The input type.</p>\\n","line":75,"jsdoctags":[{"pos":1997,"end":2009,"flags":0,"kind":288,"atToken":{"pos":1997,"end":1998,"flags":0,"kind":57},"tagName":{"pos":1998,"end":2008,"flags":0,"escapedText":"deprecated"},"comment":"<p>Use {</p>\\n"},{"pos":2014,"end":2020,"flags":0,"kind":288,"atToken":{"pos":2014,"end":2015,"flags":0,"kind":57},"tagName":{"pos":2015,"end":2019,"flags":0,"escapedText":"link"},"comment":"<p>PromptDialogInputConfig#inputType} instead</p>\\n"}]},{"name":"placeholder","type":"string","optional":true,"description":"<p>The input&#39;s placeholder.</p>\\n","line":70,"jsdoctags":[{"pos":1867,"end":1879,"flags":0,"kind":288,"atToken":{"pos":1867,"end":1868,"flags":0,"kind":57},"tagName":{"pos":1868,"end":1878,"flags":0,"escapedText":"deprecated"},"comment":"<p>Use {</p>\\n"},{"pos":1884,"end":1890,"flags":0,"kind":288,"atToken":{"pos":1884,"end":1885,"flags":0,"kind":57},"tagName":{"pos":1885,"end":1889,"flags":0,"escapedText":"link"},"comment":"<p>PromptDialogInputConfig#placeholder} instead</p>\\n"}]},{"name":"value","type":"string | number","optional":true,"description":"<p>The initial value of the input</p>\\n","line":80,"jsdoctags":[{"pos":2172,"end":2184,"flags":0,"kind":288,"atToken":{"pos":2172,"end":2173,"flags":0,"kind":57},"tagName":{"pos":2173,"end":2183,"flags":0,"escapedText":"deprecated"},"comment":"<p>Use {</p>\\n"},{"pos":2189,"end":2195,"flags":0,"kind":288,"atToken":{"pos":2189,"end":2190,"flags":0,"kind":57},"tagName":{"pos":2190,"end":2194,"flags":0,"escapedText":"link"},"comment":"<p>PromptDialogInputConfig#value} instead</p>\\n"}]}],"indexSignatures":[],"kind":150,"methods":[],"extends":"DialogOpts"},{"name":"Release","id":"interface-Release-8185788c87aa36814a3d196d63092431","file":"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts","type":"interface","sourceCode":"export interface Release {\\n  /** Release notes for the version. */\\n  releaseNotes: string[] | string;\\n  /** Release name for the version. */\\n  releaseName?: string;\\n  /** Release date for the version. */\\n  releaseDate?: string;\\n  /** The person who released the version. */\\n  releaseAuthor?: string;\\n  /** The Git commit SHA of the version. */\\n  releaseCommitSha?: string;\\n  /** The release\'s status. */\\n  releaseStatus?: ReleaseStatus[] | string;\\n  /** Comments about the release, if any. */\\n  releaseComments?: string[] | string;\\n}\\n\\n/**\\n * Contains either a string representing a link to the repository, or an\\n * object containing metadata of the repository.\\n */\\nexport type GitRepo = {\\n  /** The host of the repository. (The host\'s address should be used) */\\n  host: string;\\n  /** The username that owns the repository. */\\n  username: string;\\n  /** The name of the repository. */\\n  repo: string;\\n} | string;\\n\\nexport type ReleaseStatus = \'draft\' | \'wip\' | \'deprecated\' | \'released\' | \'unreleased\' | \'other\';\\n\\nexport interface Releases {\\n  [key: string]: Release;\\n}\\nexport interface ReleaseNotesJSON {\\n  /** The schema of the JSON file. */\\n  $schema: string;\\n  /** The latest version of the app. */\\n  latestVersion: string;\\n  /** The list of releases. */\\n  releases: Releases;\\n  /** A link to the Git repository. */\\n  gitRepo?: GitRepo;\\n}\\n","properties":[{"name":"releaseAuthor","type":"string","optional":true,"description":"<p>The person who released the version. </p>\\n","line":9},{"name":"releaseComments","type":"string[] | string","optional":true,"description":"<p>Comments about the release, if any. </p>\\n","line":15},{"name":"releaseCommitSha","type":"string","optional":true,"description":"<p>The Git commit SHA of the version. </p>\\n","line":11},{"name":"releaseDate","type":"string","optional":true,"description":"<p>Release date for the version. </p>\\n","line":7},{"name":"releaseName","type":"string","optional":true,"description":"<p>Release name for the version. </p>\\n","line":5},{"name":"releaseNotes","type":"string[] | string","optional":false,"description":"<p>Release notes for the version. </p>\\n","line":3},{"name":"releaseStatus","type":"ReleaseStatus[] | string","optional":true,"description":"<p>The release&#39;s status. </p>\\n","line":13}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"ReleaseNotesJSON","id":"interface-ReleaseNotesJSON-8185788c87aa36814a3d196d63092431","file":"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts","type":"interface","sourceCode":"export interface Release {\\n  /** Release notes for the version. */\\n  releaseNotes: string[] | string;\\n  /** Release name for the version. */\\n  releaseName?: string;\\n  /** Release date for the version. */\\n  releaseDate?: string;\\n  /** The person who released the version. */\\n  releaseAuthor?: string;\\n  /** The Git commit SHA of the version. */\\n  releaseCommitSha?: string;\\n  /** The release\'s status. */\\n  releaseStatus?: ReleaseStatus[] | string;\\n  /** Comments about the release, if any. */\\n  releaseComments?: string[] | string;\\n}\\n\\n/**\\n * Contains either a string representing a link to the repository, or an\\n * object containing metadata of the repository.\\n */\\nexport type GitRepo = {\\n  /** The host of the repository. (The host\'s address should be used) */\\n  host: string;\\n  /** The username that owns the repository. */\\n  username: string;\\n  /** The name of the repository. */\\n  repo: string;\\n} | string;\\n\\nexport type ReleaseStatus = \'draft\' | \'wip\' | \'deprecated\' | \'released\' | \'unreleased\' | \'other\';\\n\\nexport interface Releases {\\n  [key: string]: Release;\\n}\\nexport interface ReleaseNotesJSON {\\n  /** The schema of the JSON file. */\\n  $schema: string;\\n  /** The latest version of the app. */\\n  latestVersion: string;\\n  /** The list of releases. */\\n  releases: Releases;\\n  /** A link to the Git repository. */\\n  gitRepo?: GitRepo;\\n}\\n","properties":[{"name":"$schema","type":"string","optional":false,"description":"<p>The schema of the JSON file. </p>\\n","line":38},{"name":"gitRepo","type":"GitRepo","optional":true,"description":"<p>A link to the Git repository. </p>\\n","line":44},{"name":"latestVersion","type":"string","optional":false,"description":"<p>The latest version of the app. </p>\\n","line":40},{"name":"releases","type":"Releases","optional":false,"description":"<p>The list of releases. </p>\\n","line":42}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"Releases","id":"interface-Releases-8185788c87aa36814a3d196d63092431","file":"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts","type":"interface","sourceCode":"export interface Release {\\n  /** Release notes for the version. */\\n  releaseNotes: string[] | string;\\n  /** Release name for the version. */\\n  releaseName?: string;\\n  /** Release date for the version. */\\n  releaseDate?: string;\\n  /** The person who released the version. */\\n  releaseAuthor?: string;\\n  /** The Git commit SHA of the version. */\\n  releaseCommitSha?: string;\\n  /** The release\'s status. */\\n  releaseStatus?: ReleaseStatus[] | string;\\n  /** Comments about the release, if any. */\\n  releaseComments?: string[] | string;\\n}\\n\\n/**\\n * Contains either a string representing a link to the repository, or an\\n * object containing metadata of the repository.\\n */\\nexport type GitRepo = {\\n  /** The host of the repository. (The host\'s address should be used) */\\n  host: string;\\n  /** The username that owns the repository. */\\n  username: string;\\n  /** The name of the repository. */\\n  repo: string;\\n} | string;\\n\\nexport type ReleaseStatus = \'draft\' | \'wip\' | \'deprecated\' | \'released\' | \'unreleased\' | \'other\';\\n\\nexport interface Releases {\\n  [key: string]: Release;\\n}\\nexport interface ReleaseNotesJSON {\\n  /** The schema of the JSON file. */\\n  $schema: string;\\n  /** The latest version of the app. */\\n  latestVersion: string;\\n  /** The list of releases. */\\n  releases: Releases;\\n  /** A link to the Git repository. */\\n  gitRepo?: GitRepo;\\n}\\n","properties":[],"indexSignatures":[{"id":"index-declaration-8185788c87aa36814a3d196d63092431","args":[{"name":"key","type":"string"}],"returnType":"Release","line":33}],"kind":159,"methods":[]},{"name":"RestCountriesAPICountry","id":"interface-RestCountriesAPICountry-1b72142dbb15a25b9f9f16c1fcce95bb","file":"projects/rss-reader/src/app/models/rest-countries-api/index.ts","type":"interface","sourceCode":"export interface RestCountriesAPICountryCurrency {\\n  /**\\n   * The codename of the country\'s currency\\n   */\\n  code?: string;\\n  /**\\n   * The name of the country\'s currency\\n   */\\n  name?: string;\\n  /**\\n   * The Unicode symbol of the country\'s currency\\n   */\\n  symbol?: string;\\n}\\nexport interface RestCountriesAPICountryLanguage {\\n  iso639_1?: string;\\n  iso639_2?: string;\\n  name?: string;\\n  nativeName?: string;\\n}\\nexport interface RestCountriesAPICountryTranslation {\\n  [key: string]: string;\\n}\\nexport interface RestCountriesAPICountryRegionalBloc {\\n  acronym?: string;\\n  name?: string;\\n  otherAcronyms?: string[];\\n  otherNames?: string[];\\n}\\nexport interface RestCountriesAPICountry {\\n  /**\\n   * The country\'s name\\n   */\\n  name?: string;\\n  /**\\n   * The top level domain of the country\\n   */\\n  topLevelDomain?: string[];\\n  /**\\n   * The 2 letter code of the country\\n   */\\n  alpha2Code?: string;\\n  /**\\n   * The 3 letter code of the country\\n   */\\n  alpha3Code?: string;\\n  /**\\n   * Phone number codes for the country\\n   */\\n  callingCodes?: string[];\\n  /**\\n   * The capital of the country\\n   * Note: This field will be an empty string if there\'s no capital.\\n   */\\n  capital?: string;\\n  /**\\n   * Alternate spellings of the country\\n   */\\n  altSpellings?: string[];\\n  /**\\n   * The region that the country is in\\n   */\\n  region?: string;\\n  /**\\n   * The subregion that the country is in\\n   */\\n  subregion?: string;\\n  /**\\n   * The total population of the country\\n   */\\n  population?: number;\\n  /**\\n   * The latitude and longtitude points of the country\\n   */\\n  latlng?: number[];\\n  /**\\n   * The name given to inhabitants of the country\\n   */\\n  demonym?: string;\\n  /**\\n   * The area of the country in square kilometres\\n   */\\n  area?: number;\\n  /**\\n   * Used for representing the income distribution of the country\'s residents\\n   * See https://en.wikipedia.org/wiki/Gini_coefficient for more info.\\n   */\\n  gini?: number;\\n  /**\\n   * The timezone(s) of the country (in GMT)\\n   */\\n  timezones?: string[];\\n  /**\\n   * The borders of the country denoted with country codes\\n   */\\n  borders?: string[];\\n  /**\\n   * The name of the country according to inhabitants\\n   */\\n  nativeName?: string;\\n  /**\\n   * A 3-digit country code denoted to represent a country\\n   * See https://en.wikipedia.org/wiki/ISO_3166-1_numeric for more info\\n   */\\n  numericCode?: string;\\n  /**\\n   * An array of currencies used in the country\\n   */\\n  currencies?: RestCountriesAPICountryCurrency[];\\n  /**\\n   * An array of languages spoken in the country\\n   */\\n  languages?: RestCountriesAPICountryLanguage[];\\n  /**\\n   * An array of alternative names of the country in other areas\\n   */\\n  translations?: RestCountriesAPICountryTranslation[];\\n  /**\\n   * The country\'s flag (as a URL)\\n   */\\n  flag?: string;\\n  /**\\n   * Trading blocs\\n   */\\n  regionalBlocs?: RestCountriesAPICountryRegionalBloc[];\\n  /**\\n   * Unknown property\\n   */\\n  cioc?: string;\\n}\\n","properties":[{"name":"alpha2Code","type":"string","optional":true,"description":"<p>The 2 letter code of the country</p>\\n","line":49},{"name":"alpha3Code","type":"string","optional":true,"description":"<p>The 3 letter code of the country</p>\\n","line":53},{"name":"altSpellings","type":"string[]","optional":true,"description":"<p>Alternate spellings of the country</p>\\n","line":66},{"name":"area","type":"number","optional":true,"description":"<p>The area of the country in square kilometres</p>\\n","line":90},{"name":"borders","type":"string[]","optional":true,"description":"<p>The borders of the country denoted with country codes</p>\\n","line":103},{"name":"callingCodes","type":"string[]","optional":true,"description":"<p>Phone number codes for the country</p>\\n","line":57},{"name":"capital","type":"string","optional":true,"description":"<p>The capital of the country\\nNote: This field will be an empty string if there&#39;s no capital.</p>\\n","line":62},{"name":"cioc","type":"string","optional":true,"description":"<p>Unknown property</p>\\n","line":136},{"name":"currencies","type":"RestCountriesAPICountryCurrency[]","optional":true,"description":"<p>An array of currencies used in the country</p>\\n","line":116},{"name":"demonym","type":"string","optional":true,"description":"<p>The name given to inhabitants of the country</p>\\n","line":86},{"name":"flag","type":"string","optional":true,"description":"<p>The country&#39;s flag (as a URL)</p>\\n","line":128},{"name":"gini","type":"number","optional":true,"description":"<p>Used for representing the income distribution of the country&#39;s residents\\nSee <a href=\\"https://en.wikipedia.org/wiki/Gini_coefficient\\">https://en.wikipedia.org/wiki/Gini_coefficient</a> for more info.</p>\\n","line":95},{"name":"languages","type":"RestCountriesAPICountryLanguage[]","optional":true,"description":"<p>An array of languages spoken in the country</p>\\n","line":120},{"name":"latlng","type":"number[]","optional":true,"description":"<p>The latitude and longtitude points of the country</p>\\n","line":82},{"name":"name","type":"string","optional":true,"description":"<p>The country&#39;s name</p>\\n","line":41},{"name":"nativeName","type":"string","optional":true,"description":"<p>The name of the country according to inhabitants</p>\\n","line":107},{"name":"numericCode","type":"string","optional":true,"description":"<p>A 3-digit country code denoted to represent a country\\nSee <a href=\\"https://en.wikipedia.org/wiki/ISO_3166-1_numeric\\">https://en.wikipedia.org/wiki/ISO_3166-1_numeric</a> for more info</p>\\n","line":112},{"name":"population","type":"number","optional":true,"description":"<p>The total population of the country</p>\\n","line":78},{"name":"region","type":"string","optional":true,"description":"<p>The region that the country is in</p>\\n","line":70},{"name":"regionalBlocs","type":"RestCountriesAPICountryRegionalBloc[]","optional":true,"description":"<p>Trading blocs</p>\\n","line":132},{"name":"subregion","type":"string","optional":true,"description":"<p>The subregion that the country is in</p>\\n","line":74},{"name":"timezones","type":"string[]","optional":true,"description":"<p>The timezone(s) of the country (in GMT)</p>\\n","line":99},{"name":"topLevelDomain","type":"string[]","optional":true,"description":"<p>The top level domain of the country</p>\\n","line":45},{"name":"translations","type":"RestCountriesAPICountryTranslation[]","optional":true,"description":"<p>An array of alternative names of the country in other areas</p>\\n","line":124}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"RestCountriesAPICountryCurrency","id":"interface-RestCountriesAPICountryCurrency-1b72142dbb15a25b9f9f16c1fcce95bb","file":"projects/rss-reader/src/app/models/rest-countries-api/index.ts","type":"interface","sourceCode":"export interface RestCountriesAPICountryCurrency {\\n  /**\\n   * The codename of the country\'s currency\\n   */\\n  code?: string;\\n  /**\\n   * The name of the country\'s currency\\n   */\\n  name?: string;\\n  /**\\n   * The Unicode symbol of the country\'s currency\\n   */\\n  symbol?: string;\\n}\\nexport interface RestCountriesAPICountryLanguage {\\n  iso639_1?: string;\\n  iso639_2?: string;\\n  name?: string;\\n  nativeName?: string;\\n}\\nexport interface RestCountriesAPICountryTranslation {\\n  [key: string]: string;\\n}\\nexport interface RestCountriesAPICountryRegionalBloc {\\n  acronym?: string;\\n  name?: string;\\n  otherAcronyms?: string[];\\n  otherNames?: string[];\\n}\\nexport interface RestCountriesAPICountry {\\n  /**\\n   * The country\'s name\\n   */\\n  name?: string;\\n  /**\\n   * The top level domain of the country\\n   */\\n  topLevelDomain?: string[];\\n  /**\\n   * The 2 letter code of the country\\n   */\\n  alpha2Code?: string;\\n  /**\\n   * The 3 letter code of the country\\n   */\\n  alpha3Code?: string;\\n  /**\\n   * Phone number codes for the country\\n   */\\n  callingCodes?: string[];\\n  /**\\n   * The capital of the country\\n   * Note: This field will be an empty string if there\'s no capital.\\n   */\\n  capital?: string;\\n  /**\\n   * Alternate spellings of the country\\n   */\\n  altSpellings?: string[];\\n  /**\\n   * The region that the country is in\\n   */\\n  region?: string;\\n  /**\\n   * The subregion that the country is in\\n   */\\n  subregion?: string;\\n  /**\\n   * The total population of the country\\n   */\\n  population?: number;\\n  /**\\n   * The latitude and longtitude points of the country\\n   */\\n  latlng?: number[];\\n  /**\\n   * The name given to inhabitants of the country\\n   */\\n  demonym?: string;\\n  /**\\n   * The area of the country in square kilometres\\n   */\\n  area?: number;\\n  /**\\n   * Used for representing the income distribution of the country\'s residents\\n   * See https://en.wikipedia.org/wiki/Gini_coefficient for more info.\\n   */\\n  gini?: number;\\n  /**\\n   * The timezone(s) of the country (in GMT)\\n   */\\n  timezones?: string[];\\n  /**\\n   * The borders of the country denoted with country codes\\n   */\\n  borders?: string[];\\n  /**\\n   * The name of the country according to inhabitants\\n   */\\n  nativeName?: string;\\n  /**\\n   * A 3-digit country code denoted to represent a country\\n   * See https://en.wikipedia.org/wiki/ISO_3166-1_numeric for more info\\n   */\\n  numericCode?: string;\\n  /**\\n   * An array of currencies used in the country\\n   */\\n  currencies?: RestCountriesAPICountryCurrency[];\\n  /**\\n   * An array of languages spoken in the country\\n   */\\n  languages?: RestCountriesAPICountryLanguage[];\\n  /**\\n   * An array of alternative names of the country in other areas\\n   */\\n  translations?: RestCountriesAPICountryTranslation[];\\n  /**\\n   * The country\'s flag (as a URL)\\n   */\\n  flag?: string;\\n  /**\\n   * Trading blocs\\n   */\\n  regionalBlocs?: RestCountriesAPICountryRegionalBloc[];\\n  /**\\n   * Unknown property\\n   */\\n  cioc?: string;\\n}\\n","properties":[{"name":"code","type":"string","optional":true,"description":"<p>The codename of the country&#39;s currency</p>\\n","line":12},{"name":"name","type":"string","optional":true,"description":"<p>The name of the country&#39;s currency</p>\\n","line":16},{"name":"symbol","type":"string","optional":true,"description":"<p>The Unicode symbol of the country&#39;s currency</p>\\n","line":20}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"RestCountriesAPICountryLanguage","id":"interface-RestCountriesAPICountryLanguage-1b72142dbb15a25b9f9f16c1fcce95bb","file":"projects/rss-reader/src/app/models/rest-countries-api/index.ts","type":"interface","sourceCode":"export interface RestCountriesAPICountryCurrency {\\n  /**\\n   * The codename of the country\'s currency\\n   */\\n  code?: string;\\n  /**\\n   * The name of the country\'s currency\\n   */\\n  name?: string;\\n  /**\\n   * The Unicode symbol of the country\'s currency\\n   */\\n  symbol?: string;\\n}\\nexport interface RestCountriesAPICountryLanguage {\\n  iso639_1?: string;\\n  iso639_2?: string;\\n  name?: string;\\n  nativeName?: string;\\n}\\nexport interface RestCountriesAPICountryTranslation {\\n  [key: string]: string;\\n}\\nexport interface RestCountriesAPICountryRegionalBloc {\\n  acronym?: string;\\n  name?: string;\\n  otherAcronyms?: string[];\\n  otherNames?: string[];\\n}\\nexport interface RestCountriesAPICountry {\\n  /**\\n   * The country\'s name\\n   */\\n  name?: string;\\n  /**\\n   * The top level domain of the country\\n   */\\n  topLevelDomain?: string[];\\n  /**\\n   * The 2 letter code of the country\\n   */\\n  alpha2Code?: string;\\n  /**\\n   * The 3 letter code of the country\\n   */\\n  alpha3Code?: string;\\n  /**\\n   * Phone number codes for the country\\n   */\\n  callingCodes?: string[];\\n  /**\\n   * The capital of the country\\n   * Note: This field will be an empty string if there\'s no capital.\\n   */\\n  capital?: string;\\n  /**\\n   * Alternate spellings of the country\\n   */\\n  altSpellings?: string[];\\n  /**\\n   * The region that the country is in\\n   */\\n  region?: string;\\n  /**\\n   * The subregion that the country is in\\n   */\\n  subregion?: string;\\n  /**\\n   * The total population of the country\\n   */\\n  population?: number;\\n  /**\\n   * The latitude and longtitude points of the country\\n   */\\n  latlng?: number[];\\n  /**\\n   * The name given to inhabitants of the country\\n   */\\n  demonym?: string;\\n  /**\\n   * The area of the country in square kilometres\\n   */\\n  area?: number;\\n  /**\\n   * Used for representing the income distribution of the country\'s residents\\n   * See https://en.wikipedia.org/wiki/Gini_coefficient for more info.\\n   */\\n  gini?: number;\\n  /**\\n   * The timezone(s) of the country (in GMT)\\n   */\\n  timezones?: string[];\\n  /**\\n   * The borders of the country denoted with country codes\\n   */\\n  borders?: string[];\\n  /**\\n   * The name of the country according to inhabitants\\n   */\\n  nativeName?: string;\\n  /**\\n   * A 3-digit country code denoted to represent a country\\n   * See https://en.wikipedia.org/wiki/ISO_3166-1_numeric for more info\\n   */\\n  numericCode?: string;\\n  /**\\n   * An array of currencies used in the country\\n   */\\n  currencies?: RestCountriesAPICountryCurrency[];\\n  /**\\n   * An array of languages spoken in the country\\n   */\\n  languages?: RestCountriesAPICountryLanguage[];\\n  /**\\n   * An array of alternative names of the country in other areas\\n   */\\n  translations?: RestCountriesAPICountryTranslation[];\\n  /**\\n   * The country\'s flag (as a URL)\\n   */\\n  flag?: string;\\n  /**\\n   * Trading blocs\\n   */\\n  regionalBlocs?: RestCountriesAPICountryRegionalBloc[];\\n  /**\\n   * Unknown property\\n   */\\n  cioc?: string;\\n}\\n","properties":[{"name":"iso639_1","type":"string","optional":true,"description":"","line":23},{"name":"iso639_2","type":"string","optional":true,"description":"","line":24},{"name":"name","type":"string","optional":true,"description":"","line":25},{"name":"nativeName","type":"string","optional":true,"description":"","line":26}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"RestCountriesAPICountryRegionalBloc","id":"interface-RestCountriesAPICountryRegionalBloc-1b72142dbb15a25b9f9f16c1fcce95bb","file":"projects/rss-reader/src/app/models/rest-countries-api/index.ts","type":"interface","sourceCode":"export interface RestCountriesAPICountryCurrency {\\n  /**\\n   * The codename of the country\'s currency\\n   */\\n  code?: string;\\n  /**\\n   * The name of the country\'s currency\\n   */\\n  name?: string;\\n  /**\\n   * The Unicode symbol of the country\'s currency\\n   */\\n  symbol?: string;\\n}\\nexport interface RestCountriesAPICountryLanguage {\\n  iso639_1?: string;\\n  iso639_2?: string;\\n  name?: string;\\n  nativeName?: string;\\n}\\nexport interface RestCountriesAPICountryTranslation {\\n  [key: string]: string;\\n}\\nexport interface RestCountriesAPICountryRegionalBloc {\\n  acronym?: string;\\n  name?: string;\\n  otherAcronyms?: string[];\\n  otherNames?: string[];\\n}\\nexport interface RestCountriesAPICountry {\\n  /**\\n   * The country\'s name\\n   */\\n  name?: string;\\n  /**\\n   * The top level domain of the country\\n   */\\n  topLevelDomain?: string[];\\n  /**\\n   * The 2 letter code of the country\\n   */\\n  alpha2Code?: string;\\n  /**\\n   * The 3 letter code of the country\\n   */\\n  alpha3Code?: string;\\n  /**\\n   * Phone number codes for the country\\n   */\\n  callingCodes?: string[];\\n  /**\\n   * The capital of the country\\n   * Note: This field will be an empty string if there\'s no capital.\\n   */\\n  capital?: string;\\n  /**\\n   * Alternate spellings of the country\\n   */\\n  altSpellings?: string[];\\n  /**\\n   * The region that the country is in\\n   */\\n  region?: string;\\n  /**\\n   * The subregion that the country is in\\n   */\\n  subregion?: string;\\n  /**\\n   * The total population of the country\\n   */\\n  population?: number;\\n  /**\\n   * The latitude and longtitude points of the country\\n   */\\n  latlng?: number[];\\n  /**\\n   * The name given to inhabitants of the country\\n   */\\n  demonym?: string;\\n  /**\\n   * The area of the country in square kilometres\\n   */\\n  area?: number;\\n  /**\\n   * Used for representing the income distribution of the country\'s residents\\n   * See https://en.wikipedia.org/wiki/Gini_coefficient for more info.\\n   */\\n  gini?: number;\\n  /**\\n   * The timezone(s) of the country (in GMT)\\n   */\\n  timezones?: string[];\\n  /**\\n   * The borders of the country denoted with country codes\\n   */\\n  borders?: string[];\\n  /**\\n   * The name of the country according to inhabitants\\n   */\\n  nativeName?: string;\\n  /**\\n   * A 3-digit country code denoted to represent a country\\n   * See https://en.wikipedia.org/wiki/ISO_3166-1_numeric for more info\\n   */\\n  numericCode?: string;\\n  /**\\n   * An array of currencies used in the country\\n   */\\n  currencies?: RestCountriesAPICountryCurrency[];\\n  /**\\n   * An array of languages spoken in the country\\n   */\\n  languages?: RestCountriesAPICountryLanguage[];\\n  /**\\n   * An array of alternative names of the country in other areas\\n   */\\n  translations?: RestCountriesAPICountryTranslation[];\\n  /**\\n   * The country\'s flag (as a URL)\\n   */\\n  flag?: string;\\n  /**\\n   * Trading blocs\\n   */\\n  regionalBlocs?: RestCountriesAPICountryRegionalBloc[];\\n  /**\\n   * Unknown property\\n   */\\n  cioc?: string;\\n}\\n","properties":[{"name":"acronym","type":"string","optional":true,"description":"","line":32},{"name":"name","type":"string","optional":true,"description":"","line":33},{"name":"otherAcronyms","type":"string[]","optional":true,"description":"","line":34},{"name":"otherNames","type":"string[]","optional":true,"description":"","line":35}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"RestCountriesAPICountryTranslation","id":"interface-RestCountriesAPICountryTranslation-1b72142dbb15a25b9f9f16c1fcce95bb","file":"projects/rss-reader/src/app/models/rest-countries-api/index.ts","type":"interface","sourceCode":"export interface RestCountriesAPICountryCurrency {\\n  /**\\n   * The codename of the country\'s currency\\n   */\\n  code?: string;\\n  /**\\n   * The name of the country\'s currency\\n   */\\n  name?: string;\\n  /**\\n   * The Unicode symbol of the country\'s currency\\n   */\\n  symbol?: string;\\n}\\nexport interface RestCountriesAPICountryLanguage {\\n  iso639_1?: string;\\n  iso639_2?: string;\\n  name?: string;\\n  nativeName?: string;\\n}\\nexport interface RestCountriesAPICountryTranslation {\\n  [key: string]: string;\\n}\\nexport interface RestCountriesAPICountryRegionalBloc {\\n  acronym?: string;\\n  name?: string;\\n  otherAcronyms?: string[];\\n  otherNames?: string[];\\n}\\nexport interface RestCountriesAPICountry {\\n  /**\\n   * The country\'s name\\n   */\\n  name?: string;\\n  /**\\n   * The top level domain of the country\\n   */\\n  topLevelDomain?: string[];\\n  /**\\n   * The 2 letter code of the country\\n   */\\n  alpha2Code?: string;\\n  /**\\n   * The 3 letter code of the country\\n   */\\n  alpha3Code?: string;\\n  /**\\n   * Phone number codes for the country\\n   */\\n  callingCodes?: string[];\\n  /**\\n   * The capital of the country\\n   * Note: This field will be an empty string if there\'s no capital.\\n   */\\n  capital?: string;\\n  /**\\n   * Alternate spellings of the country\\n   */\\n  altSpellings?: string[];\\n  /**\\n   * The region that the country is in\\n   */\\n  region?: string;\\n  /**\\n   * The subregion that the country is in\\n   */\\n  subregion?: string;\\n  /**\\n   * The total population of the country\\n   */\\n  population?: number;\\n  /**\\n   * The latitude and longtitude points of the country\\n   */\\n  latlng?: number[];\\n  /**\\n   * The name given to inhabitants of the country\\n   */\\n  demonym?: string;\\n  /**\\n   * The area of the country in square kilometres\\n   */\\n  area?: number;\\n  /**\\n   * Used for representing the income distribution of the country\'s residents\\n   * See https://en.wikipedia.org/wiki/Gini_coefficient for more info.\\n   */\\n  gini?: number;\\n  /**\\n   * The timezone(s) of the country (in GMT)\\n   */\\n  timezones?: string[];\\n  /**\\n   * The borders of the country denoted with country codes\\n   */\\n  borders?: string[];\\n  /**\\n   * The name of the country according to inhabitants\\n   */\\n  nativeName?: string;\\n  /**\\n   * A 3-digit country code denoted to represent a country\\n   * See https://en.wikipedia.org/wiki/ISO_3166-1_numeric for more info\\n   */\\n  numericCode?: string;\\n  /**\\n   * An array of currencies used in the country\\n   */\\n  currencies?: RestCountriesAPICountryCurrency[];\\n  /**\\n   * An array of languages spoken in the country\\n   */\\n  languages?: RestCountriesAPICountryLanguage[];\\n  /**\\n   * An array of alternative names of the country in other areas\\n   */\\n  translations?: RestCountriesAPICountryTranslation[];\\n  /**\\n   * The country\'s flag (as a URL)\\n   */\\n  flag?: string;\\n  /**\\n   * Trading blocs\\n   */\\n  regionalBlocs?: RestCountriesAPICountryRegionalBloc[];\\n  /**\\n   * Unknown property\\n   */\\n  cioc?: string;\\n}\\n","properties":[],"indexSignatures":[{"id":"index-declaration-1b72142dbb15a25b9f9f16c1fcce95bb","args":[{"name":"key","type":"string"}],"returnType":"string","line":28}],"kind":159,"methods":[]},{"name":"Rss2JsonParams","id":"interface-Rss2JsonParams-08cb3913db15aafd5ecdeedb659cfc1a","file":"projects/rss-reader/src/app/models/rss2json-api/params.ts","type":"interface","sourceCode":"export interface Rss2JsonParams {\\n  /** The RSS feed to be converted to JSON. (Note: The URL has to be escaped) */\\n  rss_url: string;\\n  /** A valid API key. */\\n  api_key?: string;\\n  /**\\n   * Order the results by the chosen value.\\n   * Note: `api_key` must be specified to use this parameter.\\n   */\\n  order_by?: \'pubDate\' | \'author\' | \'title\';\\n  /**\\n   * The order direction of feed items to return.\\n   * Note: `api_key` must be specified to use this parameter.\\n   */\\n  order_dir?: \'asc\' | \'desc\';\\n  /**\\n   * The number of feed items to return. (Default: `10`)\\n   * Note: `api_key` must be specified to use this parameter.\\n   */\\n  count?: number;\\n  /** The callback name to be used for JSONP. */\\n  callback?: string;\\n}\\n","properties":[{"name":"api_key","type":"string","optional":true,"description":"<p>A valid API key. </p>\\n","line":5},{"name":"callback","type":"string","optional":true,"description":"<p>The callback name to be used for JSONP. </p>\\n","line":22},{"name":"count","type":"number","optional":true,"description":"<p>The number of feed items to return. (Default: <code>10</code>)\\nNote: <code>api_key</code> must be specified to use this parameter.</p>\\n","line":20},{"name":"order_by","type":"\\"pubDate\\" | \\"author\\" | \\"title\\"","optional":true,"description":"<p>Order the results by the chosen value.\\nNote: <code>api_key</code> must be specified to use this parameter.</p>\\n","line":10},{"name":"order_dir","type":"\\"asc\\" | \\"desc\\"","optional":true,"description":"<p>The order direction of feed items to return.\\nNote: <code>api_key</code> must be specified to use this parameter.</p>\\n","line":15},{"name":"rss_url","type":"string","optional":false,"description":"<p>The RSS feed to be converted to JSON. (Note: The URL has to be escaped) </p>\\n","line":3}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"Rss2JsonResponse","id":"interface-Rss2JsonResponse-92db8dcae0b8885c1dd0b1a34b65bde0","file":"projects/rss-reader/src/app/models/rss2json-api/response.ts","type":"interface","sourceCode":"import { Rss2JsonResponseChannel } from \'./channel\';\\nimport { Rss2JsonResponseItem } from \'./item\';\\n\\nexport interface Rss2JsonResponse {\\n  /** The status of the API response. */\\n  status?: string;\\n  /** The error message if the API errors. */\\n  message?: string;\\n  /** Metadata about the RSS feed channel. */\\n  feed?: Rss2JsonResponseChannel;\\n  items?: Rss2JsonResponseItem[];\\n}\\n","properties":[{"name":"feed","type":"Rss2JsonResponseChannel","optional":true,"description":"<p>Metadata about the RSS feed channel. </p>\\n","line":10},{"name":"items","type":"Rss2JsonResponseItem[]","optional":true,"description":"","line":11},{"name":"message","type":"string","optional":true,"description":"<p>The error message if the API errors. </p>\\n","line":8},{"name":"status","type":"string","optional":true,"description":"<p>The status of the API response. </p>\\n","line":6}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"Rss2JsonResponseChannel","id":"interface-Rss2JsonResponseChannel-a6565c690162348ba803dda6adbf598d","file":"projects/rss-reader/src/app/models/rss2json-api/channel.ts","type":"interface","sourceCode":"export interface Rss2JsonResponseChannel {\\n  /** The URL to the RSS feed channel. */\\n  url?: string;\\n  /** The name of the RSS feed channel. */\\n  title?: string;\\n  /** A link to the website corresponding to the RSS feed channel. */\\n  link?: string;\\n  /** The author of the RSS feed channel. */\\n  author?: string;\\n  /** The description of the RSS feed channel. */\\n  description?: string;\\n  /** The image that can be displayed with the RSS feed channel. */\\n  image?: string;\\n}\\n","properties":[{"name":"author","type":"string","optional":true,"description":"<p>The author of the RSS feed channel. </p>\\n","line":9},{"name":"description","type":"string","optional":true,"description":"<p>The description of the RSS feed channel. </p>\\n","line":11},{"name":"image","type":"string","optional":true,"description":"<p>The image that can be displayed with the RSS feed channel. </p>\\n","line":13},{"name":"link","type":"string","optional":true,"description":"<p>A link to the website corresponding to the RSS feed channel. </p>\\n","line":7},{"name":"title","type":"string","optional":true,"description":"<p>The name of the RSS feed channel. </p>\\n","line":5},{"name":"url","type":"string","optional":true,"description":"<p>The URL to the RSS feed channel. </p>\\n","line":3}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"Rss2JsonResponseItem","id":"interface-Rss2JsonResponseItem-aab29d7af11846982007f71fe716b0d2","file":"projects/rss-reader/src/app/models/rss2json-api/item.ts","type":"interface","sourceCode":"export interface Rss2JsonResponseItem {\\n  /** The title of the item. */\\n  title?: string;\\n  /** The date when the item was published at. */\\n  pubDate?: string;\\n  /** The URL of the item. */\\n  link?: string;\\n  /** A string that uniquely identifies the item. */\\n  guid?: string;\\n  /** The author of the item. */\\n  author?: string;\\n  /** The thumbnail URL of the item. */\\n  thumbnail?: string;\\n  /** The item synopsis. */\\n  description?: string;\\n  /** The content of the item. */\\n  content?: string;\\n  /** Describes a media object that is attached to the item. */\\n  enclosure?: {\\n    [key: string]: any;\\n  };\\n  /** A list of categories that the item is in. */\\n  categories?: string[];\\n}\\n","properties":[{"name":"author","type":"string","optional":true,"description":"<p>The author of the item. </p>\\n","line":11},{"name":"categories","type":"string[]","optional":true,"description":"<p>A list of categories that the item is in. </p>\\n","line":23},{"name":"content","type":"string","optional":true,"description":"<p>The content of the item. </p>\\n","line":17},{"name":"description","type":"string","optional":true,"description":"<p>The item synopsis. </p>\\n","line":15},{"name":"enclosure","type":"literal type","optional":true,"description":"<p>Describes a media object that is attached to the item. </p>\\n","line":19},{"name":"guid","type":"string","optional":true,"description":"<p>A string that uniquely identifies the item. </p>\\n","line":9},{"name":"link","type":"string","optional":true,"description":"<p>The URL of the item. </p>\\n","line":7},{"name":"pubDate","type":"string","optional":true,"description":"<p>The date when the item was published at. </p>\\n","line":5},{"name":"thumbnail","type":"string","optional":true,"description":"<p>The thumbnail URL of the item. </p>\\n","line":13},{"name":"title","type":"string","optional":true,"description":"<p>The title of the item. </p>\\n","line":3}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"SelectionDialogOption","id":"interface-SelectionDialogOption-b2552c1f9e6d368b51f3e050d9ff84c9","file":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","sourceCode":"import { Portal } from \'@angular/cdk/portal\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\n\\nexport type ButtonType = \'negative\' | \'neutral\' | \'positive\';\\n\\nexport type DialogType = \'alert\' | \'confirm\' | \'message\' | \'prompt\' | \'portal\'\\n  | \'selection\';\\n\\nexport interface BaseDialogOpts {\\n  /** The dialog\'s title. */\\n  title?: string;\\n}\\n\\nexport interface DialogBtnOpts {\\n  /** The positive button\'s text. */\\n  positiveBtnText?: string;\\n  /** The positive button\'s color. */\\n  positiveBtnColor?: ThemePalette;\\n  /** The negative button\'s text. */\\n  negativeBtnText?: string;\\n  /** The negative button\'s color. */\\n  negativeBtnColor?: ThemePalette;\\n  /** The neutral button\'s text. */\\n  neutralBtnText?: string;\\n  /** The neutral button\'s color. */\\n  neutralBtnColor?: ThemePalette;\\n  /**\\n   * Whether to hide the action buttons.\\n   *\\n   * Optionally, you can specify which buttons to hide.\\n   */\\n  hideActionBtns?: ButtonType[] | boolean;\\n  /** The initial button to focus on. */\\n  initialActionBtnFocus?: ButtonType;\\n}\\n\\nexport interface DialogOptsWithMsg {\\n  /** The dialog\'s message. */\\n  msg?: string | SafeHtml;\\n  /** The dialog\'s title. */\\n  title?: string;\\n  /** Whether the dialog\'s message is in HTML. */\\n  isHtml?: boolean;\\n}\\n\\nexport interface DialogOpts extends BaseDialogOpts, DialogBtnOpts,\\n  DialogOptsWithMsg { }\\n\\nexport interface PromptDialogInputConfig {\\n  /** The input\'s placeholder. */\\n  placeholder?: string;\\n  /** The input\'s label. */\\n  label?: string;\\n  /** The input type. */\\n  inputType?: string;\\n  /** The input\'s initial value. */\\n  value?: string;\\n  /** The input\'s color. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PromptDialogOpts extends DialogOpts {\\n  /** Configuration for the input. */\\n  inputConfig?: PromptDialogInputConfig;\\n  /**\\n   * The input\'s placeholder.\\n   * @deprecated Use {@link PromptDialogInputConfig#placeholder} instead\\n   */\\n  placeholder?: string;\\n  /**\\n   * The input type.\\n   * @deprecated Use {@link PromptDialogInputConfig#inputType} instead\\n   */\\n  inputType?: \'text\' | \'email\' | \'password\' | \'number\';\\n  /**\\n   * The initial value of the input\\n   * @deprecated Use {@link PromptDialogInputConfig#value} instead\\n   */\\n  value?: string | number;\\n  /**\\n   * The color of the input\\n   * @deprecated Use {@link PromptDialogInputConfig#color} instead\\n   */\\n  color?: ThemePalette;\\n}\\n\\nexport interface SelectionDialogOpts extends DialogOpts {\\n  /** Options to be shown in the dialog. */\\n  options: SelectionDialogOption[];\\n}\\n\\nexport interface SelectionDialogOption {\\n  /** The title of the option. */\\n  title: string;\\n  /** The value of the option. */\\n  value: any;\\n  /** Whether the option is disabled. */\\n  disabled?: boolean;\\n  /** Whether the option is initially selected. */\\n  selected?: boolean;\\n  /** The checkbox position of the option. */\\n  checkboxPosition?: \'before\' | \'after\';\\n  /** The color of the option. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PortalDialogOpts<T> extends DialogOpts {\\n  /** The portal to render in the dialog. */\\n  portal: Portal<T>;\\n}\\n\\n/** The result returned by the dialog. */\\nexport enum DialogResult {\\n  /** Indicates that the user clicked the \\"Cancel\\" (or negative) button. */\\n  NEGATIVE = \'cancel\',\\n  /** Alias for {@link DialogResult#NEGATIVE}. */\\n  CANCEL = \'cancel\',\\n  /** Indicates that the user clicked the neutral button. */\\n  NEUTRAL = \'neutral\',\\n  /** Indicates that the user clicked the \\"OK\\" (or positive) button. */\\n  POSITIVE = \'ok\',\\n  /** Alias for {@link DialogResult#POSITIVE}. */\\n  OK = \'ok\'\\n}\\n","properties":[{"name":"checkboxPosition","type":"\\"before\\" | \\"after\\"","optional":true,"description":"<p>The checkbox position of the option. </p>\\n","line":103},{"name":"color","type":"ThemePalette","optional":true,"description":"<p>The color of the option. </p>\\n","line":105},{"name":"disabled","type":"boolean","optional":true,"description":"<p>Whether the option is disabled. </p>\\n","line":99},{"name":"selected","type":"boolean","optional":true,"description":"<p>Whether the option is initially selected. </p>\\n","line":101},{"name":"title","type":"string","optional":false,"description":"<p>The title of the option. </p>\\n","line":95},{"name":"value","type":"any","optional":false,"description":"<p>The value of the option. </p>\\n","line":97}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"SelectionDialogOpts","id":"interface-SelectionDialogOpts-b2552c1f9e6d368b51f3e050d9ff84c9","file":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","sourceCode":"import { Portal } from \'@angular/cdk/portal\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\n\\nexport type ButtonType = \'negative\' | \'neutral\' | \'positive\';\\n\\nexport type DialogType = \'alert\' | \'confirm\' | \'message\' | \'prompt\' | \'portal\'\\n  | \'selection\';\\n\\nexport interface BaseDialogOpts {\\n  /** The dialog\'s title. */\\n  title?: string;\\n}\\n\\nexport interface DialogBtnOpts {\\n  /** The positive button\'s text. */\\n  positiveBtnText?: string;\\n  /** The positive button\'s color. */\\n  positiveBtnColor?: ThemePalette;\\n  /** The negative button\'s text. */\\n  negativeBtnText?: string;\\n  /** The negative button\'s color. */\\n  negativeBtnColor?: ThemePalette;\\n  /** The neutral button\'s text. */\\n  neutralBtnText?: string;\\n  /** The neutral button\'s color. */\\n  neutralBtnColor?: ThemePalette;\\n  /**\\n   * Whether to hide the action buttons.\\n   *\\n   * Optionally, you can specify which buttons to hide.\\n   */\\n  hideActionBtns?: ButtonType[] | boolean;\\n  /** The initial button to focus on. */\\n  initialActionBtnFocus?: ButtonType;\\n}\\n\\nexport interface DialogOptsWithMsg {\\n  /** The dialog\'s message. */\\n  msg?: string | SafeHtml;\\n  /** The dialog\'s title. */\\n  title?: string;\\n  /** Whether the dialog\'s message is in HTML. */\\n  isHtml?: boolean;\\n}\\n\\nexport interface DialogOpts extends BaseDialogOpts, DialogBtnOpts,\\n  DialogOptsWithMsg { }\\n\\nexport interface PromptDialogInputConfig {\\n  /** The input\'s placeholder. */\\n  placeholder?: string;\\n  /** The input\'s label. */\\n  label?: string;\\n  /** The input type. */\\n  inputType?: string;\\n  /** The input\'s initial value. */\\n  value?: string;\\n  /** The input\'s color. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PromptDialogOpts extends DialogOpts {\\n  /** Configuration for the input. */\\n  inputConfig?: PromptDialogInputConfig;\\n  /**\\n   * The input\'s placeholder.\\n   * @deprecated Use {@link PromptDialogInputConfig#placeholder} instead\\n   */\\n  placeholder?: string;\\n  /**\\n   * The input type.\\n   * @deprecated Use {@link PromptDialogInputConfig#inputType} instead\\n   */\\n  inputType?: \'text\' | \'email\' | \'password\' | \'number\';\\n  /**\\n   * The initial value of the input\\n   * @deprecated Use {@link PromptDialogInputConfig#value} instead\\n   */\\n  value?: string | number;\\n  /**\\n   * The color of the input\\n   * @deprecated Use {@link PromptDialogInputConfig#color} instead\\n   */\\n  color?: ThemePalette;\\n}\\n\\nexport interface SelectionDialogOpts extends DialogOpts {\\n  /** Options to be shown in the dialog. */\\n  options: SelectionDialogOption[];\\n}\\n\\nexport interface SelectionDialogOption {\\n  /** The title of the option. */\\n  title: string;\\n  /** The value of the option. */\\n  value: any;\\n  /** Whether the option is disabled. */\\n  disabled?: boolean;\\n  /** Whether the option is initially selected. */\\n  selected?: boolean;\\n  /** The checkbox position of the option. */\\n  checkboxPosition?: \'before\' | \'after\';\\n  /** The color of the option. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PortalDialogOpts<T> extends DialogOpts {\\n  /** The portal to render in the dialog. */\\n  portal: Portal<T>;\\n}\\n\\n/** The result returned by the dialog. */\\nexport enum DialogResult {\\n  /** Indicates that the user clicked the \\"Cancel\\" (or negative) button. */\\n  NEGATIVE = \'cancel\',\\n  /** Alias for {@link DialogResult#NEGATIVE}. */\\n  CANCEL = \'cancel\',\\n  /** Indicates that the user clicked the neutral button. */\\n  NEUTRAL = \'neutral\',\\n  /** Indicates that the user clicked the \\"OK\\" (or positive) button. */\\n  POSITIVE = \'ok\',\\n  /** Alias for {@link DialogResult#POSITIVE}. */\\n  OK = \'ok\'\\n}\\n","properties":[{"name":"options","type":"SelectionDialogOption[]","optional":false,"description":"<p>Options to be shown in the dialog. </p>\\n","line":90}],"indexSignatures":[],"kind":150,"methods":[],"extends":"DialogOpts"},{"name":"Settings","id":"interface-Settings-e5cd5127407179a234035410c19859cb","file":"projects/rss-reader/src/app/models/settings.ts","type":"interface","sourceCode":"export interface Settings {\\n  /**\\n   * Whether to allow multiple RSS feeds\\n   * @deprecated Option doesn\'t do anything and has been removed from settings\\n   */\\n  multipleRss?: boolean;\\n  /**\\n   * Opens posts in a new tab\\n   */\\n  openNewTab?: boolean;\\n  /**\\n   * Whether to show images for feed card\\n   */\\n  showImages?: boolean;\\n  /**\\n   * The theme for the app\\n   */\\n  theme?: \'indigo-pink\' | \'deeppurple-amber\' | \'pink-bluegrey\' | \'purple-green\';\\n  /**\\n   * Whether to show the offline snackbar\\n   * @deprecated Option doesn\'t do anything and has been removed from settings\\n   */\\n  showOfflineSnackBar?: boolean;\\n  /**\\n   * Whether to enable push notifications\\n   * @deprecated Option doesn\'t do anything and has been removed from settings\\n   */\\n  pushNotifications?: boolean;\\n  /**\\n   * Whether to enable notifications\\n   * @deprecated Option doesn\'t do anything and has been removed from settings\\n   */\\n  notifications?: boolean;\\n  /**\\n   * The maximum number of notifications to show\\n   * @deprecated Option doesn\'t do anything and has been removed from settings\\n   */\\n  maxNotifications?: number | any;\\n  /** Whether the user should be notified when a new release of the app is out. */\\n  notifyNewReleases?: boolean;\\n}\\n","properties":[{"name":"maxNotifications","type":"number | any","optional":true,"description":"<p>The maximum number of notifications to show</p>\\n","line":38,"jsdoctags":[{"pos":994,"end":1006,"flags":0,"kind":288,"atToken":{"pos":994,"end":995,"flags":0,"kind":57},"tagName":{"pos":995,"end":1005,"flags":0,"escapedText":"deprecated"},"comment":"<p>Option doesn&#39;t do anything and has been removed from settings</p>\\n"}]},{"name":"multipleRss","type":"boolean","optional":true,"description":"<p>Whether to allow multiple RSS feeds</p>\\n","line":6,"jsdoctags":[{"pos":80,"end":92,"flags":0,"kind":288,"atToken":{"pos":80,"end":81,"flags":0,"kind":57},"tagName":{"pos":81,"end":91,"flags":0,"escapedText":"deprecated"},"comment":"<p>Option doesn&#39;t do anything and has been removed from settings</p>\\n"}]},{"name":"notifications","type":"boolean","optional":true,"description":"<p>Whether to enable notifications</p>\\n","line":33,"jsdoctags":[{"pos":827,"end":839,"flags":0,"kind":288,"atToken":{"pos":827,"end":828,"flags":0,"kind":57},"tagName":{"pos":828,"end":838,"flags":0,"escapedText":"deprecated"},"comment":"<p>Option doesn&#39;t do anything and has been removed from settings</p>\\n"}]},{"name":"notifyNewReleases","type":"boolean","optional":true,"description":"<p>Whether the user should be notified when a new release of the app is out. </p>\\n","line":40},{"name":"openNewTab","type":"boolean","optional":true,"description":"<p>Opens posts in a new tab</p>\\n","line":10},{"name":"pushNotifications","type":"boolean","optional":true,"description":"<p>Whether to enable push notifications</p>\\n","line":28,"jsdoctags":[{"pos":668,"end":680,"flags":0,"kind":288,"atToken":{"pos":668,"end":669,"flags":0,"kind":57},"tagName":{"pos":669,"end":679,"flags":0,"escapedText":"deprecated"},"comment":"<p>Option doesn&#39;t do anything and has been removed from settings</p>\\n"}]},{"name":"showImages","type":"boolean","optional":true,"description":"<p>Whether to show images for feed card</p>\\n","line":14},{"name":"showOfflineSnackBar","type":"boolean","optional":true,"description":"<p>Whether to show the offline snackbar</p>\\n","line":23,"jsdoctags":[{"pos":502,"end":514,"flags":0,"kind":288,"atToken":{"pos":502,"end":503,"flags":0,"kind":57},"tagName":{"pos":503,"end":513,"flags":0,"escapedText":"deprecated"},"comment":"<p>Option doesn&#39;t do anything and has been removed from settings</p>\\n"}]},{"name":"theme","type":"\\"indigo-pink\\" | \\"deeppurple-amber\\" | \\"pink-bluegrey\\" | \\"purple-green\\"","optional":true,"description":"<p>The theme for the app</p>\\n","line":18}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"SettingsStorageConfig","id":"interface-SettingsStorageConfig-6cd7daaff36671533ee4a1a574e68f5d","file":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","type":"interface","sourceCode":"import { Injectable, Inject, InjectionToken, Optional } from \'@angular/core\';\\nimport { Settings } from \'../../models/settings\';\\n\\n/** Configuration options for {@link SettingsStorageService}. */\\nexport interface SettingsStorageConfig<S = Settings> {\\n  /** Whether to revert to the default settings if no such value exists in storage. */\\n  canRevertDefault?: boolean;\\n  /** Default settings to be used if no such value exists in storage. */\\n  defaultSettings?: S;\\n}\\n\\n/** The settings storage provider to use. (Default: `localStorage`) */\\nexport const SETTINGS_STORAGE_PROVIDER: InjectionToken<Storage> = new InjectionToken(\'Settings storage provider\', {\\n  factory: () => localStorage\\n});\\n\\n/** The settings key to store the settings in. (Default: `settings`) */\\nexport const SETTINGS_STORAGE_KEY: InjectionToken<string> = new InjectionToken(\'Settings storage key\', {\\n  factory: () => \'settings\'\\n});\\n\\n// Note: Turns out you need a function in order to return an object for a factory.\\nfunction SETTINGS_STORAGE_DEFAULT_CONFIG_FACTORY(): SettingsStorageConfig {\\n  return {\\n    canRevertDefault: true,\\n    defaultSettings: {\\n      openNewTab: true,\\n      showImages: true,\\n      theme: \'indigo-pink\',\\n      notifyNewReleases: true\\n    }\\n  };\\n}\\n\\n/** Configuration options to change the behavior of {@link SettingsStorageService}. */\\nexport const SETTINGS_STORAGE_CONFIG: InjectionToken<SettingsStorageConfig> = new InjectionToken(\'Settings storage config\', {\\n  factory: SETTINGS_STORAGE_DEFAULT_CONFIG_FACTORY\\n});\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class SettingsStorageService<S = Settings> {\\n  constructor(\\n    @Inject(SETTINGS_STORAGE_PROVIDER) private storage: Storage,\\n    @Inject(SETTINGS_STORAGE_KEY) private key: string,\\n    @Inject(SETTINGS_STORAGE_CONFIG) @Optional() private config: SettingsStorageConfig<S>\\n  ) { }\\n\\n  /** Retrieves the current settings (as JSON). */\\n  get settings(): S {\\n    return (this.storage.getItem(this.key) && this.config.canRevertDefault) ?\\n    JSON.parse(this.storage.getItem(this.key)) as S : this.config.defaultSettings;\\n  }\\n\\n  /** Overrides the current settings. */\\n  setSettings(settings: S) {\\n    this.storage.setItem(this.key, JSON.stringify(settings));\\n  }\\n\\n  /**\\n   * Clears the current settings.\\n   * @param resetToDefault Whether to reset to the default settings\\n   * instead of clearing them. (Default: `true`)\\n   */\\n  clearSettings(resetToDefault: boolean = true) {\\n    if (resetToDefault) {\\n      this.setSettings(this.config.defaultSettings);\\n    } else {\\n      this.storage.removeItem(this.key);\\n    }\\n  }\\n}\\n","properties":[{"name":"canRevertDefault","type":"boolean","optional":true,"description":"<p>Whether to revert to the default settings if no such value exists in storage. </p>\\n","line":7},{"name":"defaultSettings","type":"S","optional":true,"description":"<p>Default settings to be used if no such value exists in storage. </p>\\n","line":9}],"indexSignatures":[],"kind":150,"description":"<p>Configuration options for {@link SettingsStorageService}. </p>\\n","methods":[]},{"name":"SnackBarOpts","id":"interface-SnackBarOpts-379feed1078863759d248aa3aa780137","file":"projects/rss-reader/src/app/shared.service.ts","type":"interface","sourceCode":"import { BreakpointObserver, Breakpoints } from \'@angular/cdk/layout\';\\nimport { ComponentType } from \'@angular/cdk/portal\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { Injectable, NgModule } from \'@angular/core\';\\nimport { FormsModule } from \'@angular/forms\';\\nimport { MatSnackBar, MatSnackBarConfig, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar } from \'@angular/material/snack-bar\';\\nimport { Title } from \'@angular/platform-browser\';\\n\\nexport interface SnackBarOpts<D = any> {\\n  /** The snackbar\'s message. */\\n  msg: string;\\n  /** The snackbar\'s action. */\\n  action?: string;\\n  /** A component to open the snackbar with. */\\n  component?: ComponentType<any>;\\n  /** Configuration for the snackbar. */\\n  config?: MatSnackBarConfig<D>;\\n  /**\\n   * Additional options for the snackbar.\\n   * @deprecated Use {@link SnackBarOpts#config} instead\\n   */\\n  additionalOpts?: MatSnackBarConfig<D>;\\n}\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class SharedService {\\n  private internalTitle = \'\';\\n  constructor(\\n    private snackBar: MatSnackBar,\\n    private documentTitle: Title,\\n    private breakpointObserver: BreakpointObserver\\n  ) { }\\n  /**\\n   * Sets the document\'s title\\n   * @param title The title of the document to set\\n   */\\n  set title(title: string) {\\n    this.internalTitle = title;\\n    if (title !== \'\') {\\n      title = `${title} | `;\\n    }\\n    this.documentTitle.setTitle(`${title}Angular RSS Reader`);\\n  }\\n  /**\\n   * Returns the document\'s title\\n   */\\n  get title(): string {\\n    return this.internalTitle;\\n  }\\n\\n  /** Detects if the user is using a mobile device based on CSS media queries. */\\n  get isMobile(): boolean {\\n    return this.breakpointObserver.isMatched(Breakpoints.Handset);\\n  }\\n\\n  /** Detects if the user is using a handset in portrait mode based on CSS media queries. */\\n  get isPortraitHandset(): boolean {\\n    return this.breakpointObserver.isMatched(Breakpoints.HandsetPortrait);\\n  }\\n\\n  /**\\n   * Opens a snackBar with the specified params and no return\\n   * @param opts The options of the snackBar\\n   */\\n  openSnackBar(opts: SnackBarOpts): MatSnackBarRef<SimpleSnackBar> {\\n    return this.handleSnackBar(opts);\\n  }\\n  /**\\n   * Opens a snackBar with the specified params and a return of the snackBar\'s ref (for component)\\n   * @param opts The options of the snackBar\\n   * @returns The snackbar reference\\n   */\\n  openSnackBarComponent(opts: SnackBarOpts): MatSnackBarRef<any> {\\n    return this.handleSnackBarWithComponent(opts);\\n  }\\n\\n  private handleSnackBar(opts: SnackBarOpts): MatSnackBarRef<SimpleSnackBar> {\\n    // tslint:disable-next-line:deprecation\\n    const config = opts.config ? opts.config : opts.additionalOpts;\\n    return this.snackBar.open(opts.msg, opts.action ? opts.action : undefined, config);\\n  }\\n\\n  private handleSnackBarWithComponent(opts: SnackBarOpts): MatSnackBarRef<any> {\\n    // tslint:disable-next-line:deprecation\\n    const config = opts.config ? opts.config : opts.additionalOpts;\\n    return this.snackBar.openFromComponent(opts.component, config);\\n  }\\n\\n  /** Closes the current snackbar. */\\n  closeSnackBar() {\\n    this.snackBar.dismiss();\\n  }\\n}\\n\\n@NgModule({\\n  providers: [\\n    SharedService\\n  ],\\n  imports: [\\n    CommonModule,\\n    FormsModule,\\n    MatSnackBarModule\\n  ]\\n})\\nexport class SharedModule { }\\n","properties":[{"name":"action","type":"string","optional":true,"description":"<p>The snackbar&#39;s action. </p>\\n","line":13},{"name":"additionalOpts","type":"MatSnackBarConfig<D>","optional":true,"description":"<p>Additional options for the snackbar.</p>\\n","line":22,"jsdoctags":[{"pos":802,"end":814,"flags":0,"kind":288,"atToken":{"pos":802,"end":803,"flags":0,"kind":57},"tagName":{"pos":803,"end":813,"flags":0,"escapedText":"deprecated"},"comment":"<p>Use {</p>\\n"},{"pos":819,"end":825,"flags":0,"kind":288,"atToken":{"pos":819,"end":820,"flags":0,"kind":57},"tagName":{"pos":820,"end":824,"flags":0,"escapedText":"link"},"comment":"<p>SnackBarOpts#config} instead</p>\\n"}]},{"name":"component","type":"ComponentType<any>","optional":true,"description":"<p>A component to open the snackbar with. </p>\\n","line":15},{"name":"config","type":"MatSnackBarConfig<D>","optional":true,"description":"<p>Configuration for the snackbar. </p>\\n","line":17},{"name":"msg","type":"string","optional":false,"description":"<p>The snackbar&#39;s message. </p>\\n","line":11}],"indexSignatures":[],"kind":150,"methods":[]}],"injectables":[{"name":"ActionItemService","id":"injectable-ActionItemService-c871e14c41d3b304fef149fb7ba551ae","file":"projects/rss-reader/src/app/actionitem.service.ts","properties":[{"name":"actionItems","defaultValue":"new Map<string, ActionItem>()","type":"","optional":false,"description":"","line":19,"modifierKind":[132]}],"methods":[{"name":"addActionItem","args":[{"name":"actionItem","type":"ActionItem"}],"optional":false,"returnType":"void","typeParameters":[],"line":24,"description":"<p>Adds an action item</p>\\n","jsdoctags":[{"name":{"pos":768,"end":778,"flags":0,"escapedText":"actionItem"},"type":"ActionItem","tagName":{"pos":762,"end":767,"flags":0,"escapedText":"param"},"comment":"<p>The action item</p>\\n"}]},{"name":"addActionItemOnClickListener","args":[{"name":"key","type":"string"},{"name":"callback","type":"function","function":[{"name":"ev","type":"Event","optional":true}]}],"optional":false,"returnType":"void","typeParameters":[],"line":93,"description":"<p>Adds a action item on click listener to the specified action item\\nNote: This can also be declared manually</p>\\n","jsdoctags":[{"name":"key","type":"string","tagName":{"text":"param"}},{"name":{"pos":2702,"end":2710,"flags":0,"escapedText":"callback"},"type":"function","function":[{"name":"ev","type":"Event","optional":true}],"tagName":{"pos":2696,"end":2701,"flags":0,"escapedText":"param"},"comment":"<p>The callback when the action item is clicked (has to be arrow function)</p>\\n"}]},{"name":"addActionItemToggle","args":[{"name":"actionItem","type":"ActionItemToggle"}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"description":"<p>Adds an action item toggle</p>\\n","jsdoctags":[{"name":{"pos":964,"end":974,"flags":0,"escapedText":"actionItem"},"type":"ActionItemToggle","tagName":{"pos":958,"end":963,"flags":0,"escapedText":"param"},"comment":"<p>The action item</p>\\n"}]},{"name":"getActionItemByKey","args":[{"name":"key","type":"string"}],"optional":false,"returnType":"ActionItem","typeParameters":[],"line":79,"description":"<p>Gets a action item by its key</p>\\n","jsdoctags":[{"name":{"pos":2226,"end":2229,"flags":0,"escapedText":"key"},"type":"string","tagName":{"pos":2220,"end":2225,"flags":0,"escapedText":"param"},"comment":"<p>The key of the action item to retrieve</p>\\n"}]},{"name":"getActionItems","args":[],"optional":false,"returnType":"ActionItem[]","typeParameters":[],"line":55,"description":"<p>Gets all action items</p>\\n"},{"name":"removeActionItemByKey","args":[{"name":"key","type":"string"}],"optional":false,"returnType":"void","typeParameters":[],"line":62,"description":"<p>Removes an action item</p>\\n","jsdoctags":[{"name":{"pos":1874,"end":1877,"flags":0,"escapedText":"key"},"type":"string","tagName":{"pos":1868,"end":1873,"flags":0,"escapedText":"param"},"comment":"<p>The key of the action item to remove</p>\\n"}]},{"name":"removeActionItems","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":72,"description":"<p>Removes all action items</p>\\n"},{"name":"throwKeyNotFoundError","args":[{"name":"id","type":"string"}],"optional":false,"returnType":"void","typeParameters":[],"line":103,"description":"<p>Throws an error where the id couldn&#39;t be found</p>\\n","modifierKind":[112],"jsdoctags":[{"name":"id","type":"string","tagName":{"text":"param"}}]},{"name":"throwTitleNotFoundError","args":[{"name":"title","type":"string"}],"optional":false,"returnType":"void","typeParameters":[],"line":109,"description":"<p>Throws an error where the title couldn&#39;t be found</p>\\n","modifierKind":[112],"jsdoctags":[{"name":"title","type":"string","tagName":{"text":"param"}}]},{"name":"updateActionItemByKey","args":[{"name":"key","type":"string"},{"name":"actionItem","type":"ActionItem"}],"optional":false,"returnType":"void","typeParameters":[],"line":45,"description":"<p>Updates an action item by its key</p>\\n","jsdoctags":[{"name":{"pos":1442,"end":1445,"flags":0,"escapedText":"key"},"type":"string","tagName":{"pos":1436,"end":1441,"flags":0,"escapedText":"param"},"comment":"<p>The key of the action item</p>\\n"},{"name":{"pos":1485,"end":1495,"flags":0,"escapedText":"actionItem"},"type":"ActionItem","tagName":{"pos":1479,"end":1484,"flags":0,"escapedText":"param"},"comment":"<p>The action item</p>\\n"}]}],"description":"","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { Component, Injectable, NgModule } from \'@angular/core\';\\nimport { MatButtonModule } from \'@angular/material/button\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport { MatMenuModule } from \'@angular/material/menu\';\\nimport { MatTooltipModule } from \'@angular/material/tooltip\';\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\nimport { RouterModule } from \'@angular/router\';\\n\\n/** ID used to generate new action items with no explicitly-defined ID. */\\nlet nextKeyId = 0;\\n\\n@Injectable()\\n/**\\n * A action icon service for the toolbar.\\n */\\nexport class ActionItemService {\\n\\n  readonly actionItems = new Map<string, ActionItem>();\\n  /**\\n   * Adds an action item\\n   * @param actionItem The action item\\n   */\\n  addActionItem(actionItem: ActionItem) {\\n    this.actionItems.set(`actionItem-${nextKeyId++}`, actionItem);\\n  }\\n  /**\\n   * Adds an action item toggle\\n   * @param actionItem The action item\\n   * @deprecated\\n   * @experimental Do not use!\\n   */\\n  addActionItemToggle(actionItem: ActionItemToggle) {\\n    console.warn(\'%cThis method is experimental and may break. Continue at your own risk.\', \'font-weight: 600\');\\n    actionItem.onClickListener = () => {\\n      actionItem.toggleBind = !actionItem.toggleBind;\\n    };\\n    this.actionItems.set(`actionItem-${nextKeyId++}`, actionItem);\\n  }\\n  /**\\n   * Updates an action item by its key\\n   * @param key The key of the action item\\n   * @param actionItem The action item\\n   */\\n  updateActionItemByKey(key: string, actionItem: ActionItem) {\\n    try {\\n      this.actionItems[key] = actionItem;\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Gets all action items\\n   */\\n  getActionItems(): ActionItem[] {\\n    return Array.from(this.actionItems.values());\\n  }\\n  /**\\n   * Removes an action item\\n   * @param key The key of the action item to remove\\n   */\\n  removeActionItemByKey(key: string) {\\n    try {\\n      this.actionItems.delete(key);\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Removes all action items\\n   */\\n  removeActionItems() {\\n    this.actionItems.clear();\\n  }\\n  /**\\n   * Gets a action item by its key\\n   * @param key The key of the action item to retrieve\\n   */\\n  getActionItemByKey(key: string): ActionItem {\\n    try {\\n      return this.actionItems[key];\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Adds a action item on click listener to the specified action item\\n   * Note: This can also be declared manually\\n   * @deprecated Please set the onclick listener in the {@link ActionItem} object itself.\\n   * @param id The id of the action item\\n   * @param callback The callback when the action item is clicked (has to be arrow function)\\n   */\\n  addActionItemOnClickListener(key: string, callback: (ev?: Event) => void) {\\n    try {\\n      this.actionItems[key].onClickListener = callback;\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Throws an error where the id couldn\'t be found\\n   */\\n  private throwKeyNotFoundError(id: string) {\\n    throw new Error(`Could not find an action item with key ${id}`);\\n  }\\n  /**\\n   * Throws an error where the title couldn\'t be found\\n   */\\n  private throwTitleNotFoundError(title: string) {\\n    throw new Error(`Could not find an action item with title ${title}`);\\n  }\\n}\\n\\n/**\\n * An action item\\n */\\nexport interface ActionItem {\\n  /**\\n   * The title of the action item\\n   */\\n  title: string;\\n  /** The ID of the action item */\\n  id?: string;\\n  /**\\n   * The icon of the action item\\n   */\\n  icon?: string;\\n  /**\\n   * The href of the action item\\n   * NOTE: If `routerLink` is specified, don\'t use `href`.\\n   */\\n  href?: string;\\n  /**\\n   * Similar to what Android does.\\n   */\\n  showAsAction?: boolean;\\n  /** Whether the action item should be disabled. */\\n  disabled?: boolean;\\n  /**\\n   * The router link of the action item\\n   * NOTE: If `href` is specified, don\'t use `routerLink`.\\n   */\\n  routerLink?: string;\\n  /**\\n   * The on click listener of the action item\\n   * Note: This can also be set by {@link ActionItemService#addActionItemOnClickListener}\\n   */\\n  onClickListener?: (ev?: Event) => void;\\n  /**\\n   * The submenu of the action item\\n   */\\n  subMenu?: ActionItem[];\\n}\\n/**\\n * An action item toggle\\n */\\nexport interface ActionItemToggle extends ActionItem {\\n  /**\\n   * The toggle boolean to bind to\\n   */\\n  toggleBind: boolean;\\n}\\n\\n@Component({\\n  selector: \'app-action-items\',\\n  template: `\\n\\t<ng-container *ngFor=\\"let actionItem of actionItems\\">\\n    <button\\n    mat-icon-button\\n    *ngIf=\\"actionItem.onClickListener\\"\\n    (click)=\\"actionItem.onClickListener($event)\\"\\n    [matTooltip]=\\"actionItem.title\\"\\n    [disabled]=\\"actionItem.disabled\\">\\n      <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n    </button>\\n    <a mat-icon-button *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [matTooltip]=\\"actionItem.title\\" [disabled]=\\"actionItem.disabled\\">\\n    <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n    </a>\\n    <a\\n      mat-icon-button\\n      *ngIf=\\"actionItem.routerLink\\"\\n      [routerLink]=\\"[actionItem.routerLink]\\"\\n      [matTooltip]=\\"actionItem.title\\"\\n      [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t</a>\\n\\t</ng-container>\\n  <button mat-icon-button *ngIf=\\"showMoreMenu\\" [matMenuTriggerFor]=\\"moreMenu\\"\\n    matTooltip=\\"More options\\">\\n\\t\\t<mat-icon>more_vert</mat-icon>\\n\\t</button>\\n\\t<mat-menu #moreMenu=\\"matMenu\\">\\n\\t\\t<ng-container *ngFor=\\"let actionItem of overflowActionItems\\">\\n\\t\\t\\t<button mat-menu-item *ngIf=\\"actionItem.onClickListener\\" (click)=\\"actionItem.onClickListener($event)\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</button>\\n\\t\\t\\t<a mat-menu-item *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</a>\\n\\t\\t\\t<a mat-menu-item *ngIf=\\"actionItem.routerLink\\" [routerLink]=\\"[actionItem.routerLink]\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</a>\\n\\t\\t</ng-container>\\n\\t</mat-menu>\\n\\t\\t\\t\\t`\\n})\\nexport class ActionItemsComponent {\\n  constructor(private actionItemService: ActionItemService) { }\\n  get actionItems(): ActionItem[] {\\n    return this.actionItemService.getActionItems().filter(item => item.showAsAction);\\n  }\\n  get overflowActionItems(): ActionItem[] {\\n    return this.actionItemService.getActionItems().filter(item => !item.showAsAction);\\n  }\\n  get showMoreMenu() {\\n    return this.actionItemService.getActionItems().find((actionItem: ActionItem): boolean => {\\n      return actionItem.showAsAction !== true;\\n    });\\n  }\\n}\\n\\n@NgModule({\\n  declarations: [\\n    ActionItemsComponent\\n  ],\\n  exports: [\\n    ActionItemsComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    BrowserAnimationsModule,\\n    MatButtonModule,\\n    MatIconModule,\\n    MatMenuModule,\\n    MatTooltipModule,\\n    RouterModule\\n  ],\\n  providers: [\\n    ActionItemService\\n  ]\\n})\\nexport class ActionItemsModule { }\\n","type":"injectable"},{"name":"DialogBuilderService","id":"injectable-DialogBuilderService-3a0412cad996e98cbb43ce02224d6211","file":"projects/rss-reader/src/app/core/dialogs/dialog-builder/dialog-builder.service.ts","properties":[{"name":"message","type":"string","optional":false,"description":"<p>The message of the dialog. </p>\\n","line":16},{"name":"negativeBtnColor","type":"ThemePalette","optional":false,"description":"<p>The negative button&#39;s colour. </p>\\n","line":26},{"name":"negativeBtnText","type":"string","optional":false,"description":"<p>The negative button&#39;s text. </p>\\n","line":24},{"name":"neutralBtnColor","type":"ThemePalette","optional":false,"description":"<p>The neutral button&#39;s colour. </p>\\n","line":30},{"name":"neutralBtnText","type":"string","optional":false,"description":"<p>The neutral button&#39;s text. </p>\\n","line":28},{"name":"portal","type":"Portal<any>","optional":false,"description":"<p>The portal to render in the dialog. </p>\\n","line":21},{"name":"positiveBtnColor","type":"ThemePalette","optional":false,"description":"<p>The positive button&#39;s colour. </p>\\n","line":34},{"name":"positiveBtnText","type":"string","optional":false,"description":"<p>The positive button&#39;s text. </p>\\n","line":32},{"name":"title","type":"string","optional":false,"description":"<p>The title of the dialog. </p>\\n","line":18}],"methods":[{"name":"setMessage","args":[{"name":"message","type":"string"}],"optional":false,"returnType":"DialogBuilderService","typeParameters":[],"line":43,"description":"<p>Sets the dialog&#39;s message.</p>\\n","jsdoctags":[{"name":{"pos":1085,"end":1092,"flags":0,"escapedText":"message"},"type":"string","tagName":{"pos":1079,"end":1084,"flags":0,"escapedText":"param"},"comment":"<p>The message to set.</p>\\n"},{"tagName":{"pos":1119,"end":1126,"flags":0,"escapedText":"returns"},"comment":"<p>The current instance of the builder.</p>\\n"}]},{"name":"setNegativeButton","args":[{"name":"text","type":"string"},{"name":"color","type":"ThemePalette","optional":true}],"optional":false,"returnType":"DialogBuilderService","typeParameters":[],"line":64,"description":"<p>Sets the dialog negative button&#39;s properties.</p>\\n","jsdoctags":[{"name":{"pos":1568,"end":1572,"flags":0,"escapedText":"text"},"type":"string","tagName":{"pos":1562,"end":1567,"flags":0,"escapedText":"param"},"comment":"<p>The text to set.</p>\\n"},{"name":{"pos":1602,"end":1607,"flags":0,"escapedText":"color"},"type":"ThemePalette","optional":true,"tagName":{"pos":1596,"end":1601,"flags":0,"escapedText":"param"},"comment":"<p>The colour to set.</p>\\n"},{"tagName":{"pos":1633,"end":1640,"flags":0,"escapedText":"returns"},"comment":"<p>The current instance of the builder.</p>\\n"}]},{"name":"setNeutralButton","args":[{"name":"text","type":"string"},{"name":"color","type":"ThemePalette","optional":true}],"optional":false,"returnType":"DialogBuilderService","typeParameters":[],"line":76,"description":"<p>Sets the dialog neutral button&#39;s properties.</p>\\n","jsdoctags":[{"name":{"pos":1922,"end":1926,"flags":0,"escapedText":"text"},"type":"string","tagName":{"pos":1916,"end":1921,"flags":0,"escapedText":"param"},"comment":"<p>The text to set.</p>\\n"},{"name":{"pos":1956,"end":1961,"flags":0,"escapedText":"color"},"type":"ThemePalette","optional":true,"tagName":{"pos":1950,"end":1955,"flags":0,"escapedText":"param"},"comment":"<p>The colour to set.</p>\\n"},{"tagName":{"pos":1987,"end":1994,"flags":0,"escapedText":"returns"},"comment":"<p>The current instance of the builder.</p>\\n"}]},{"name":"setPositiveButton","args":[{"name":"text","type":"string"},{"name":"color","type":"ThemePalette","optional":true}],"optional":false,"returnType":"DialogBuilderService","typeParameters":[],"line":88,"description":"<p>Sets the dialog positive button&#39;s properties.</p>\\n","jsdoctags":[{"name":{"pos":2274,"end":2278,"flags":0,"escapedText":"text"},"type":"string","tagName":{"pos":2268,"end":2273,"flags":0,"escapedText":"param"},"comment":"<p>The text to set.</p>\\n"},{"name":{"pos":2308,"end":2313,"flags":0,"escapedText":"color"},"type":"ThemePalette","optional":true,"tagName":{"pos":2302,"end":2307,"flags":0,"escapedText":"param"},"comment":"<p>The colour to set.</p>\\n"},{"tagName":{"pos":2339,"end":2346,"flags":0,"escapedText":"returns"},"comment":"<p>The current instance of the builder.</p>\\n"}]},{"name":"setTitle","args":[{"name":"title","type":"string"}],"optional":false,"returnType":"DialogBuilderService","typeParameters":[],"line":53,"description":"<p>Sets the dialog&#39;s title.</p>\\n","jsdoctags":[{"name":{"pos":1322,"end":1327,"flags":0,"escapedText":"title"},"type":"string","tagName":{"pos":1316,"end":1321,"flags":0,"escapedText":"param"},"comment":"<p>The title to set.</p>\\n"},{"tagName":{"pos":1352,"end":1359,"flags":0,"escapedText":"returns"},"comment":"<p>The current instance of the builder.</p>\\n"}]},{"name":"show","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":94}],"description":"","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { MatDialog } from \'@angular/material/dialog\';\\n\\nimport { PortalDialogOpts } from \'../models\';\\nimport { Portal } from \'@angular/cdk/portal\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\n/**\\n * A dialog builder service, akin to Android\'s `AlertDialog.Builder` class.\\n */\\nexport class DialogBuilderService {\\n  /** The message of the dialog. */\\n  message: string;\\n  /** The title of the dialog. */\\n  title: string;\\n\\n  /** The portal to render in the dialog. */\\n  portal: Portal<any>;\\n\\n  /** The negative button\'s text. */\\n  negativeBtnText: string;\\n  /** The negative button\'s colour. */\\n  negativeBtnColor: ThemePalette;\\n  /** The neutral button\'s text. */\\n  neutralBtnText: string;\\n  /** The neutral button\'s colour. */\\n  neutralBtnColor: ThemePalette;\\n  /** The positive button\'s text. */\\n  positiveBtnText: string;\\n  /** The positive button\'s colour. */\\n  positiveBtnColor: ThemePalette;\\n\\n  constructor(private dialog: MatDialog) { }\\n\\n  /**\\n   * Sets the dialog\'s message.\\n   * @param message The message to set.\\n   * @returns The current instance of the builder.\\n   */\\n  setMessage(message: string): DialogBuilderService {\\n    this.message = message;\\n    return this;\\n  }\\n\\n  /**\\n   * Sets the dialog\'s title.\\n   * @param title The title to set.\\n   * @returns The current instance of the builder.\\n   */\\n  setTitle(title: string): DialogBuilderService {\\n    this.title = title;\\n    return this;\\n  }\\n\\n  /**\\n   * Sets the dialog negative button\'s properties.\\n   * @param text The text to set.\\n   * @param color The colour to set.\\n   * @returns The current instance of the builder.\\n   */\\n  setNegativeButton(text: string, color?: ThemePalette): DialogBuilderService {\\n    this.negativeBtnText = text;\\n    this.negativeBtnColor = color;\\n    return this;\\n  }\\n\\n  /**\\n   * Sets the dialog neutral button\'s properties.\\n   * @param text The text to set.\\n   * @param color The colour to set.\\n   * @returns The current instance of the builder.\\n   */\\n  setNeutralButton(text: string, color?: ThemePalette): DialogBuilderService {\\n    this.neutralBtnText = text;\\n    this.neutralBtnColor = color;\\n    return this;\\n  }\\n\\n  /**\\n   * Sets the dialog positive button\'s properties.\\n   * @param text The text to set.\\n   * @param color The colour to set.\\n   * @returns The current instance of the builder.\\n   */\\n  setPositiveButton(text: string, color?: ThemePalette): DialogBuilderService {\\n    this.positiveBtnText = text;\\n    this.positiveBtnColor = color;\\n    return this;\\n  }\\n\\n  show() {\\n\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"dialog","type":"MatDialog"}],"line":34,"jsdoctags":[{"name":"dialog","type":"MatDialog","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"DialogsService","id":"injectable-DialogsService-b5e5fd810ed7e7d709cdda3d001fc779","file":"projects/rss-reader/src/app/core/dialogs/dialogs.service.ts","properties":[],"methods":[{"name":"createOrGetDialogConfig","args":[{"name":"config","type":"MatDialogConfig<D>","optional":true}],"optional":false,"returnType":"MatDialogConfig<D>","typeParameters":["D"],"line":27,"modifierKind":[112],"jsdoctags":[{"name":"config","type":"MatDialogConfig<D>","optional":true,"tagName":{"text":"param"}}]},{"name":"openAlertDialog","args":[{"name":"opts","type":"DialogOpts"},{"name":"config","type":"MatDialogConfig<DialogOpts>","optional":true}],"optional":false,"returnType":"MatDialogRef<MessageDialogComponent, DialogResult>","typeParameters":[],"line":93,"description":"<p>Opens an alert dialog with the specified parameters</p>\\n","jsdoctags":[{"name":{"pos":2810,"end":2814,"flags":0,"escapedText":"opts"},"type":"DialogOpts","tagName":{"pos":2804,"end":2809,"flags":0,"escapedText":"param"},"comment":"<p>The options for the dialog.</p>\\n"},{"name":{"pos":2855,"end":2861,"flags":0,"escapedText":"config"},"type":"MatDialogConfig<DialogOpts>","optional":true,"tagName":{"pos":2849,"end":2854,"flags":0,"escapedText":"param"},"comment":"<p>Additional configurations for the dialog.</p>\\n"},{"tagName":{"pos":2910,"end":2917,"flags":0,"escapedText":"returns"},"comment":"<p>The dialog reference</p>\\n"}]},{"name":"openConfirmDialog","args":[{"name":"opts","type":"DialogOpts"},{"name":"config","type":"MatDialogConfig<DialogOpts>","optional":true}],"optional":false,"returnType":"MatDialogRef<MessageDialogComponent, DialogResult>","typeParameters":[],"line":107,"description":"<p>Opens a confirm dialog with the specified parameters</p>\\n","jsdoctags":[{"name":{"pos":3317,"end":3321,"flags":0,"escapedText":"opts"},"type":"DialogOpts","tagName":{"pos":3311,"end":3316,"flags":0,"escapedText":"param"},"comment":"<p>The options for the dialog</p>\\n"},{"name":{"pos":3361,"end":3367,"flags":0,"escapedText":"config"},"type":"MatDialogConfig<DialogOpts>","optional":true,"tagName":{"pos":3355,"end":3360,"flags":0,"escapedText":"param"},"comment":"<p>Additional configurations for the dialog.</p>\\n"},{"tagName":{"pos":3416,"end":3423,"flags":0,"escapedText":"returns"},"comment":"<p>The dialog reference</p>\\n"}]},{"name":"openDialog","args":[{"name":"dialogType","type":"DialogType"},{"name":"opts","type":"Opts"},{"name":"config","type":"MatDialogConfig<Opts>","optional":true}],"optional":false,"returnType":"MatDialogRef<T, DialogResult>","typeParameters":["Opts","T"],"line":55,"modifierKind":[112],"jsdoctags":[{"name":"dialogType","type":"DialogType","tagName":{"text":"param"}},{"name":"opts","type":"Opts","tagName":{"text":"param"}},{"name":"config","type":"MatDialogConfig<Opts>","optional":true,"tagName":{"text":"param"}}]},{"name":"openMessageDialog","args":[{"name":"opts","type":"DialogOpts"},{"name":"config","type":"MatDialogConfig<DialogOpts>","optional":true}],"optional":false,"returnType":"MatDialogRef<MessageDialogComponent, DialogResult>","typeParameters":[],"line":120,"description":"<p>Opens a message dialog with the specified parameters</p>\\n","jsdoctags":[{"name":{"pos":3827,"end":3831,"flags":0,"escapedText":"opts"},"type":"DialogOpts","tagName":{"pos":3821,"end":3826,"flags":0,"escapedText":"param"},"comment":"<p>Options for the dialog</p>\\n"},{"name":{"pos":3867,"end":3873,"flags":0,"escapedText":"config"},"type":"MatDialogConfig<DialogOpts>","optional":true,"tagName":{"pos":3861,"end":3866,"flags":0,"escapedText":"param"},"comment":"<p>Additional configuration for the dialog</p>\\n"},{"tagName":{"pos":3920,"end":3927,"flags":0,"escapedText":"returns"},"comment":"<p>The dialog reference</p>\\n"}]},{"name":"openPortalDialog","args":[{"name":"opts","type":"PortalDialogOpts<T>"},{"name":"config","type":"MatDialogConfig<PortalDialogOpts<T>>","optional":true}],"optional":false,"returnType":"MatDialogRef<PortalDialogComponent, DialogResult>","typeParameters":["T"],"line":159,"description":"<p>Opens a portal dialog with the specified parameters</p>\\n","jsdoctags":[{"name":{"pos":5205,"end":5209,"flags":0,"escapedText":"opts"},"type":"PortalDialogOpts<T>","tagName":{"pos":5199,"end":5204,"flags":0,"escapedText":"param"},"comment":"<p>The options for the dialog</p>\\n"},{"name":{"pos":5249,"end":5255,"flags":0,"escapedText":"config"},"type":"MatDialogConfig<PortalDialogOpts<T>>","optional":true,"tagName":{"pos":5243,"end":5248,"flags":0,"escapedText":"param"},"comment":"<p>Additional configurations for the dialog</p>\\n"},{"tagName":{"pos":5338,"end":5345,"flags":0,"escapedText":"returns"},"comment":"<p>The dialog reference</p>\\n"}]},{"name":"openPromptDialog","args":[{"name":"opts","type":"PromptDialogOpts"},{"name":"config","type":"MatDialogConfig<PromptDialogOpts>","optional":true}],"optional":false,"returnType":"MatDialogRef<PromptDialogComponent, DialogResult>","typeParameters":[],"line":133,"description":"<p>Opens a prompt dialog with the specified parameters</p>\\n","jsdoctags":[{"name":{"pos":4266,"end":4270,"flags":0,"escapedText":"opts"},"type":"PromptDialogOpts","tagName":{"pos":4260,"end":4265,"flags":0,"escapedText":"param"},"comment":"<p>The options for the dialog</p>\\n"},{"name":{"pos":4310,"end":4316,"flags":0,"escapedText":"config"},"type":"MatDialogConfig<PromptDialogOpts>","optional":true,"tagName":{"pos":4304,"end":4309,"flags":0,"escapedText":"param"},"comment":"<p>Additional configurations for the dialog.</p>\\n"},{"tagName":{"pos":4365,"end":4372,"flags":0,"escapedText":"returns"},"comment":"<p>The dialog reference</p>\\n"}]},{"name":"openSelectionDialog","args":[{"name":"opts","type":"SelectionDialogOpts"},{"name":"config","type":"MatDialogConfig<SelectionDialogOpts>","optional":true}],"optional":false,"returnType":"MatDialogRef<SelectionDialogComponent, DialogResult>","typeParameters":[],"line":145,"description":"<p>Opens a selection dialog with the configured options</p>\\n","jsdoctags":[{"name":{"pos":4725,"end":4729,"flags":0,"escapedText":"opts"},"type":"SelectionDialogOpts","tagName":{"pos":4719,"end":4724,"flags":0,"escapedText":"param"},"comment":"<p>The options for the dialog</p>\\n"},{"name":{"pos":4769,"end":4775,"flags":0,"escapedText":"config"},"type":"MatDialogConfig<SelectionDialogOpts>","optional":true,"tagName":{"pos":4763,"end":4768,"flags":0,"escapedText":"param"},"comment":"<p>Additional configurations for the dialog.</p>\\n"},{"tagName":{"pos":4824,"end":4831,"flags":0,"escapedText":"returns"},"comment":"<p>The dialog reference</p>\\n"}]},{"name":"setDefaultOpts","args":[{"name":"opts","type":"Opts"},{"name":"dialogType","type":"DialogType"}],"optional":false,"returnType":"Opts","typeParameters":["Opts"],"line":31,"modifierKind":[112],"jsdoctags":[{"name":"opts","type":"Opts","tagName":{"text":"param"}},{"name":"dialogType","type":"DialogType","tagName":{"text":"param"}}]}],"description":"","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { MatDialog, MatDialogConfig, MatDialogRef } from \'@angular/material/dialog\';\\n\\nimport { MessageDialogComponent } from \'./message-dialog/message-dialog.component\';\\nimport { PortalDialogComponent } from \'./portal-dialog/portal-dialog.component\';\\nimport { PromptDialogComponent } from \'./prompt-dialog/prompt-dialog.component\';\\nimport { SelectionDialogComponent } from \'./selection-dialog/selection-dialog.component\';\\n\\nimport { Dialog } from \'./dialog\';\\nimport { DialogsModule } from \'./dialogs.module\';\\nimport {\\n  DialogOpts,\\n  DialogResult,\\n  DialogType,\\n  PortalDialogOpts,\\n  PromptDialogOpts,\\n  SelectionDialogOpts\\n} from \'./models\';\\n\\n@Injectable({\\n  // Note: Angular auto-adds the service to the module as a provider.\\n  providedIn: DialogsModule\\n})\\nexport class DialogsService {\\n  constructor(private dialog: MatDialog) { }\\n\\n  private createOrGetDialogConfig<D = any>(config?: MatDialogConfig<D>): MatDialogConfig<D> {\\n    return config ? config : new MatDialogConfig<D>();\\n  }\\n\\n  private setDefaultOpts<Opts extends DialogOpts>(opts: Opts, dialogType: DialogType): Opts {\\n    switch (dialogType) {\\n      case \'alert\':\\n      case \'portal\':\\n        if (!(\'positiveBtnText\' in opts)) {\\n          opts.positiveBtnText = \'Dismiss\';\\n        }\\n        break;\\n      case \'confirm\':\\n      case \'prompt\':\\n        if (!(\'negativeBtnText\' in opts)) {\\n          opts.negativeBtnText = \'Cancel\';\\n        }\\n        if (!(\'positiveBtnText\' in opts)) {\\n          opts.positiveBtnText = \'Confirm\';\\n        }\\n        break;\\n      default:\\n        // No-op\\n        break;\\n    }\\n    return opts;\\n  }\\n\\n  private openDialog<Opts extends DialogOpts, T extends Dialog>(\\n    dialogType: DialogType,\\n    opts: Opts,\\n    config?: MatDialogConfig<Opts>\\n  ): MatDialogRef<T, DialogResult> {\\n    const tempConfig = this.createOrGetDialogConfig<Opts>(config);\\n    const tempOpts = this.setDefaultOpts(opts, dialogType);\\n    tempConfig.data = tempOpts;\\n    let dialogRef: MatDialogRef<any, DialogResult> = null;\\n    switch (dialogType) {\\n      case \'alert\':\\n      case \'confirm\':\\n      case \'message\':\\n        dialogRef = this.dialog.open(MessageDialogComponent, tempConfig);\\n        break;\\n      case \'prompt\':\\n        dialogRef = this.dialog.open(PromptDialogComponent, tempConfig);\\n        break;\\n      case \'portal\':\\n        dialogRef = this.dialog.open(PortalDialogComponent, tempConfig);\\n        break;\\n      case \'selection\':\\n        tempConfig.panelClass = \'selection-dialog\';\\n        dialogRef = this.dialog.open(PortalDialogComponent, tempConfig);\\n        break;\\n      default:\\n        throw new Error(`Unsupported dialog type ${dialogType} was specified! Skipping...`);\\n    }\\n    return dialogRef;\\n  }\\n\\n  /**\\n   * Opens an alert dialog with the specified parameters\\n   * @param opts The options for the dialog.\\n   * @param config Additional configurations for the dialog.\\n   * @returns The dialog reference\\n   * @deprecated Use `DialogsService#openMessageDialog` instead\\n   */\\n  openAlertDialog(\\n    opts: DialogOpts,\\n    config?: MatDialogConfig<DialogOpts>\\n  ): MatDialogRef<MessageDialogComponent, DialogResult> {\\n    return this.openDialog<DialogOpts, MessageDialogComponent>(\'alert\', opts, config);\\n  }\\n\\n  /**\\n   * Opens a confirm dialog with the specified parameters\\n   * @param opts The options for the dialog\\n   * @param config Additional configurations for the dialog.\\n   * @returns The dialog reference\\n   * @deprecated Use `DialogsService#openMessageDialog` instead\\n   */\\n  openConfirmDialog(\\n    opts: DialogOpts,\\n    config?: MatDialogConfig<DialogOpts>\\n  ): MatDialogRef<MessageDialogComponent, DialogResult> {\\n    return this.openDialog<DialogOpts, MessageDialogComponent>(\'confirm\', opts, config);\\n  }\\n\\n  /**\\n   * Opens a message dialog with the specified parameters\\n   * @param opts Options for the dialog\\n   * @param config Additional configuration for the dialog\\n   * @returns The dialog reference\\n   */\\n  openMessageDialog(\\n    opts: DialogOpts,\\n    config?: MatDialogConfig<DialogOpts>\\n  ): MatDialogRef<MessageDialogComponent, DialogResult> {\\n    return this.openDialog<DialogOpts, MessageDialogComponent>(\'message\', opts, config);\\n  }\\n\\n  /**\\n   * Opens a prompt dialog with the specified parameters\\n   * @param opts The options for the dialog\\n   * @param config Additional configurations for the dialog.\\n   * @returns The dialog reference\\n   */\\n  openPromptDialog(\\n    opts: PromptDialogOpts,\\n    config?: MatDialogConfig<PromptDialogOpts>\\n  ): MatDialogRef<PromptDialogComponent, DialogResult> {\\n    return this.openDialog<PromptDialogOpts, PromptDialogComponent>(\'prompt\', opts, config);\\n  }\\n  /**\\n   * Opens a selection dialog with the configured options\\n   * @param opts The options for the dialog\\n   * @param config Additional configurations for the dialog.\\n   * @returns The dialog reference\\n   */\\n  openSelectionDialog(\\n    opts: SelectionDialogOpts,\\n    config?: MatDialogConfig<SelectionDialogOpts>\\n  ): MatDialogRef<SelectionDialogComponent, DialogResult> {\\n    return this.openDialog<SelectionDialogOpts, SelectionDialogComponent>(\'selection\', opts, config);\\n  }\\n\\n  /**\\n   * Opens a portal dialog with the specified parameters\\n   * @param opts The options for the dialog\\n   * @param config Additional configurations for the dialog\\n   * @template T The portal\'s type\\n   * @returns The dialog reference\\n   */\\n  openPortalDialog<T>(\\n    opts: PortalDialogOpts<T>,\\n    config?: MatDialogConfig<PortalDialogOpts<T>>\\n  ): MatDialogRef<PortalDialogComponent, DialogResult> {\\n    return this.openDialog<PortalDialogOpts<T>, PortalDialogComponent>(\'portal\', opts, config);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"dialog","type":"MatDialog"}],"line":24,"jsdoctags":[{"name":"dialog","type":"MatDialog","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"GuideItemsService","id":"injectable-GuideItemsService-a53e621fcfcdd038ec554e0b375b5297","file":"projects/rss-reader/src/app/guide-items.ts","properties":[],"methods":[{"name":"getAllItems","args":[],"optional":false,"returnType":"GuideItem[]","typeParameters":[],"line":33},{"name":"getGuideItemById","args":[{"name":"id","type":"string"}],"optional":false,"returnType":"GuideItem","typeParameters":[],"line":39,"jsdoctags":[{"name":"id","type":"string","tagName":{"text":"param"}}]},{"name":"getGuideItems","args":[],"optional":false,"returnType":"GuideItem[]","typeParameters":[],"line":36}],"description":"","sourceCode":"import { Injectable } from \'@angular/core\';\\n\\nexport interface GuideItem {\\n  id: string;\\n  name: string;\\n  document: string;\\n  url: string;\\n}\\n\\nconst GUIDES: GuideItem[] = [\\n  {\\n    id: \'getting-started\',\\n    document: \'assets/docs/guides/getting-started.html\',\\n    url: \'doc/guides/getting-started\',\\n    name: \'Getting Started\'\\n  },\\n  {\\n    id: \'generate-api-key\',\\n    document: \'assets/docs/guides/generate-api-key.html\',\\n    url: \'doc/guides/generate-api-key\',\\n    name: \'Generating an API Key\'\\n  },\\n  {\\n    id: \'troubleshooting\',\\n    document: \'assets/docs/guides/troubleshooting.html\',\\n    url: \'doc/guides/troubleshooting\',\\n    name: \'Troubleshooting\'\\n  }\\n];\\n\\n@Injectable()\\nexport class GuideItemsService {\\n  getAllItems(): GuideItem[] {\\n    return this.getGuideItems();\\n  }\\n  getGuideItems(): GuideItem[] {\\n    return GUIDES;\\n  }\\n  getGuideItemById(id: string): GuideItem {\\n    return GUIDES.find(i => i.id === id);\\n  }\\n}\\n","type":"injectable"},{"name":"HotkeysService","id":"injectable-HotkeysService-59a6be4da50fe9652ff34dace1f476b2","file":"projects/rss-reader/src/app/hotkeys/hotkeys.service.ts","properties":[{"name":"defaults","defaultValue":"{\\n    // Specify a default description for hotkeys with no specified desc\\n    description: \'<No description>\',\\n    element: this.document\\n  }","type":"Partial<HotkeyOptions>","optional":false,"description":"","line":45},{"name":"hotkeyHelpDialogId","defaultValue":"\'hotkey-help-dialog\'","type":"string","optional":false,"description":"","line":44,"modifierKind":[132]},{"name":"hotkeys","defaultValue":"new Map<string, string>()","type":"","optional":false,"description":"","line":43}],"methods":[{"name":"addShortcut","args":[{"name":"options","type":"Partial<HotkeyOptions>"}],"optional":false,"returnType":"Observable<KeyboardEvent>","typeParameters":[],"line":67,"description":"<p>Adds a keyboard shortcut which binds to the specified <code>element</code></p>\\n","jsdoctags":[{"name":{"pos":2058,"end":2065,"flags":0,"escapedText":"options"},"type":"Partial<HotkeyOptions>","tagName":{"pos":2052,"end":2057,"flags":0,"escapedText":"param"},"comment":"<p>Options for the shortcut</p>\\n"},{"tagName":{"pos":2097,"end":2104,"flags":0,"escapedText":"returns"},"comment":"<p>The observable</p>\\n"}]},{"name":"isPlatform","args":[{"name":"platform","type":"Platform"}],"optional":false,"returnType":"boolean","typeParameters":[],"line":152,"description":"<p>Whether the platform matches the specified <code>platform</code>.</p>\\n","modifierKind":[112],"jsdoctags":[{"name":{"pos":4881,"end":4889,"flags":0,"escapedText":"platform"},"type":"Platform","tagName":{"pos":4875,"end":4880,"flags":0,"escapedText":"param"},"comment":"<p>The platform to check.</p>\\n"}]},{"name":"openHotkeyHelpDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":134}],"description":"","sourceCode":"import { Injectable, Inject } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { EventManager } from \'@angular/platform-browser\';\\nimport { DOCUMENT } from \'@angular/common\';\\nimport { MatDialog } from \'@angular/material/dialog\';\\nimport { HotkeyHelpDialogComponent } from \'./hotkey-help-dialog/hotkey-help-dialog.component\';\\n\\ntype Platform = \'windows\' | \'macos\' | \'linux\' | \'other\';\\n\\ninterface Hotkey {\\n  /** A valid hotkey bind. */\\n  keys: string;\\n  /** The platform where this hotkey will be valid for. */\\n  platform?: Platform;\\n}\\ninterface HotkeyOptions {\\n  /** The element to bind the hotkey to. */\\n  element: any;\\n  /** A valid hotkey bind, or a list of hotkey binds. */\\n  keys: string | Hotkey[];\\n  /** The description of the hotkey, if any. */\\n  description?: string;\\n  /**\\n   * Blacklist for elements that should not have keyboard shortcuts\\n   *\\n   * When specified, it is assumed that all other elements are whitelisted.\\n   */\\n  shortcutBlacklistEls?: string[];\\n  /**\\n   * Whitelist for elements that should have keyboard shortcuts\\n   *\\n   * When specified, it is assumed that all other elements are blacklisted.\\n   */\\n  shortcutWhitelistEls?: string[];\\n}\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class HotkeysService {\\n  hotkeys = new Map<string, string>();\\n  readonly hotkeyHelpDialogId = \'hotkey-help-dialog\';\\n  defaults: Partial<HotkeyOptions> = {\\n    // Specify a default description for hotkeys with no specified desc\\n    description: \'<No description>\',\\n    element: this.document\\n  };\\n\\n  constructor(\\n    private eventManager: EventManager,\\n    private dialog: MatDialog,\\n    @Inject(DOCUMENT) private document: Document\\n  ) {\\n    this.addShortcut({ keys: \'shift.?\', description: \'Show this help dialog\', shortcutBlacklistEls: [\'input\', \'textarea\'] })\\n      .subscribe(() => {\\n        this.openHotkeyHelpDialog();\\n      });\\n  }\\n\\n  /**\\n   * Adds a keyboard shortcut which binds to the specified `element`\\n   * @param options Options for the shortcut\\n   * @returns The observable\\n   */\\n  addShortcut(options: Partial<HotkeyOptions>): Observable<KeyboardEvent> {\\n    const merged = { ...this.defaults, ...options };\\n    const event = `keydown.${merged.keys}`;\\n\\n    if (merged.description) {\\n      if (typeof merged.keys === \'string\') {\\n        this.hotkeys.set(merged.keys, merged.description);\\n      } else {\\n        merged.keys.forEach(hotkey => {\\n          if (this.isPlatform(hotkey.platform)) {\\n            this.hotkeys.set(hotkey.keys, merged.description);\\n          }\\n        });\\n      }\\n    }\\n\\n    return new Observable(observer => {\\n      const handler = (e: KeyboardEvent) => {\\n        let skipHotkey = false;\\n        if (merged.shortcutBlacklistEls !== undefined) {\\n          const blacklistEls = merged.shortcutBlacklistEls.map(el => el.toUpperCase());\\n          // We can\'t just assume that the target is always a HTML element\\n          // See https://stackoverflow.com/q/28900077/6782707\\n          if (e.target instanceof Element) {\\n            // Target is a HTML element\\n            if (blacklistEls.includes(e.target.tagName)) {\\n              skipHotkey = true;\\n            }\\n          }\\n        }\\n        if (merged.shortcutWhitelistEls !== undefined) {\\n          const whitelistEls = merged.shortcutWhitelistEls.map(el => el.toUpperCase());\\n          // We can\'t just assume that the target is always a HTML element\\n          // See https://stackoverflow.com/q/28900077/6782707\\n          if (e.target instanceof Element) {\\n            // Target is a HTML element\\n            if (!whitelistEls.includes(e.target.tagName)) {\\n              skipHotkey = true;\\n            }\\n          }\\n        }\\n\\n        if (!skipHotkey) {\\n          e.preventDefault();\\n          observer.next(e);\\n        }\\n      };\\n\\n      const dispose = this.eventManager.addEventListener(\\n        merged.element, event, handler\\n      );\\n\\n      return () => {\\n        dispose();\\n        if (typeof merged.keys === \'string\') {\\n          this.hotkeys.delete(merged.keys);\\n        } else {\\n          merged.keys.forEach(hotkey => {\\n            if (this.isPlatform(hotkey.platform)) {\\n              this.hotkeys.delete(hotkey.keys);\\n            }\\n          });\\n        }\\n      };\\n    });\\n  }\\n\\n  openHotkeyHelpDialog() {\\n    // Interesting tidbit: as it turns out, MatDialog#getDialogById actually\\n    // returns undefined, not null if the dialog doesn\'t exist\\n    if (this.dialog.getDialogById(this.hotkeyHelpDialogId) !== undefined) {\\n      // Close existing dialog\\n      this.dialog.getDialogById(this.hotkeyHelpDialogId).close();\\n    } else {\\n      this.dialog.open(HotkeyHelpDialogComponent, {\\n        data: this.hotkeys,\\n        id: this.hotkeyHelpDialogId\\n      });\\n    }\\n  }\\n\\n  /**\\n   * Whether the platform matches the specified `platform`.\\n   * @param platform The platform to check.\\n   */\\n  private isPlatform(platform: Platform): boolean {\\n    // See https://stackoverflow.com/a/19883965/6782707\\n    let result = false;\\n    switch (window.navigator.platform) {\\n      case \'Macintosh\':\\n      case \'MacIntel\':\\n        result = platform === \'macos\';\\n        break;\\n      case \'Windows\':\\n      case \'Win16\':\\n      case \'Win32\':\\n      case \'WinCE\':\\n        result = platform === \'windows\';\\n        break;\\n      default:\\n        if (window.navigator.platform.includes(\'Linux\')) {\\n          result = platform === \'linux\';\\n        } else {\\n          result = platform === \'other\';\\n        }\\n        break;\\n    }\\n    return result;\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"eventManager","type":"EventManager"},{"name":"dialog","type":"MatDialog"},{"name":"document","type":"Document"}],"line":49,"jsdoctags":[{"name":"eventManager","type":"EventManager","tagName":{"text":"param"}},{"name":"dialog","type":"MatDialog","tagName":{"text":"param"}},{"name":"document","type":"Document","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"OverlayService","id":"injectable-OverlayService-529e99f7849e84fad6cbb03e599181e4","file":"projects/rss-reader/src/app/overlay.service.ts","properties":[{"name":"componentPortal","type":"ComponentPortal<any>","optional":false,"description":"","line":16,"modifierKind":[112]},{"name":"overlayRef","type":"OverlayRef","optional":false,"description":"","line":15,"modifierKind":[112]}],"methods":[{"name":"_attachPortal","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":21,"description":"<p>Attaches a portal to the overlay</p>\\n","modifierKind":[112]},{"name":"close","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":38,"description":"<p>Closes the overlay currently opened (alias of {@link OverlayService#destroyOverlay})</p>\\n","jsdoctags":[]},{"name":"createBelowPosElPositionStrategy","args":[{"name":"elementRef","type":"ElementRef"}],"optional":false,"returnType":"FlexibleConnectedPositionStrategy","typeParameters":[],"line":62,"description":"<p>Creates a below the position of an element position strategy</p>\\n","jsdoctags":[{"name":{"pos":1503,"end":1513,"flags":0,"escapedText":"elementRef"},"type":"ElementRef","tagName":{"pos":1497,"end":1502,"flags":0,"escapedText":"param"},"comment":"<p>The element ref</p>\\n"},{"tagName":{"pos":1536,"end":1543,"flags":0,"escapedText":"returns"},"comment":"<p>The position strategy</p>\\n"}]},{"name":"createCenterOverlayPositionStrategy","args":[],"optional":false,"returnType":"GlobalPositionStrategy","typeParameters":[],"line":50,"description":"<p>Creates a center overlay position strategy</p>\\n","jsdoctags":[{"tagName":{"pos":1200,"end":1207,"flags":0,"escapedText":"returns"},"comment":"<p>The position strategy</p>\\n"}]},{"name":"createOverlay","args":[{"name":"portal","type":"ComponentPortal<any>"},{"name":"config","type":"OverlayConfig","optional":true},{"name":"backdropClickClosesOverlay","type":"boolean","optional":true}],"optional":false,"returnType":"OverlayRef","typeParameters":[],"line":76,"description":"<p>Creates an overlay with the specified parameters</p>\\n","jsdoctags":[{"name":{"pos":1835,"end":1841,"flags":0,"escapedText":"portal"},"type":"ComponentPortal<any>","tagName":{"pos":1829,"end":1834,"flags":0,"escapedText":"param"},"comment":"<p>The portal to attach to the overlay&#39;s ref. For more info, visit {</p>\\n"},{"name":{"pos":1941,"end":1947,"flags":0,"escapedText":"config"},"type":"OverlayConfig","optional":true,"tagName":{"pos":1935,"end":1940,"flags":0,"escapedText":"param"},"comment":"<p>The configuration of the overlay. See {</p>\\n"},{"name":{"pos":2041,"end":2067,"flags":0,"escapedText":"backdropClickClosesOverlay"},"type":"boolean","optional":true,"tagName":{"pos":2035,"end":2040,"flags":0,"escapedText":"param"},"comment":"<p>Whether when the overlay&#39;s backdrop is clicked and it will close the overlay</p>\\n"}]},{"name":"destroyOverlay","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":29,"description":"<p>Destroys the currently opened overlay</p>\\n"},{"name":"getOverlayRef","args":[],"optional":false,"returnType":"OverlayRef | void","typeParameters":[],"line":41}],"description":"","sourceCode":"import {\\n  FlexibleConnectedPositionStrategy,\\n  GlobalPositionStrategy,\\n  Overlay,\\n  OverlayConfig,\\n  OverlayRef\\n} from \'@angular/cdk/overlay\';\\nimport { ElementRef, Injectable } from \'@angular/core\';\\n\\nimport { ComponentPortal } from \'@angular/cdk/portal\';\\n\\n@Injectable()\\nexport class OverlayService {\\n\\n  private overlayRef: OverlayRef;\\n  private componentPortal: ComponentPortal<any>;\\n  constructor(private overlay: Overlay) { }\\n  /**\\n   * Attaches a portal to the overlay\\n   */\\n  private _attachPortal(): void {\\n    if (!this.overlayRef.hasAttached() && this.componentPortal) {\\n      this.overlayRef.attach(this.componentPortal);\\n    }\\n  }\\n  /**\\n   * Destroys the currently opened overlay\\n   */\\n  destroyOverlay(): void {\\n    if (this.overlayRef.hasAttached() && this.overlayRef !== null) {\\n      this.overlayRef.dispose();\\n    }\\n  }\\n  /**\\n   * Closes the overlay currently opened (alias of {@link OverlayService#destroyOverlay})\\n   * @see {@link OverlayService#destroyOverlay}\\n   */\\n  close(): void {\\n    this.destroyOverlay();\\n  }\\n  getOverlayRef(): OverlayRef | void {\\n    if (this.overlayRef) {\\n      return this.overlayRef;\\n    }\\n  }\\n  /**\\n   * Creates a center overlay position strategy\\n   * @returns The position strategy\\n   */\\n  createCenterOverlayPositionStrategy(): GlobalPositionStrategy {\\n    return this.overlay\\n      .position()\\n      .global()\\n      .centerHorizontally()\\n      .centerVertically();\\n  }\\n  /**\\n   * Creates a below the position of an element position strategy\\n   * @param elementRef The element ref\\n   * @returns The position strategy\\n   */\\n  createBelowPosElPositionStrategy(\\n    elementRef: ElementRef\\n  ): FlexibleConnectedPositionStrategy {\\n    return this.overlay\\n      .position()\\n      .flexibleConnectedTo(elementRef);\\n  }\\n\\n  /**\\n   * Creates an overlay with the specified parameters\\n   * @param portal The portal to attach to the overlay\'s ref. For more info, visit {@link Overlay#create}\\n   * @param config The configuration of the overlay. See {@link OverlayConfig} for more properties.\\n   * @param backdropClickClosesOverlay Whether when the overlay\'s backdrop is clicked and it will close the overlay\\n   */\\n  createOverlay(portal: ComponentPortal<any>, config?: OverlayConfig, backdropClickClosesOverlay?: boolean): OverlayRef {\\n    this.overlayRef = this.overlay.create(config);\\n    this.componentPortal = portal;\\n    this._attachPortal();\\n    if (backdropClickClosesOverlay && config.hasBackdrop) {\\n      this.overlayRef.backdropClick().subscribe(() => {\\n        this.destroyOverlay();\\n      });\\n    }\\n    return this.overlayRef;\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"overlay","type":"Overlay"}],"line":16,"jsdoctags":[{"name":"overlay","type":"Overlay","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"SettingsStorageService","id":"injectable-SettingsStorageService-6cd7daaff36671533ee4a1a574e68f5d","file":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","properties":[],"methods":[{"name":"clearSettings","args":[{"name":"resetToDefault","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":66,"description":"<p>Clears the current settings.</p>\\n","jsdoctags":[{"name":{"pos":2259,"end":2273,"flags":0,"escapedText":"resetToDefault"},"type":"boolean","defaultValue":"true","tagName":{"pos":2253,"end":2258,"flags":0,"escapedText":"param"},"comment":"<p>Whether to reset to the default settings\\ninstead of clearing them. (Default: <code>true</code>)</p>\\n"}]},{"name":"setSettings","args":[{"name":"settings","type":"S"}],"optional":false,"returnType":"void","typeParameters":[],"line":57,"description":"<p>Overrides the current settings. </p>\\n","jsdoctags":[{"name":"settings","type":"S","tagName":{"text":"param"}}]}],"description":"","sourceCode":"import { Injectable, Inject, InjectionToken, Optional } from \'@angular/core\';\\nimport { Settings } from \'../../models/settings\';\\n\\n/** Configuration options for {@link SettingsStorageService}. */\\nexport interface SettingsStorageConfig<S = Settings> {\\n  /** Whether to revert to the default settings if no such value exists in storage. */\\n  canRevertDefault?: boolean;\\n  /** Default settings to be used if no such value exists in storage. */\\n  defaultSettings?: S;\\n}\\n\\n/** The settings storage provider to use. (Default: `localStorage`) */\\nexport const SETTINGS_STORAGE_PROVIDER: InjectionToken<Storage> = new InjectionToken(\'Settings storage provider\', {\\n  factory: () => localStorage\\n});\\n\\n/** The settings key to store the settings in. (Default: `settings`) */\\nexport const SETTINGS_STORAGE_KEY: InjectionToken<string> = new InjectionToken(\'Settings storage key\', {\\n  factory: () => \'settings\'\\n});\\n\\n// Note: Turns out you need a function in order to return an object for a factory.\\nfunction SETTINGS_STORAGE_DEFAULT_CONFIG_FACTORY(): SettingsStorageConfig {\\n  return {\\n    canRevertDefault: true,\\n    defaultSettings: {\\n      openNewTab: true,\\n      showImages: true,\\n      theme: \'indigo-pink\',\\n      notifyNewReleases: true\\n    }\\n  };\\n}\\n\\n/** Configuration options to change the behavior of {@link SettingsStorageService}. */\\nexport const SETTINGS_STORAGE_CONFIG: InjectionToken<SettingsStorageConfig> = new InjectionToken(\'Settings storage config\', {\\n  factory: SETTINGS_STORAGE_DEFAULT_CONFIG_FACTORY\\n});\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class SettingsStorageService<S = Settings> {\\n  constructor(\\n    @Inject(SETTINGS_STORAGE_PROVIDER) private storage: Storage,\\n    @Inject(SETTINGS_STORAGE_KEY) private key: string,\\n    @Inject(SETTINGS_STORAGE_CONFIG) @Optional() private config: SettingsStorageConfig<S>\\n  ) { }\\n\\n  /** Retrieves the current settings (as JSON). */\\n  get settings(): S {\\n    return (this.storage.getItem(this.key) && this.config.canRevertDefault) ?\\n    JSON.parse(this.storage.getItem(this.key)) as S : this.config.defaultSettings;\\n  }\\n\\n  /** Overrides the current settings. */\\n  setSettings(settings: S) {\\n    this.storage.setItem(this.key, JSON.stringify(settings));\\n  }\\n\\n  /**\\n   * Clears the current settings.\\n   * @param resetToDefault Whether to reset to the default settings\\n   * instead of clearing them. (Default: `true`)\\n   */\\n  clearSettings(resetToDefault: boolean = true) {\\n    if (resetToDefault) {\\n      this.setSettings(this.config.defaultSettings);\\n    } else {\\n      this.storage.removeItem(this.key);\\n    }\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"storage","type":"Storage"},{"name":"key","type":"string"},{"name":"config","type":"SettingsStorageConfig<S>"}],"line":43,"jsdoctags":[{"name":"storage","type":"Storage","tagName":{"text":"param"}},{"name":"key","type":"string","tagName":{"text":"param"}},{"name":"config","type":"SettingsStorageConfig<S>","tagName":{"text":"param"}}]},"accessors":{"settings":{"name":"settings","getSignature":{"name":"settings","type":"","returnType":"S","line":51,"description":"<p>Retrieves the current settings (as JSON). </p>\\n"}}},"type":"injectable"},{"name":"SharedService","id":"injectable-SharedService-379feed1078863759d248aa3aa780137","file":"projects/rss-reader/src/app/shared.service.ts","properties":[{"name":"internalTitle","defaultValue":"\'\'","type":"string","optional":false,"description":"","line":29,"modifierKind":[112]}],"methods":[{"name":"closeSnackBar","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":92,"description":"<p>Closes the current snackbar. </p>\\n"},{"name":"handleSnackBar","args":[{"name":"opts","type":"SnackBarOpts"}],"optional":false,"returnType":"MatSnackBarRef<SimpleSnackBar>","typeParameters":[],"line":79,"modifierKind":[112],"jsdoctags":[{"name":"opts","type":"SnackBarOpts","tagName":{"text":"param"}}]},{"name":"handleSnackBarWithComponent","args":[{"name":"opts","type":"SnackBarOpts"}],"optional":false,"returnType":"MatSnackBarRef<any>","typeParameters":[],"line":85,"modifierKind":[112],"jsdoctags":[{"name":"opts","type":"SnackBarOpts","tagName":{"text":"param"}}]},{"name":"openSnackBar","args":[{"name":"opts","type":"SnackBarOpts"}],"optional":false,"returnType":"MatSnackBarRef<SimpleSnackBar>","typeParameters":[],"line":67,"description":"<p>Opens a snackBar with the specified params and no return</p>\\n","jsdoctags":[{"name":{"pos":2003,"end":2007,"flags":0,"escapedText":"opts"},"type":"SnackBarOpts","tagName":{"pos":1997,"end":2002,"flags":0,"escapedText":"param"},"comment":"<p>The options of the snackBar</p>\\n"}]},{"name":"openSnackBarComponent","args":[{"name":"opts","type":"SnackBarOpts"}],"optional":false,"returnType":"MatSnackBarRef<any>","typeParameters":[],"line":75,"description":"<p>Opens a snackBar with the specified params and a return of the snackBar&#39;s ref (for component)</p>\\n","jsdoctags":[{"name":{"pos":2270,"end":2274,"flags":0,"escapedText":"opts"},"type":"SnackBarOpts","tagName":{"pos":2264,"end":2269,"flags":0,"escapedText":"param"},"comment":"<p>The options of the snackBar</p>\\n"},{"tagName":{"pos":2309,"end":2316,"flags":0,"escapedText":"returns"},"comment":"<p>The snackbar reference</p>\\n"}]}],"description":"","sourceCode":"import { BreakpointObserver, Breakpoints } from \'@angular/cdk/layout\';\\nimport { ComponentType } from \'@angular/cdk/portal\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { Injectable, NgModule } from \'@angular/core\';\\nimport { FormsModule } from \'@angular/forms\';\\nimport { MatSnackBar, MatSnackBarConfig, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar } from \'@angular/material/snack-bar\';\\nimport { Title } from \'@angular/platform-browser\';\\n\\nexport interface SnackBarOpts<D = any> {\\n  /** The snackbar\'s message. */\\n  msg: string;\\n  /** The snackbar\'s action. */\\n  action?: string;\\n  /** A component to open the snackbar with. */\\n  component?: ComponentType<any>;\\n  /** Configuration for the snackbar. */\\n  config?: MatSnackBarConfig<D>;\\n  /**\\n   * Additional options for the snackbar.\\n   * @deprecated Use {@link SnackBarOpts#config} instead\\n   */\\n  additionalOpts?: MatSnackBarConfig<D>;\\n}\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class SharedService {\\n  private internalTitle = \'\';\\n  constructor(\\n    private snackBar: MatSnackBar,\\n    private documentTitle: Title,\\n    private breakpointObserver: BreakpointObserver\\n  ) { }\\n  /**\\n   * Sets the document\'s title\\n   * @param title The title of the document to set\\n   */\\n  set title(title: string) {\\n    this.internalTitle = title;\\n    if (title !== \'\') {\\n      title = `${title} | `;\\n    }\\n    this.documentTitle.setTitle(`${title}Angular RSS Reader`);\\n  }\\n  /**\\n   * Returns the document\'s title\\n   */\\n  get title(): string {\\n    return this.internalTitle;\\n  }\\n\\n  /** Detects if the user is using a mobile device based on CSS media queries. */\\n  get isMobile(): boolean {\\n    return this.breakpointObserver.isMatched(Breakpoints.Handset);\\n  }\\n\\n  /** Detects if the user is using a handset in portrait mode based on CSS media queries. */\\n  get isPortraitHandset(): boolean {\\n    return this.breakpointObserver.isMatched(Breakpoints.HandsetPortrait);\\n  }\\n\\n  /**\\n   * Opens a snackBar with the specified params and no return\\n   * @param opts The options of the snackBar\\n   */\\n  openSnackBar(opts: SnackBarOpts): MatSnackBarRef<SimpleSnackBar> {\\n    return this.handleSnackBar(opts);\\n  }\\n  /**\\n   * Opens a snackBar with the specified params and a return of the snackBar\'s ref (for component)\\n   * @param opts The options of the snackBar\\n   * @returns The snackbar reference\\n   */\\n  openSnackBarComponent(opts: SnackBarOpts): MatSnackBarRef<any> {\\n    return this.handleSnackBarWithComponent(opts);\\n  }\\n\\n  private handleSnackBar(opts: SnackBarOpts): MatSnackBarRef<SimpleSnackBar> {\\n    // tslint:disable-next-line:deprecation\\n    const config = opts.config ? opts.config : opts.additionalOpts;\\n    return this.snackBar.open(opts.msg, opts.action ? opts.action : undefined, config);\\n  }\\n\\n  private handleSnackBarWithComponent(opts: SnackBarOpts): MatSnackBarRef<any> {\\n    // tslint:disable-next-line:deprecation\\n    const config = opts.config ? opts.config : opts.additionalOpts;\\n    return this.snackBar.openFromComponent(opts.component, config);\\n  }\\n\\n  /** Closes the current snackbar. */\\n  closeSnackBar() {\\n    this.snackBar.dismiss();\\n  }\\n}\\n\\n@NgModule({\\n  providers: [\\n    SharedService\\n  ],\\n  imports: [\\n    CommonModule,\\n    FormsModule,\\n    MatSnackBarModule\\n  ]\\n})\\nexport class SharedModule { }\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"snackBar","type":"MatSnackBar"},{"name":"documentTitle","type":"Title"},{"name":"breakpointObserver","type":"BreakpointObserver"}],"line":29,"jsdoctags":[{"name":"snackBar","type":"MatSnackBar","tagName":{"text":"param"}},{"name":"documentTitle","type":"Title","tagName":{"text":"param"}},{"name":"breakpointObserver","type":"BreakpointObserver","tagName":{"text":"param"}}]},"accessors":{"title":{"name":"title","setSignature":{"name":"title","type":"void","args":[{"name":"title","type":"string"}],"returnType":"void","line":39,"description":"<p>Sets the document&#39;s title</p>\\n","jsdoctags":[{"name":{"pos":1193,"end":1198,"flags":0,"escapedText":"title"},"type":"string","tagName":{"pos":1187,"end":1192,"flags":0,"escapedText":"param"},"comment":"<p>The title of the document to set</p>\\n"}]},"getSignature":{"name":"title","type":"string","returnType":"string","line":49,"description":"<p>Returns the document&#39;s title</p>\\n"}},"isMobile":{"name":"isMobile","getSignature":{"name":"isMobile","type":"boolean","returnType":"boolean","line":54,"description":"<p>Detects if the user is using a mobile device based on CSS media queries. </p>\\n"}},"isPortraitHandset":{"name":"isPortraitHandset","getSignature":{"name":"isPortraitHandset","type":"boolean","returnType":"boolean","line":59,"description":"<p>Detects if the user is using a handset in portrait mode based on CSS media queries. </p>\\n"}}},"type":"injectable"}],"classes":[{"name":"AppPage","id":"class-AppPage-b8adda85fc74fd729f181f4a37f9a51f","file":"projects/rss-reader/e2e/src/app.po.ts","type":"class","sourceCode":"import { browser, element, by } from \'protractor\';\\n\\nexport class AppPage {\\n  /**\\n   * Navigates to the specified URL, or the default base URL.\\n   * @param url The URL to navigate to\\n   */\\n  navigateTo(url?: string) {\\n    return browser.get(url ? url : browser.baseUrl) as Promise<any>;\\n  }\\n\\n  getToolbarText() {\\n    return element(by.css(\'#toolbar-title\')).getText() as Promise<string>;\\n  }\\n}\\n","properties":[],"methods":[{"name":"getToolbarText","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":12},{"name":"navigateTo","args":[{"name":"url","type":"string","optional":true}],"optional":false,"returnType":"any","typeParameters":[],"line":8,"description":"<p>Navigates to the specified URL, or the default base URL.</p>\\n","jsdoctags":[{"name":{"pos":155,"end":158,"flags":0,"escapedText":"url"},"type":"string","optional":true,"tagName":{"pos":149,"end":154,"flags":0,"escapedText":"param"},"comment":"<p>The URL to navigate to</p>\\n"}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"ArticleCardComponentHarness","id":"class-ArticleCardComponentHarness-1421b28c8de183950da0e4953713058c","file":"projects/rss-reader/src/app/components/article-card/testing/article-card-harness.ts","type":"class","sourceCode":"import { ComponentHarness, HarnessPredicate } from \'@angular/cdk/testing\';\\nimport { MatButtonHarness } from \'@angular/material/button/testing\';\\nimport { MatChipListHarness } from \'@angular/material/chips/testing\';\\n\\nimport { ArticleCardComponentHarnessFilters } from \'./article-card-harness-filters\';\\n\\n/** Harness for interacting with a standard `app-article-card` in tests. */\\nexport class ArticleCardComponentHarness extends ComponentHarness {\\n  /** The selector for the host element of a `ArticleCardComponent` instance. */\\n  static hostSelector = \'.article-card\';\\n\\n  // Header elements\\n  protected getHeaderAuthorEl = this.locatorForOptional(\'.article-card--author\');\\n  protected getHeaderPubDateEl = this.locatorForOptional(\'.article-card--pub-date\');\\n\\n  // Title elements\\n  protected getTitleEl = this.locatorFor(\'.article-card--title\');\\n  protected getImageEl = this.locatorForOptional(\'.article-card--image\');\\n\\n  // Content elements\\n  protected getDescEl = this.locatorFor(\'.article-card--description\');\\n  /** Gets the list of categories. */\\n  getCategoriesLoader = this.locatorForOptional(MatChipListHarness.with(\\n    { selector: \'.article-card--categories\' }));\\n\\n  // Actions element\\n  protected getActionsEl = this.locatorFor(\'.article-card--actions\');\\n  /** Gets the list of action buttons. */\\n  getActionBtnsLoader = this.locatorForAll(MatButtonHarness);\\n  /** Gets the share action button. */\\n  getShareActionBtnLoader = this.locatorFor(MatButtonHarness.with({ text: \'share\' }));\\n  /** Gets the view/open action button. */\\n  getOpenActionBtnLoader = this.locatorFor(MatButtonHarness.with({ text: \'open_in_new\' }));\\n\\n  /** Creates a `HarnessPredicate` used to locate a particular `ArticleCardComponentHarness`. */\\n  static with(options: ArticleCardComponentHarnessFilters): HarnessPredicate<ArticleCardComponentHarness> {\\n    return new HarnessPredicate(ArticleCardComponentHarness, options)\\n      .addOption(\'author\', options.author,\\n        (harness, text) => HarnessPredicate.stringMatches(harness.getHeaderAuthorText(), text))\\n      .addOption(\'published date\', options.pubDate,\\n        (harness, text) => HarnessPredicate.stringMatches(harness.getHeaderPubDateText(), text))\\n      .addOption(\'title\', options.title,\\n        (harness, text) => HarnessPredicate.stringMatches(harness.getTitleText(), text))\\n      .addOption(\'image source\', options.imgSrc,\\n        (harness, src) => HarnessPredicate.stringMatches(harness.getImageSrc(), src))\\n      .addOption(\'description\', options.desc,\\n        (harness, text) => HarnessPredicate.stringMatches(harness.getDescText(), text));\\n  }\\n\\n  /** Gets the header author text. */\\n  async getHeaderAuthorText() {\\n    return (await this.getHeaderAuthorEl())?.text() ?? \'\';\\n  }\\n\\n  /** Gets the header published date text. */\\n  async getHeaderPubDateText() {\\n    return (await this.getHeaderPubDateEl())?.text() ?? \'\';\\n  }\\n\\n  /** Gets the header published date as a `Date` object. */\\n  async getHeaderPubDate() {\\n    return new Date((await this.getHeaderPubDateText()));\\n  }\\n\\n  /** Gets the title text. */\\n  async getTitleText() {\\n    return (await this.getTitleEl()).text();\\n  }\\n\\n  /** Gets the image source. */\\n  async getImageSrc() {\\n    return (await this.getImageEl())?.getAttribute(\'src\') ?? null;\\n  }\\n\\n  /** Gets the description text. */\\n  async getDescText() {\\n    return (await this.getDescEl()).text();\\n  }\\n}\\n","properties":[{"name":"getActionBtnsLoader","defaultValue":"this.locatorForAll(MatButtonHarness)","type":"","optional":false,"description":"<p>Gets the list of action buttons. </p>\\n","line":29},{"name":"getActionsEl","defaultValue":"this.locatorFor(\'.article-card--actions\')","type":"","optional":false,"description":"","line":27,"modifierKind":[113]},{"name":"getCategoriesLoader","defaultValue":"this.locatorForOptional(MatChipListHarness.with(\\n    { selector: \'.article-card--categories\' }))","type":"","optional":false,"description":"<p>Gets the list of categories. </p>\\n","line":23},{"name":"getDescEl","defaultValue":"this.locatorFor(\'.article-card--description\')","type":"","optional":false,"description":"","line":21,"modifierKind":[113]},{"name":"getHeaderAuthorEl","defaultValue":"this.locatorForOptional(\'.article-card--author\')","type":"","optional":false,"description":"","line":13,"modifierKind":[113]},{"name":"getHeaderPubDateEl","defaultValue":"this.locatorForOptional(\'.article-card--pub-date\')","type":"","optional":false,"description":"","line":14,"modifierKind":[113]},{"name":"getImageEl","defaultValue":"this.locatorForOptional(\'.article-card--image\')","type":"","optional":false,"description":"","line":18,"modifierKind":[113]},{"name":"getOpenActionBtnLoader","defaultValue":"this.locatorFor(MatButtonHarness.with({ text: \'open_in_new\' }))","type":"","optional":false,"description":"<p>Gets the view/open action button. </p>\\n","line":33},{"name":"getShareActionBtnLoader","defaultValue":"this.locatorFor(MatButtonHarness.with({ text: \'share\' }))","type":"","optional":false,"description":"<p>Gets the share action button. </p>\\n","line":31},{"name":"getTitleEl","defaultValue":"this.locatorFor(\'.article-card--title\')","type":"","optional":false,"description":"","line":17,"modifierKind":[113]},{"name":"hostSelector","defaultValue":"\'.article-card\'","type":"string","optional":false,"description":"<p>The selector for the host element of a <code>ArticleCardComponent</code> instance. </p>\\n","line":10,"modifierKind":[115]}],"description":"<p>Harness for interacting with a standard <code>app-article-card</code> in tests. </p>\\n","rawdescription":"Harness for interacting with a standard `app-article-card` in tests. ","methods":[{"name":"getDescText","args":[],"optional":false,"returnType":"{}","typeParameters":[],"line":76,"description":"<p>Gets the description text. </p>\\n","modifierKind":[120]},{"name":"getHeaderAuthorText","args":[],"optional":false,"returnType":"{}","typeParameters":[],"line":51,"description":"<p>Gets the header author text. </p>\\n","modifierKind":[120]},{"name":"getHeaderPubDate","args":[],"optional":false,"returnType":"{}","typeParameters":[],"line":61,"description":"<p>Gets the header published date as a <code>Date</code> object. </p>\\n","modifierKind":[120]},{"name":"getHeaderPubDateText","args":[],"optional":false,"returnType":"{}","typeParameters":[],"line":56,"description":"<p>Gets the header published date text. </p>\\n","modifierKind":[120]},{"name":"getImageSrc","args":[],"optional":false,"returnType":"{}","typeParameters":[],"line":71,"description":"<p>Gets the image source. </p>\\n","modifierKind":[120]},{"name":"getTitleText","args":[],"optional":false,"returnType":"{}","typeParameters":[],"line":66,"description":"<p>Gets the title text. </p>\\n","modifierKind":[120]},{"name":"with","args":[{"name":"options","type":"ArticleCardComponentHarnessFilters"}],"optional":false,"returnType":"HarnessPredicate<ArticleCardComponentHarness>","typeParameters":[],"line":36,"description":"<p>Creates a <code>HarnessPredicate</code> used to locate a particular <code>ArticleCardComponentHarness</code>. </p>\\n","modifierKind":[115],"jsdoctags":[{"name":"options","type":"ArticleCardComponentHarnessFilters","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":"ComponentHarness","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"Dialog","id":"class-Dialog-3edeb90fd91b61436979dc6394291e1f","file":"projects/rss-reader/src/app/core/dialogs/dialog.ts","type":"class","sourceCode":"import { ThemePalette } from \'@angular/material/core\';\\n\\nimport { DialogOpts } from \'./models\';\\n\\n/** An abstract dialog class. */\\nexport abstract class Dialog {\\n  constructor(public opts: DialogOpts) { }\\n  /** The default color to be used for the dialog\'s buttons. */\\n  readonly defaultBtnColor: ThemePalette = \'primary\';\\n\\n  /** Whether the dialog has action buttons. */\\n  get hasActionBtns(): boolean {\\n    if (\'hideActionBtns\' in this.opts) {\\n      if (typeof this.opts.hideActionBtns === \'boolean\') {\\n        return !this.opts.hideActionBtns;\\n      } else if (Array.isArray(this.opts.hideActionBtns)) {\\n        // Skip the below logic\\n        return true;\\n      }\\n    }\\n\\n    return \'negativeBtnText\' in this.opts || \'positiveBtnText\' in this.opts || \'neutralBtnText\' in this.opts;\\n  }\\n\\n  /** Whether the negative button should be hidden. */\\n  abstract get hideNegativeBtn(): boolean;\\n\\n  /** Whether the neutral button should be hidden. */\\n  abstract get hideNeutralBtn(): boolean;\\n\\n  /** Whether the positive button should be hidden. */\\n  abstract get hidePositiveBtn(): boolean;\\n\\n  /** The negative button\'s colour. */\\n  get negativeBtnColor(): ThemePalette {\\n    return \'negativeBtnColor\' in this.opts ? this.opts.negativeBtnColor : this.defaultBtnColor;\\n  }\\n\\n  /** The neutral button\'s colour. */\\n  get neutralBtnColor(): ThemePalette {\\n    return \'neutralBtnColor\' in this.opts ? this.opts.neutralBtnColor : this.defaultBtnColor;\\n  }\\n\\n  /** The positive button\'s colour. */\\n  get positiveBtnColor(): ThemePalette {\\n    return \'positiveBtnColor\' in this.opts ? this.opts.positiveBtnColor : this.defaultBtnColor;\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"opts","type":"DialogOpts"}],"line":6,"jsdoctags":[{"name":"opts","type":"DialogOpts","tagName":{"text":"param"}}]},"properties":[{"name":"defaultBtnColor","defaultValue":"\'primary\'","type":"ThemePalette","optional":false,"description":"<p>The default color to be used for the dialog&#39;s buttons. </p>\\n","line":9,"modifierKind":[132]},{"name":"opts","type":"DialogOpts","optional":false,"description":"","line":7,"modifierKind":[114]}],"description":"<p>An abstract dialog class. </p>\\n","rawdescription":"An abstract dialog class. ","methods":[],"indexSignatures":[],"accessors":{"hasActionBtns":{"name":"hasActionBtns","getSignature":{"name":"hasActionBtns","type":"boolean","returnType":"boolean","line":12,"description":"<p>Whether the dialog has action buttons. </p>\\n"}},"hideNegativeBtn":{"name":"hideNegativeBtn","getSignature":{"name":"hideNegativeBtn","type":"boolean","returnType":"boolean","line":26,"description":"<p>Whether the negative button should be hidden. </p>\\n"}},"hideNeutralBtn":{"name":"hideNeutralBtn","getSignature":{"name":"hideNeutralBtn","type":"boolean","returnType":"boolean","line":29,"description":"<p>Whether the neutral button should be hidden. </p>\\n"}},"hidePositiveBtn":{"name":"hidePositiveBtn","getSignature":{"name":"hidePositiveBtn","type":"boolean","returnType":"boolean","line":32,"description":"<p>Whether the positive button should be hidden. </p>\\n"}},"negativeBtnColor":{"name":"negativeBtnColor","getSignature":{"name":"negativeBtnColor","type":"","returnType":"ThemePalette","line":35,"description":"<p>The negative button&#39;s colour. </p>\\n"}},"neutralBtnColor":{"name":"neutralBtnColor","getSignature":{"name":"neutralBtnColor","type":"","returnType":"ThemePalette","line":40,"description":"<p>The neutral button&#39;s colour. </p>\\n"}},"positiveBtnColor":{"name":"positiveBtnColor","getSignature":{"name":"positiveBtnColor","type":"","returnType":"ThemePalette","line":45,"description":"<p>The positive button&#39;s colour. </p>\\n"}}},"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"MockStorage","id":"class-MockStorage-f64126afa6b87f0788d2dcb922727626","file":"projects/rss-reader/src/app/core/testing/utils/mock-storage.ts","type":"class","sourceCode":"export class MockStorage {\\n  private keys = [];\\n  private store = {};\\n\\n  constructor(initialStore?: { [key: string]: string }) {\\n    for (const key in initialStore) {\\n      if (key in initialStore) {\\n        this.setItem(key, initialStore[key]);\\n      }\\n    }\\n  }\\n\\n  get length(): number {\\n    return this.keys.length;\\n  }\\n\\n  key(i: number): string {\\n    return this.keys[i];\\n  }\\n\\n  getItem(key: string): string | null {\\n    return key in this.store ? this.store[key] : null;\\n  }\\n\\n  setItem(key: string, value: string) {\\n    if (!(key in this.store)) {\\n      this.keys.push(key);\\n    }\\n\\n    this.store[key] = value;\\n  }\\n\\n  removeItem(key: string) {\\n    if (key in this.store) {\\n      delete this.store[key];\\n      this.keys.splice(this.keys.indexOf(key), 1);\\n    }\\n  }\\n\\n  clear() {\\n    this.keys = [];\\n    this.store = {};\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"initialStore","type":"literal type","optional":true}],"line":3,"jsdoctags":[{"name":"initialStore","type":"literal type","optional":true,"tagName":{"text":"param"}}]},"properties":[{"name":"keys","defaultValue":"[]","type":"[]","optional":false,"description":"","line":2,"modifierKind":[112]},{"name":"store","defaultValue":"{}","type":"object","optional":false,"description":"","line":3,"modifierKind":[112]}],"methods":[{"name":"clear","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":40},{"name":"getItem","args":[{"name":"key","type":"string"}],"optional":false,"returnType":"string | null","typeParameters":[],"line":21,"jsdoctags":[{"name":"key","type":"string","tagName":{"text":"param"}}]},{"name":"key","args":[{"name":"i","type":"number"}],"optional":false,"returnType":"string","typeParameters":[],"line":17,"jsdoctags":[{"name":"i","type":"number","tagName":{"text":"param"}}]},{"name":"removeItem","args":[{"name":"key","type":"string"}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"jsdoctags":[{"name":"key","type":"string","tagName":{"text":"param"}}]},{"name":"setItem","args":[{"name":"key","type":"string"},{"name":"value","type":"string"}],"optional":false,"returnType":"void","typeParameters":[],"line":25,"jsdoctags":[{"name":"key","type":"string","tagName":{"text":"param"}},{"name":"value","type":"string","tagName":{"text":"param"}}]}],"indexSignatures":[],"accessors":{"length":{"name":"length","getSignature":{"name":"length","type":"number","returnType":"number","line":13}}},"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]}],"directives":[],"components":[{"name":"AboutDialogComponent","id":"component-AboutDialogComponent-1b5ea44bbec2bfd1eb7fcec53436c118","file":"projects/rss-reader/src/app/dialogs/about-dialog/about-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-about-dialog","styleUrls":[],"styles":[],"templateUrl":["./about-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"latestVersion","defaultValue":"environment.latestVersion.full","type":"","optional":false,"description":"","line":9}],"methodsClass":[],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { environment } from \'../../../environments/environment\';\\n\\n@Component({\\n  selector: \'app-about-dialog\',\\n  templateUrl: \'./about-dialog.component.html\'\\n})\\nexport class AboutDialogComponent {\\n  latestVersion = environment.latestVersion.full;\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","templateData":"<h2 matDialogTitle>About This App</h2>\\n<mat-dialog-content>\\n  <div class=\\"about-version-container\\">\\n    <h3 style=\\"margin: 0\\">RSS Reader</h3>\\n    <strong>\\n      <small>Version {{ latestVersion }}</small>\\n    </strong>\\n  </div>\\n  <p>This RSS reader app is made by Edric which is based on a fork of the original source code by BeCompany.</p>\\n  <p>The forked repository is available\\n    <a class=\\"anchor-link\\" href=\\"https://github.com/becompany/angular2-rss-reader-tutorial\\" target=\\"_blank\\">here</a> and my version is\\n    available\\n    <a class=\\"anchor-link\\" href=\\"https://github.com/EdricChan03/rss-reader\\" target=\\"_blank\\">here</a>.</p>\\n  <p>This repository is hosted on Github Pages. For more info about Github Pages, visit\\n    <a class=\\"anchor-link\\" href=\\"https://pages.github.com\\">here</a>.</p>\\n  <p>This repository also uses\\n    <a class=\\"anchor-link\\" href=\\"https://angular.io\\">Angular</a> and\\n    <a class=\\"anchor-link\\" href=\\"https://material.angular.io\\">Angular Material</a> which are ©Google 2017. All rights reserved.</p>\\n  <p>Social icons in Share dialog are from\\n    <a class=\\"anchor-link\\" href=\\"https://materialdesignicons.com\\">MaterialDesignIcons</a>. All other icons are from\\n    <a class=\\"anchor-link\\" href=\\"https://google.github.io/material-design-icons\\">Google\'s Material Icons</a>.</p>\\n  <a class=\\"anchor-link\\" href=\\"https://github.com/EdricChan03\\" title=\\"Follow me on Github!\\" target=\\"_blank\\">\\n    <img src=\\"https://img.shields.io/github/followers/EdricChan03.svg?style=social&label=EdricChan03\\" alt=\\"Github social badge\\">\\n  </a>\\n  <a class=\\"anchor-link\\" href=\\"https://twitter.com/EdricChan03\\" title=\\"Follow me on Twitter!\\" target=\\"_blank\\">\\n    <img src=\\"https://img.shields.io/twitter/follow/EdricChan03.svg?style=social&label=EdricChan03\\" alt=\\"Twitter social badge\\">\\n  </a>\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n  <a mat-button href=\\"https://github.com/EdricChan03/rss-reader\\" color=\\"accent\\">\\n    <mat-icon>code</mat-icon>\\n    View source code\\n  </a>\\n  <span fxFlex></span>\\n  <button mat-button matDialogClose color=\\"primary\\">Dismiss</button>\\n</mat-dialog-actions>\\n"},{"name":"ActionItemsComponent","id":"component-ActionItemsComponent-c871e14c41d3b304fef149fb7ba551ae","file":"projects/rss-reader/src/app/actionitem.service.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-action-items","styleUrls":[],"styles":[],"template":"<ng-container *ngFor=\\"let actionItem of actionItems\\">\\n   <button\\n   mat-icon-button\\n   *ngIf=\\"actionItem.onClickListener\\"\\n   (click)=\\"actionItem.onClickListener($event)\\"\\n   [matTooltip]=\\"actionItem.title\\"\\n   [disabled]=\\"actionItem.disabled\\">\\n     <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n   </button>\\n   <a mat-icon-button *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [matTooltip]=\\"actionItem.title\\" [disabled]=\\"actionItem.disabled\\">\\n   <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n   </a>\\n   <a\\n     mat-icon-button\\n     *ngIf=\\"actionItem.routerLink\\"\\n     [routerLink]=\\"[actionItem.routerLink]\\"\\n     [matTooltip]=\\"actionItem.title\\"\\n     [disabled]=\\"actionItem.disabled\\">\\n\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t</a>\\n</ng-container>\\n <button mat-icon-button *ngIf=\\"showMoreMenu\\" [matMenuTriggerFor]=\\"moreMenu\\"\\n   matTooltip=\\"More options\\">\\n\\t<mat-icon>more_vert</mat-icon>\\n</button>\\n<mat-menu #moreMenu=\\"matMenu\\">\\n\\t<ng-container *ngFor=\\"let actionItem of overflowActionItems\\">\\n\\t\\t<button mat-menu-item *ngIf=\\"actionItem.onClickListener\\" (click)=\\"actionItem.onClickListener($event)\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t{{actionItem.title}}\\n\\t\\t</button>\\n\\t\\t<a mat-menu-item *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t{{actionItem.title}}\\n\\t\\t</a>\\n\\t\\t<a mat-menu-item *ngIf=\\"actionItem.routerLink\\" [routerLink]=\\"[actionItem.routerLink]\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t{{actionItem.title}}\\n\\t\\t</a>\\n\\t</ng-container>\\n</mat-menu>\\n\\t\\t\\t","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { Component, Injectable, NgModule } from \'@angular/core\';\\nimport { MatButtonModule } from \'@angular/material/button\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport { MatMenuModule } from \'@angular/material/menu\';\\nimport { MatTooltipModule } from \'@angular/material/tooltip\';\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\nimport { RouterModule } from \'@angular/router\';\\n\\n/** ID used to generate new action items with no explicitly-defined ID. */\\nlet nextKeyId = 0;\\n\\n@Injectable()\\n/**\\n * A action icon service for the toolbar.\\n */\\nexport class ActionItemService {\\n\\n  readonly actionItems = new Map<string, ActionItem>();\\n  /**\\n   * Adds an action item\\n   * @param actionItem The action item\\n   */\\n  addActionItem(actionItem: ActionItem) {\\n    this.actionItems.set(`actionItem-${nextKeyId++}`, actionItem);\\n  }\\n  /**\\n   * Adds an action item toggle\\n   * @param actionItem The action item\\n   * @deprecated\\n   * @experimental Do not use!\\n   */\\n  addActionItemToggle(actionItem: ActionItemToggle) {\\n    console.warn(\'%cThis method is experimental and may break. Continue at your own risk.\', \'font-weight: 600\');\\n    actionItem.onClickListener = () => {\\n      actionItem.toggleBind = !actionItem.toggleBind;\\n    };\\n    this.actionItems.set(`actionItem-${nextKeyId++}`, actionItem);\\n  }\\n  /**\\n   * Updates an action item by its key\\n   * @param key The key of the action item\\n   * @param actionItem The action item\\n   */\\n  updateActionItemByKey(key: string, actionItem: ActionItem) {\\n    try {\\n      this.actionItems[key] = actionItem;\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Gets all action items\\n   */\\n  getActionItems(): ActionItem[] {\\n    return Array.from(this.actionItems.values());\\n  }\\n  /**\\n   * Removes an action item\\n   * @param key The key of the action item to remove\\n   */\\n  removeActionItemByKey(key: string) {\\n    try {\\n      this.actionItems.delete(key);\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Removes all action items\\n   */\\n  removeActionItems() {\\n    this.actionItems.clear();\\n  }\\n  /**\\n   * Gets a action item by its key\\n   * @param key The key of the action item to retrieve\\n   */\\n  getActionItemByKey(key: string): ActionItem {\\n    try {\\n      return this.actionItems[key];\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Adds a action item on click listener to the specified action item\\n   * Note: This can also be declared manually\\n   * @deprecated Please set the onclick listener in the {@link ActionItem} object itself.\\n   * @param id The id of the action item\\n   * @param callback The callback when the action item is clicked (has to be arrow function)\\n   */\\n  addActionItemOnClickListener(key: string, callback: (ev?: Event) => void) {\\n    try {\\n      this.actionItems[key].onClickListener = callback;\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Throws an error where the id couldn\'t be found\\n   */\\n  private throwKeyNotFoundError(id: string) {\\n    throw new Error(`Could not find an action item with key ${id}`);\\n  }\\n  /**\\n   * Throws an error where the title couldn\'t be found\\n   */\\n  private throwTitleNotFoundError(title: string) {\\n    throw new Error(`Could not find an action item with title ${title}`);\\n  }\\n}\\n\\n/**\\n * An action item\\n */\\nexport interface ActionItem {\\n  /**\\n   * The title of the action item\\n   */\\n  title: string;\\n  /** The ID of the action item */\\n  id?: string;\\n  /**\\n   * The icon of the action item\\n   */\\n  icon?: string;\\n  /**\\n   * The href of the action item\\n   * NOTE: If `routerLink` is specified, don\'t use `href`.\\n   */\\n  href?: string;\\n  /**\\n   * Similar to what Android does.\\n   */\\n  showAsAction?: boolean;\\n  /** Whether the action item should be disabled. */\\n  disabled?: boolean;\\n  /**\\n   * The router link of the action item\\n   * NOTE: If `href` is specified, don\'t use `routerLink`.\\n   */\\n  routerLink?: string;\\n  /**\\n   * The on click listener of the action item\\n   * Note: This can also be set by {@link ActionItemService#addActionItemOnClickListener}\\n   */\\n  onClickListener?: (ev?: Event) => void;\\n  /**\\n   * The submenu of the action item\\n   */\\n  subMenu?: ActionItem[];\\n}\\n/**\\n * An action item toggle\\n */\\nexport interface ActionItemToggle extends ActionItem {\\n  /**\\n   * The toggle boolean to bind to\\n   */\\n  toggleBind: boolean;\\n}\\n\\n@Component({\\n  selector: \'app-action-items\',\\n  template: `\\n\\t<ng-container *ngFor=\\"let actionItem of actionItems\\">\\n    <button\\n    mat-icon-button\\n    *ngIf=\\"actionItem.onClickListener\\"\\n    (click)=\\"actionItem.onClickListener($event)\\"\\n    [matTooltip]=\\"actionItem.title\\"\\n    [disabled]=\\"actionItem.disabled\\">\\n      <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n    </button>\\n    <a mat-icon-button *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [matTooltip]=\\"actionItem.title\\" [disabled]=\\"actionItem.disabled\\">\\n    <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n    </a>\\n    <a\\n      mat-icon-button\\n      *ngIf=\\"actionItem.routerLink\\"\\n      [routerLink]=\\"[actionItem.routerLink]\\"\\n      [matTooltip]=\\"actionItem.title\\"\\n      [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t</a>\\n\\t</ng-container>\\n  <button mat-icon-button *ngIf=\\"showMoreMenu\\" [matMenuTriggerFor]=\\"moreMenu\\"\\n    matTooltip=\\"More options\\">\\n\\t\\t<mat-icon>more_vert</mat-icon>\\n\\t</button>\\n\\t<mat-menu #moreMenu=\\"matMenu\\">\\n\\t\\t<ng-container *ngFor=\\"let actionItem of overflowActionItems\\">\\n\\t\\t\\t<button mat-menu-item *ngIf=\\"actionItem.onClickListener\\" (click)=\\"actionItem.onClickListener($event)\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</button>\\n\\t\\t\\t<a mat-menu-item *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</a>\\n\\t\\t\\t<a mat-menu-item *ngIf=\\"actionItem.routerLink\\" [routerLink]=\\"[actionItem.routerLink]\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</a>\\n\\t\\t</ng-container>\\n\\t</mat-menu>\\n\\t\\t\\t\\t`\\n})\\nexport class ActionItemsComponent {\\n  constructor(private actionItemService: ActionItemService) { }\\n  get actionItems(): ActionItem[] {\\n    return this.actionItemService.getActionItems().filter(item => item.showAsAction);\\n  }\\n  get overflowActionItems(): ActionItem[] {\\n    return this.actionItemService.getActionItems().filter(item => !item.showAsAction);\\n  }\\n  get showMoreMenu() {\\n    return this.actionItemService.getActionItems().find((actionItem: ActionItem): boolean => {\\n      return actionItem.showAsAction !== true;\\n    });\\n  }\\n}\\n\\n@NgModule({\\n  declarations: [\\n    ActionItemsComponent\\n  ],\\n  exports: [\\n    ActionItemsComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    BrowserAnimationsModule,\\n    MatButtonModule,\\n    MatIconModule,\\n    MatMenuModule,\\n    MatTooltipModule,\\n    RouterModule\\n  ],\\n  providers: [\\n    ActionItemService\\n  ]\\n})\\nexport class ActionItemsModule { }\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"actionItemService","type":"ActionItemService"}],"line":210,"jsdoctags":[{"name":"actionItemService","type":"ActionItemService","tagName":{"text":"param"}}]},"accessors":{"actionItems":{"name":"actionItems","getSignature":{"name":"actionItems","type":"[]","returnType":"ActionItem[]","line":212}},"overflowActionItems":{"name":"overflowActionItems","getSignature":{"name":"overflowActionItems","type":"[]","returnType":"ActionItem[]","line":215}},"showMoreMenu":{"name":"showMoreMenu","getSignature":{"name":"showMoreMenu","type":"","returnType":"","line":218}}}},{"name":"AppComponent","id":"component-AppComponent-b75dfc9546194863d8eefae9b67b4906","file":"projects/rss-reader/src/app/app.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rss-reader","styleUrls":[],"styles":[],"templateUrl":["./app.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"environment","defaultValue":"environment","type":"","optional":false,"description":"","line":24},{"name":"links","defaultValue":"[\\n    {\\n      name: \'Feed\',\\n      url: \'feed\',\\n      icon: \'rss_feed\'\\n    },\\n    {\\n      name: \'Headlines\',\\n      url: \'headlines\',\\n      icon: \'newspaper\',\\n      isSvgIcon: true\\n    },\\n    {\\n      name: \'Guides\',\\n      url: \'docs\',\\n      icon: \'book\'\\n    },\\n    {\\n      name: \'Settings\',\\n      url: \'settings\',\\n      icon: \'settings\'\\n    },\\n    {\\n      name: \'Release notes\',\\n      url: \'release-notes\',\\n      icon: \'new_releases\'\\n    }\\n  ]","type":"[]","optional":false,"description":"","line":66},{"name":"projects","defaultValue":"[\\n    {\\n      subheaderName: \'Projects\',\\n      subheaderProjects: [\\n        {\\n          name: \'RSS Reader\',\\n          url: \'https://edricchan03.github.io/rss-reader\',\\n          icon: \'rss_feed\'\\n        },\\n        {\\n          name: \'StudyBuddy\',\\n          url: \'https://studybuddy-e5f46.firebaseapp.com\',\\n          icon: \'book\'\\n        },\\n        {\\n          name: \'Market2\',\\n          url: \'https://market2-ed1e4.firebaseapp.com\',\\n          icon: \'shopping_cart\'\\n        },\\n        {\\n          name: \'My website\',\\n          url: \'https://edricchan03.github.io\',\\n          icon: \'home\'\\n        },\\n        {\\n          name: \'First-Mod\',\\n          url: \'https://edricchan03.github.io/First-Mod\',\\n          icon: \'gamepads\'\\n        }]\\n    },\\n    {\\n      subheaderName: \'Libraries\',\\n      subheaderProjects: [\\n        {\\n          name: \'ngx-ytd-api\',\\n          url: \'https://ngx-ytd-api.firebaseapp.com/master\',\\n          icon: \'\'\\n        }\\n      ]\\n    }\\n  ]","type":"[]","optional":false,"description":"","line":25},{"name":"shared","type":"SharedService","optional":false,"description":"","line":95,"modifierKind":[114]},{"name":"sidenav","type":"MatSidenav","optional":false,"description":"","line":23,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'left\', {static: true}"}]}],"methodsClass":[{"name":"_addDefaultActionItems","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":111,"modifierKind":[112]},{"name":"_createOnboardingOverlay","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":136,"modifierKind":[112]},{"name":"aboutThisApp","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":142},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":145},{"name":"showOnboardingOverlay","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":133}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { ComponentPortal } from \'@angular/cdk/portal\';\\nimport { Component, OnDestroy, OnInit, ViewChild } from \'@angular/core\';\\nimport { MatDialog } from \'@angular/material/dialog\';\\nimport { MatSidenav } from \'@angular/material/sidenav\';\\nimport { NavigationStart, Router } from \'@angular/router\';\\nimport { SwUpdate } from \'@angular/service-worker\';\\n\\nimport { ActionItemService } from \'./actionitem.service\';\\nimport { AboutDialogComponent } from \'./dialogs\';\\nimport { environment } from \'../environments/environment\';\\nimport { Settings } from \'./models/settings\';\\nimport { OverlayService } from \'./overlay.service\';\\nimport { OnboardingOverlayComponent } from \'./overlays\';\\nimport { SharedService } from \'./shared.service\';\\nimport { HotkeysService } from \'./hotkeys/hotkeys.service\';\\nimport { SettingsStorageService } from \'./core/settings-storage/settings-storage.service\';\\n\\n@Component({\\n  selector: \'rss-reader\',\\n  templateUrl: \'./app.component.html\'\\n})\\nexport class AppComponent implements OnInit, OnDestroy {\\n  @ViewChild(\'left\', { static: true }) sidenav: MatSidenav;\\n  environment = environment;\\n  projects = [\\n    {\\n      subheaderName: \'Projects\',\\n      subheaderProjects: [\\n        {\\n          name: \'RSS Reader\',\\n          url: \'https://edricchan03.github.io/rss-reader\',\\n          icon: \'rss_feed\'\\n        },\\n        {\\n          name: \'StudyBuddy\',\\n          url: \'https://studybuddy-e5f46.firebaseapp.com\',\\n          icon: \'book\'\\n        },\\n        {\\n          name: \'Market2\',\\n          url: \'https://market2-ed1e4.firebaseapp.com\',\\n          icon: \'shopping_cart\'\\n        },\\n        {\\n          name: \'My website\',\\n          url: \'https://edricchan03.github.io\',\\n          icon: \'home\'\\n        },\\n        {\\n          name: \'First-Mod\',\\n          url: \'https://edricchan03.github.io/First-Mod\',\\n          icon: \'gamepads\'\\n        }]\\n    },\\n    {\\n      subheaderName: \'Libraries\',\\n      subheaderProjects: [\\n        {\\n          name: \'ngx-ytd-api\',\\n          url: \'https://ngx-ytd-api.firebaseapp.com/master\',\\n          icon: \'\'\\n        }\\n      ]\\n    }\\n  ];\\n  links = [\\n    {\\n      name: \'Feed\',\\n      url: \'feed\',\\n      icon: \'rss_feed\'\\n    },\\n    {\\n      name: \'Headlines\',\\n      url: \'headlines\',\\n      icon: \'newspaper\',\\n      isSvgIcon: true\\n    },\\n    {\\n      name: \'Guides\',\\n      url: \'docs\',\\n      icon: \'book\'\\n    },\\n    {\\n      name: \'Settings\',\\n      url: \'settings\',\\n      icon: \'settings\'\\n    },\\n    {\\n      name: \'Release notes\',\\n      url: \'release-notes\',\\n      icon: \'new_releases\'\\n    }\\n  ];\\n  constructor(\\n    public shared: SharedService,\\n    private overlayService: OverlayService,\\n    private actionItemService: ActionItemService,\\n    router: Router,\\n    private dialog: MatDialog,\\n    private swUpdate: SwUpdate,\\n    private hotkeys: HotkeysService,\\n    private settingsStorage: SettingsStorageService\\n  ) {\\n    router.events.subscribe(event => {\\n      if (event instanceof NavigationStart) {\\n        this.actionItemService.removeActionItems();\\n        this._addDefaultActionItems();\\n      }\\n    });\\n  }\\n  private _addDefaultActionItems() {\\n    this.actionItemService.addActionItem({\\n      id: \'keyboard-shortcuts-action-item\',\\n      title: \'Keyboard shortcuts\',\\n      icon: \'keyboard\',\\n      showAsAction: false,\\n      onClickListener: () => { this.hotkeys.openHotkeyHelpDialog(); }\\n    });\\n  }\\n  get isOffline() {\\n    return !navigator.onLine;\\n  }\\n  get isSidenavOpen() {\\n    if (this.sidenav.opened) {\\n      return true;\\n    } else {\\n      return false;\\n    }\\n  }\\n  aboutThisApp() {\\n    this.dialog.open(AboutDialogComponent);\\n  }\\n  showOnboardingOverlay() {\\n    this._createOnboardingOverlay();\\n  }\\n  private _createOnboardingOverlay() {\\n    this.overlayService.createOverlay(new ComponentPortal(OnboardingOverlayComponent), {\\n      positionStrategy: this.overlayService.createCenterOverlayPositionStrategy(),\\n      hasBackdrop: true\\n    }, true);\\n  }\\n  ngOnDestroy() {\\n    this.overlayService.destroyOverlay();\\n  }\\n  ngOnInit() {\\n    if (window.localStorage.getItem(\'hasLaunched\')) {\\n      if (!JSON.parse(window.localStorage.getItem(\'hasLaunched\'))) {\\n        window.localStorage.setItem(\'hasLaunched\', JSON.stringify(true));\\n        this.showOnboardingOverlay();\\n      }\\n    }\\n    if (this.settingsStorage.settings) {\\n      if (this.settingsStorage.settings.theme) {\\n        document.body.classList.add(this.settingsStorage.settings.theme);\\n      } else {\\n        console.warn(\'Theme setting was not found. Using default...\');\\n        document.body.classList.add(\'indigo-pink\');\\n      }\\n    } else {\\n      const tempSettings: Settings = { showImages: true, multipleRss: false, openNewTab: true, theme: \'indigo-pink\' };\\n      document.body.classList.add(\'indigo-pink\');\\n      this.settingsStorage.setSettings(tempSettings);\\n    }\\n    if (this.isOffline) {\\n      console.log(\'User is offline\');\\n      // tslint:disable-next-line:max-line-length\\n      const snackBarRef = this.shared.openSnackBar({\\n        msg: \'You are currently offline. Some features may not be available.\',\\n        action: \'Retry\',\\n        additionalOpts: {\\n          panelClass: [\'mat-elevation-z2\'],\\n          horizontalPosition: \'start\'\\n        }\\n      });\\n      snackBarRef.onAction().subscribe(() => {\\n        window.location.reload();\\n      });\\n    }\\n\\n    // SwUpdate functionality\\n    console.log(\'SwUpdate#isEnabled:\', this.swUpdate.isEnabled);\\n\\n    this.swUpdate.checkForUpdate().then(() => {\\n      console.log(\'[AppComponent] Successfully checked for updates.\');\\n    }, error => {\\n      console.error(\'[AppComponent] Could not check for updates:\', error);\\n    });\\n\\n    this.swUpdate.activated.subscribe(event => {\\n      console.log(\'[AppComponent] Successfully activated update!\');\\n      this.shared.openSnackBar({\\n        msg: \'Successfully updated the app!\'\\n      });\\n      console.log(\'[AppComponent] Current version is:\', event.current);\\n      console.log(\'[AppComponent] Previous version is:\', event.previous);\\n    });\\n\\n    this.swUpdate.available.subscribe(event => {\\n      console.log(\'[AppComponent] Update available: current version is\', event.current, \'available version is\', event.available);\\n\\n      function hasNewerVer(): boolean {\\n        const availableHasVer = \'version\' in event.available.appData;\\n        const currentHasVer = \'version\' in event.current.appData;\\n        let returnVal = false;\\n\\n        if (availableHasVer && currentHasVer) {\\n          returnVal = event.available.appData[\'version\'] !== event.current.appData[\'version\'];\\n        }\\n\\n        return returnVal;\\n      }\\n\\n      const message = hasNewerVer() ?\\n        `A newer version (${event.available.appData[\'version\']}) of the app is available!` :\\n        \'A newer version of the app is available!\';\\n      const snackBarRef = this.shared.openSnackBar({\\n        msg: message,\\n        action: \'Update & Refresh\',\\n        additionalOpts: {\\n          // Interesting note: The snackbar code actually checks if the duration is above 0 and only enables auto-hide from that.\\n          duration: 0\\n        }\\n      });\\n\\n      snackBarRef.onAction().subscribe(() => {\\n        this.swUpdate.activateUpdate().then(() => {\\n          window.location.reload();\\n        }, error => {\\n          console.error(\'[AppComponent] Could not activate update:\', error);\\n        });\\n      });\\n\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"shared","type":"SharedService"},{"name":"overlayService","type":"OverlayService"},{"name":"actionItemService","type":"ActionItemService"},{"name":"router","type":"Router"},{"name":"dialog","type":"MatDialog"},{"name":"swUpdate","type":"SwUpdate"},{"name":"hotkeys","type":"HotkeysService"},{"name":"settingsStorage","type":"SettingsStorageService"}],"line":93,"jsdoctags":[{"name":"shared","type":"SharedService","tagName":{"text":"param"}},{"name":"overlayService","type":"OverlayService","tagName":{"text":"param"}},{"name":"actionItemService","type":"ActionItemService","tagName":{"text":"param"}},{"name":"router","type":"Router","tagName":{"text":"param"}},{"name":"dialog","type":"MatDialog","tagName":{"text":"param"}},{"name":"swUpdate","type":"SwUpdate","tagName":{"text":"param"}},{"name":"hotkeys","type":"HotkeysService","tagName":{"text":"param"}},{"name":"settingsStorage","type":"SettingsStorageService","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy"],"accessors":{"isOffline":{"name":"isOffline","getSignature":{"name":"isOffline","type":"","returnType":"","line":120}},"isSidenavOpen":{"name":"isSidenavOpen","getSignature":{"name":"isSidenavOpen","type":"","returnType":"","line":123}}},"templateData":"<mat-sidenav-container fullscreen>\\n  <mat-sidenav #left class=\\"app-sidenav\\" [mode]=\\"shared.isPortraitHandset ? \'over\' : \'side\'\\">\\n    <mat-toolbar>\\n      Links\\n      <span fxFlex></span>\\n      <button mat-icon-button (click)=\\"left.close()\\" matTooltip=\\"Close Sidenav\\" matTooltipPosition=\\"left\\">\\n        <mat-icon>keyboard_arrow_left</mat-icon>\\n      </button>\\n    </mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item [routerLink]=\\"[\'/\', link.url]\\" routerLinkActive=\\"active-link\\" *ngFor=\\"let link of links\\">\\n        <mat-icon matListIcon *ngIf=\\"!link.isSvgIcon\\">{{link.icon}}</mat-icon>\\n        <mat-icon matListIcon *ngIf=\\"link.isSvgIcon\\" [svgIcon]=\\"link.icon\\"></mat-icon>\\n        <h3 matLine>{{link.name}}</h3>\\n      </a>\\n      <h3 matSubheader>More</h3>\\n      <a mat-list-item href=\\"https://goo.gl/forms/hopvyFXOqHfpA1kq2\\" target=\\"_blank\\">\\n        <mat-icon matListIcon>feedback</mat-icon>\\n        <h3 matLine>Send Feedback</h3>\\n        <span fxFlex></span>\\n        <mat-icon class=\\"open-in-new-icon\\">open_in_new</mat-icon>\\n      </a>\\n      <a mat-list-item href=\\"https://github.com/EdricChan03/rss-reader\\">\\n        <mat-icon matListIcon>code</mat-icon>\\n        <h3 matLine>View source code</h3>\\n      </a>\\n      <mat-list-item (click)=\\"showOnboardingOverlay()\\" *ngIf=\\"!shared.isPortraitHandset\\">\\n        <mat-icon matListIcon>open_in_browser</mat-icon>\\n        <h3 matLine>Show onboarding</h3>\\n      </mat-list-item>\\n      <mat-list-item (click)=\\"aboutThisApp()\\">\\n        <mat-icon matListIcon>info</mat-icon>\\n        <h3 matLine>About</h3>\\n      </mat-list-item>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\"primary\\" class=\\"mat-elevation-z3\\">\\n      <button mat-icon-button (click)=\\"left.toggle()\\" *ngIf=\\"!isSidenavOpen\\" aria-label=\\"Toggle left sidenav\\">\\n        <mat-icon>menu</mat-icon>\\n      </button>\\n      <span id=\\"toolbar-title\\">RSS Reader</span>\\n      <span fxFlex></span>\\n      <app-action-items></app-action-items>\\n    </mat-toolbar>\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n"},{"name":"ArticleCardComponent","id":"component-ArticleCardComponent-9f4296483c31468b92b847c4ac2194ee","file":"projects/rss-reader/src/app/components/article-card/article-card.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-article-card","styleUrls":["./article-card.component.scss"],"styles":[],"templateUrl":["./article-card.component.html"],"viewProviders":[],"inputsClass":[{"name":"article","description":"<p>The article that this card represents. </p>\\n","line":30,"type":"FeedEntry | NewsAPITopHeadlinesArticle"},{"name":"feed","description":"<p>The feed entry that this card represents.</p>\\n","line":23,"type":"FeedEntry"},{"name":"headline","description":"<p>The headline article that this card represents.</p>\\n","line":28,"type":"NewsAPITopHeadlinesArticle"}],"outputsClass":[],"propertiesClass":[{"name":"hasImage","type":"boolean","optional":false,"description":"","line":16},{"name":"imageSrc","type":"string","optional":false,"description":"","line":17},{"name":"target","type":"string","optional":false,"description":"","line":18}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":141},{"name":"share","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":161},{"name":"showCode","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":167}],"hostBindings":[],"hostListeners":[],"description":"<p>Card used to represent an article entry (<code>FeedEntry</code> or <code>NewsAPITopHeadlinesArticle</code>). </p>\\n","rawdescription":"Card used to represent an article entry (`FeedEntry` or `NewsAPITopHeadlinesArticle`). ","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { MatDialog } from \'@angular/material/dialog\';\\nimport { CodeViewerDialogComponent, ShareDialogComponent } from \'../../dialogs\';\\nimport { FeedEntry } from \'../../models/feed-entry\';\\nimport { NewsAPITopHeadlinesArticle } from \'../../models/news-api/top-headlines-article\';\\nimport { SettingsStorageService } from \'../../core/settings-storage/settings-storage.service\';\\nimport { StripHtmlTagsPipe } from \'../../pipe\';\\n\\n/** Card used to represent an article entry (`FeedEntry` or `NewsAPITopHeadlinesArticle`). */\\n@Component({\\n  selector: \'app-article-card\',\\n  templateUrl: \'./article-card.component.html\',\\n  styleUrls: [\'./article-card.component.scss\']\\n})\\nexport class ArticleCardComponent implements OnInit {\\n  hasImage: boolean;\\n  imageSrc: string;\\n  target: string;\\n  /**\\n   * The feed entry that this card represents.\\n   * @deprecated Use {@link ArticleCardComponent#article}.\\n   */\\n  @Input() feed?: FeedEntry;\\n  /**\\n   * The headline article that this card represents.\\n   * @deprecated Use {@link ArticleCardComponent#article}.\\n   */\\n  @Input() headline?: NewsAPITopHeadlinesArticle;\\n  /** The article that this card represents. */\\n  @Input() article: FeedEntry | NewsAPITopHeadlinesArticle;\\n\\n  constructor(\\n    private dialog: MatDialog,\\n    private settingsStorage: SettingsStorageService,\\n    private stripHtmlTags: StripHtmlTagsPipe\\n  ) { }\\n\\n  get articleAuthor(): string {\\n    if (this.article !== undefined) {\\n      if (\'publishedAt\' in this.article) {\\n        if (\'author\' in this.article && this.article.author !== undefined) {\\n          if (\'author\' in this.article && \'source\' in this.article &&\\n            \'name\' in this.article.source && this.article.source.name !== undefined) {\\n            return `${this.article.author} | ${this.article.source.name}`;\\n          } else {\\n            return this.article.author;\\n          }\\n        } else if (\'source\' in this.article &&\\n          \'name\' in this.article.source && this.article.source.name !== undefined) {\\n          return this.article.source.name;\\n        } else {\\n          return;\\n        }\\n      } else if (\'pubDate\' in this.article) {\\n        return this.article.author;\\n      }\\n    }\\n    return;\\n  }\\n\\n  get articlePubDate(): string {\\n    if (this.article !== undefined) {\\n      if (\'publishedAt\' in this.article) {\\n        return this.article.publishedAt;\\n      } else if (\'pubDate\' in this.article) {\\n        return this.article.pubDate;\\n      }\\n    }\\n    return;\\n  }\\n\\n  get articleImg(): string {\\n    if (this.article !== undefined) {\\n      if (\'urlToImage\' in this.article) {\\n        return this.article.urlToImage;\\n      } else if (\'thumbnail\' in this.article) {\\n        return this.article.thumbnail;\\n      } else if (\'enclosure\' in this.article && \'thumbnail\' in this.article.enclosure) {\\n        return this.article.enclosure.thumbnail;\\n      } else {\\n        return;\\n      }\\n    }\\n  }\\n\\n  get articleTitle(): string {\\n    return this.article?.title;\\n  }\\n\\n  get articleDesc(): string {\\n    return this.stripHtmlTags.transform(this.article?.description ?? \'\');\\n  }\\n\\n  get articleCategories(): string[] {\\n    if (this.article !== undefined) {\\n      if (\'categories\' in this.article) {\\n        return this.article.categories;\\n      }\\n    }\\n    return [];\\n  }\\n\\n  get articleLink(): string {\\n    if (this.article !== undefined) {\\n      if (\'url\' in this.article) {\\n        return this.article.url;\\n      } else if (\'link\' in this.article) {\\n        return this.article.link;\\n      }\\n    }\\n    return;\\n  }\\n\\n  get enclosureIsAudioType(): boolean {\\n    if (this.article !== undefined) {\\n      if (\'enclosure\' in this.article && \'type\' in this.article.enclosure) {\\n        return this.article.enclosure.type.startsWith(\'audio\');\\n      }\\n    }\\n    return false;\\n  }\\n\\n  get enclosureIsVideoType(): boolean {\\n    if (this.article !== undefined) {\\n      if (\'enclosure\' in this.article && \'type\' in this.article.enclosure) {\\n        return this.article.enclosure.type.startsWith(\'video\');\\n      }\\n    }\\n    return false;\\n  }\\n\\n  get enclosureLink(): string {\\n    if (this.article !== undefined) {\\n      if (\'enclosure\' in this.article && \'link\' in this.article.enclosure) {\\n        return this.article.enclosure.link;\\n      }\\n    }\\n    return;\\n  }\\n\\n  ngOnInit() {\\n    if (this.settingsStorage.settings) {\\n      if (\'openNewTab\' in this.settingsStorage.settings) {\\n        this.target = this.settingsStorage.settings.openNewTab ? \'_blank\' : \'_self\';\\n      }\\n      if (\'showImages\' in this.settingsStorage.settings) {\\n        this.hasImage = this.settingsStorage.settings.showImages;\\n      }\\n    }\\n\\n    // Deprecated usages\\n    // tslint:disable:deprecation\\n    if (this.feed) {\\n      this.article = this.feed;\\n    } else if (this.headline) {\\n      this.article = this.headline;\\n    }\\n    // tslint:enable:deprecation\\n  }\\n\\n  share() {\\n    this.dialog.open(ShareDialogComponent, {\\n      data: this.article\\n    });\\n  }\\n\\n  showCode() {\\n    this.dialog.open(CodeViewerDialogComponent, {\\n      data: this.article\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".article-card--title {\\n  line-height: 32px;\\n}\\n","styleUrl":"./article-card.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"dialog","type":"MatDialog"},{"name":"settingsStorage","type":"SettingsStorageService"},{"name":"stripHtmlTags","type":"StripHtmlTagsPipe"}],"line":30,"jsdoctags":[{"name":"dialog","type":"MatDialog","tagName":{"text":"param"}},{"name":"settingsStorage","type":"SettingsStorageService","tagName":{"text":"param"}},{"name":"stripHtmlTags","type":"StripHtmlTagsPipe","tagName":{"text":"param"}}]},"implements":["OnInit"],"accessors":{"articleAuthor":{"name":"articleAuthor","getSignature":{"name":"articleAuthor","type":"string","returnType":"string","line":38}},"articlePubDate":{"name":"articlePubDate","getSignature":{"name":"articlePubDate","type":"string","returnType":"string","line":61}},"articleImg":{"name":"articleImg","getSignature":{"name":"articleImg","type":"string","returnType":"string","line":72}},"articleTitle":{"name":"articleTitle","getSignature":{"name":"articleTitle","type":"string","returnType":"string","line":86}},"articleDesc":{"name":"articleDesc","getSignature":{"name":"articleDesc","type":"string","returnType":"string","line":90}},"articleCategories":{"name":"articleCategories","getSignature":{"name":"articleCategories","type":"[]","returnType":"string[]","line":94}},"articleLink":{"name":"articleLink","getSignature":{"name":"articleLink","type":"string","returnType":"string","line":103}},"enclosureIsAudioType":{"name":"enclosureIsAudioType","getSignature":{"name":"enclosureIsAudioType","type":"boolean","returnType":"boolean","line":114}},"enclosureIsVideoType":{"name":"enclosureIsVideoType","getSignature":{"name":"enclosureIsVideoType","type":"boolean","returnType":"boolean","line":123}},"enclosureLink":{"name":"enclosureLink","getSignature":{"name":"enclosureLink","type":"string","returnType":"string","line":132}}},"templateData":"<mat-card class=\\"article-card\\">\\n  <mat-card-header class=\\"article-card--header\\">\\n    <mat-card-title *ngIf=\\"articleAuthor\\" class=\\"article-card--author\\">{{ articleAuthor }}</mat-card-title>\\n    <mat-card-subtitle *ngIf=\\"articlePubDate\\" class=\\"article-card--pub-date\\">{{ articlePubDate | date:\'short\' }}</mat-card-subtitle>\\n    <span fxFlex></span>\\n    <button mat-icon-button [matMenuTriggerFor]=\\"feedMenu\\">\\n      <mat-icon class=\\"icon\\">more_vert</mat-icon>\\n    </button>\\n    <mat-menu #feedMenu=\\"matMenu\\">\\n      <button mat-menu-item (click)=\\"showCode()\\">\\n        <mat-icon>code</mat-icon> Show code\\n      </button>\\n    </mat-menu>\\n  </mat-card-header>\\n  <img mat-card-image class=\\"article-card--image\\" *ngIf=\\"articleImg && hasImage\\" [src]=\\"articleImg\\" alt=\\"Article thumbnail\\">\\n  <mat-card-title class=\\"article-card--title\\">{{ articleTitle }}</mat-card-title>\\n  <mat-card-content class=\\"article-card--content\\">\\n    <p class=\\"article-card--description\\">{{ articleDesc | slice:0:300 }}</p>\\n    <mat-chip-list *ngIf=\\"articleCategories.length > 0\\" class=\\"article-card--categories\\">\\n      <mat-chip *ngFor=\\"let category of articleCategories\\" [innerHTML]=\\"category\\"></mat-chip>\\n    </mat-chip-list>\\n    <audio *ngIf=\\"enclosureLink && enclosureIsAudioType\\" [src]=\\"enclosureLink\\" class=\\"article-card--media-player\\" controls preload=\\"metadata\\"></audio>\\n    <video *ngIf=\\"enclosureLink && enclosureIsVideoType\\" [src]=\\"enclosureLink\\" class=\\"article-card--media-player\\" controls preload=\\"metadata\\"></video>\\n  </mat-card-content>\\n  <mat-divider class=\\"article-card--divider\\"></mat-divider>\\n  <mat-card-actions align=\\"end\\" class=\\"article-card--actions\\">\\n    <button mat-icon-button (click)=\\"share()\\" matTooltip=\\"Share post\\" color=\\"primary\\" aria-label=\\"Share post\\">\\n      <mat-icon>share</mat-icon>\\n    </button>\\n    <a mat-icon-button [href]=\\"articleLink\\" [target]=\\"target\\" color=\\"primary\\" aria-label=\\"View post\\" matTooltip=\\"View post\\">\\n      <mat-icon>open_in_new</mat-icon>\\n    </a>\\n  </mat-card-actions>\\n</mat-card>\\n"},{"name":"CodeViewerDialogComponent","id":"component-CodeViewerDialogComponent-c81775843323b1b59153eb6092482d6a","file":"projects/rss-reader/src/app/dialogs/code-viewer-dialog/code-viewer-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-code-viewer-dialog","styleUrls":[],"styles":[],"templateUrl":["./code-viewer-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"data","type":"any","optional":false,"description":"","line":11,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[114]}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":14}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component, AfterViewInit, Inject } from \'@angular/core\';\\nimport { MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\nimport * as hljs from \'highlight.js\';\\n\\n@Component({\\n  selector: \'app-code-viewer-dialog\',\\n  templateUrl: \'./code-viewer-dialog.component.html\'\\n})\\nexport class CodeViewerDialogComponent implements AfterViewInit {\\n  constructor(\\n    @Inject(MAT_DIALOG_DATA) public data: any\\n  ) { }\\n\\n  ngAfterViewInit() {\\n    hljs.highlightBlock(document.getElementById(\'code\'));\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"data","type":"any"}],"line":9,"jsdoctags":[{"name":"data","type":"any","tagName":{"text":"param"}}]},"implements":["AfterViewInit"],"templateData":"<h2 matDialogTitle>Code View</h2>\\n<mat-dialog-content>\\n  <pre><code id=\\"code\\" class=\\"json\\">{{ data | json }}</code></pre>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\"end\\">\\n  <button mat-button color=\\"primary\\" matDialogClose>Close</button>\\n</mat-dialog-actions>\\n"},{"name":"DocViewerComponent","id":"component-DocViewerComponent-078d0ede44f2c203ee473ff7d9d0d9da","file":"projects/rss-reader/src/app/pages/doc-viewer/doc-viewer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"doc-viewer","styleUrls":[],"styles":[],"template":"Loading document&hellip;","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"documentUrl","description":"<p>The URL of the document to display. </p>\\n","line":29,"type":"string"}],"outputsClass":[{"name":"contentLoaded","defaultValue":"new EventEmitter<void>()","line":33,"type":"EventEmitter"}],"propertiesClass":[{"name":"documentFetchSubscription","type":"Subscription","optional":false,"description":"","line":25,"modifierKind":[112]},{"name":"html","type":"Document","optional":false,"description":"","line":37},{"name":"parse","defaultValue":"new DOMParser()","type":"","optional":false,"description":"","line":38},{"name":"textContent","defaultValue":"\'\'","type":"string","optional":false,"description":"<p>The document text. It should not be HTML encoded. </p>\\n","line":36}],"methodsClass":[{"name":"_fetchDocument","args":[{"name":"url","type":"string"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"description":"<p>Fetch a document by URL. </p>\\n","modifierKind":[112],"jsdoctags":[{"name":"url","type":"string","tagName":{"text":"param"}}]},{"name":"_loadExpansionPanel","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":68,"modifierKind":[112]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":88}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import {\\n  ApplicationRef,\\n  Component,\\n  ComponentFactoryResolver,\\n  ElementRef,\\n  EventEmitter,\\n  Injector,\\n  Input,\\n  OnDestroy,\\n  ViewContainerRef,\\n  SecurityContext,\\n  Output\\n} from \'@angular/core\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { Subscription } from \'rxjs\';\\nimport { ComponentPortal, DomPortalOutlet } from \'@angular/cdk/portal\';\\nimport { ExpansionPanelComponent } from \'../../components/expansion-panel/expansion-panel.component\';\\nimport { DomSanitizer } from \'@angular/platform-browser\';\\n\\n@Component({\\n  selector: \'doc-viewer\',\\n  template: \'Loading document&hellip;\',\\n})\\nexport class DocViewerComponent implements OnDestroy {\\n  private documentFetchSubscription: Subscription;\\n\\n  /** The URL of the document to display. */\\n  @Input()\\n  set documentUrl(url: string) {\\n    this._fetchDocument(url);\\n  }\\n\\n  @Output() contentLoaded = new EventEmitter<void>();\\n\\n  /** The document text. It should not be HTML encoded. */\\n  textContent = \'\';\\n  html: Document;\\n  parse = new DOMParser();\\n  constructor(\\n    private appRef: ApplicationRef,\\n    private componentFactoryResolver: ComponentFactoryResolver,\\n    private elementRef: ElementRef,\\n    private http: HttpClient,\\n    private injector: Injector,\\n    private viewContainerRef: ViewContainerRef,\\n    private dom: DomSanitizer) { }\\n\\n  /** Fetch a document by URL. */\\n  private _fetchDocument(url: string) {\\n    // Cancel previous pending request\\n    if (this.documentFetchSubscription) {\\n      this.documentFetchSubscription.unsubscribe();\\n    }\\n\\n    this.documentFetchSubscription = this.http.get(url, { responseType: \'text\' }).subscribe(\\n      result => {\\n        this.html = this.parse.parseFromString(result, \'text/html\');\\n        this.elementRef.nativeElement.innerHTML = result;\\n        this.textContent = this.elementRef.nativeElement.textContent;\\n        this._loadExpansionPanel();\\n        this.contentLoaded.next();\\n      },\\n      error => {\\n        this.elementRef.nativeElement.innerText =\\n          `Failed to load document: ${url}. Error: ${error.message}`;\\n      });\\n  }\\n  private _loadExpansionPanel() {\\n    // Query selects all elements which have the `expansion-panel` attribute\\n    const elements = this.elementRef.nativeElement.querySelectorAll(\'[expansion-panel]\');\\n    // Similar to the above line of code, but queries from the result of the http get itself\\n    const tempElements = this.html.querySelectorAll(\'[expansion-panel]\');\\n    // Loop between all the elements\\n    for (let i = 0; i < elements.length; i++) {\\n      // Creates a new portal host\\n      const portalHost = new DomPortalOutlet(\\n        elements[i], this.componentFactoryResolver, this.appRef, this.injector);\\n      // Creates a new component portal\\n      const expansionPanelPortal = new ComponentPortal(ExpansionPanelComponent);\\n      // Clears the html of the element\\n      elements[i].innerHTML = \'\';\\n      // Attaches the portal to the portal host declared earlier\\n      const expansionPanel = portalHost.attach(expansionPanelPortal);\\n      // Sets the `html` instance to be a `SafeHtml` of the original element\'s HTML\\n      expansionPanel.instance.html = this.dom.sanitize(SecurityContext.HTML, tempElements[i].innerHTML);\\n    }\\n  }\\n  ngOnDestroy() {\\n    if (this.documentFetchSubscription) {\\n      this.documentFetchSubscription.unsubscribe();\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"appRef","type":"ApplicationRef"},{"name":"componentFactoryResolver","type":"ComponentFactoryResolver"},{"name":"elementRef","type":"ElementRef"},{"name":"http","type":"HttpClient"},{"name":"injector","type":"Injector"},{"name":"viewContainerRef","type":"ViewContainerRef"},{"name":"dom","type":"DomSanitizer"}],"line":38,"jsdoctags":[{"name":"appRef","type":"ApplicationRef","tagName":{"text":"param"}},{"name":"componentFactoryResolver","type":"ComponentFactoryResolver","tagName":{"text":"param"}},{"name":"elementRef","type":"ElementRef","tagName":{"text":"param"}},{"name":"http","type":"HttpClient","tagName":{"text":"param"}},{"name":"injector","type":"Injector","tagName":{"text":"param"}},{"name":"viewContainerRef","type":"ViewContainerRef","tagName":{"text":"param"}},{"name":"dom","type":"DomSanitizer","tagName":{"text":"param"}}]},"implements":["OnDestroy"],"accessors":{"documentUrl":{"name":"documentUrl","setSignature":{"name":"documentUrl","type":"void","args":[{"name":"url","type":"string"}],"returnType":"void","line":29,"description":"<p>The URL of the document to display. </p>\\n","jsdoctags":[{"name":"url","type":"string","tagName":{"text":"param"}}]}}}},{"name":"ExpansionPanelComponent","id":"component-ExpansionPanelComponent-29e4df813c80894621f6400df33781bf","file":"projects/rss-reader/src/app/components/expansion-panel/expansion-panel.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"expansion-panel","styleUrls":[],"styles":[],"templateUrl":["./expansion-panel.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"html","type":"SafeHtml","optional":false,"description":"","line":9}],"methodsClass":[],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\n\\n@Component({\\n  selector: \'expansion-panel\',\\n  templateUrl: \'./expansion-panel.component.html\'\\n})\\nexport class ExpansionPanelComponent {\\n  html: SafeHtml;\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","templateData":"<mat-expansion-panel>\\n  <mat-expansion-panel-header>\\n    <mat-panel-title>Click on this panel to reveal/hide content</mat-panel-title>\\n  </mat-expansion-panel-header>\\n  <div [innerHTML]=\\"html\\"></div>\\n</mat-expansion-panel>\\n"},{"name":"FeedComponent","id":"component-FeedComponent-fbe9a407fabad7d8ae218c498f6f5125","file":"projects/rss-reader/src/app/feed/feed.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-feed","styleUrls":[],"styles":[],"templateUrl":["./feed.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"errorObject","defaultValue":"new Subject<HttpErrorResponse>()","type":"","optional":false,"description":"","line":24},{"name":"feedItems$","type":"Observable<Rss2JsonResponseItem[]>","optional":false,"description":"","line":26},{"name":"isRefreshing","defaultValue":"true","type":"","optional":false,"description":"","line":23},{"name":"rss2JsonResponse$","type":"Observable<Rss2JsonResponse>","optional":false,"description":"","line":25},{"name":"rssToJsonServiceBaseUrl","defaultValue":"\'https://api.rss2json.com/v1/api.json\'","type":"string","optional":false,"description":"","line":27},{"name":"shortcutHandlers","defaultValue":"[]","type":"Subscription[]","optional":false,"description":"","line":29}],"methodsClass":[{"name":"getFeed","args":[{"name":"options","type":"Rss2JsonParams"}],"optional":false,"returnType":"any","typeParameters":[],"line":93,"jsdoctags":[{"name":"options","type":"Rss2JsonParams","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":154},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":147},{"name":"openCodeViewerDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":69},{"name":"openRSSInfoDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":65},{"name":"reload","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82},{"name":"reloadFeed","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":104},{"name":"selectRss","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":137}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { HttpClient, HttpErrorResponse, HttpParams } from \'@angular/common/http\';\\nimport { Component, OnDestroy, OnInit } from \'@angular/core\';\\nimport { MatDialog } from \'@angular/material/dialog\';\\nimport { Observable, Subject, Subscription, throwError } from \'rxjs\';\\nimport { catchError, map, tap } from \'rxjs/operators\';\\n\\nimport { ActionItemService } from \'../actionitem.service\';\\nimport { DialogsService } from \'../core/dialogs/dialogs.service\';\\nimport { CodeViewerDialogComponent, FeedDialogComponent, RSSChannelInfoDialogComponent } from \'../dialogs\';\\nimport { HotkeysService } from \'../hotkeys/hotkeys.service\';\\nimport { Rss2JsonResponseItem } from \'../models/rss2json-api/item\';\\nimport { migrateKeys } from \'../models/rss2json-api/migrate-keys\';\\nimport { Rss2JsonParams } from \'../models/rss2json-api/params\';\\nimport { Rss2JsonResponse } from \'../models/rss2json-api/response\';\\nimport { SharedService } from \'../shared.service\';\\n\\n\\n@Component({\\n  selector: \'app-feed\',\\n  templateUrl: \'./feed.component.html\'\\n})\\nexport class FeedComponent implements OnDestroy, OnInit {\\n  isRefreshing = true;\\n  errorObject = new Subject<HttpErrorResponse>();\\n  rss2JsonResponse$: Observable<Rss2JsonResponse>;\\n  feedItems$: Observable<Rss2JsonResponseItem[]>;\\n  rssToJsonServiceBaseUrl = \'https://api.rss2json.com/v1/api.json\';\\n  // See https://stackoverflow.com/a/12444641 for more info\\n  shortcutHandlers: Subscription[] = [];\\n  constructor(\\n    private coreDialogs: DialogsService,\\n    private dialog: MatDialog,\\n    private http: HttpClient,\\n    private shared: SharedService,\\n    private actionItemService: ActionItemService,\\n    private hotkeys: HotkeysService\\n  ) {\\n    const refreshShortcut = hotkeys.addShortcut({ keys: \'r\', description: \'Refresh the feed\', shortcutBlacklistEls: [\'input\', \'textarea\'] })\\n      .subscribe(() => {\\n        this.reloadFeed();\\n      });\\n    this.shortcutHandlers.push(refreshShortcut);\\n    this.actionItemService.addActionItem({\\n      title: \'RSS Options...\', icon: \'tune\', showAsAction: true, onClickListener: () => {\\n        this.selectRss();\\n      }\\n    });\\n    this.actionItemService.addActionItem({\\n      title: \'Refresh feed\',\\n      icon: \'sync\',\\n      showAsAction: true,\\n      onClickListener: () => {\\n        this.reloadFeed();\\n      }\\n    });\\n    this.actionItemService.addActionItem({\\n      title: \'View API response\',\\n      icon: \'code\',\\n      onClickListener: () => {\\n        this.openCodeViewerDialog();\\n      }\\n    });\\n  }\\n\\n  openRSSInfoDialog() {\\n    this.dialog.open(RSSChannelInfoDialogComponent);\\n  }\\n\\n  openCodeViewerDialog() {\\n    this.rss2JsonResponse$.subscribe(res => {\\n      this.dialog.open(CodeViewerDialogComponent, {\\n        data: res\\n      });\\n    }, error => {\\n      this.shared.openSnackBar({\\n        msg: \'Could not view API response because an error occurred. Please try again later\'\\n      });\\n      console.error(\'Could not view API response:\', error);\\n    });\\n  }\\n\\n  reload() {\\n    this.coreDialogs.openConfirmDialog({\\n      msg: \'Are you sure you want to refresh? Changes will not be saved!\',\\n      title: \'Reload?\'\\n    }).afterClosed().subscribe(result => {\\n      if (result === \'ok\') {\\n        window.location.reload();\\n      }\\n    });\\n  }\\n\\n  getFeed(options: Rss2JsonParams) {\\n    let params = new HttpParams();\\n    for (const key in options) {\\n      if (options[key] !== null) {\\n        // HttpParams is immutable, so we have to manually set the new value\\n        params = params.append(key, options[key]);\\n      }\\n    }\\n    return this.http.get<Rss2JsonResponse>(this.rssToJsonServiceBaseUrl, { params });\\n  }\\n\\n  reloadFeed() {\\n    let params: Rss2JsonParams = {\\n      rss_url: \'\'\\n    };\\n    if (localStorage.feedOptions) {\\n      if (\'feedUrl\' in JSON.parse(localStorage.feedOptions)) {\\n        // feedOptions is using the old values - so we migrate the values\\n        const migratedOpts: Partial<Rss2JsonParams> = {};\\n\\n        const opts = JSON.parse(localStorage.feedOptions) as FeedOptions;\\n        for (const key in opts) {\\n          if (opts[key] !== null) {\\n            migratedOpts[migrateKeys[key]] = opts[key];\\n          }\\n        }\\n        console.log(\'Old feed options:\', opts);\\n        console.log(\'Migrated feed options:\', migratedOpts);\\n        localStorage.feedOptions = JSON.stringify(migratedOpts);\\n      }\\n      params = JSON.parse(localStorage.feedOptions) as Rss2JsonParams;\\n    }\\n    this.isRefreshing = true;\\n    this.errorObject.next(null);\\n    this.rss2JsonResponse$ = this.getFeed(params).pipe(tap(() => {\\n      this.isRefreshing = false;\\n    }), catchError(error => {\\n      this.errorObject.next(error);\\n      console.error(\'An error occurred:\', error);\\n      return throwError(error);\\n    }));\\n    this.feedItems$ = this.rss2JsonResponse$.pipe(map(res => res.items));\\n  }\\n\\n  selectRss() {\\n    const dialogRef = this.dialog.open(FeedDialogComponent);\\n    dialogRef.afterClosed().subscribe(result => {\\n      if (result !== \'save\' && typeof result === \'object\') {\\n        localStorage.feedOptions = JSON.stringify(result);\\n        this.reloadFeed();\\n      }\\n    });\\n  }\\n\\n  ngOnInit() {\\n    if (!localStorage.feedOptions) {\\n      this.selectRss();\\n    }\\n    this.reloadFeed();\\n  }\\n\\n  ngOnDestroy() {\\n    if (this.shortcutHandlers.length > 0) {\\n      this.shortcutHandlers.forEach((handler) => {\\n        handler.unsubscribe();\\n      });\\n    }\\n  }\\n\\n}\\n\\nexport interface FeedOptions {\\n  feedUrl?: string;\\n  apiKey?: string;\\n  amount?: number;\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"coreDialogs","type":"DialogsService"},{"name":"dialog","type":"MatDialog"},{"name":"http","type":"HttpClient"},{"name":"shared","type":"SharedService"},{"name":"actionItemService","type":"ActionItemService"},{"name":"hotkeys","type":"HotkeysService"}],"line":29,"jsdoctags":[{"name":"coreDialogs","type":"DialogsService","tagName":{"text":"param"}},{"name":"dialog","type":"MatDialog","tagName":{"text":"param"}},{"name":"http","type":"HttpClient","tagName":{"text":"param"}},{"name":"shared","type":"SharedService","tagName":{"text":"param"}},{"name":"actionItemService","type":"ActionItemService","tagName":{"text":"param"}},{"name":"hotkeys","type":"HotkeysService","tagName":{"text":"param"}}]},"implements":["OnDestroy","OnInit"],"templateData":"<ng-container *ngIf=\\"feedItems$ | async as feedItems; else: errorOrLoading\\">\\n  <div class=\\"rss-reader-cards-container\\">\\n    <app-article-card [article]=\\"feed\\" *ngFor=\\"let feed of feedItems\\" class=\\"rss-reader-card\\"></app-article-card>\\n  </div>\\n</ng-container>\\n<ng-template #errorOrLoading>\\n  <div class=\\"center\\">\\n    <ng-container *ngIf=\\"errorObject | async as error; else: loading\\">\\n      <ng-container *ngIf=\\"error?.error?.message\\">\\n        <p>An error occurred:</p>\\n        <p><code>{{ error?.error?.message }}</code></p>\\n      </ng-container>\\n      <ng-container *ngIf=\\"!error?.error || !error?.error?.message\\">\\n        <p>An unknown error occurred.</p>\\n      </ng-container>\\n      <p>Status code: {{ error?.status }}</p>\\n      <button mat-button [matMenuTriggerFor]=\\"moreMenu\\">Options\\n        <mat-icon>arrow_drop_down</mat-icon>\\n      </button>\\n      <mat-menu [overlapTrigger]=\\"false\\" #moreMenu=\\"matMenu\\">\\n        <button mat-menu-item (click)=\\"reload()\\">\\n          <mat-icon>refresh</mat-icon>Reload page\\n        </button>\\n        <button mat-menu-item (click)=\\"reloadFeed()\\">\\n          <mat-icon>sync</mat-icon>Refresh feed\\n        </button>\\n        <button mat-menu-item (click)=\\"selectRss()\\">\\n          <mat-icon>rss_feed</mat-icon> Reselect RSS\\n        </button>\\n      </mat-menu>\\n    </ng-container>\\n    <ng-template #loading>\\n      <p>Loading&#8320;</p>\\n      <mat-spinner class=\\"start-indicator\\"></mat-spinner>\\n    </ng-template>\\n  </div>\\n</ng-template>\\n"},{"name":"FeedDialogComponent","id":"component-FeedDialogComponent-5652fda7994f6cb955d670612355a121","file":"projects/rss-reader/src/app/dialogs/feed-dialog/feed-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-feed-dialog","styleUrls":[],"styles":[],"templateUrl":["./feed-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"feedCategory","type":"string","optional":false,"description":"","line":27},{"name":"feeds","defaultValue":"feedUrls","type":"FeedCategory[]","optional":false,"description":"<p>The list of feeds\\nAvailable at {@link <code>/assets/feedurls.json</code>}</p>\\n","line":22},{"name":"feedUrlChannel","type":"string","optional":false,"description":"<p>The feed URL channel for the publishing</p>\\n","line":26},{"name":"feedUrlValue","defaultValue":"\'\'","type":"string","optional":false,"description":"","line":29},{"name":"filteredOptions","type":"Observable<FeedCategory[]>","optional":false,"description":"","line":28},{"name":"orderByOptions","defaultValue":"[\\n    {\\n      title: \'None\',\\n      value: \'\'\\n    },\\n    {\\n      title: \'Published date\',\\n      value: \'pubDate\'\\n    },\\n    {\\n      title: \'Author\',\\n      value: \'author\'\\n    },\\n    {\\n      title: \'Title\',\\n      value: \'title\'\\n    }\\n  ]","type":"[]","optional":false,"description":"","line":31},{"name":"orderDirOptions","defaultValue":"[\\n    {\\n      title: \'Default (Descending order)\',\\n      value: \'\'\\n    },\\n    {\\n      title: \'Ascending order\',\\n      value: \'asc\'\\n    },\\n    {\\n      title: \'Descending order\',\\n      value: \'desc\'\\n    }\\n  ]","type":"[]","optional":false,"description":"","line":49},{"name":"rssFeedForm","type":"FormGroup","optional":false,"description":"","line":30}],"methodsClass":[{"name":"filter","args":[{"name":"name","type":"string"}],"optional":false,"returnType":"FeedCategory[]","typeParameters":[],"line":88,"jsdoctags":[{"name":"name","type":"string","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":83},{"name":"openSubmitRssDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":111}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\nimport { FeedCategory } from \'../../models/feed-category\';\\nimport { FormGroup, FormBuilder, Validators } from \'@angular/forms\';\\nimport { MatDialogRef, MatDialog } from \'@angular/material/dialog\';\\nimport { Observable } from \'rxjs\';\\nimport { map, startWith } from \'rxjs/operators\';\\nimport { Feed } from \'../../models/feed\';\\nimport { SubmitRssDialogComponent } from \'../submit-rss-dialog/submit-rss-dialog.component\';\\nimport { FeedChannel } from \'../../models/feed-channel\';\\nimport { feedUrls } from \'../../../assets/feedurls.json\';\\n\\n@Component({\\n  selector: \'app-feed-dialog\',\\n  templateUrl: \'./feed-dialog.component.html\'\\n})\\nexport class FeedDialogComponent implements OnInit {\\n  /**\\n   * The list of feeds\\n   * Available at {@link `/assets/feedurls.json`}\\n   */\\n  feeds: FeedCategory[] = feedUrls;\\n  /**\\n   * The feed URL channel for the publishing\\n   */\\n  feedUrlChannel: string;\\n  feedCategory: string;\\n  filteredOptions: Observable<FeedCategory[]>;\\n  feedUrlValue = \'\';\\n  rssFeedForm: FormGroup;\\n  orderByOptions = [\\n    {\\n      title: \'None\',\\n      value: \'\'\\n    },\\n    {\\n      title: \'Published date\',\\n      value: \'pubDate\'\\n    },\\n    {\\n      title: \'Author\',\\n      value: \'author\'\\n    },\\n    {\\n      title: \'Title\',\\n      value: \'title\'\\n    }\\n  ];\\n  orderDirOptions = [\\n    {\\n      title: \'Default (Descending order)\',\\n      value: \'\'\\n    },\\n    {\\n      title: \'Ascending order\',\\n      value: \'asc\'\\n    },\\n    {\\n      title: \'Descending order\',\\n      value: \'desc\'\\n    }\\n  ];\\n\\n  constructor(\\n    private dialogRef: MatDialogRef<FeedDialogComponent>,\\n    private fb: FormBuilder,\\n    private dialog: MatDialog\\n  ) {\\n    dialogRef.disableClose = true;\\n    this.rssFeedForm = fb.group({\\n      rss_url: [\'\', Validators.required],\\n      api_key: [\'\', [Validators.required, Validators.maxLength(40), Validators.minLength(40)]],\\n      order_by: \'\',\\n      order_dir: \'\',\\n      count: 10 // The default value\\n    });\\n    this.filteredOptions = this.rssFeedForm.get(\'rss_url\').valueChanges\\n      .pipe(\\n        startWith(\'\'),\\n        map(value => this.filter(value))\\n      );\\n  }\\n  ngOnInit() {\\n    if (window.localStorage.getItem(\'feedOptions\')) {\\n      this.rssFeedForm.patchValue(JSON.parse(window.localStorage.getItem(\'feedOptions\')));\\n    }\\n  }\\n  filter(name: string): FeedCategory[] {\\n    const filteredFeedCategories: FeedCategory[] = [];\\n    for (const feedCategory of this.feeds) {\\n      const tempFeedCategory: FeedCategory = {\\n        categoryId: null,\\n        categoryName: null,\\n        channels: []\\n      };\\n      const tempFeedChannels: FeedChannel[] = [];\\n      tempFeedCategory.categoryName = feedCategory.categoryName;\\n      tempFeedCategory.categoryId = feedCategory.categoryId;\\n      for (const feedChannel of feedCategory.channels) {\\n        if (feedChannel.feedName.includes(name) || feedChannel.feedUrl.includes(name)) {\\n          tempFeedChannels.push(feedChannel);\\n        }\\n      }\\n      if (tempFeedChannels.length >= 1) {\\n        tempFeedCategory.channels = tempFeedChannels;\\n        filteredFeedCategories.push(tempFeedCategory);\\n      }\\n    }\\n    return filteredFeedCategories;\\n  }\\n  openSubmitRssDialog() {\\n    this.dialog.open(SubmitRssDialogComponent, {\\n      data: { feedUrl: this.rssFeedForm.get(\'feedUrl\').value }\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"dialogRef","type":"MatDialogRef<FeedDialogComponent>"},{"name":"fb","type":"FormBuilder"},{"name":"dialog","type":"MatDialog"}],"line":62,"jsdoctags":[{"name":"dialogRef","type":"MatDialogRef<FeedDialogComponent>","tagName":{"text":"param"}},{"name":"fb","type":"FormBuilder","tagName":{"text":"param"}},{"name":"dialog","type":"MatDialog","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<h2 matDialogTitle>RSS Config</h2>\\n<mat-dialog-content fxLayout=\\"column\\">\\n  <form [formGroup]=\\"rssFeedForm\\" fxLayout=\\"column\\">\\n    <p>Select from one of the options or enter a RSS feed URL:</p>\\n    <mat-form-field color=\\"accent\\">\\n      <mat-label>RSS feed URL</mat-label>\\n      <input matInput [matAutocomplete]=\\"rssFeedAuto\\" formControlName=\\"rss_url\\">\\n      <mat-autocomplete #rssFeedAuto=\\"matAutocomplete\\">\\n        <mat-optgroup [label]=\\"feed.categoryName\\" *ngFor=\\"let feed of filteredOptions | async\\">\\n          <mat-option *ngFor=\\"let channel of feed.channels\\" [value]=\\"channel.feedUrl\\" class=\\"autocomplete-option\\">\\n            <span>{{channel?.feedName}}</span> |\\n            <span>{{channel?.feedUrl}}</span>\\n          </mat-option>\\n        </mat-optgroup>\\n      </mat-autocomplete>\\n      <mat-error>This is required.</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label>API key</mat-label>\\n      <input matInput formControlName=\\"api_key\\">\\n      <mat-error *ngIf=\\"rssFeedForm.get(\'api_key\')?.hasError(\'required\')\\">This is required.</mat-error>\\n      <mat-error *ngIf=\\"rssFeedForm.get(\'api_key\')?.hasError(\'minlength\') || rssFeedForm.get(\'api_key\')?.hasError(\'maxlength\')\\">Please enter a valid API key.</mat-error>\\n      <a mat-icon-button matSuffix routerLink=\\"/doc/guides/generate-api-key\\" matTooltip=\\"How to generate a key\\" target=\\"_blank\\">\\n        <mat-icon>help</mat-icon>\\n      </a>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label>Order results by&#8320;</mat-label>\\n      <mat-select formControlName=\\"order_by\\">\\n        <mat-option *ngFor=\\"let option of orderByOptions\\" [value]=\\"option.value\\">{{ option.title }}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label>Order results in</mat-label>\\n      <mat-select formControlName=\\"order_dir\\">\\n        <mat-option *ngFor=\\"let option of orderDirOptions\\" [value]=\\"option.value\\">{{ option.title }}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label>Max. number of posts</mat-label>\\n      <input matInput formControlName=\\"count\\" type=\\"number\\" min=\\"1\\" max=\\"100\\">\\n      <mat-hint>(Default: 10)</mat-hint>\\n    </mat-form-field>\\n  </form>\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button color=\\"accent\\" (click)=\\"openSubmitRssDialog()\\">Submit RSS URL</button>\\n  <span fxFlex></span>\\n  <button mat-button color=\\"primary\\" matDialogClose=\\"cancel\\">Cancel</button>\\n  <button mat-button color=\\"primary\\" [matDialogClose]=\\"rssFeedForm.value\\" [disabled]=\\"rssFeedForm.invalid\\">Save</button>\\n</mat-dialog-actions>\\n"},{"name":"GuidesListComponent","id":"component-GuidesListComponent-080470092917b4764140d081c083c157","file":"projects/rss-reader/src/app/pages/guide-list/guide-list.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"guide-list","styleUrls":[],"styles":[],"templateUrl":["guide-list.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"guideItems","type":"GuideItem[]","optional":false,"description":"","line":10}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { GuideItem, GuideItemsService } from \'../../guide-items\';\\n\\n@Component({\\n  selector: \'guide-list\',\\n  templateUrl: \'guide-list.component.html\'\\n})\\nexport class GuidesListComponent implements OnInit {\\n  constructor(private itemsService: GuideItemsService) {}\\n  guideItems: GuideItem[];\\n  // devItems: GuideItem[];\\n  ngOnInit() {\\n    this.guideItems = this.itemsService.getGuideItems();\\n    // this.devItems = this.itemsService.getDevItems();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"itemsService","type":"GuideItemsService"}],"line":8,"jsdoctags":[{"name":"itemsService","type":"GuideItemsService","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div class=\\"app-content\\">\\n  <mat-nav-list>\\n    <h3 matSubheader>Guides</h3>\\n    <a mat-list-item *ngFor=\\"let guideItem of guideItems\\" [routerLink]=\\"[\'/\'+guideItem.url]\\" >\\n      <h3 matLine>{{guideItem.name}}</h3>\\n    </a>\\n    \x3c!-- <h3 matSubheader>Developer Guides</h3>\\n    <a mat-list-item *ngFor=\\"let guideItem of devItems\\" [routerLink]=\\"[\'/\'+guideItem.url]\\" >\\n      <h3 matLine>{{guideItem.name}}</h3>\\n    </a> --\x3e\\n  </mat-nav-list>\\n</div>\\n"},{"name":"GuideViewerComponent","id":"component-GuideViewerComponent-6f35c61dc483d15345b83a69eafee863","file":"projects/rss-reader/src/app/pages/guide-viewer/guide-viewer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"guide-viewer","styleUrls":[],"styles":[],"templateUrl":["guide-viewer.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"docUrl","type":"string","optional":false,"description":"","line":11}],"methodsClass":[],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\nimport { GuideItemsService } from \'./../../guide-items\';\\n\\n@Component({\\n  selector: \'guide-viewer\',\\n  templateUrl: \'guide-viewer.component.html\'\\n})\\nexport class GuideViewerComponent {\\n\\n  docUrl: string;\\n  constructor(private route: ActivatedRoute,\\n              private router: Router, private guideItems: GuideItemsService) {\\n    route.params.subscribe(result => {\\n      if (result.docTypeId === \'guides\') {\\n        this.docUrl = guideItems.getGuideItemById(result.docId).document;\\n      /* } else if (result.docTypeId === \'dev\') {\\n        this.docUrl = guideItems.getDevItemById(result.docId).document; */\\n      } else {\\n        console.warn(\'Invalid URL. Heading back to docs list page..\');\\n        this.router.navigate([\'/docs\']);\\n      }\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"route","type":"ActivatedRoute"},{"name":"router","type":"Router"},{"name":"guideItems","type":"GuideItemsService"}],"line":11,"jsdoctags":[{"name":"route","type":"ActivatedRoute","tagName":{"text":"param"}},{"name":"router","type":"Router","tagName":{"text":"param"}},{"name":"guideItems","type":"GuideItemsService","tagName":{"text":"param"}}]},"templateData":"<div class=\\"app-content\\">\\n  <doc-viewer [documentUrl]=\\"docUrl\\"></doc-viewer>\\n</div>"},{"name":"HeadlineOptionsDialogComponent","id":"component-HeadlineOptionsDialogComponent-370e0c44e1ec32472acae153b580631a","file":"projects/rss-reader/src/app/dialogs/headline-options-dialog/headline-options-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-headline-options-dialog","styleUrls":[],"styles":[],"templateUrl":["./headline-options-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"categories","defaultValue":"[\'business\', \'entertainment\', \'general\', \'health\', \'science\', \'sports\', \'technology\']","type":"[]","optional":false,"description":"","line":36},{"name":"filteredOptions","type":"Observable<RestCountriesAPICountry[]>","optional":false,"description":"","line":34},{"name":"headlineOptForm","type":"FormGroup","optional":false,"description":"","line":35},{"name":"headlineOpts","type":"HeadlineOptions","optional":false,"description":"","line":40,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[114]}],"methodsClass":[{"name":"filter","args":[{"name":"name","type":"string"}],"optional":false,"returnType":"Observable<RestCountriesAPICountry[]>","typeParameters":[],"line":64,"jsdoctags":[{"name":"name","type":"string","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":52}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component, OnInit, Inject } from \'@angular/core\';\\nimport { FormBuilder, FormGroup, Validators } from \'@angular/forms\';\\nimport { Observable } from \'rxjs\';\\nimport { RestCountriesAPICountry } from \'../../models/rest-countries-api\';\\nimport { switchMap, debounceTime } from \'rxjs/operators\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\n\\nexport interface HeadlineOptions {\\n  /**\\n   * The API key\\n   */\\n  apiKey?: string;\\n  /**\\n   * A country code\\n   */\\n  country?: string;\\n  /**\\n   * The category to fetch\\n   */\\n  category?: string;\\n  /**\\n   * The number of articles to return\\n   */\\n  pageSize?: number;\\n}\\n\\n@Component({\\n  selector: \'app-headline-options-dialog\',\\n  templateUrl: \'./headline-options-dialog.component.html\'\\n})\\nexport class HeadlineOptionsDialogComponent implements OnInit {\\n\\n  filteredOptions: Observable<RestCountriesAPICountry[]>;\\n  headlineOptForm: FormGroup;\\n  categories = [\'business\', \'entertainment\', \'general\', \'health\', \'science\', \'sports\', \'technology\'];\\n  constructor(\\n    private fb: FormBuilder,\\n    private http: HttpClient,\\n    @Inject(MAT_DIALOG_DATA) public headlineOpts: HeadlineOptions\\n  ) {\\n    this.headlineOptForm = fb.group({\\n      apiKey: [\'\', Validators.required],\\n      q: \'\',\\n      country: \'\',\\n      // country: [\'\', [Validators.required, Validators.minLength(2), Validators.maxLength(2)]],\\n      category: \'\',\\n      pageSize: 20\\n    });\\n  }\\n\\n  ngOnInit() {\\n    if (this.headlineOpts) {\\n      this.headlineOptForm.patchValue(this.headlineOpts);\\n    }\\n    setTimeout(() => {\\n      this.filteredOptions = this.headlineOptForm.get(\'country\').valueChanges\\n        .pipe(\\n          // debounceTime(150),\\n          switchMap(value => this.filter(value))\\n        );\\n    });\\n  }\\n  filter(name: string): Observable<RestCountriesAPICountry[]> {\\n    return this.http.get<RestCountriesAPICountry[]>(`https://restcountries.eu/rest/v2/name/${encodeURIComponent(name)}`);\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"fb","type":"FormBuilder"},{"name":"http","type":"HttpClient"},{"name":"headlineOpts","type":"HeadlineOptions"}],"line":36,"jsdoctags":[{"name":"fb","type":"FormBuilder","tagName":{"text":"param"}},{"name":"http","type":"HttpClient","tagName":{"text":"param"}},{"name":"headlineOpts","type":"HeadlineOptions","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<h2 matDialogTitle>Headlines options</h2>\\n<mat-dialog-content>\\n  <form [formGroup]=\\"headlineOptForm\\" fxLayout=\\"column\\">\\n    <mat-form-field>\\n      <mat-label>API Key</mat-label>\\n      <input matInput formControlName=\\"apiKey\\">\\n      <a mat-icon-button href=\\"https://newsapi.org/register\\" target=\\"_blank\\" matTooltip=\\"Get API Key\\" matSuffix><mat-icon>open_in_new</mat-icon></a>\\n      <mat-error>This is required.</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label>Query</mat-label>\\n      <input matInput formControlName=\\"q\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label>Country</mat-label>\\n      <input matInput formControlName=\\"country\\" [matAutocomplete]=\\"countryAutocomplete\\">\\n      <mat-autocomplete #countryAutocomplete=\\"matAutocomplete\\">\\n        <mat-option *ngFor=\\"let country of filteredOptions | async\\" [value]=\\"country?.alpha2Code\\" class=\\"autocomplete-option\\">\\n          <img class=\\"autocomplete-option-img\\" aria-hidden [src]=\\"country?.flag\\" height=\\"25\\">\\n          <span>{{country?.name}}</span>\\n        </mat-option>\\n      </mat-autocomplete>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label>Category</mat-label>\\n      <mat-select formControlName=\\"category\\">\\n        <mat-option *ngFor=\\"let category of categories\\" [value]=\\"category\\">{{ category | titlecase }}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label>Max. no. of articles</mat-label>\\n      <input matInput formControlName=\\"pageSize\\" type=\\"number\\" min=\\"20\\" max=\\"100\\">\\n    </mat-form-field>\\n  </form>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\"end\\">\\n  <button mat-button color=\\"primary\\" matDialogClose=\\"cancel\\">Cancel</button>\\n  <button mat-button color=\\"primary\\" [matDialogClose]=\\"headlineOptForm.value\\" [disabled]=\\"headlineOptForm.invalid\\">Save</button>\\n</mat-dialog-actions>\\n"},{"name":"HeadlinesComponent","id":"component-HeadlinesComponent-46113a40acf6cb881b640f8b74e452d7","file":"projects/rss-reader/src/app/headlines/headlines.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-headlines","styleUrls":[],"styles":[],"templateUrl":["./headlines.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"errorObject","defaultValue":"new Subject<HttpErrorResponse>()","type":"","optional":false,"description":"","line":19},{"name":"headlineAPIEndpoint","defaultValue":"\'https://newsapi.org/v2/top-headlines\'","type":"string","optional":false,"description":"","line":18,"modifierKind":[132]},{"name":"headlines$","type":"Observable<NewsAPITopHeadlines>","optional":false,"description":"","line":20},{"name":"headlinesOpts","type":"NewsAPITopHeadlinesOpts","optional":false,"description":"","line":21},{"name":"shortcutHandlers","defaultValue":"[]","type":"Subscription[]","optional":false,"description":"","line":22}],"methodsClass":[{"name":"getHeadlines","args":[{"name":"options","type":"NewsAPITopHeadlinesOpts"}],"optional":false,"returnType":"Observable<NewsAPITopHeadlines>","typeParameters":[],"line":98,"jsdoctags":[{"name":"options","type":"NewsAPITopHeadlinesOpts","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":132},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":118},{"name":"openCodeViewerDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":85},{"name":"openHeadlineOptsDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":64},{"name":"reloadHeadlines","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":109}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { HttpClient, HttpErrorResponse, HttpParams } from \'@angular/common/http\';\\nimport { Component, OnDestroy, OnInit } from \'@angular/core\';\\nimport { MatDialog, MatDialogConfig } from \'@angular/material/dialog\';\\nimport { Observable, Subject, throwError, Subscription } from \'rxjs\';\\nimport { ActionItemService } from \'../actionitem.service\';\\nimport { HeadlineOptions, HeadlineOptionsDialogComponent, CodeViewerDialogComponent } from \'../dialogs\';\\nimport { NewsAPITopHeadlines, NewsAPITopHeadlinesOpts } from \'../models/news-api/top-headlines\';\\nimport { SharedService } from \'../shared.service\';\\nimport { catchError } from \'rxjs/operators\';\\nimport { HotkeysService } from \'../hotkeys/hotkeys.service\';\\n\\n@Component({\\n  selector: \'app-headlines\',\\n  templateUrl: \'./headlines.component.html\',\\n})\\nexport class HeadlinesComponent implements OnDestroy, OnInit {\\n\\n  readonly headlineAPIEndpoint = \'https://newsapi.org/v2/top-headlines\';\\n  errorObject = new Subject<HttpErrorResponse>();\\n  headlines$: Observable<NewsAPITopHeadlines>;\\n  headlinesOpts: NewsAPITopHeadlinesOpts;\\n  shortcutHandlers: Subscription[] = [];\\n  constructor(\\n    hotkeys: HotkeysService,\\n    private shared: SharedService,\\n    private dialog: MatDialog,\\n    actionItemService: ActionItemService,\\n    private http: HttpClient\\n  ) {\\n    shared.title = \'Headlines\';\\n    const refreshShortcut = hotkeys.addShortcut({ keys: \'r\',\\n    description: \'Refresh headlines\',\\n    shortcutBlacklistEls: [\'input\', \'textarea\'] })\\n      .subscribe(() => {\\n        this.reloadHeadlines();\\n      });\\n    this.shortcutHandlers.push(refreshShortcut);\\n    actionItemService.addActionItem({\\n      title: \'Options\',\\n      icon: \'tune\',\\n      showAsAction: true,\\n      onClickListener: () => {\\n        this.openHeadlineOptsDialog();\\n      }\\n    });\\n    actionItemService.addActionItem({\\n      title: \'Refresh headlines\',\\n      icon: \'sync\',\\n      showAsAction: true,\\n      onClickListener: () => {\\n        this.reloadHeadlines();\\n      }\\n    });\\n    actionItemService.addActionItem({\\n      title: \'View API response\',\\n      icon: \'code\',\\n      showAsAction: false,\\n      onClickListener: () => {\\n        this.openCodeViewerDialog();\\n      }\\n    });\\n  }\\n\\n  openHeadlineOptsDialog() {\\n    const dialogConfig = new MatDialogConfig<HeadlineOptions>();\\n    if (localStorage.getItem(\'headlineOpts\')) {\\n      const headlineOpts = JSON.parse(localStorage.getItem(\'headlineOpts\'));\\n\\n      if (\'topic\' in JSON.parse(localStorage.getItem(\'headlineOpts\'))) {\\n        delete headlineOpts.topic;\\n        localStorage.setItem(\'headlineOpts\', JSON.stringify(headlineOpts));\\n      }\\n      dialogConfig.data = JSON.parse(localStorage.getItem(\'headlineOpts\')) as HeadlineOptions;\\n    }\\n    const dialogRef = this.dialog.open(HeadlineOptionsDialogComponent, dialogConfig);\\n    dialogRef.afterClosed().subscribe(result => {\\n      if (result !== \'cancel\' && typeof result === \'object\') {\\n        this.headlinesOpts = result as NewsAPITopHeadlinesOpts;\\n        localStorage.setItem(\'headlineOpts\', JSON.stringify(result));\\n        this.reloadHeadlines();\\n      }\\n    });\\n  }\\n\\n  openCodeViewerDialog() {\\n    this.headlines$.subscribe(headlines => {\\n      this.dialog.open(CodeViewerDialogComponent, {\\n        data: headlines\\n      });\\n    }, error => {\\n      this.shared.openSnackBar({\\n        msg: \'Could not view API response because an error occurred. Please try again later\'\\n      });\\n      console.error(\'Could not view API response:\', error);\\n    });\\n  }\\n\\n  getHeadlines(options: NewsAPITopHeadlinesOpts): Observable<NewsAPITopHeadlines> {\\n    let params = new HttpParams();\\n    for (const key in options) {\\n      if (options[key] !== null) {\\n        // HttpParams is immutable, so we have to manually set the new value\\n        params = params.append(key, options[key]);\\n      }\\n    }\\n    return this.http.get<NewsAPITopHeadlines>(this.headlineAPIEndpoint, { params });\\n  }\\n\\n  reloadHeadlines() {\\n    this.errorObject.next(null);\\n    this.headlines$ = this.getHeadlines(this.headlinesOpts).pipe(catchError(error => {\\n      this.errorObject.next(error);\\n      console.error(\'An error occurred:\', error);\\n      return throwError(error);\\n    }));\\n  }\\n\\n  ngOnInit() {\\n    if (localStorage.getItem(\'headlineOpts\')) {\\n      try {\\n        this.headlinesOpts = JSON.parse(localStorage.getItem(\'headlineOpts\')) as NewsAPITopHeadlinesOpts;\\n        this.reloadHeadlines();\\n      } catch (error) {\\n        console.warn(`Oops! An error occured while getting settings for headlines! The error: ${error}`);\\n        this.openHeadlineOptsDialog();\\n      }\\n    } else {\\n      this.openHeadlineOptsDialog();\\n    }\\n  }\\n\\n  ngOnDestroy() {\\n    this.shortcutHandlers.forEach(handler => handler.unsubscribe());\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"hotkeys","type":"HotkeysService"},{"name":"shared","type":"SharedService"},{"name":"dialog","type":"MatDialog"},{"name":"actionItemService","type":"ActionItemService"},{"name":"http","type":"HttpClient"}],"line":22,"jsdoctags":[{"name":"hotkeys","type":"HotkeysService","tagName":{"text":"param"}},{"name":"shared","type":"SharedService","tagName":{"text":"param"}},{"name":"dialog","type":"MatDialog","tagName":{"text":"param"}},{"name":"actionItemService","type":"ActionItemService","tagName":{"text":"param"}},{"name":"http","type":"HttpClient","tagName":{"text":"param"}}]},"implements":["OnDestroy","OnInit"],"templateData":"<div class=\\"rss-reader-cards-container\\" *ngIf=\\"headlines$ | async as headlines; else: errorOrLoading\\">\\n  <app-article-card *ngFor=\\"let article of headlines?.articles\\" [article]=\\"article\\" class=\\"rss-reader-card\\"></app-article-card>\\n</div>\\n<ng-template #errorOrLoading>\\n  <div class=\\"center\\">\\n    <ng-container *ngIf=\\"errorObject | async as error; else: loading\\">\\n      <ng-container *ngIf=\\"error?.error?.message\\">\\n        <p>An error occurred:</p>\\n        <p><code>{{ error?.error?.message }}</code></p>\\n      </ng-container>\\n      <ng-container *ngIf=\\"!error?.error || !error?.error?.message\\">\\n        <p>An unknown error occurred.</p>\\n      </ng-container>\\n      <p>Status code: {{ error?.status }}</p>\\n    </ng-container>\\n    <ng-template #loading>\\n      <p>Loading&#8320;</p>\\n      <mat-spinner class=\\"start-indicator\\"></mat-spinner>\\n    </ng-template>\\n  </div>\\n</ng-template>\\n\\n"},{"name":"HotkeyHelpDialogComponent","id":"component-HotkeyHelpDialogComponent-039667c2ff83daa374810913ad0cd159","file":"projects/rss-reader/src/app/hotkeys/hotkey-help-dialog/hotkey-help-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-hotkey-help-dialog","styleUrls":[],"styles":[],"templateUrl":["./hotkey-help-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"data","type":"Map<string | string>","optional":false,"description":"","line":11,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[114]},{"name":"hotkeys","defaultValue":"Array.from(this.data)","type":"","optional":false,"description":"","line":9}],"methodsClass":[{"name":"capitalise","args":[{"name":"str","type":"string"}],"optional":false,"returnType":"string","typeParameters":[],"line":69,"modifierKind":[112],"jsdoctags":[{"name":"str","type":"string","tagName":{"text":"param"}}]},{"name":"getDisplayedShortcut","args":[{"name":"keys","type":"string"}],"optional":false,"returnType":"string[]","typeParameters":[],"line":13,"jsdoctags":[{"name":"keys","type":"string","tagName":{"text":"param"}}]}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component, Inject } from \'@angular/core\';\\nimport { MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\n\\n@Component({\\n  selector: \'app-hotkey-help-dialog\',\\n  templateUrl: \'./hotkey-help-dialog.component.html\'\\n})\\nexport class HotkeyHelpDialogComponent {\\n  hotkeys = Array.from(this.data);\\n\\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Map<string, string>) {}\\n\\n  getDisplayedShortcut(keys: string): string[] {\\n    const result = [];\\n    const keysArray = keys.split(\'.\');\\n    // tslint:disable-next-line: forin\\n    for (const key of keysArray) {\\n      if (keysArray.includes(key)) {\\n        let tempResult = key;\\n        switch (key) {\\n          case \'enter\':\\n          case \'esc\':\\n          case \'shift\':\\n          case \'control\':\\n          case \'tab\':\\n          case \'backspace\':\\n            tempResult = this.capitalise(key);\\n            break;\\n          case \'alt\':\\n            // The Alt key is an Option key on macOS devices\\n            tempResult = window.navigator.platform === \'MacIntel\' ? \'Option\' : \'Alt\';\\n            break;\\n          case \'meta\':\\n            tempResult = \'Command\';\\n            break;\\n          case \'arrowup\':\\n          case \'arrowdown\':\\n          case \'arrowleft\':\\n          case \'arrowright\':\\n            switch (key) {\\n              case \'arrowup\':\\n                tempResult = \'↑\';\\n                break;\\n              case \'arrowdown\':\\n                tempResult = \'↓\';\\n                break;\\n              case \'arrowleft\':\\n                tempResult = \'←\';\\n                break;\\n              case \'arrowright\':\\n                tempResult = \'→\';\\n                break;\\n            }\\n            break;\\n          default:\\n            if (key.startsWith(\'f\') && (key.length === 2 || key.length === 3)) {\\n              // See https://joshtronic.com/2016/02/14/how-to-capitalize-the-first-letter-in-a-string-in-javascript/ for more info\\n              tempResult = this.capitalise(key);\\n            } else {\\n              tempResult = key.toLocaleLowerCase();\\n            }\\n        }\\n        result.push(tempResult);\\n      }\\n    }\\n    return result;\\n  }\\n\\n  private capitalise(str: string): string {\\n    // See https://joshtronic.com/2016/02/14/how-to-capitalize-the-first-letter-in-a-string-in-javascript/\\n    return str.charAt(0).toLocaleUpperCase() + str.substring(1);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"data","type":"Map<string | string>"}],"line":9,"jsdoctags":[{"name":"data","type":"Map<string | string>","tagName":{"text":"param"}}]},"templateData":"<h2 matDialogTitle>Keyboard shortcuts</h2>\\n<table class=\\"app-table\\">\\n  <thead>\\n    <tr>\\n      <th>Description</th>\\n      <th>Shortcut</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\"let keys of hotkeys\\">\\n      <td>{{ keys[1] }}</td>\\n      <td class=\\"text-right\\">\\n        <ng-container *ngFor=\\"let shortcut of getDisplayedShortcut(keys[0]); last as last\\">\\n          <kbd>{{ shortcut }}</kbd>\\n          <span *ngIf=\\"!last\\">&nbsp;+&nbsp;</span>\\n        </ng-container>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n<mat-dialog-actions align=\\"end\\">\\n  <button mat-button color=\\"primary\\" matDialogClose>Dismiss</button>\\n</mat-dialog-actions>\\n"},{"name":"MessageDialogComponent","id":"component-MessageDialogComponent-970a94e6cd3f81cea5cc4a2c008bc883","file":"projects/rss-reader/src/app/core/dialogs/message-dialog/message-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-message-dialog","styleUrls":[],"styles":[],"templateUrl":["./message-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"defaultNegativeBtnText","defaultValue":"\'Cancel\'","type":"string","optional":false,"description":"<p>The default text to be used for the negative button. </p>\\n","line":13,"modifierKind":[132]},{"name":"defaultPositiveBtnText","defaultValue":"\'OK\'","type":"string","optional":false,"description":"<p>The default text to be used for the positive button. </p>\\n","line":15,"modifierKind":[132]},{"name":"opts","type":"DialogOpts","optional":false,"description":"","line":17,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[114]},{"name":"defaultBtnColor","defaultValue":"\'primary\'","type":"ThemePalette","optional":false,"description":"<p>The default color to be used for the dialog&#39;s buttons. </p>\\n","line":9,"modifierKind":[132],"inheritance":{"file":"Dialog"}},{"name":"opts","type":"DialogOpts","optional":false,"description":"","line":7,"modifierKind":[114],"inheritance":{"file":"Dialog"}}],"methodsClass":[],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component, Inject } from \'@angular/core\';\\nimport { MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\n\\nimport { Dialog } from \'../dialog\';\\nimport { DialogOpts } from \'../models\';\\n\\n@Component({\\n  selector: \'app-message-dialog\',\\n  templateUrl: \'./message-dialog.component.html\'\\n})\\nexport class MessageDialogComponent extends Dialog {\\n  /** The default text to be used for the negative button. */\\n  readonly defaultNegativeBtnText = \'Cancel\';\\n  /** The default text to be used for the positive button. */\\n  readonly defaultPositiveBtnText = \'OK\';\\n\\n  constructor(@Inject(MAT_DIALOG_DATA) public opts: DialogOpts) {\\n    super(opts);\\n  }\\n\\n  get hideNegativeBtn(): boolean {\\n    // As the default text will be used if no text was specified,\\n    // the button will always be shown unless explicitly hidden.\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'negative\');\\n    }\\n  }\\n\\n  get hideNeutralBtn(): boolean {\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'neutral\');\\n    }\\n\\n    return !(\'neutralBtnText\' in this.opts);\\n  }\\n\\n  get hidePositiveBtn(): boolean {\\n    // As the default text will be used if no text was specified,\\n    // the button will always be shown unless explicitly hidden.\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'positive\');\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"opts","type":"DialogOpts"}],"line":15,"jsdoctags":[{"name":"opts","type":"DialogOpts","tagName":{"text":"param"}}]},"extends":"Dialog","accessors":{"hideNegativeBtn":{"name":"hideNegativeBtn","getSignature":{"name":"hideNegativeBtn","type":"boolean","returnType":"boolean","line":21}},"hideNeutralBtn":{"name":"hideNeutralBtn","getSignature":{"name":"hideNeutralBtn","type":"boolean","returnType":"boolean","line":30}},"hidePositiveBtn":{"name":"hidePositiveBtn","getSignature":{"name":"hidePositiveBtn","type":"boolean","returnType":"boolean","line":39}}},"templateData":"<h2 matDialogTitle *ngIf=\\"opts?.title\\">{{ opts.title }}</h2>\\n<mat-dialog-content fxLayout=\\"column\\" class=\\"mat-typography\\">\\n  <p class=\\"mat-body\\" *ngIf=\\"!opts?.isHtml\\">{{ opts.msg }}</p>\\n  <span *ngIf=\\"opts?.isHtml\\" [innerHTML]=\\"opts.msg\\"></span>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\"end\\" *ngIf=\\"hasActionBtns\\">\\n  <button mat-button *ngIf=\\"!hideNegativeBtn\\" [color]=\\"negativeBtnColor\\"\\n    matDialogClose=\\"cancel\\"\\n    [attr.cdkFocusInitial]=\\"opts.initialActionBtnFocus === \'negative\' || null\\">{{ opts.negativeBtnText }}</button>\\n  <button mat-button *ngIf=\\"!hideNeutralBtn\\" [color]=\\"neutralBtnColor\\"\\n    matDialogClose=\\"neutral\\"\\n    [attr.cdkFocusInitial]=\\"opts.initialActionBtnFocus === \'neutral\' || null\\">{{ opts.neutralBtnText }}</button>\\n  <button mat-button *ngIf=\\"!hidePositiveBtn\\" [color]=\\"positiveBtnColor\\"\\n    matDialogClose=\\"ok\\"\\n    [attr.cdkFocusInitial]=\\"opts.initialActionBtnFocus === \'positive\' || null\\">{{ opts.positiveBtnText }}</button>\\n</mat-dialog-actions>\\n"},{"name":"OnboardingOverlayComponent","id":"component-OnboardingOverlayComponent-4a354831fa2a9952546956d66d4e0e47","file":"projects/rss-reader/src/app/overlays/onboarding-overlay/onboarding-overlay.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-onboarding-overlay","styleUrls":["./onboarding-overlay.component.scss"],"styles":[],"templateUrl":["./onboarding-overlay.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"content","defaultValue":"[\\n    {\\n      content: \'\',\\n      imgSrc: \'\'\\n    },\\n    {\\n      // content: \'Multiple news sources. One reader.\',\\n      content: \'Easier reading of articles in a card format.\',\\n      // imgSrc: \'assets/img/News Article.png\'\\n      imgSrc: \'assets/onboarding/articles.svg\'\\n    },\\n    {\\n      content: \'Customizable. Tons of options.\',\\n      imgSrc: \'assets/img/Customizing UI.png\'\\n    },\\n    {\\n      content: \'Many news sources to explore!\',\\n      imgSrc: \'assets/img/Explore News Sources.png\'\\n    }]","type":"[]","optional":false,"description":"","line":24},{"name":"index","defaultValue":"0","type":"\\"0\\" | \\"1\\" | \\"2\\" | \\"3\\"","optional":false,"description":"","line":23},{"name":"shortcutHandlers","defaultValue":"[]","type":"Subscription[]","optional":false,"description":"","line":44}],"methodsClass":[{"name":"closeOverlay","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":83},{"name":"gettingStarted","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":86},{"name":"goToIndex","args":[{"name":"index","type":"\\"0\\" | \\"1\\" | \\"2\\" | \\"3\\""}],"optional":false,"returnType":"void","typeParameters":[],"line":79,"jsdoctags":[{"name":"index","type":"\\"0\\" | \\"1\\" | \\"2\\" | \\"3\\"","tagName":{"text":"param"}}]},{"name":"nextIndex","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":72},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":59},{"name":"prevIndex","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":67}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { OverlayService } from \'../../overlay.service\';\\nimport { Router } from \'@angular/router\';\\nimport { Component, OnDestroy } from \'@angular/core\';\\nimport { trigger, style, animate, transition, state } from \'@angular/animations\';\\nimport { HotkeysService } from \'../../hotkeys/hotkeys.service\';\\nimport { Subscription } from \'rxjs\';\\n\\n@Component({\\n  selector: \'app-onboarding-overlay\',\\n  templateUrl: \'./onboarding-overlay.component.html\',\\n  styleUrls: [\'./onboarding-overlay.component.scss\'],\\n  animations: [\\n    trigger(\\n      \'enterAnimation\', [\\n        state(\'leave\', style({ transform: \'scale(0)\', opacity: 0 })),\\n        state(\'enter\', style({ transform: \'scale(1)\', opacity: 1 })),\\n        transition(\'enter <=> leave\', animate(\'200ms ease-in-out\'))\\n      ]\\n    )\\n  ]\\n})\\nexport class OnboardingOverlayComponent implements OnDestroy {\\n  index: 0 | 1 | 2 | 3 = 0;\\n  content = [\\n    {\\n      content: \'\',\\n      imgSrc: \'\'\\n    },\\n    {\\n      // content: \'Multiple news sources. One reader.\',\\n      content: \'Easier reading of articles in a card format.\',\\n      // imgSrc: \'assets/img/News Article.png\'\\n      imgSrc: \'assets/onboarding/articles.svg\'\\n    },\\n    {\\n      content: \'Customizable. Tons of options.\',\\n      imgSrc: \'assets/img/Customizing UI.png\'\\n    },\\n    {\\n      content: \'Many news sources to explore!\',\\n      imgSrc: \'assets/img/Explore News Sources.png\'\\n    }];\\n\\n  shortcutHandlers: Subscription[] = [];\\n\\n  constructor(\\n    private router: Router,\\n    private overlayService: OverlayService,\\n    private hotkeys: HotkeysService\\n  ) {\\n    const backShortcut = hotkeys.addShortcut({ keys: \'arrowleft\',\\n    description: \'Go back to previous step\' }).subscribe(() => this.prevIndex());\\n    this.shortcutHandlers.push(backShortcut);\\n    const forwardShortcut = hotkeys.addShortcut({ keys: \'arrowright\',\\n    description: \'Go forward to next step\' }).subscribe(() => this.nextIndex());\\n    this.shortcutHandlers.push(forwardShortcut);\\n  }\\n\\n  ngOnDestroy() {\\n    if (this.shortcutHandlers.length > 0) {\\n      this.shortcutHandlers.forEach((handler) => {\\n        handler.unsubscribe();\\n      });\\n      this.shortcutHandlers = [];\\n    }\\n  }\\n  prevIndex() {\\n    if (this.index !== 0) {\\n      this.index--;\\n    }\\n  }\\n  nextIndex() {\\n    if (this.index !== 3) {\\n      this.index++;\\n    } else {\\n      this.gettingStarted();\\n    }\\n  }\\n  goToIndex(index: 0 | 1 | 2 | 3) {\\n    console.log(index);\\n    this.index = index;\\n  }\\n  closeOverlay() {\\n    this.overlayService.close();\\n  }\\n  gettingStarted() {\\n    this.router.navigate([\'/home\']);\\n    this.closeOverlay();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".onboarding-card {\\n  width: 800px;\\n  height: 600px;\\n  transition: all 0.3s ease-in-out !important;\\n  border-radius: 20px !important;\\n  margin: 0 50px;\\n  &.extra-margin-left {\\n    margin-left: 156px !important;\\n  }\\n  &.extra-margin-right {\\n    margin-right: 156px !important;\\n  }\\n  .mat-card-image {\\n    height: 380px;\\n    border-top-left-radius: inherit;\\n    border-top-right-radius: inherit;\\n  }\\n  .onboarding-card-actions {\\n    margin: 20px !important;\\n  }\\n  .onboarding-card-content {\\n    font-size: 30px;\\n    line-height: 30px;\\n    padding: 30px;\\n    height: auto;\\n    margin: auto;\\n    text-align: center;\\n    &.onboarding-card-content-center {\\n      display: flex !important;\\n      justify-content: center !important;\\n      align-items: center !important;\\n      flex-direction: column;\\n    }\\n  }\\n}\\n.no-visible {\\n  visibility: hidden;\\n}\\n.onboarding-progress-bar {\\n  width: 200px !important;\\n  margin: auto;\\n}\\n.onboarding-div {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n}\\n.onboarding-fab {\\n  // background-color: white !important;\\n  // color: black !important;\\n}\\n.onboarding-left-fab {\\n  margin-left: 50px;\\n}\\n.onboarding-right-fab {\\n  margin-right: 50px;\\n}\\n.app-div {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  .app-title {\\n    font-size: 40px;\\n  }\\n  .app-beta {\\n    font-size: 25px;\\n    font-weight: 300;\\n    float: right;\\n  }\\n}\\n.indicator {\\n  border-radius: 50%;\\n  display: block;\\n  margin: 4px;\\n  width: 10px;\\n  height: 10px;\\n  transition: all 0.2s ease-in-out;\\n}\\n.indicators {\\n  display: flex;\\n  margin: auto;\\n  flex-direction: row;\\n  vertical-align: middle;\\n  align-items: center;\\n  width: fit-content;\\n  padding-top: 6px;\\n}\\n","styleUrl":"./onboarding-overlay.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"router","type":"Router"},{"name":"overlayService","type":"OverlayService"},{"name":"hotkeys","type":"HotkeysService"}],"line":44,"jsdoctags":[{"name":"router","type":"Router","tagName":{"text":"param"}},{"name":"overlayService","type":"OverlayService","tagName":{"text":"param"}},{"name":"hotkeys","type":"HotkeysService","tagName":{"text":"param"}}]},"implements":["OnDestroy"],"templateData":"<div cdkTrapFocus class=\\"onboarding-div\\">\\n  <button mat-fab matTooltip=\\"Previous\\" class=\\"onboarding-fab onboarding-left-fab\\" [class.no-visible]=\\"index == 0\\" (click)=\\"prevIndex()\\" aria-label=\\"Previous\\" [@enterAnimation]=\\"index == 0 ? \'leave\' : \'enter\'\\" color>\\n    <mat-icon>arrow_backward</mat-icon>\\n  </button>\\n  <mat-card\\n    class=\\"onboarding-card mat-elevation-z3\\">\\n    <img mat-card-image [src]=\\"content[index].imgSrc\\" *ngIf=\\"content[index].imgSrc\\" alt=\\"Feature image thumbnail\\">\\n    <mat-card-content\\n      class=\\"onboarding-card-content\\"\\n      [class.onboarding-card-content-center]=\\"content[index].imgSrc === \'\'\\">\\n      <div *ngIf=\\"index == 0\\" class=\\"app-div\\">\\n        <img src=\\"assets/favicon/icon-100x100-nocolor.png\\" width=\\"100px\\" height=\\"100px\\">\\n        <div>\\n          <p class=\\"app-title\\">RSS Reader</p>\\n        </div>\\n      </div>\\n      <br *ngIf=\\"index === 0\\">\\n      <p *ngIf=\\"index === 0\\">The news reader that you will need</p>\\n      <p>{{content[index].content}}</p>\\n    </mat-card-content>\\n    <mat-card-actions fxLayout=\\"row\\" class=\\"onboarding-card-actions\\">\\n      <span fxFlex></span>\\n      <button mat-raised-button (click)=\\"gettingStarted()\\" color=\\"primary\\">Get Started</button>\\n      <span fxFlex></span>\\n    </mat-card-actions>\\n  </mat-card>\\n  <button mat-fab matTooltip=\\"Next\\" class=\\"onboarding-fab onboarding-right-fab\\" (click)=\\"nextIndex()\\" aria-label=\\"Next\\" [@enterAnimation]=\\"index === 3 ? \'leave\' : \'enter\'\\" [class.no-visible]=\\"index === 3\\" color>\\n    <mat-icon>arrow_forward</mat-icon>\\n  </button>\\n</div>\\n<div class=\\"indicators\\">\\n  <span class=\\"indicator\\" [class.indicator-active]=\\"item === index\\" *ngFor=\\"let item of content.length\\" (click)=\\"goToIndex(item)\\"></span>\\n</div>\\n"},{"name":"PageNotFoundComponent","id":"component-PageNotFoundComponent-8e5449b94159469a820913ffef4a3557","file":"projects/rss-reader/src/app/page-not-found/page-not-found.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-page-not-found","styleUrls":[],"styles":[],"templateUrl":["./page-not-found.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"router","type":"Router","optional":false,"description":"","line":11,"modifierKind":[114]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":13}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Router } from \'@angular/router\';\\nimport { Component, OnInit } from \'@angular/core\';\\nimport { ActionItemService } from \'../actionitem.service\';\\n\\n@Component({\\n  selector: \'app-page-not-found\',\\n  templateUrl: \'./page-not-found.component.html\',\\n})\\nexport class PageNotFoundComponent implements OnInit {\\n\\n  constructor(public router: Router, private actionItemService: ActionItemService) { }\\n\\n  ngOnInit() {\\n    this.actionItemService.addActionItem({title: \'Go back\', icon: \'arrow_back\', onClickListener: () => {\\n      window.history.back();\\n    }, showAsAction: true});\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"router","type":"Router"},{"name":"actionItemService","type":"ActionItemService"}],"line":9,"jsdoctags":[{"name":"router","type":"Router","tagName":{"text":"param"}},{"name":"actionItemService","type":"ActionItemService","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div class=\\"center page-not-found-container\\">\\n  <mat-icon class=\\"warning-icon\\">error</mat-icon>\\n  <h1>The page you were requesting could not be found.</h1>\\n  <p>The page you navigated to (<code>{{router.url}}</code>) does not exist at the moment. Try again later.</p>\\n</div>"},{"name":"PortalDialogComponent","id":"component-PortalDialogComponent-aeb0cac7a87e027a08f4da2f2b3e86e9","file":"projects/rss-reader/src/app/core/dialogs/portal-dialog/portal-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-portal-dialog","styleUrls":[],"styles":[],"templateUrl":["./portal-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"defaultNegativeBtnText","defaultValue":"\'Cancel\'","type":"string","optional":false,"description":"<p>The default text to be used for the negative button. </p>\\n","line":14,"modifierKind":[132]},{"name":"defaultPositiveBtnText","defaultValue":"\'OK\'","type":"string","optional":false,"description":"<p>The default text to be used for the positive button. </p>\\n","line":16,"modifierKind":[132]},{"name":"opts","type":"PortalDialogOpts<T>","optional":false,"description":"","line":18,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[114]},{"name":"defaultBtnColor","defaultValue":"\'primary\'","type":"ThemePalette","optional":false,"description":"<p>The default color to be used for the dialog&#39;s buttons. </p>\\n","line":9,"modifierKind":[132],"inheritance":{"file":"Dialog"}},{"name":"opts","type":"DialogOpts","optional":false,"description":"","line":7,"modifierKind":[114],"inheritance":{"file":"Dialog"}}],"methodsClass":[],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component, Inject } from \'@angular/core\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\n\\nimport { Dialog } from \'../dialog\';\\nimport { PortalDialogOpts } from \'../models\';\\n\\n@Component({\\n  selector: \'app-portal-dialog\',\\n  templateUrl: \'./portal-dialog.component.html\'\\n})\\nexport class PortalDialogComponent<T = any> extends Dialog {\\n  /** The default text to be used for the negative button. */\\n  readonly defaultNegativeBtnText = \'Cancel\';\\n  /** The default text to be used for the positive button. */\\n  readonly defaultPositiveBtnText = \'OK\';\\n\\n  constructor(@Inject(MAT_DIALOG_DATA) public opts: PortalDialogOpts<T>) {\\n    super(opts);\\n  }\\n\\n  get hideNegativeBtn(): boolean {\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'negative\');\\n    }\\n\\n    return !(\'negativeBtnText\' in this.opts);\\n  }\\n\\n  get hideNeutralBtn(): boolean {\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'neutral\');\\n    }\\n\\n    return !(\'neutralBtnText\' in this.opts);\\n  }\\n\\n  get hidePositiveBtn(): boolean {\\n    // As the default text will be used if no text was specified,\\n    // the button will always be shown unless explicitly hidden.\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'positive\');\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"opts","type":"PortalDialogOpts<T>"}],"line":16,"jsdoctags":[{"name":"opts","type":"PortalDialogOpts<T>","tagName":{"text":"param"}}]},"extends":"Dialog","accessors":{"hideNegativeBtn":{"name":"hideNegativeBtn","getSignature":{"name":"hideNegativeBtn","type":"boolean","returnType":"boolean","line":22}},"hideNeutralBtn":{"name":"hideNeutralBtn","getSignature":{"name":"hideNeutralBtn","type":"boolean","returnType":"boolean","line":31}},"hidePositiveBtn":{"name":"hidePositiveBtn","getSignature":{"name":"hidePositiveBtn","type":"boolean","returnType":"boolean","line":40}}},"templateData":"<h2 matDialogTitle *ngIf=\\"opts?.title\\">{{ opts.title }}</h2>\\n<mat-dialog-content fxLayout=\\"column\\" class=\\"mat-typography\\">\\n  <ng-template [cdkPortalOutlet]=\\"opts.portal\\" *ngIf=\\"opts.portal\\"></ng-template>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\"end\\" *ngIf=\\"hasActionBtns\\">\\n  <button mat-button *ngIf=\\"!hideNegativeBtn\\" [color]=\\"negativeBtnColor\\"\\n    matDialogClose=\\"cancel\\"\\n    [attr.cdkFocusInitial]=\\"opts.initialActionBtnFocus === \'negative\' || null\\">{{ opts.negativeBtnText }}</button>\\n  <button mat-button *ngIf=\\"!hideNeutralBtn\\" [color]=\\"neutralBtnColor\\"\\n    matDialogClose=\\"neutral\\"\\n    [attr.cdkFocusInitial]=\\"opts.initialActionBtnFocus === \'neutral\' || null\\">{{ opts.neutralBtnText }}</button>\\n  <button mat-button *ngIf=\\"!hidePositiveBtn\\" [color]=\\"positiveBtnColor\\"\\n    matDialogClose=\\"ok\\"\\n    [attr.cdkFocusInitial]=\\"opts.initialActionBtnFocus === \'positive\' || null\\">{{ opts.positiveBtnText }}</button>\\n</mat-dialog-actions>\\n"},{"name":"PromptDialogComponent","id":"component-PromptDialogComponent-f95118470dc79a3214dd8f110f68efae","file":"projects/rss-reader/src/app/core/dialogs/prompt-dialog/prompt-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-prompt-dialog","styleUrls":[],"styles":[],"templateUrl":["./prompt-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"defaultInputColor","defaultValue":"\'primary\'","type":"string","optional":false,"description":"<p>The default color to be used for the input. </p>\\n","line":19,"modifierKind":[132]},{"name":"defaultNegativeBtnText","defaultValue":"\'Cancel\'","type":"string","optional":false,"description":"<p>The default text to be used for the negative button. </p>\\n","line":15,"modifierKind":[132]},{"name":"defaultPositiveBtnText","defaultValue":"\'OK\'","type":"string","optional":false,"description":"<p>The default text to be used for the positive button. </p>\\n","line":17,"modifierKind":[132]},{"name":"input","type":"string | number","optional":false,"description":"","line":13},{"name":"opts","type":"PromptDialogOpts","optional":false,"description":"","line":21,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[114]},{"name":"defaultBtnColor","defaultValue":"\'primary\'","type":"ThemePalette","optional":false,"description":"<p>The default color to be used for the dialog&#39;s buttons. </p>\\n","line":9,"modifierKind":[132],"inheritance":{"file":"Dialog"}},{"name":"opts","type":"DialogOpts","optional":false,"description":"","line":7,"modifierKind":[114],"inheritance":{"file":"Dialog"}}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":60}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component, OnInit, Inject } from \'@angular/core\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\n\\nimport { Dialog } from \'../dialog\';\\nimport { PromptDialogOpts } from \'../models\';\\n\\n@Component({\\n  selector: \'app-prompt-dialog\',\\n  templateUrl: \'./prompt-dialog.component.html\'\\n})\\nexport class PromptDialogComponent extends Dialog implements OnInit {\\n  input: string | number;\\n  /** The default text to be used for the negative button. */\\n  readonly defaultNegativeBtnText = \'Cancel\';\\n  /** The default text to be used for the positive button. */\\n  readonly defaultPositiveBtnText = \'OK\';\\n  /** The default color to be used for the input. */\\n  readonly defaultInputColor = \'primary\';\\n\\n  constructor(@Inject(MAT_DIALOG_DATA) public opts: PromptDialogOpts) {\\n    super(opts);\\n  }\\n\\n  get hideNegativeBtn(): boolean {\\n    // As the default text will be used if no text was specified,\\n    // the button will always be shown unless explicitly hidden.\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'negative\');\\n    }\\n  }\\n\\n  get hideNeutralBtn(): boolean {\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'neutral\');\\n    }\\n\\n    return !(\'neutralBtnText\' in this.opts);\\n  }\\n\\n  get hidePositiveBtn(): boolean {\\n    // As the default text will be used if no text was specified,\\n    // the button will always be shown unless explicitly hidden.\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'positive\');\\n    }\\n  }\\n\\n  get inputColor(): ThemePalette {\\n    // This is to handle users using the now deprecated `color` property.\\n    // tslint:disable-next-line:deprecation\\n    return \'color\' in this.opts ? this.opts.color :\\n      (this.opts.inputConfig && \'color\' in this.opts.inputConfig) ?\\n      this.opts.inputConfig.color : this.defaultInputColor;\\n  }\\n\\n  ngOnInit() {\\n    // tslint:disable:deprecation\\n    if (\'value\' in this.opts) {\\n      this.input = this.opts.value;\\n    } else if (\'inputConfig\' in this.opts && \'value\' in this.opts.inputConfig) {\\n      this.input = this.opts.inputConfig.value;\\n    }\\n    // tslint:enable:deprecation\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"opts","type":"PromptDialogOpts"}],"line":19,"jsdoctags":[{"name":"opts","type":"PromptDialogOpts","tagName":{"text":"param"}}]},"extends":"Dialog","implements":["OnInit"],"accessors":{"hideNegativeBtn":{"name":"hideNegativeBtn","getSignature":{"name":"hideNegativeBtn","type":"boolean","returnType":"boolean","line":25}},"hideNeutralBtn":{"name":"hideNeutralBtn","getSignature":{"name":"hideNeutralBtn","type":"boolean","returnType":"boolean","line":34}},"hidePositiveBtn":{"name":"hidePositiveBtn","getSignature":{"name":"hidePositiveBtn","type":"boolean","returnType":"boolean","line":43}},"inputColor":{"name":"inputColor","getSignature":{"name":"inputColor","type":"","returnType":"ThemePalette","line":52}}},"templateData":"<h2 matDialogTitle *ngIf=\\"opts?.title\\">{{ opts?.title }}</h2>\\n<mat-dialog-content fxLayout=\\"column\\" class=\\"mat-typography\\">\\n  <p class=\\"mat-body\\" *ngIf=\\"!opts.isHtml\\">{{ opts.msg }}</p>\\n  <span *ngIf=\\"opts.isHtml\\" [innerHTML]=\\"opts.msg\\"></span>\\n  <form #form=\\"ngForm\\">\\n    <mat-form-field [color]=\\"inputColor\\" style=\\"width:100%\\">\\n      <mat-label *ngIf=\\"opts?.placeholder && !opts.inputConfig?.label\\">{{ opts.placeholder }}</mat-label>\\n      <mat-label *ngIf=\\"opts?.inputConfig && opts.inputConfig?.label\\">{{ opts.inputConfig.label }}</mat-label>\\n      <input matInput [(ngModel)]=\\"input\\" [type]=\\"opts?.inputType ? opts.inputType : \'text\'\\" required name=\\"input\\" [placeholder]=\\"opts.inputConfig?.placeholder\\">\\n      <mat-error>This is required.</mat-error>\\n    </mat-form-field>\\n  </form>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\"end\\" *ngIf=\\"hasActionBtns\\">\\n  <button mat-button *ngIf=\\"!hideNegativeBtn\\" [color]=\\"negativeBtnColor\\"\\n    matDialogClose=\\"cancel\\"\\n    [attr.cdkFocusInitial]=\\"opts?.initialActionBtnFocus === \'negative\' || null\\">{{ opts.negativeBtnText }}</button>\\n  <button mat-button *ngIf=\\"!hideNeutralBtn\\" [color]=\\"neutralBtnColor\\"\\n    matDialogClose=\\"neutral\\"\\n    [attr.cdkFocusInitial]=\\"opts?.initialActionBtnFocus === \'neutral\' || null\\">{{ opts.neutralBtnText }}</button>\\n  <button mat-button *ngIf=\\"!hidePositiveBtn\\" [color]=\\"positiveBtnColor\\" [matDialogClose]=\\"input\\"\\n    [disabled]=\\"form.invalid\\"\\n    [attr.cdkFocusInitial]=\\"opts?.initialActionBtnFocus === \'positive\' || null\\">{{ opts.positiveBtnText }}</button>\\n</mat-dialog-actions>\\n"},{"name":"ReleaseNotesComponent","id":"component-ReleaseNotesComponent-061e334e1ebb8670170e60dc59d4ac38","file":"projects/rss-reader/src/app/pages/release-notes/release-notes.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-release-notes","styleUrls":["./release-notes.component.scss"],"styles":[],"templateUrl":["./release-notes.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"createGitRepoUrl","args":[{"name":"gitRepo","type":"GitRepo"}],"optional":false,"returnType":"string","typeParameters":[],"line":48,"description":"<p>Generates a URL to the specified Git repository.</p>\\n","modifierKind":[112],"jsdoctags":[{"name":{"pos":1633,"end":1640,"flags":0,"escapedText":"gitRepo"},"type":"GitRepo","tagName":{"pos":1627,"end":1632,"flags":0,"escapedText":"param"},"comment":"<p>The Git repository to be converted to a link.</p>\\n"}]},{"name":"getReleaseAuthor","args":[{"name":"version","type":"string"}],"optional":false,"returnType":"string","typeParameters":[],"line":80,"description":"<p>Retrieves the author of the release.</p>\\n","jsdoctags":[{"name":{"pos":2583,"end":2590,"flags":0,"escapedText":"version"},"type":"string","tagName":{"pos":2577,"end":2582,"flags":0,"escapedText":"param"},"comment":"<p>The version to retrieve.</p>\\n"}]},{"name":"getReleaseDate","args":[{"name":"version","type":"string"}],"optional":false,"returnType":"string","typeParameters":[],"line":72,"description":"<p>Retrieves the date when the <code>version</code> was released.</p>\\n","jsdoctags":[{"name":{"pos":2375,"end":2382,"flags":0,"escapedText":"version"},"type":"string","tagName":{"pos":2369,"end":2374,"flags":0,"escapedText":"param"},"comment":"<p>The version to retrieve.</p>\\n"}]},{"name":"getReleaseInfo","args":[{"name":"version","type":"string"}],"optional":false,"returnType":"Release","typeParameters":[],"line":88,"description":"<p>Retrieves information about a particular version&#39;s release notes.</p>\\n","jsdoctags":[{"name":{"pos":2824,"end":2831,"flags":0,"escapedText":"version"},"type":"string","tagName":{"pos":2818,"end":2823,"flags":0,"escapedText":"param"},"comment":"<p>The version to retrieve.</p>\\n"}]},{"name":"getReleaseName","args":[{"name":"version","type":"string"}],"optional":false,"returnType":"string","typeParameters":[],"line":56,"description":"<p>Retrieves the release name for the specified <code>version</code>.</p>\\n","jsdoctags":[{"name":{"pos":1938,"end":1945,"flags":0,"escapedText":"version"},"type":"string","tagName":{"pos":1932,"end":1937,"flags":0,"escapedText":"param"},"comment":"<p>The version</p>\\n"}]},{"name":"getReleaseNote","args":[{"name":"version","type":"string"}],"optional":false,"returnType":"[] | string","typeParameters":[],"line":64,"description":"<p>Retrieves the release notes for the specified <code>version</code>.</p>\\n","jsdoctags":[{"name":{"pos":2153,"end":2160,"flags":0,"escapedText":"version"},"type":"string","tagName":{"pos":2147,"end":2152,"flags":0,"escapedText":"param"},"comment":"<p>The version</p>\\n"}]},{"name":"isArray","args":[{"name":"val","type":"any"}],"optional":false,"returnType":"T[]","typeParameters":["T"],"line":100,"jsdoctags":[{"name":"val","type":"any","tagName":{"text":"param"}}]},{"name":"isUrl","args":[{"name":"val","type":"string"}],"optional":false,"returnType":"boolean","typeParameters":[],"line":105,"jsdoctags":[{"name":"val","type":"string","tagName":{"text":"param"}}]},{"name":"joinReleaseNotes","args":[{"name":"notes","type":"string[]"}],"optional":false,"returnType":"string","typeParameters":[],"line":96,"description":"<p>Joins a list of release notes to a string.</p>\\n","jsdoctags":[{"name":{"pos":3027,"end":3032,"flags":0,"escapedText":"notes"},"type":"string[]","tagName":{"pos":3021,"end":3026,"flags":0,"escapedText":"param"},"comment":"<p>The notes to join</p>\\n"}]}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component, InjectionToken, Inject, Optional } from \'@angular/core\';\\nimport { GitRepo, Release, ReleaseNotesJSON } from \'./models/release-notes\';\\nimport releaseNotesJsonFile from \'../../../assets/release-notes/release-notes.json\';\\nimport { environment } from \'../../../environments/environment\';\\n\\nexport const RELEASE_NOTES_JSON = new InjectionToken<ReleaseNotesJSON>(\'Release notes JSON file\', {\\n  providedIn: \'root\',\\n  factory: () => releaseNotesJsonFile\\n});\\n\\nexport const GIT_REPO = new InjectionToken<GitRepo>(\'Custom Git repository\');\\n\\n@Component({\\n  selector: \'app-release-notes\',\\n  templateUrl: \'./release-notes.component.html\',\\n  styleUrls: [\'./release-notes.component.scss\']\\n})\\nexport class ReleaseNotesComponent {\\n  constructor(\\n    @Inject(RELEASE_NOTES_JSON) private releaseNotesJson: ReleaseNotesJSON,\\n    @Optional() @Inject(GIT_REPO) private customGitRepo: GitRepo\\n  ) { }\\n\\n  /** Retrieves the release notes JSON file. */\\n  get releaseNotes(): ReleaseNotesJSON {\\n    return this.releaseNotesJson;\\n  }\\n\\n  /** Retrieves the list of versions. */\\n  get versions(): string[] {\\n    return Object.keys(this.releaseNotes.releases);\\n  }\\n\\n  /**\\n   * Retrieves metadata of the Git repository, or defaults to the environment.\\n   *\\n   * Note: This can be overidden with the {@link GIT_REPO} DI token.\\n   */\\n  get gitRepo(): string {\\n    return this.customGitRepo ? this.createGitRepoUrl(this.customGitRepo) : this.releaseNotes.gitRepo ?\\n      this.createGitRepoUrl(this.releaseNotes.gitRepo) : this.createGitRepoUrl(environment.gitRepoDefaults);\\n  }\\n\\n  /**\\n   * Generates a URL to the specified Git repository.\\n   * @param gitRepo The Git repository to be converted to a link.\\n   */\\n  private createGitRepoUrl(gitRepo: GitRepo): string {\\n    return typeof gitRepo === \'object\' ? `${gitRepo.host}/${gitRepo.username}/${gitRepo.repo}` : gitRepo;\\n  }\\n\\n  /**\\n   * Retrieves the release name for the specified `version`.\\n   * @param version The version\\n   */\\n  getReleaseName(version: string): string {\\n    return this.releaseNotes.releases[version].releaseName;\\n  }\\n\\n  /**\\n   * Retrieves the release notes for the specified `version`.\\n   * @param version The version\\n   */\\n  getReleaseNote(version: string): string[] | string {\\n    return this.releaseNotes.releases[version].releaseNotes;\\n  }\\n\\n  /**\\n   * Retrieves the date when the `version` was released.\\n   * @param version The version to retrieve.\\n   */\\n  getReleaseDate(version: string): string {\\n    return this.releaseNotes.releases[version].releaseDate;\\n  }\\n\\n  /**\\n   * Retrieves the author of the release.\\n   * @param version The version to retrieve.\\n   */\\n  getReleaseAuthor(version: string): string {\\n    return this.releaseNotes.releases[version].releaseAuthor;\\n  }\\n\\n  /**\\n   * Retrieves information about a particular version\'s release notes.\\n   * @param version The version to retrieve.\\n   */\\n  getReleaseInfo(version: string): Release {\\n    return this.releaseNotes.releases[version];\\n  }\\n\\n  /**\\n   * Joins a list of release notes to a string.\\n   * @param notes The notes to join\\n   */\\n  joinReleaseNotes(notes: string[]): string {\\n    return notes.join(\'\\\\n\');\\n  }\\n\\n  isArray<T = any>(val: any): val is T[] {\\n    return Array.isArray(val);\\n  }\\n\\n  // See https://stackoverflow.com/a/46296668/6782707 for more info.\\n  isUrl(val: string): boolean {\\n    return /^(?:http(s)?:\\\\/\\\\/)?[\\\\w.-]+(?:\\\\.[\\\\w\\\\.-]+)+[\\\\w\\\\-\\\\._~:/?#[\\\\]@!\\\\$&\'\\\\(\\\\)\\\\*\\\\+,;=.]+$/.test(val);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".version-header .badge {\\n  margin-left: 8px;\\n}\\n","styleUrl":"./release-notes.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"releaseNotesJson","type":"ReleaseNotesJSON"},{"name":"customGitRepo","type":"GitRepo"}],"line":18,"jsdoctags":[{"name":"releaseNotesJson","type":"ReleaseNotesJSON","tagName":{"text":"param"}},{"name":"customGitRepo","type":"GitRepo","tagName":{"text":"param"}}]},"accessors":{"releaseNotes":{"name":"releaseNotes","getSignature":{"name":"releaseNotes","type":"","returnType":"ReleaseNotesJSON","line":25,"description":"<p>Retrieves the release notes JSON file. </p>\\n"}},"versions":{"name":"versions","getSignature":{"name":"versions","type":"[]","returnType":"string[]","line":30,"description":"<p>Retrieves the list of versions. </p>\\n"}},"gitRepo":{"name":"gitRepo","getSignature":{"name":"gitRepo","type":"string","returnType":"string","line":39,"description":"<p>Retrieves metadata of the Git repository, or defaults to the environment.</p>\\n<p>Note: This can be overidden with the {@link GIT_REPO} DI token.</p>\\n"}}},"templateData":"<div class=\\"app-content\\">\\n  <h1 id=\\"app-header\\">Release notes</h1>\\n  <h2 id=\\"current-version\\">Current version: {{ releaseNotes.latestVersion }}</h2>\\n\\n  <h3 id=\\"current-version-release-notes\\">Release notes for {{ releaseNotes.latestVersion }}<span *ngIf=\\"getReleaseName(releaseNotes.latestVersion) as releaseName\\"> - {{ releaseName }}</span></h3>\\n  \x3c!-- TODO: Convert to template --\x3e\\n  <ng-container *ngIf=\\"versions; else: noReleaseNotes\\">\\n    <p *ngIf=\\"getReleaseDate(releaseNotes.latestVersion) as releaseDate\\">Release date: <em><time [dateTime]=\\"releaseDate\\">{{ releaseDate | date:\'short\' }}</time></em></p>\\n    <p *ngIf=\\"getReleaseAuthor(releaseNotes.latestVersion) as releaseAuthor\\">Released by: <em>{{ releaseAuthor }}</em></p>\\n    <ng-container *ngIf=\\"getReleaseNote(releaseNotes.latestVersion) as releaseNote\\">\\n      <ng-container *ngIf=\\"isUrl(releaseNote)\\">\\n        <p>See this <a [href]=\\"releaseNote\\">link</a> for the release notes.</p>\\n      </ng-container>\\n      <ng-container *ngIf=\\"isArray(releaseNote)\\">\\n        <p [innerHTML]=\\"joinReleaseNotes(releaseNote) | markdown\\"></p>\\n      </ng-container>\\n    </ng-container>\\n  </ng-container>\\n  <hr>\\n\\n  <h2 id=\\"all-release-notes\\" *ngIf=\\"versions?.length > 0\\">All release notes</h2>\\n  <ng-container *ngIf=\\"versions; else: noReleaseNotes\\">\\n    \x3c!-- TODO: Add support for sorting versions by semver. --\x3e\\n    <ng-container *ngFor=\\"let version of versions\\">\\n      <h3 id=\\"version-{{ version }}\\" class=\\"version-header\\">\\n        Version {{ version }}<span *ngIf=\\"getReleaseName(version) as releaseName\\"> - {{ releaseName }}</span>\\n        <span class=\\"badge badge--colored\\" *ngIf=\\"version === releaseNotes.latestVersion\\">Latest</span>\\n      </h3>\\n      <p *ngIf=\\"getReleaseDate(version) as releaseDate\\">Release date: <em><time [dateTime]=\\"releaseDate\\">{{ releaseDate | date:\'short\' }}</time></em></p>\\n      <p *ngIf=\\"getReleaseAuthor(version) as releaseAuthor\\">Released by: <em>{{ releaseAuthor }}</em></p>\\n      <ng-container *ngIf=\\"getReleaseNote(version) as releaseNote\\">\\n        <ng-container *ngIf=\\"isUrl(releaseNote)\\">\\n          <p>See this <a [href]=\\"releaseNote\\">link</a> for the release notes.</p>\\n        </ng-container>\\n        <ng-container *ngIf=\\"isArray(releaseNote)\\">\\n          <p [innerHTML]=\\"joinReleaseNotes(releaseNote) | markdown\\"></p>\\n        </ng-container>\\n      </ng-container>\\n    </ng-container>\\n  </ng-container>\\n\\n</div>\\n<ng-template #noReleaseNotes>\\n  <div class=\\"center\\">\\n    <h2 id=\\"no-release-notes-available\\">No release notes available!</h2>\\n    <p>Are you connected to the internet?</p>\\n  </div>\\n</ng-template>\\n"},{"name":"RSSChannelInfoDialogComponent","id":"component-RSSChannelInfoDialogComponent-6aa119f61aaf0fac410f4676bead02cd","file":"projects/rss-reader/src/app/dialogs/rss-channel-info-dialog/rss-channel-info-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-rss-channel-info-dialog","styleUrls":[],"styles":[],"templateUrl":["./rss-channel-info-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { MatDialogRef } from \'@angular/material/dialog\';\\nimport { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-rss-channel-info-dialog\',\\n  templateUrl: \'./rss-channel-info-dialog.component.html\'\\n})\\nexport class RSSChannelInfoDialogComponent implements OnInit {\\n\\n  constructor(private dialogRef: MatDialogRef<RSSChannelInfoDialogComponent>) { }\\n\\n  ngOnInit() {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"dialogRef","type":"MatDialogRef<RSSChannelInfoDialogComponent>"}],"line":8,"jsdoctags":[{"name":"dialogRef","type":"MatDialogRef<RSSChannelInfoDialogComponent>","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<h2 matDialogTitle>RSS Channel Info</h2>\\n<mat-dialog-content>\\n  <p>Coming soon!</p>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\"end\\">\\n  <button mat-button color=\\"primary\\" matDialogClose>\\n    Dismiss\\n  </button>\\n</mat-dialog-actions>"},{"name":"SelectionDialogComponent","id":"component-SelectionDialogComponent-9e02536d67a1f27b5dc9e0dd8c377265","file":"projects/rss-reader/src/app/core/dialogs/selection-dialog/selection-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-selection-dialog","styleUrls":[],"styles":[],"templateUrl":["./selection-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"defaultNegativeBtnText","defaultValue":"\'Cancel\'","type":"string","optional":false,"description":"<p>The default text to be used for the negative button. </p>\\n","line":14,"modifierKind":[132]},{"name":"defaultPositiveBtnText","defaultValue":"\'OK\'","type":"string","optional":false,"description":"<p>The default text to be used for the positive button. </p>\\n","line":16,"modifierKind":[132]},{"name":"opts","type":"SelectionDialogOpts","optional":false,"description":"","line":18,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[114]},{"name":"defaultBtnColor","defaultValue":"\'primary\'","type":"ThemePalette","optional":false,"description":"<p>The default color to be used for the dialog&#39;s buttons. </p>\\n","line":9,"modifierKind":[132],"inheritance":{"file":"Dialog"}},{"name":"opts","type":"DialogOpts","optional":false,"description":"","line":7,"modifierKind":[114],"inheritance":{"file":"Dialog"}}],"methodsClass":[],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component, Inject } from \'@angular/core\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\n\\nimport { Dialog } from \'../dialog\';\\nimport { SelectionDialogOpts } from \'../models\';\\n\\n@Component({\\n  selector: \'app-selection-dialog\',\\n  templateUrl: \'./selection-dialog.component.html\'\\n})\\nexport class SelectionDialogComponent extends Dialog {\\n  /** The default text to be used for the negative button. */\\n  readonly defaultNegativeBtnText = \'Cancel\';\\n  /** The default text to be used for the positive button. */\\n  readonly defaultPositiveBtnText = \'OK\';\\n\\n  constructor(@Inject(MAT_DIALOG_DATA) public opts: SelectionDialogOpts) {\\n    super(opts);\\n  }\\n\\n  get hideNegativeBtn(): boolean {\\n    // As the default text will be used if no text was specified,\\n    // the button will always be shown unless explicitly hidden.\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'negative\');\\n    }\\n  }\\n\\n  get hideNeutralBtn(): boolean {\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'neutral\');\\n    }\\n\\n    return !(\'neutralBtnText\' in this.opts);\\n  }\\n\\n  get hidePositiveBtn(): boolean {\\n    // As the default text will be used if no text was specified,\\n    // the button will always be shown unless explicitly hidden.\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'positive\');\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"opts","type":"SelectionDialogOpts"}],"line":16,"jsdoctags":[{"name":"opts","type":"SelectionDialogOpts","tagName":{"text":"param"}}]},"extends":"Dialog","accessors":{"hideNegativeBtn":{"name":"hideNegativeBtn","getSignature":{"name":"hideNegativeBtn","type":"boolean","returnType":"boolean","line":22}},"hideNeutralBtn":{"name":"hideNeutralBtn","getSignature":{"name":"hideNeutralBtn","type":"boolean","returnType":"boolean","line":31}},"hidePositiveBtn":{"name":"hidePositiveBtn","getSignature":{"name":"hidePositiveBtn","type":"boolean","returnType":"boolean","line":40}}},"templateData":"<h2 matDialogTitle *ngIf=\\"opts?.title\\">{{ opts.title }}</h2>\\n<mat-dialog-content fxLayout=\\"column\\" class=\\"mat-typography\\">\\n  <mat-selection-list #selection>\\n    <mat-list-option *ngFor=\\"let option of opts.options\\" [disabled]=\\"option.disabled\\" [value]=\\"option.value\\"\\n      [checkboxPosition]=\\"option.checkboxPosition ? option.checkboxPosition : \'before\'\\" [selected]=\\"option.selected\\">\\n      {{ option.title }}\\n    </mat-list-option>\\n  </mat-selection-list>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\"end\\" *ngIf=\\"hasActionBtns\\">\\n  <button mat-button *ngIf=\\"!hideNegativeBtn\\" [color]=\\"negativeBtnColor\\"\\n    matDialogClose=\\"cancel\\"\\n    [attr.cdkFocusInitial]=\\"opts.initialActionBtnFocus === \'negative\' || null\\">{{ opts.negativeBtnText }}</button>\\n  <button mat-button *ngIf=\\"!hideNeutralBtn\\" [color]=\\"neutralBtnColor\\"\\n    matDialogClose=\\"neutral\\"\\n    [attr.cdkFocusInitial]=\\"opts.initialActionBtnFocus === \'neutral\' || null\\">{{ opts.neutralBtnText }}</button>\\n  <button mat-button *ngIf=\\"!hidePositiveBtn\\" [color]=\\"positiveBtnColor\\" [matDialogClose]=\\"selection.selectedOptions\\"\\n    [disabled]=\\"selection.selectedOptions.selected.length < 1\\"\\n    [attr.cdkFocusInitial]=\\"opts.initialActionBtnFocus === \'positive\' || null\\">\\n    {{ opts.positiveBtnText }}\\n  </button>\\n</mat-dialog-actions>\\n"},{"name":"SettingsComponent","id":"component-SettingsComponent-f5c193d4525ff90dd99376e5ff589154","file":"projects/rss-reader/src/app/pages/settings/settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-settings","styleUrls":[],"styles":[],"templateUrl":["./settings.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"settingsForm","type":"FormGroup","optional":false,"description":"","line":13},{"name":"themes","defaultValue":"[\\n    \'indigo-pink\',\\n    \'deeppurple-amber\',\\n    \'pink-bluegrey\',\\n    \'purple-green\'\\n  ]","type":"[]","optional":false,"description":"","line":14}],"methodsClass":[{"name":"reset","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":35},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":44}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { FormBuilder, FormGroup } from \'@angular/forms\';\\n\\nimport { DialogsService } from \'../../core/dialogs/dialogs.service\';\\nimport { SharedService } from \'../../shared.service\';\\nimport { SettingsStorageService } from \'../../core/settings-storage/settings-storage.service\';\\n\\n@Component({\\n  selector: \'app-settings\',\\n  templateUrl: \'./settings.component.html\'\\n})\\nexport class SettingsComponent {\\n  settingsForm: FormGroup;\\n  themes = [\\n    \'indigo-pink\',\\n    \'deeppurple-amber\',\\n    \'pink-bluegrey\',\\n    \'purple-green\'\\n  ];\\n  constructor(\\n    private dialog: DialogsService,\\n    fb: FormBuilder,\\n    private shared: SharedService,\\n    private settingsStorage: SettingsStorageService\\n  ) {\\n    this.settingsForm = fb.group({\\n      openNewTab: false,\\n      showImages: false,\\n      theme: \'indigo-pink\',\\n      notifyNewReleases: false\\n    });\\n    this.settingsForm.patchValue(settingsStorage.settings);\\n  }\\n\\n  reset() {\\n    const dialogRef = this.dialog.openConfirmDialog({ title: \'Reset settings?\', msg: \'Are you sure you want to reset the settings?\' });\\n    dialogRef.afterClosed().subscribe(result => {\\n      if (result === \'ok\') {\\n        this.settingsStorage.clearSettings(/* resetToDefault = true */);\\n        this.shared.openSnackBar({ msg: \'Settings successfully reset\' });\\n      }\\n    });\\n  }\\n  save() {\\n    this.settingsStorage.setSettings(this.settingsForm.value);\\n    const snackBarRef = this.shared.openSnackBar({ msg: \'Settings saved\', action: \'Reload\' });\\n    snackBarRef.onAction().subscribe(() => {\\n      window.location.reload();\\n    });\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"dialog","type":"DialogsService"},{"name":"fb","type":"FormBuilder"},{"name":"shared","type":"SharedService"},{"name":"settingsStorage","type":"SettingsStorageService"}],"line":19,"jsdoctags":[{"name":"dialog","type":"DialogsService","tagName":{"text":"param"}},{"name":"fb","type":"FormBuilder","tagName":{"text":"param"}},{"name":"shared","type":"SharedService","tagName":{"text":"param"}},{"name":"settingsStorage","type":"SettingsStorageService","tagName":{"text":"param"}}]},"templateData":"<div class=\\"app-content\\">\\n  <mat-card>\\n    <mat-card-title>Settings</mat-card-title>\\n    <mat-card-content fxLayout=\\"column\\">\\n      <form [formGroup]=\\"settingsForm\\" fxLayout=\\"column\\">\\n        <h3 class=\\"mat-subheader\\">General</h3>\\n        <mat-checkbox formControlName=\\"openNewTab\\" class=\\"checkbox\\">Open posts in a new tab</mat-checkbox>\\n        <mat-checkbox formControlName=\\"showImages\\" class=\\"checkbox\\">Show images</mat-checkbox>\\n        <mat-form-field color=\\"accent\\">\\n          <mat-label>Theme</mat-label>\\n          <mat-select formControlName=\\"theme\\">\\n            <mat-option *ngFor=\\"let theme of themes\\" [value]=\\"theme\\">{{theme}}</mat-option>\\n          </mat-select>\\n          <mat-hint>Changes will be made on reload.</mat-hint>\\n        </mat-form-field>\\n        <h3 class=\\"mat-subheader\\">Releases</h3>\\n        <mat-checkbox formControlName=\\"notifyNewReleases\\" class=\\"checkbox\\">Notify when new releases are out</mat-checkbox>\\n      </form>\\n    </mat-card-content>\\n    <mat-card-actions align=\\"end\\">\\n      <button mat-button (click)=\\"reset()\\" color=\\"warn\\">Reset</button>\\n      <button mat-button (click)=\\"save()\\" color=\\"primary\\" [disabled]=\\"settingsForm.invalid\\">Save</button>\\n    </mat-card-actions>\\n  </mat-card>\\n</div>\\n"},{"name":"ShareDialogComponent","id":"component-ShareDialogComponent-e3de4a45b00a65a2337e61790356a8ca","file":"projects/rss-reader/src/app/dialogs/share-dialog/share-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-share-dialog","styleUrls":["./share-dialog.component.scss"],"styles":[],"templateUrl":["./share-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"articleData","type":"FeedEntry | NewsAPITopHeadlinesArticle","optional":false,"description":"","line":16,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[114]},{"name":"publishedDate","type":"string","optional":false,"description":"","line":14},{"name":"url","type":"string","optional":false,"description":"","line":13}],"methodsClass":[{"name":"isFeedEntry","args":[{"name":"feed","type":"FeedEntry | NewsAPITopHeadlinesArticle"}],"optional":false,"returnType":"FeedEntry","typeParameters":[],"line":31,"description":"<p>Checks if the <code>feed</code> property is of type <code>FeedEntry</code></p>\\n","jsdoctags":[{"name":"feed","type":"FeedEntry | NewsAPITopHeadlinesArticle","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19},{"name":"shareNative","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":42},{"name":"shareToFacebook","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":34},{"name":"shareToTwitter","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":37}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component, OnInit, Inject } from \'@angular/core\';\\n\\nimport { MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\nimport { FeedEntry } from \'../../models/feed-entry\';\\nimport { NewsAPITopHeadlinesArticle } from \'../../models/news-api/top-headlines-article\';\\n\\n@Component({\\n  selector: \'app-share-dialog\',\\n  templateUrl: \'./share-dialog.component.html\',\\n  styleUrls: [\'./share-dialog.component.scss\']\\n})\\nexport class ShareDialogComponent implements OnInit {\\n  url: string;\\n  publishedDate: string;\\n  constructor(\\n    @Inject(MAT_DIALOG_DATA) public articleData: FeedEntry | NewsAPITopHeadlinesArticle\\n  ) {}\\n\\n  ngOnInit() {\\n    if (this.isFeedEntry(this.articleData)) {\\n      this.url = this.articleData.link;\\n      this.publishedDate = this.articleData.pubDate.toString();\\n    } else {\\n      this.url = this.articleData.url;\\n      this.publishedDate = this.articleData.publishedAt;\\n    }\\n  }\\n  /**\\n   * Checks if the `feed` property is of type `FeedEntry`\\n   */\\n  isFeedEntry(feed: FeedEntry | NewsAPITopHeadlinesArticle): feed is FeedEntry {\\n    return (feed as FeedEntry).categories !== undefined;\\n  }\\n  shareToFacebook() {\\n    window.open(`https://www.facebook.com/sharer.php?u=${encodeURI(this.url)}`, \'\');\\n  }\\n  shareToTwitter() {\\n    const text = encodeURI(`Check out this blogpost by ${this.articleData.author}\\\\\\n    published on ${this.publishedDate} titled \\"${this.articleData.title}\\"!\')}`);\\n    window.open(`https://twitter.com/intent/tweet?url=${encodeURI(this.url)}&text=${text}`);\\n  }\\n  shareNative() {\\n    if (navigator.share !== undefined) {\\n      navigator.share({\\n        title: document.title,\\n        text: \'Check out this page about\\"\' + document.title + \'\\"!\',\\n        url: document.URL\\n      }).then(() => console.log(\'Successfully shared current page.\'))\\n        .catch((error) => console.error(\'Error sharing current page: \', error));\\n    } else {\\n      // tslint:disable-next-line:max-line-length\\n      alert(\'To share natively, please enable the \\\\\'Experimental Web Platform Features\\\\\' flag in chrome://flags. Otherwise, it might not be supported on your platform right now.\');\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".share-icon {\\n  font-size: 30px;\\n  width: 30px;\\n  height: 30px;\\n}\\n.svg-icon > svg {\\n  width: 30px !important;\\n  height: 30px !important;\\n}\\n.share-div {\\n  align-items: center;\\n  display: flex;\\n  flex-direction: column;\\n  user-select: none;\\n}\\n.share-tile {\\n  cursor: pointer;\\n}\\n\\n.android-btn {\\n  color: #A4C639 !important;\\n}\\n.facebook-btn {\\n  color: #3b5998 !important;\\n}\\n.twitter-btn {\\n  color: #00aced !important;\\n}\\n.google-plus-btn {\\n  color: #d34836 !important;\\n}","styleUrl":"./share-dialog.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"articleData","type":"FeedEntry | NewsAPITopHeadlinesArticle"}],"line":14,"jsdoctags":[{"name":"articleData","type":"FeedEntry | NewsAPITopHeadlinesArticle","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<h2 matDialogTitle>Share \\"{{articleData.title | slice:0:100}}\\":</h2>\\n<mat-dialog-content fxLayout=\\"column\\" style=\\"min-width: fit-content\\">\\n  <mat-form-field>\\n    <input matInput readonly [(ngModel)]=\\"url\\" (click)=\\"$event.target.select()\\" matTooltip=\\"Click to select and copy\\">\\n    <mat-label>URL</mat-label>\\n  </mat-form-field>\\n  <p>OR:</p>\\n  <div class=\\"share-btns\\" style=\\"min-width: 150px\\">\\n    <mat-grid-list cols=\\"3\\">\\n      <mat-grid-tile matRipple matRippleColor=\\"rgba(164, 198, 57, 0.3)\\" class=\\"share-tile android-btn\\" (click)=\\"shareNative()\\">\\n        <div class=\\"share-div\\">\\n          <mat-icon class=\\"share-icon\\">share</mat-icon>\\n          <h3>Android</h3>\\n        </div>\\n      </mat-grid-tile>\\n      <mat-grid-tile matRipple matRippleColor=\\"rgba(59, 89, 152, 0.3)\\" class=\\"share-tile facebook-btn\\" (click)=\\"shareToFacebook()\\">\\n        <div class=\\"share-div\\">\\n          <mat-icon class=\\"share-icon svg-icon\\">\\n            <svg width=\\"24px\\" height=\\"24px\\" viewBox=\\"0 0 24 24\\" fill=\\"currentColor\\">\\n              <path d=\\"M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M18,5H15.5A3.5,3.5 0 0,0 12,8.5V11H10V14H12V21H15V14H18V11H15V9A1,1 0 0,1 16,8H18V5Z\\"\\n              />\\n            </svg>\\n          </mat-icon>\\n          <h3>Facebook</h3>\\n        </div>\\n      </mat-grid-tile>\\n      <mat-grid-tile matRipple matRippleColor=\\"rgba(0, 172, 237, 0.3)\\" class=\\"share-tile twitter-btn\\" (click)=\\"shareToTwitter()\\">\\n        <div class=\\"share-div\\">\\n          <mat-icon class=\\"share-icon svg-icon\\">\\n            <svg width=\\"24px\\" height=\\"24px\\" viewBox=\\"0 0 24 24\\" fill=\\"currentColor\\">\\n              <path d=\\"M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M17.71,9.33C18.19,8.93 18.75,8.45 19,7.92C18.59,8.13 18.1,8.26 17.56,8.33C18.06,7.97 18.47,7.5 18.68,6.86C18.16,7.14 17.63,7.38 16.97,7.5C15.42,5.63 11.71,7.15 12.37,9.95C9.76,9.79 8.17,8.61 6.85,7.16C6.1,8.38 6.75,10.23 7.64,10.74C7.18,10.71 6.83,10.57 6.5,10.41C6.54,11.95 7.39,12.69 8.58,13.09C8.22,13.16 7.82,13.18 7.44,13.12C7.81,14.19 8.58,14.86 9.9,15C9,15.76 7.34,16.29 6,16.08C7.15,16.81 8.46,17.39 10.28,17.31C14.69,17.11 17.64,13.95 17.71,9.33Z\\"\\n              />\\n            </svg>\\n          </mat-icon>\\n          <h3>Twitter</h3>\\n        </div>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n  </div>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\"end\\">\\n  <button mat-button color=\\"primary\\" matDialogClose>Dismiss</button>\\n</mat-dialog-actions>\\n"},{"name":"SubmitRssDialogComponent","id":"component-SubmitRssDialogComponent-8ec40b392891613499bc348b1d55072a","file":"projects/rss-reader/src/app/dialogs/submit-rss-dialog/submit-rss-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-submit-rss-dialog","styleUrls":[],"styles":[],"templateUrl":["./submit-rss-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"data","type":"literal type","optional":false,"description":"","line":12,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[114]}],"methodsClass":[{"name":"getFormUrl","args":[],"optional":false,"returnType":"SafeResourceUrl","typeParameters":[],"line":15}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component, Inject, SecurityContext } from \'@angular/core\';\\nimport { MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\nimport { DomSanitizer, SafeResourceUrl } from \'@angular/platform-browser\';\\n\\n@Component({\\n  selector: \'app-submit-rss-dialog\',\\n  templateUrl: \'./submit-rss-dialog.component.html\'\\n})\\nexport class SubmitRssDialogComponent {\\n  constructor(\\n    private dom: DomSanitizer,\\n    @Inject(MAT_DIALOG_DATA) public data: { feedUrl: string }\\n  ) { }\\n\\n  getFormUrl(): SafeResourceUrl {\\n    // tslint:disable-next-line:max-line-length\\n    return this.dom.sanitize(SecurityContext.URL, `https://docs.google.com/forms/d/e/1FAIpQLSca8Iug_FPflBOHJdUN4KUBrUurOLjcyHAWqkn0_TTJ1oYmRQ/viewform?usp=pp_url&entry.1135652000=${this.data.feedUrl}`);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"dom","type":"DomSanitizer"},{"name":"data","type":"literal type"}],"line":9,"jsdoctags":[{"name":"dom","type":"DomSanitizer","tagName":{"text":"param"}},{"name":"data","type":"literal type","tagName":{"text":"param"}}]},"templateData":"<h2 matDialogTitle>Submit RSS</h2>\\n<mat-dialog-content>\\n  <iframe [src]=\\"getFormUrl()\\" height=\\"600\\" frameBorder=\\"0\\"></iframe>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\"end\\">\\n  <button mat-button color=\\"primary\\" matDialogClose>Close</button>\\n</mat-dialog-actions>\\n"}],"modules":[{"name":"ActionItemsModule","children":[{"type":"providers","elements":[{"name":"ActionItemService"}]},{"type":"declarations","elements":[{"name":"ActionItemsComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"ActionItemsComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"AppModule","children":[{"type":"providers","elements":[{"name":"GuideItemsService"},{"name":"OverlayService"}]},{"type":"declarations","elements":[{"name":"AppComponent"},{"name":"DocViewerComponent"},{"name":"ExpansionPanelComponent"},{"name":"FeedComponent"},{"name":"GuideViewerComponent"},{"name":"GuidesListComponent"},{"name":"HeadlinesComponent"},{"name":"OnboardingOverlayComponent"},{"name":"PageNotFoundComponent"}]},{"type":"imports","elements":[{"name":"ActionItemsModule"},{"name":"AppRoutingModule"},{"name":"ArticleCardModule"},{"name":"DialogsModule"},{"name":"HotkeysModule"},{"name":"MaterialModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[{"name":"AppComponent"}]},{"type":"classes","elements":[]}]},{"name":"AppRoutingModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"ArticleCardModule","children":[{"type":"providers","elements":[{"name":"SettingsStorageService"}]},{"type":"declarations","elements":[{"name":"ArticleCardComponent"}]},{"type":"imports","elements":[{"name":"DialogsModule"}]},{"type":"exports","elements":[{"name":"ArticleCardComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"DialogsModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"AboutDialogComponent"},{"name":"CodeViewerDialogComponent"},{"name":"FeedDialogComponent"},{"name":"HeadlineOptionsDialogComponent"},{"name":"RSSChannelInfoDialogComponent"},{"name":"ShareDialogComponent"},{"name":"SubmitRssDialogComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"AboutDialogComponent"},{"name":"CodeViewerDialogComponent"},{"name":"FeedDialogComponent"},{"name":"HeadlineOptionsDialogComponent"},{"name":"RSSChannelInfoDialogComponent"},{"name":"ShareDialogComponent"},{"name":"SubmitRssDialogComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"DialogsModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"AboutDialogComponent"},{"name":"CodeViewerDialogComponent"},{"name":"FeedDialogComponent"},{"name":"HeadlineOptionsDialogComponent"},{"name":"RSSChannelInfoDialogComponent"},{"name":"ShareDialogComponent"},{"name":"SubmitRssDialogComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"HotkeysModule","children":[{"type":"providers","elements":[{"name":"HotkeysService"}]},{"type":"declarations","elements":[{"name":"HotkeyHelpDialogComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"HotkeyHelpDialogComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"MaterialModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"PipesModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"OrderByPipe"},{"name":"StripHtmlTagsPipe"},{"name":"TruncatePipe"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"OrderByPipe"},{"name":"StripHtmlTagsPipe"},{"name":"TruncatePipe"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"ReleaseNotesModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"ReleaseNotesComponent"}]},{"type":"imports","elements":[{"name":"ReleaseNotesRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"ReleaseNotesRoutingModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"SettingsModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"SettingsComponent"}]},{"type":"imports","elements":[{"name":"SettingsRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"SettingsRoutingModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"SharedModule","children":[{"type":"providers","elements":[{"name":"SharedService"}]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]}],"miscellaneous":{"variables":[{"name":"CDK_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/material.module.ts","type":"[]","defaultValue":"[\\n  A11yModule,\\n  OverlayModule,\\n  PortalModule\\n]"},{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/test.ts","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"defaultEnvironment","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environment.base.ts","type":"Environment","defaultValue":"{\\n  production: false,\\n  swLocation: \'/ngsw-worker.js\',\\n  latestVersion,\\n  gitRepoDefaults\\n}","description":"<p>Default environment that other enviroments can extend from. </p>\\n"},{"name":"DIALOG_MATERIAL_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/dialogs/dialogs.module.ts","type":"[]","defaultValue":"[\\n  MatAutocompleteModule,\\n  MatButtonModule,\\n  MatCheckboxModule,\\n  MatDialogModule,\\n  MatFormFieldModule,\\n  MatGridListModule,\\n  MatIconModule,\\n  MatInputModule,\\n  MatMenuModule,\\n  MatRippleModule,\\n  MatSelectModule,\\n  MatTooltipModule\\n]"},{"name":"DIALOGS","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/dialogs/dialogs.module.ts","type":"[]","defaultValue":"[\\n  AboutDialogComponent,\\n  CodeViewerDialogComponent,\\n  FeedDialogComponent,\\n  HeadlineOptionsDialogComponent,\\n  RSSChannelInfoDialogComponent,\\n  ShareDialogComponent,\\n  SubmitRssDialogComponent\\n]"},{"name":"DIALOGS","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/dialogs/dialogs.module.ts","type":"[]","defaultValue":"[\\n  MessageDialogComponent,\\n  PortalDialogComponent,\\n  PromptDialogComponent,\\n  SelectionDialogComponent\\n]"},{"name":"docsAssetsPath","ctype":"miscellaneous","subtype":"variable","file":"tools/gulp/tasks/docs.ts","type":"string","defaultValue":"\'projects/rss-reader/src/assets/docs\'"},{"name":"END_COMMENT_PATTERN","ctype":"miscellaneous","subtype":"variable","file":"tools/gulp/tasks/docs.ts","type":"","defaultValue":"/(\x3c!-- end-enclose-content --\x3e)/g"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environments/environment.httpserver.ts","type":"","defaultValue":"mergeWithDefaultEnv({\\n  production: true\\n})"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environments/environment.prod.ts","type":"","defaultValue":"mergeWithDefaultEnv({\\n  production: true,\\n  swLocation: \'/rss-reader/ngsw-worker.js\'\\n})"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environments/environment.ts","type":"","defaultValue":"defaultEnvironment"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environments/environment.test.ts","type":"Environment","defaultValue":"{\\n  latestVersion: new Version(mockVersionJson),\\n  production: false,\\n  gitRepoDefaults: mockGitRepoDefaults\\n}"},{"name":"GIT_REPO","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/pages/release-notes/release-notes.component.ts","type":"","defaultValue":"new InjectionToken<GitRepo>(\'Custom Git repository\')"},{"name":"gitRepoDefaults","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environment.base.ts","type":"GitRepo","defaultValue":"{\\n  host: \'https://github.com\',\\n  username: \'EdricChan03\',\\n  repo: \'rss-reader\'\\n}","description":"<p>Default configuration for the Git repository. </p>\\n"},{"name":"GUIDES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/guide-items.ts","type":"GuideItem[]","defaultValue":"[\\n  {\\n    id: \'getting-started\',\\n    document: \'assets/docs/guides/getting-started.html\',\\n    url: \'doc/guides/getting-started\',\\n    name: \'Getting Started\'\\n  },\\n  {\\n    id: \'generate-api-key\',\\n    document: \'assets/docs/guides/generate-api-key.html\',\\n    url: \'doc/guides/generate-api-key\',\\n    name: \'Generating an API Key\'\\n  },\\n  {\\n    id: \'troubleshooting\',\\n    document: \'assets/docs/guides/troubleshooting.html\',\\n    url: \'doc/guides/troubleshooting\',\\n    name: \'Troubleshooting\'\\n  }\\n]"},{"name":"hljs","ctype":"miscellaneous","subtype":"variable","file":"tools/gulp/tasks/docs.ts","type":"","defaultValue":"require(\'highlight.js\')"},{"name":"IMG_PATTERN","ctype":"miscellaneous","subtype":"variable","file":"tools/gulp/tasks/docs.ts","type":"","defaultValue":"/(<img[^>]*) src=\\"([^\\"]*)\\"/g"},{"name":"latestVersion","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environment.base.ts","type":"","defaultValue":"new Version(versionJson)","description":"<p>The latest version of the app. </p>\\n"},{"name":"LINK_PATTERN","ctype":"miscellaneous","subtype":"variable","file":"tools/gulp/tasks/docs.ts","type":"","defaultValue":"/(<a[^>]*) href=\\"([^\\"]*)\\"/g"},{"name":"markdown","ctype":"miscellaneous","subtype":"variable","file":"tools/gulp/tasks/docs.ts","type":"","defaultValue":"require(\'gulp-markdown\')"},{"name":"markdownOptions","ctype":"miscellaneous","subtype":"variable","file":"tools/gulp/tasks/docs.ts","type":"object","defaultValue":"{\\n  // Add syntax highlight using highlight.js\\n  highlight: (code: string, language: string): string => {\\n    if (language) {\\n      // highlight.js expects \\"typescript\\" written out, while Github supports \\"ts\\".\\n      const lang = language.toLowerCase() === \'ts\' ? \'typescript\' : language;\\n      return hljs.highlight(lang, code).value;\\n    }\\n\\n    return code;\\n  }\\n}"},{"name":"MATERIAL_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/pages/settings/settings.module.ts","type":"[]","defaultValue":"[\\n  MatButtonModule,\\n  MatCardModule,\\n  MatCheckboxModule,\\n  MatFormFieldModule,\\n  MatInputModule,\\n  MatSelectModule\\n]"},{"name":"MATERIAL_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/components/article-card/article-card.module.ts","type":"[]","defaultValue":"[\\n  MatButtonModule,\\n  MatCardModule,\\n  MatChipsModule,\\n  MatDialogModule,\\n  MatDividerModule,\\n  MatIconModule,\\n  MatMenuModule,\\n  MatTooltipModule\\n]"},{"name":"MATERIAL_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/material.module.ts","type":"[]","defaultValue":"[\\n  MatAutocompleteModule,\\n  MatButtonModule,\\n  MatCardModule,\\n  MatCheckboxModule,\\n  MatChipsModule,\\n  MatDialogModule,\\n  MatDividerModule,\\n  MatExpansionModule,\\n  MatFormFieldModule,\\n  MatGridListModule,\\n  MatIconModule,\\n  MatInputModule,\\n  MatListModule,\\n  MatMenuModule,\\n  MatProgressSpinnerModule,\\n  MatRadioModule,\\n  MatRippleModule,\\n  MatSelectModule,\\n  MatSidenavModule,\\n  MatSliderModule,\\n  MatSnackBarModule,\\n  MatToolbarModule,\\n  MatTooltipModule\\n]"},{"name":"MATERIAL_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/dialogs/dialogs.module.ts","type":"[]","defaultValue":"[\\n  MatButtonModule,\\n  MatDialogModule,\\n  MatFormFieldModule,\\n  MatInputModule,\\n  MatListModule\\n]"},{"name":"mdiSvgPath","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/material.module.ts","type":"string","defaultValue":"\'assets/mdi.svg\'"},{"name":"migrateKeys","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/models/rss2json-api/migrate-keys.ts","type":"","defaultValue":"{\\n  apiKey: \'api_key\',\\n  feedUrl: \'rss_url\',\\n  amount: \'count\'\\n}"},{"name":"mockGitRepoDefaults","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environments/environment.test.ts","type":"GitRepo","defaultValue":"{\\n  host: \'https://github.com\',\\n  username: \'FakeUsername248\',\\n  repo: \'mock-repo\'\\n}"},{"name":"nextKeyId","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/actionitem.service.ts","type":"number","defaultValue":"0","description":"<p>ID used to generate new action items with no explicitly-defined ID. </p>\\n"},{"name":"OVERLAYS","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/app.module.ts","type":"[]","defaultValue":"[\\n  OnboardingOverlayComponent\\n]"},{"name":"PIPES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/pipe/pipes.module.ts","type":"[]","defaultValue":"[\\n  OrderByPipe,\\n  StripHtmlTagsPipe,\\n  TruncatePipe\\n]"},{"name":"PRE_PATTERN","ctype":"miscellaneous","subtype":"variable","file":"tools/gulp/tasks/docs.ts","type":"","defaultValue":"/(<pre[^>]*)/g"},{"name":"RELEASE_NOTES_JSON","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/pages/release-notes/release-notes.component.ts","type":"","defaultValue":"new InjectionToken<ReleaseNotesJSON>(\'Release notes JSON file\', {\\n  providedIn: \'root\',\\n  factory: () => releaseNotesJsonFile\\n})"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/test.ts","type":"any"},{"name":"routerOptions","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/app.routing.ts","type":"ExtraOptions","defaultValue":"environment.routerOptions ? environment.routerOptions : {\\n  anchorScrolling: \'enabled\',\\n  scrollPositionRestoration: \'enabled\'\\n  // TODO: Uncomment once tracing isn\'t actually enabled on production builds,\\n  // which it currently is for some reason.\\n  // enableTracing: !environment.production\\n}"},{"name":"SETTINGS_STORAGE_CONFIG","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","type":"InjectionToken<SettingsStorageConfig>","defaultValue":"new InjectionToken(\'Settings storage config\', {\\n  factory: SETTINGS_STORAGE_DEFAULT_CONFIG_FACTORY\\n})","description":"<p>Configuration options to change the behavior of {@link SettingsStorageService}. </p>\\n"},{"name":"SETTINGS_STORAGE_KEY","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","type":"InjectionToken<string>","defaultValue":"new InjectionToken(\'Settings storage key\', {\\n  factory: () => \'settings\'\\n})","description":"<p>The settings key to store the settings in. (Default: <code>settings</code>) </p>\\n"},{"name":"SETTINGS_STORAGE_PROVIDER","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","type":"InjectionToken<Storage>","defaultValue":"new InjectionToken(\'Settings storage provider\', {\\n  factory: () => localStorage\\n})","description":"<p>The settings storage provider to use. (Default: <code>localStorage</code>) </p>\\n"},{"name":"START_COMMENT_PATTERN","ctype":"miscellaneous","subtype":"variable","file":"tools/gulp/tasks/docs.ts","type":"","defaultValue":"/(\x3c!-- start-enclose-content --\x3e)/g"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/components/article-card/article-card.stories.ts","type":"Story<ArticleCardComponent>","defaultValue":"(args: ArticleCardComponent) => ({\\n  component: ArticleCardComponent,\\n  template: `<app-article-card [article]=\\"article\\"></app-article-card>`,\\n  props: args\\n})"},{"name":"transform","ctype":"miscellaneous","subtype":"variable","file":"tools/gulp/tasks/docs.ts","type":"","defaultValue":"require(\'gulp-transform\')"},{"name":"WithArticle","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/components/article-card/article-card.stories.ts","type":"","defaultValue":"Template.bind({})"},{"name":"WithImage","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/components/article-card/article-card.stories.ts","type":"","defaultValue":"Template.bind({})"}],"functions":[{"name":"fixMarkdownDocImgs","file":"tools/gulp/tasks/docs.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"link"}],"returnType":"string","jsdoctags":[{"name":"link","tagName":{"text":"param"}}]},{"name":"fixMarkdownDocLinks","file":"tools/gulp/tasks/docs.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"link"},{"name":"filePath"}],"returnType":"string","jsdoctags":[{"name":"link","tagName":{"text":"param"}},{"name":"filePath","tagName":{"text":"param"}}]},{"name":"markedOptionsFactory","file":"projects/rss-reader/src/app/app.module.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[],"returnType":"MarkedOptions"},{"name":"mergeWithDefaultEnv","file":"projects/rss-reader/src/environment.base.ts","ctype":"miscellaneous","subtype":"function","description":"<p>Merges the specified environment with the default environment\\nand returns the result.</p>\\n","args":[{"name":"env"}],"returnType":"Environment","jsdoctags":[{"name":{"pos":1453,"end":1456,"flags":0,"escapedText":"env"},"tagName":{"pos":1447,"end":1452,"flags":0,"escapedText":"param"},"comment":"<p>The enviroment to merge</p>\\n"}]},{"name":"SETTINGS_STORAGE_DEFAULT_CONFIG_FACTORY","file":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[],"returnType":"SettingsStorageConfig"},{"name":"transformMarkdownFiles","file":"tools/gulp/tasks/docs.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"content"},{"name":"file","type":"any"}],"returnType":"Buffer | string","jsdoctags":[{"name":"content","tagName":{"text":"param"}},{"name":"file","type":"any","tagName":{"text":"param"}}]}],"typealiases":[{"name":"ButtonType","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"negative\\" | \\"neutral\\" | \\"positive\\"","file":"projects/rss-reader/src/app/core/dialogs/models.ts","description":"","kind":168},{"name":"DialogType","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"alert\\" | \\"confirm\\" | \\"message\\" | \\"prompt\\" | \\"portal\\" | \\"selection\\"","file":"projects/rss-reader/src/app/core/dialogs/models.ts","description":"","kind":168},{"name":"GitRepo","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type | string","file":"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts","description":"<p>Contains either a string representing a link to the repository, or an\\nobject containing metadata of the repository.</p>\\n","kind":168},{"name":"Platform","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"windows\\" | \\"macos\\" | \\"linux\\" | \\"other\\"","file":"projects/rss-reader/src/app/hotkeys/hotkeys.service.ts","description":"","kind":168},{"name":"ReleaseStatus","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"draft\\" | \\"wip\\" | \\"deprecated\\" | \\"released\\" | \\"unreleased\\" | \\"other\\"","file":"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts","description":"","kind":168}],"enumerations":[{"name":"DialogResult","childs":[{"name":"NEGATIVE","value":"cancel"},{"name":"CANCEL","value":"cancel"},{"name":"NEUTRAL","value":"neutral"},{"name":"POSITIVE","value":"ok"},{"name":"OK","value":"ok"}],"ctype":"miscellaneous","subtype":"enum","description":"<p>The result returned by the dialog. </p>\\n","file":"projects/rss-reader/src/app/core/dialogs/models.ts"}],"groupedVariables":{"projects/rss-reader/src/app/material.module.ts":[{"name":"CDK_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/material.module.ts","type":"[]","defaultValue":"[\\n  A11yModule,\\n  OverlayModule,\\n  PortalModule\\n]"},{"name":"MATERIAL_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/material.module.ts","type":"[]","defaultValue":"[\\n  MatAutocompleteModule,\\n  MatButtonModule,\\n  MatCardModule,\\n  MatCheckboxModule,\\n  MatChipsModule,\\n  MatDialogModule,\\n  MatDividerModule,\\n  MatExpansionModule,\\n  MatFormFieldModule,\\n  MatGridListModule,\\n  MatIconModule,\\n  MatInputModule,\\n  MatListModule,\\n  MatMenuModule,\\n  MatProgressSpinnerModule,\\n  MatRadioModule,\\n  MatRippleModule,\\n  MatSelectModule,\\n  MatSidenavModule,\\n  MatSliderModule,\\n  MatSnackBarModule,\\n  MatToolbarModule,\\n  MatTooltipModule\\n]"},{"name":"mdiSvgPath","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/material.module.ts","type":"string","defaultValue":"\'assets/mdi.svg\'"}],"projects/rss-reader/src/test.ts":[{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/test.ts","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/test.ts","type":"any"}],"projects/rss-reader/src/environment.base.ts":[{"name":"defaultEnvironment","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environment.base.ts","type":"Environment","defaultValue":"{\\n  production: false,\\n  swLocation: \'/ngsw-worker.js\',\\n  latestVersion,\\n  gitRepoDefaults\\n}","description":"<p>Default environment that other enviroments can extend from. </p>\\n"},{"name":"gitRepoDefaults","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environment.base.ts","type":"GitRepo","defaultValue":"{\\n  host: \'https://github.com\',\\n  username: \'EdricChan03\',\\n  repo: \'rss-reader\'\\n}","description":"<p>Default configuration for the Git repository. </p>\\n"},{"name":"latestVersion","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environment.base.ts","type":"","defaultValue":"new Version(versionJson)","description":"<p>The latest version of the app. </p>\\n"}],"projects/rss-reader/src/app/dialogs/dialogs.module.ts":[{"name":"DIALOG_MATERIAL_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/dialogs/dialogs.module.ts","type":"[]","defaultValue":"[\\n  MatAutocompleteModule,\\n  MatButtonModule,\\n  MatCheckboxModule,\\n  MatDialogModule,\\n  MatFormFieldModule,\\n  MatGridListModule,\\n  MatIconModule,\\n  MatInputModule,\\n  MatMenuModule,\\n  MatRippleModule,\\n  MatSelectModule,\\n  MatTooltipModule\\n]"},{"name":"DIALOGS","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/dialogs/dialogs.module.ts","type":"[]","defaultValue":"[\\n  AboutDialogComponent,\\n  CodeViewerDialogComponent,\\n  FeedDialogComponent,\\n  HeadlineOptionsDialogComponent,\\n  RSSChannelInfoDialogComponent,\\n  ShareDialogComponent,\\n  SubmitRssDialogComponent\\n]"}],"projects/rss-reader/src/app/core/dialogs/dialogs.module.ts":[{"name":"DIALOGS","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/dialogs/dialogs.module.ts","type":"[]","defaultValue":"[\\n  MessageDialogComponent,\\n  PortalDialogComponent,\\n  PromptDialogComponent,\\n  SelectionDialogComponent\\n]"},{"name":"MATERIAL_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/dialogs/dialogs.module.ts","type":"[]","defaultValue":"[\\n  MatButtonModule,\\n  MatDialogModule,\\n  MatFormFieldModule,\\n  MatInputModule,\\n  MatListModule\\n]"}],"tools/gulp/tasks/docs.ts":[{"name":"docsAssetsPath","ctype":"miscellaneous","subtype":"variable","file":"tools/gulp/tasks/docs.ts","type":"string","defaultValue":"\'projects/rss-reader/src/assets/docs\'"},{"name":"END_COMMENT_PATTERN","ctype":"miscellaneous","subtype":"variable","file":"tools/gulp/tasks/docs.ts","type":"","defaultValue":"/(\x3c!-- end-enclose-content --\x3e)/g"},{"name":"hljs","ctype":"miscellaneous","subtype":"variable","file":"tools/gulp/tasks/docs.ts","type":"","defaultValue":"require(\'highlight.js\')"},{"name":"IMG_PATTERN","ctype":"miscellaneous","subtype":"variable","file":"tools/gulp/tasks/docs.ts","type":"","defaultValue":"/(<img[^>]*) src=\\"([^\\"]*)\\"/g"},{"name":"LINK_PATTERN","ctype":"miscellaneous","subtype":"variable","file":"tools/gulp/tasks/docs.ts","type":"","defaultValue":"/(<a[^>]*) href=\\"([^\\"]*)\\"/g"},{"name":"markdown","ctype":"miscellaneous","subtype":"variable","file":"tools/gulp/tasks/docs.ts","type":"","defaultValue":"require(\'gulp-markdown\')"},{"name":"markdownOptions","ctype":"miscellaneous","subtype":"variable","file":"tools/gulp/tasks/docs.ts","type":"object","defaultValue":"{\\n  // Add syntax highlight using highlight.js\\n  highlight: (code: string, language: string): string => {\\n    if (language) {\\n      // highlight.js expects \\"typescript\\" written out, while Github supports \\"ts\\".\\n      const lang = language.toLowerCase() === \'ts\' ? \'typescript\' : language;\\n      return hljs.highlight(lang, code).value;\\n    }\\n\\n    return code;\\n  }\\n}"},{"name":"PRE_PATTERN","ctype":"miscellaneous","subtype":"variable","file":"tools/gulp/tasks/docs.ts","type":"","defaultValue":"/(<pre[^>]*)/g"},{"name":"START_COMMENT_PATTERN","ctype":"miscellaneous","subtype":"variable","file":"tools/gulp/tasks/docs.ts","type":"","defaultValue":"/(\x3c!-- start-enclose-content --\x3e)/g"},{"name":"transform","ctype":"miscellaneous","subtype":"variable","file":"tools/gulp/tasks/docs.ts","type":"","defaultValue":"require(\'gulp-transform\')"}],"projects/rss-reader/src/environments/environment.httpserver.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environments/environment.httpserver.ts","type":"","defaultValue":"mergeWithDefaultEnv({\\n  production: true\\n})"}],"projects/rss-reader/src/environments/environment.prod.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environments/environment.prod.ts","type":"","defaultValue":"mergeWithDefaultEnv({\\n  production: true,\\n  swLocation: \'/rss-reader/ngsw-worker.js\'\\n})"}],"projects/rss-reader/src/environments/environment.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environments/environment.ts","type":"","defaultValue":"defaultEnvironment"}],"projects/rss-reader/src/environments/environment.test.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environments/environment.test.ts","type":"Environment","defaultValue":"{\\n  latestVersion: new Version(mockVersionJson),\\n  production: false,\\n  gitRepoDefaults: mockGitRepoDefaults\\n}"},{"name":"mockGitRepoDefaults","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environments/environment.test.ts","type":"GitRepo","defaultValue":"{\\n  host: \'https://github.com\',\\n  username: \'FakeUsername248\',\\n  repo: \'mock-repo\'\\n}"}],"projects/rss-reader/src/app/pages/release-notes/release-notes.component.ts":[{"name":"GIT_REPO","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/pages/release-notes/release-notes.component.ts","type":"","defaultValue":"new InjectionToken<GitRepo>(\'Custom Git repository\')"},{"name":"RELEASE_NOTES_JSON","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/pages/release-notes/release-notes.component.ts","type":"","defaultValue":"new InjectionToken<ReleaseNotesJSON>(\'Release notes JSON file\', {\\n  providedIn: \'root\',\\n  factory: () => releaseNotesJsonFile\\n})"}],"projects/rss-reader/src/app/guide-items.ts":[{"name":"GUIDES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/guide-items.ts","type":"GuideItem[]","defaultValue":"[\\n  {\\n    id: \'getting-started\',\\n    document: \'assets/docs/guides/getting-started.html\',\\n    url: \'doc/guides/getting-started\',\\n    name: \'Getting Started\'\\n  },\\n  {\\n    id: \'generate-api-key\',\\n    document: \'assets/docs/guides/generate-api-key.html\',\\n    url: \'doc/guides/generate-api-key\',\\n    name: \'Generating an API Key\'\\n  },\\n  {\\n    id: \'troubleshooting\',\\n    document: \'assets/docs/guides/troubleshooting.html\',\\n    url: \'doc/guides/troubleshooting\',\\n    name: \'Troubleshooting\'\\n  }\\n]"}],"projects/rss-reader/src/app/pages/settings/settings.module.ts":[{"name":"MATERIAL_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/pages/settings/settings.module.ts","type":"[]","defaultValue":"[\\n  MatButtonModule,\\n  MatCardModule,\\n  MatCheckboxModule,\\n  MatFormFieldModule,\\n  MatInputModule,\\n  MatSelectModule\\n]"}],"projects/rss-reader/src/app/components/article-card/article-card.module.ts":[{"name":"MATERIAL_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/components/article-card/article-card.module.ts","type":"[]","defaultValue":"[\\n  MatButtonModule,\\n  MatCardModule,\\n  MatChipsModule,\\n  MatDialogModule,\\n  MatDividerModule,\\n  MatIconModule,\\n  MatMenuModule,\\n  MatTooltipModule\\n]"}],"projects/rss-reader/src/app/models/rss2json-api/migrate-keys.ts":[{"name":"migrateKeys","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/models/rss2json-api/migrate-keys.ts","type":"","defaultValue":"{\\n  apiKey: \'api_key\',\\n  feedUrl: \'rss_url\',\\n  amount: \'count\'\\n}"}],"projects/rss-reader/src/app/actionitem.service.ts":[{"name":"nextKeyId","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/actionitem.service.ts","type":"number","defaultValue":"0","description":"<p>ID used to generate new action items with no explicitly-defined ID. </p>\\n"}],"projects/rss-reader/src/app/app.module.ts":[{"name":"OVERLAYS","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/app.module.ts","type":"[]","defaultValue":"[\\n  OnboardingOverlayComponent\\n]"}],"projects/rss-reader/src/app/pipe/pipes.module.ts":[{"name":"PIPES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/pipe/pipes.module.ts","type":"[]","defaultValue":"[\\n  OrderByPipe,\\n  StripHtmlTagsPipe,\\n  TruncatePipe\\n]"}],"projects/rss-reader/src/app/app.routing.ts":[{"name":"routerOptions","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/app.routing.ts","type":"ExtraOptions","defaultValue":"environment.routerOptions ? environment.routerOptions : {\\n  anchorScrolling: \'enabled\',\\n  scrollPositionRestoration: \'enabled\'\\n  // TODO: Uncomment once tracing isn\'t actually enabled on production builds,\\n  // which it currently is for some reason.\\n  // enableTracing: !environment.production\\n}"}],"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts":[{"name":"SETTINGS_STORAGE_CONFIG","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","type":"InjectionToken<SettingsStorageConfig>","defaultValue":"new InjectionToken(\'Settings storage config\', {\\n  factory: SETTINGS_STORAGE_DEFAULT_CONFIG_FACTORY\\n})","description":"<p>Configuration options to change the behavior of {@link SettingsStorageService}. </p>\\n"},{"name":"SETTINGS_STORAGE_KEY","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","type":"InjectionToken<string>","defaultValue":"new InjectionToken(\'Settings storage key\', {\\n  factory: () => \'settings\'\\n})","description":"<p>The settings key to store the settings in. (Default: <code>settings</code>) </p>\\n"},{"name":"SETTINGS_STORAGE_PROVIDER","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","type":"InjectionToken<Storage>","defaultValue":"new InjectionToken(\'Settings storage provider\', {\\n  factory: () => localStorage\\n})","description":"<p>The settings storage provider to use. (Default: <code>localStorage</code>) </p>\\n"}],"projects/rss-reader/src/app/components/article-card/article-card.stories.ts":[{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/components/article-card/article-card.stories.ts","type":"Story<ArticleCardComponent>","defaultValue":"(args: ArticleCardComponent) => ({\\n  component: ArticleCardComponent,\\n  template: `<app-article-card [article]=\\"article\\"></app-article-card>`,\\n  props: args\\n})"},{"name":"WithArticle","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/components/article-card/article-card.stories.ts","type":"","defaultValue":"Template.bind({})"},{"name":"WithImage","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/components/article-card/article-card.stories.ts","type":"","defaultValue":"Template.bind({})"}]},"groupedFunctions":{"tools/gulp/tasks/docs.ts":[{"name":"fixMarkdownDocImgs","file":"tools/gulp/tasks/docs.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"link"}],"returnType":"string","jsdoctags":[{"name":"link","tagName":{"text":"param"}}]},{"name":"fixMarkdownDocLinks","file":"tools/gulp/tasks/docs.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"link"},{"name":"filePath"}],"returnType":"string","jsdoctags":[{"name":"link","tagName":{"text":"param"}},{"name":"filePath","tagName":{"text":"param"}}]},{"name":"transformMarkdownFiles","file":"tools/gulp/tasks/docs.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"content"},{"name":"file","type":"any"}],"returnType":"Buffer | string","jsdoctags":[{"name":"content","tagName":{"text":"param"}},{"name":"file","type":"any","tagName":{"text":"param"}}]}],"projects/rss-reader/src/app/app.module.ts":[{"name":"markedOptionsFactory","file":"projects/rss-reader/src/app/app.module.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[],"returnType":"MarkedOptions"}],"projects/rss-reader/src/environment.base.ts":[{"name":"mergeWithDefaultEnv","file":"projects/rss-reader/src/environment.base.ts","ctype":"miscellaneous","subtype":"function","description":"<p>Merges the specified environment with the default environment\\nand returns the result.</p>\\n","args":[{"name":"env"}],"returnType":"Environment","jsdoctags":[{"name":{"pos":1453,"end":1456,"flags":0,"escapedText":"env"},"tagName":{"pos":1447,"end":1452,"flags":0,"escapedText":"param"},"comment":"<p>The enviroment to merge</p>\\n"}]}],"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts":[{"name":"SETTINGS_STORAGE_DEFAULT_CONFIG_FACTORY","file":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[],"returnType":"SettingsStorageConfig"}]},"groupedEnumerations":{"projects/rss-reader/src/app/core/dialogs/models.ts":[{"name":"DialogResult","childs":[{"name":"NEGATIVE","value":"cancel"},{"name":"CANCEL","value":"cancel"},{"name":"NEUTRAL","value":"neutral"},{"name":"POSITIVE","value":"ok"},{"name":"OK","value":"ok"}],"ctype":"miscellaneous","subtype":"enum","description":"<p>The result returned by the dialog. </p>\\n","file":"projects/rss-reader/src/app/core/dialogs/models.ts"}]},"groupedTypeAliases":{"projects/rss-reader/src/app/core/dialogs/models.ts":[{"name":"ButtonType","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"negative\\" | \\"neutral\\" | \\"positive\\"","file":"projects/rss-reader/src/app/core/dialogs/models.ts","description":"","kind":168},{"name":"DialogType","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"alert\\" | \\"confirm\\" | \\"message\\" | \\"prompt\\" | \\"portal\\" | \\"selection\\"","file":"projects/rss-reader/src/app/core/dialogs/models.ts","description":"","kind":168}],"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts":[{"name":"GitRepo","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type | string","file":"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts","description":"<p>Contains either a string representing a link to the repository, or an\\nobject containing metadata of the repository.</p>\\n","kind":168},{"name":"ReleaseStatus","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"draft\\" | \\"wip\\" | \\"deprecated\\" | \\"released\\" | \\"unreleased\\" | \\"other\\"","file":"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts","description":"","kind":168}],"projects/rss-reader/src/app/hotkeys/hotkeys.service.ts":[{"name":"Platform","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"windows\\" | \\"macos\\" | \\"linux\\" | \\"other\\"","file":"projects/rss-reader/src/app/hotkeys/hotkeys.service.ts","description":"","kind":168}]}},"routes":{"name":"<root>","kind":"module","className":"AppModule","children":[{"name":"routes","filename":"projects/rss-reader/src/app/app.routing.ts","module":"AppRoutingModule","children":[{"path":"release-notes","loadChildren":"./pages/release-notes/release-notes.module#ReleaseNotesModule","children":[{"kind":"module","children":[{"name":"routes","filename":"projects/rss-reader/src/app/pages/release-notes/release-notes-routing.module.ts","module":"ReleaseNotesRoutingModule","children":[{"path":"","component":"ReleaseNotesComponent"}],"kind":"module"}],"module":"ReleaseNotesModule"}]},{"path":"settings","loadChildren":"./pages/settings/settings.module#SettingsModule","children":[{"kind":"module","children":[{"name":"routes","filename":"projects/rss-reader/src/app/pages/settings/settings-routing.module.ts","module":"SettingsRoutingModule","children":[{"path":"","component":"SettingsComponent"}],"kind":"module"}],"module":"SettingsModule"}]},{"path":"doc/:docTypeId/:docId","component":"GuideViewerComponent"},{"path":"docs","component":"GuidesListComponent"},{"path":"feed","component":"FeedComponent"},{"path":"headlines","component":"HeadlinesComponent"},{"path":"home","redirectTo":"/feed"},{"path":"","pathMatch":"full","redirectTo":"/feed"},{"path":"**","component":"PageNotFoundComponent"}],"kind":"module"}]},"coverage":{"count":31,"status":"medium","files":[{"filePath":"projects/rss-reader/e2e/src/app.po.ts","type":"class","linktype":"classe","name":"AppPage","coveragePercent":33,"coverageCount":"1/3","status":"medium"},{"filePath":"projects/rss-reader/src/app/actionitem.service.ts","type":"component","linktype":"component","name":"ActionItemsComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/rss-reader/src/app/actionitem.service.ts","type":"injectable","linktype":"injectable","name":"ActionItemService","coveragePercent":83,"coverageCount":"10/12","status":"very-good"},{"filePath":"projects/rss-reader/src/app/actionitem.service.ts","type":"interface","linktype":"interface","name":"ActionItem","coveragePercent":100,"coverageCount":"10/10","status":"very-good"},{"filePath":"projects/rss-reader/src/app/actionitem.service.ts","type":"interface","linktype":"interface","name":"ActionItemToggle","coveragePercent":100,"coverageCount":"2/2","status":"very-good"},{"filePath":"projects/rss-reader/src/app/actionitem.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"nextKeyId","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/rss-reader/src/app/app.component.ts","type":"component","linktype":"component","name":"AppComponent","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"projects/rss-reader/src/app/app.module.ts","type":"function","linksubtype":"function","name":"markedOptionsFactory","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/app.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"OVERLAYS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/app.routing.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"routerOptions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/components/article-card/article-card.component.ts","type":"component","linktype":"component","name":"ArticleCardComponent","coveragePercent":36,"coverageCount":"4/11","status":"medium"},{"filePath":"projects/rss-reader/src/app/components/article-card/article-card.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"MATERIAL_MODULES","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/components/article-card/article-card.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/components/article-card/article-card.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"WithArticle","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/components/article-card/article-card.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"WithImage","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/components/article-card/testing/article-card-harness-filters.ts","type":"interface","linktype":"interface","name":"ArticleCardComponentHarnessFilters","coveragePercent":83,"coverageCount":"5/6","status":"very-good"},{"filePath":"projects/rss-reader/src/app/components/article-card/testing/article-card-harness.ts","type":"class","linktype":"classe","name":"ArticleCardComponentHarness","coveragePercent":68,"coverageCount":"13/19","status":"good"},{"filePath":"projects/rss-reader/src/app/components/expansion-panel/expansion-panel.component.ts","type":"component","linktype":"component","name":"ExpansionPanelComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/rss-reader/src/app/core/dialogs/dialog-builder/dialog-builder.service.ts","type":"injectable","linktype":"injectable","name":"DialogBuilderService","coveragePercent":82,"coverageCount":"14/17","status":"very-good"},{"filePath":"projects/rss-reader/src/app/core/dialogs/dialog.ts","type":"class","linktype":"classe","name":"Dialog","coveragePercent":50,"coverageCount":"2/4","status":"medium"},{"filePath":"projects/rss-reader/src/app/core/dialogs/dialogs.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DIALOGS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/core/dialogs/dialogs.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"MATERIAL_MODULES","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/core/dialogs/dialogs.service.ts","type":"injectable","linktype":"injectable","name":"DialogsService","coveragePercent":54,"coverageCount":"6/11","status":"good"},{"filePath":"projects/rss-reader/src/app/core/dialogs/message-dialog/message-dialog.component.ts","type":"component","linktype":"component","name":"MessageDialogComponent","coveragePercent":42,"coverageCount":"3/7","status":"medium"},{"filePath":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","linktype":"interface","name":"BaseDialogOpts","coveragePercent":50,"coverageCount":"1/2","status":"medium"},{"filePath":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","linktype":"interface","name":"DialogBtnOpts","coveragePercent":88,"coverageCount":"8/9","status":"very-good"},{"filePath":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","linktype":"interface","name":"DialogOpts","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","linktype":"interface","name":"DialogOptsWithMsg","coveragePercent":75,"coverageCount":"3/4","status":"good"},{"filePath":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","linktype":"interface","name":"PortalDialogOpts","coveragePercent":50,"coverageCount":"1/2","status":"medium"},{"filePath":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","linktype":"interface","name":"PromptDialogInputConfig","coveragePercent":83,"coverageCount":"5/6","status":"very-good"},{"filePath":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","linktype":"interface","name":"PromptDialogOpts","coveragePercent":83,"coverageCount":"5/6","status":"very-good"},{"filePath":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","linktype":"interface","name":"SelectionDialogOption","coveragePercent":85,"coverageCount":"6/7","status":"very-good"},{"filePath":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","linktype":"interface","name":"SelectionDialogOpts","coveragePercent":50,"coverageCount":"1/2","status":"medium"},{"filePath":"projects/rss-reader/src/app/core/dialogs/portal-dialog/portal-dialog.component.ts","type":"component","linktype":"component","name":"PortalDialogComponent","coveragePercent":42,"coverageCount":"3/7","status":"medium"},{"filePath":"projects/rss-reader/src/app/core/dialogs/prompt-dialog/prompt-dialog.component.ts","type":"component","linktype":"component","name":"PromptDialogComponent","coveragePercent":40,"coverageCount":"4/10","status":"medium"},{"filePath":"projects/rss-reader/src/app/core/dialogs/selection-dialog/selection-dialog.component.ts","type":"component","linktype":"component","name":"SelectionDialogComponent","coveragePercent":42,"coverageCount":"3/7","status":"medium"},{"filePath":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","type":"injectable","linktype":"injectable","name":"SettingsStorageService","coveragePercent":50,"coverageCount":"2/4","status":"medium"},{"filePath":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","type":"interface","linktype":"interface","name":"SettingsStorageConfig","coveragePercent":100,"coverageCount":"3/3","status":"very-good"},{"filePath":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","type":"function","linksubtype":"function","name":"SETTINGS_STORAGE_DEFAULT_CONFIG_FACTORY","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SETTINGS_STORAGE_CONFIG","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SETTINGS_STORAGE_KEY","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SETTINGS_STORAGE_PROVIDER","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/rss-reader/src/app/core/testing/utils/mock-storage.ts","type":"class","linktype":"classe","name":"MockStorage","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"projects/rss-reader/src/app/dialogs/about-dialog/about-dialog.component.ts","type":"component","linktype":"component","name":"AboutDialogComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/rss-reader/src/app/dialogs/code-viewer-dialog/code-viewer-dialog.component.ts","type":"component","linktype":"component","name":"CodeViewerDialogComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/rss-reader/src/app/dialogs/dialogs.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DIALOG_MATERIAL_MODULES","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/dialogs/dialogs.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DIALOGS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/dialogs/feed-dialog/feed-dialog.component.ts","type":"component","linktype":"component","name":"FeedDialogComponent","coveragePercent":15,"coverageCount":"2/13","status":"low"},{"filePath":"projects/rss-reader/src/app/dialogs/headline-options-dialog/headline-options-dialog.component.ts","type":"component","linktype":"component","name":"HeadlineOptionsDialogComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"projects/rss-reader/src/app/dialogs/headline-options-dialog/headline-options-dialog.component.ts","type":"interface","linktype":"interface","name":"HeadlineOptions","coveragePercent":80,"coverageCount":"4/5","status":"very-good"},{"filePath":"projects/rss-reader/src/app/dialogs/rss-channel-info-dialog/rss-channel-info-dialog.component.ts","type":"component","linktype":"component","name":"RSSChannelInfoDialogComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/rss-reader/src/app/dialogs/share-dialog/share-dialog.component.ts","type":"component","linktype":"component","name":"ShareDialogComponent","coveragePercent":10,"coverageCount":"1/10","status":"low"},{"filePath":"projects/rss-reader/src/app/dialogs/submit-rss-dialog/submit-rss-dialog.component.ts","type":"component","linktype":"component","name":"SubmitRssDialogComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/rss-reader/src/app/feed/feed.component.ts","type":"component","linktype":"component","name":"FeedComponent","coveragePercent":0,"coverageCount":"0/16","status":"low"},{"filePath":"projects/rss-reader/src/app/feed/feed.component.ts","type":"interface","linktype":"interface","name":"FeedOptions","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/rss-reader/src/app/guide-items.ts","type":"injectable","linktype":"injectable","name":"GuideItemsService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/rss-reader/src/app/guide-items.ts","type":"interface","linktype":"interface","name":"GuideItem","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/rss-reader/src/app/guide-items.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"GUIDES","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/headlines/headlines.component.ts","type":"component","linktype":"component","name":"HeadlinesComponent","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"projects/rss-reader/src/app/hotkeys/hotkey-help-dialog/hotkey-help-dialog.component.ts","type":"component","linktype":"component","name":"HotkeyHelpDialogComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"projects/rss-reader/src/app/hotkeys/hotkeys.service.ts","type":"injectable","linktype":"injectable","name":"HotkeysService","coveragePercent":25,"coverageCount":"2/8","status":"low"},{"filePath":"projects/rss-reader/src/app/hotkeys/hotkeys.service.ts","type":"interface","linktype":"interface","name":"Hotkey","coveragePercent":66,"coverageCount":"2/3","status":"good"},{"filePath":"projects/rss-reader/src/app/hotkeys/hotkeys.service.ts","type":"interface","linktype":"interface","name":"HotkeyOptions","coveragePercent":83,"coverageCount":"5/6","status":"very-good"},{"filePath":"projects/rss-reader/src/app/material.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"CDK_MODULES","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/material.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"MATERIAL_MODULES","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/material.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"mdiSvgPath","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/models/feed-category.ts","type":"interface","linktype":"interface","name":"FeedCategory","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/rss-reader/src/app/models/feed-channel.ts","type":"interface","linktype":"interface","name":"FeedChannel","coveragePercent":75,"coverageCount":"3/4","status":"good"},{"filePath":"projects/rss-reader/src/app/models/feed-entry.ts","type":"interface","linktype":"interface","name":"FeedEntry","coveragePercent":63,"coverageCount":"7/11","status":"good"},{"filePath":"projects/rss-reader/src/app/models/feed-info.ts","type":"interface","linktype":"interface","name":"FeedInfo","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"projects/rss-reader/src/app/models/feed.ts","type":"interface","linktype":"interface","name":"Feed","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/rss-reader/src/app/models/news-api/top-headlines-article.ts","type":"interface","linktype":"interface","name":"NewsAPITopHeadlinesArticle","coveragePercent":88,"coverageCount":"8/9","status":"very-good"},{"filePath":"projects/rss-reader/src/app/models/news-api/top-headlines.ts","type":"interface","linktype":"interface","name":"NewsAPITopHeadlines","coveragePercent":75,"coverageCount":"3/4","status":"good"},{"filePath":"projects/rss-reader/src/app/models/news-api/top-headlines.ts","type":"interface","linktype":"interface","name":"NewsAPITopHeadlinesOpts","coveragePercent":85,"coverageCount":"6/7","status":"very-good"},{"filePath":"projects/rss-reader/src/app/models/rest-countries-api/index.ts","type":"interface","linktype":"interface","name":"RestCountriesAPICountry","coveragePercent":96,"coverageCount":"24/25","status":"very-good"},{"filePath":"projects/rss-reader/src/app/models/rest-countries-api/index.ts","type":"interface","linktype":"interface","name":"RestCountriesAPICountryCurrency","coveragePercent":75,"coverageCount":"3/4","status":"good"},{"filePath":"projects/rss-reader/src/app/models/rest-countries-api/index.ts","type":"interface","linktype":"interface","name":"RestCountriesAPICountryLanguage","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/rss-reader/src/app/models/rest-countries-api/index.ts","type":"interface","linktype":"interface","name":"RestCountriesAPICountryRegionalBloc","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/rss-reader/src/app/models/rest-countries-api/index.ts","type":"interface","linktype":"interface","name":"RestCountriesAPICountryTranslation","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/models/rss2json-api/channel.ts","type":"interface","linktype":"interface","name":"Rss2JsonResponseChannel","coveragePercent":85,"coverageCount":"6/7","status":"very-good"},{"filePath":"projects/rss-reader/src/app/models/rss2json-api/item.ts","type":"interface","linktype":"interface","name":"Rss2JsonResponseItem","coveragePercent":90,"coverageCount":"10/11","status":"very-good"},{"filePath":"projects/rss-reader/src/app/models/rss2json-api/migrate-keys.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"migrateKeys","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/models/rss2json-api/params.ts","type":"interface","linktype":"interface","name":"Rss2JsonParams","coveragePercent":85,"coverageCount":"6/7","status":"very-good"},{"filePath":"projects/rss-reader/src/app/models/rss2json-api/response.ts","type":"interface","linktype":"interface","name":"Rss2JsonResponse","coveragePercent":60,"coverageCount":"3/5","status":"good"},{"filePath":"projects/rss-reader/src/app/models/settings.ts","type":"interface","linktype":"interface","name":"Settings","coveragePercent":90,"coverageCount":"9/10","status":"very-good"},{"filePath":"projects/rss-reader/src/app/overlay.service.ts","type":"injectable","linktype":"injectable","name":"OverlayService","coveragePercent":54,"coverageCount":"6/11","status":"good"},{"filePath":"projects/rss-reader/src/app/overlays/onboarding-overlay/onboarding-overlay.component.ts","type":"component","linktype":"component","name":"OnboardingOverlayComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"projects/rss-reader/src/app/page-not-found/page-not-found.component.ts","type":"component","linktype":"component","name":"PageNotFoundComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/rss-reader/src/app/pages/doc-viewer/doc-viewer.component.ts","type":"component","linktype":"component","name":"DocViewerComponent","coveragePercent":27,"coverageCount":"3/11","status":"medium"},{"filePath":"projects/rss-reader/src/app/pages/guide-list/guide-list.component.ts","type":"component","linktype":"component","name":"GuidesListComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/rss-reader/src/app/pages/guide-viewer/guide-viewer.component.ts","type":"component","linktype":"component","name":"GuideViewerComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts","type":"interface","linktype":"interface","name":"Release","coveragePercent":87,"coverageCount":"7/8","status":"very-good"},{"filePath":"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts","type":"interface","linktype":"interface","name":"ReleaseNotesJSON","coveragePercent":80,"coverageCount":"4/5","status":"very-good"},{"filePath":"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts","type":"interface","linktype":"interface","name":"Releases","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/pages/release-notes/release-notes.component.ts","type":"component","linktype":"component","name":"ReleaseNotesComponent","coveragePercent":63,"coverageCount":"7/11","status":"good"},{"filePath":"projects/rss-reader/src/app/pages/release-notes/release-notes.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"GIT_REPO","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/pages/release-notes/release-notes.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"RELEASE_NOTES_JSON","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/pages/settings/settings.component.ts","type":"component","linktype":"component","name":"SettingsComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"projects/rss-reader/src/app/pages/settings/settings.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"MATERIAL_MODULES","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/pipe/orderby.pipe.ts","type":"pipe","linktype":"pipe","name":"OrderByPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/pipe/pipes.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"PIPES","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/pipe/strip-html-tags.pipe.ts","type":"pipe","linktype":"pipe","name":"StripHtmlTagsPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/pipe/truncate.pipe.ts","type":"pipe","linktype":"pipe","name":"TruncatePipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/shared.service.ts","type":"injectable","linktype":"injectable","name":"SharedService","coveragePercent":37,"coverageCount":"3/8","status":"medium"},{"filePath":"projects/rss-reader/src/app/shared.service.ts","type":"interface","linktype":"interface","name":"SnackBarOpts","coveragePercent":83,"coverageCount":"5/6","status":"very-good"},{"filePath":"projects/rss-reader/src/environment.base.ts","type":"interface","linktype":"interface","name":"Environment","coveragePercent":100,"coverageCount":"6/6","status":"very-good"},{"filePath":"projects/rss-reader/src/environment.base.ts","type":"function","linksubtype":"function","name":"mergeWithDefaultEnv","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/rss-reader/src/environment.base.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"defaultEnvironment","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/rss-reader/src/environment.base.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"gitRepoDefaults","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/rss-reader/src/environment.base.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"latestVersion","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/rss-reader/src/environments/environment.httpserver.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/environments/environment.prod.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/environments/environment.test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/environments/environment.test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"mockGitRepoDefaults","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/environments/environment.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"context","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"require","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"tools/gulp/tasks/docs.ts","type":"function","linksubtype":"function","name":"fixMarkdownDocImgs","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"tools/gulp/tasks/docs.ts","type":"function","linksubtype":"function","name":"fixMarkdownDocLinks","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"tools/gulp/tasks/docs.ts","type":"function","linksubtype":"function","name":"transformMarkdownFiles","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"tools/gulp/tasks/docs.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"docsAssetsPath","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"tools/gulp/tasks/docs.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"END_COMMENT_PATTERN","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"tools/gulp/tasks/docs.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"hljs","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"tools/gulp/tasks/docs.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"IMG_PATTERN","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"tools/gulp/tasks/docs.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"LINK_PATTERN","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"tools/gulp/tasks/docs.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"markdown","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"tools/gulp/tasks/docs.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"markdownOptions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"tools/gulp/tasks/docs.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"PRE_PATTERN","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"tools/gulp/tasks/docs.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"START_COMMENT_PATTERN","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"tools/gulp/tasks/docs.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"transform","coveragePercent":0,"coverageCount":"0/1","status":"low"}]}}')},578:function(module){module.exports=JSON.parse('{"a":"1.6.1"}')},580:function(module){module.exports=JSON.parse('{"a":[{"categoryName":"Android","categoryId":"android","channels":[{"feedName":"Android Central","feedUrl":"http://feeds.feedburner.com/androidcentral?format=xml","feedDescription":"Android Central - Android Forums, News, Reviews, Help and Android Wallpapers"},{"feedName":"Android Police","feedUrl":"https://www.androidpolice.com/feed/","feedDescription":"Looking after everything Android"},{"feedName":"LineageOS Blog","feedUrl":"https://lineageos.org/feed.xml","feedDescription":"LineageOS Android Distribution - Blog"},{"feedName":"LineageOS Status","feedUrl":"https://status.lineageos.org/state_feed/feed.atom","feedDescription":"Status updates of LineageOS (website, Gerrit, etc.)","feedType":"other"},{"feedName":"xda-developers","feedUrl":"https://data.xda-developers.com/portal-feed","feedDescription":"Android and Windows Phone Development Community"}]},{"categoryName":"Apple","categoryId":"apple","channels":[{"feedName":"Apple Newsroom","feedUrl":"https://www.apple.com/newsroom/rss-feed.rss"},{"feedName":"MacRumors - All Stories","feedUrl":"http://feeds.macrumors.com/MacRumors-All","feedDescription":"All stories from MacRumors."},{"feedName":"Macworld","feedUrl":"https://www.macworld.com/index.rss"},{"feedName":"OSX Daily","feedUrl":"http://feeds.feedburner.com/osxdaily?format=xml","feedDescription":"News, tips, software, reviews, and more for Mac OS X, iPhone, iPad"}]},{"categoryName":"Developer","categoryId":"developer","channels":[{"feedName":"Apple Developer News","feedUrl":"https://developer.apple.com/news/rss/news.rss"},{"feedName":"Android Developers Blog","feedUrl":"https://feeds.feedburner.com/blogspot/hsDu","feedDescription":"The latest Android and Google Play news for app and game developers."},{"feedName":"Android Studio Blog","feedUrl":"https://androidstudio.googleblog.com/feeds/posts/default","feedDescription":"Provides official announcements for new versions of Android Studio and other Android developer tools."},{"feedName":"CodePen Blog","feedUrl":"https://blog.codepen.io/feed/","feedDescription":"Chris Coyier, Alex Vazquez, and Tim Sabat, the co-founders of CodePen talk about the ins and outs of running a web software business."},{"feedName":"CSS-Tricks","feedUrl":"https://css-tricks.com/feed/","feedDescription":"Trips, Tricks and Techniques on using Cascading Style Sheets."},{"feedName":"David Walsh Blog","feedUrl":"https://davidwalsh.name/feed","feedDescription":"A blog featuring tutorials about JavaScript, HTML5, AJAX, PHP, CSS, WordPress, and everything else development."},{"feedName":"HTML5 Doctor","feedUrl":"http://feeds2.feedburner.com/html5doctor","feedSource":"https://www.grannerman.com/webdev/becoming-a-web-developer/rss-feeds-for-the-web-developer"},{"feedName":"I Love Typography","feedUrl":"http://feeds2.feedburner.com/ILoveTypography","feedSource":"https://www.grannerman.com/webdev/becoming-a-web-developer/rss-feeds-for-the-web-developer"},{"feedName":"Little Big Details","feedUrl":"http://feeds.feedburner.com/littlebigdetails","feedSource":"https://www.grannerman.com/webdev/becoming-a-web-developer/rss-feeds-for-the-web-developer"},{"feedName":"LukeW | Digital Product Design + Strategy","feedUrl":"http://feeds.feedburner.com/FunctioningForm","feedSource":"https://www.grannerman.com/webdev/becoming-a-web-developer/rss-feeds-for-the-web-developer"},{"feedName":"Mozilla Hacks - the Web developer blog","feedUrl":"https://hacks.mozilla.org/feed/","feedSource":"https://www.grannerman.com/webdev/becoming-a-web-developer/rss-feeds-for-the-web-developer"},{"feedName":"Nice Web Type","feedUrl":"http://feeds2.feedburner.com/NiceWebType","feedSource":"https://www.grannerman.com/webdev/becoming-a-web-developer/rss-feeds-for-the-web-developer"},{"feedName":"QuirksBlog","feedUrl":"https://www.quirksmode.org/blog/index.xml","feedSource":"https://www.grannerman.com/webdev/becoming-a-web-developer/rss-feeds-for-the-web-developer"},{"feedName":"raywenderlich.com","feedUrl":"https://www.raywenderlich.com/feed","feedDescription":"High quality programming tutorials: iOS, Android, Swift, Kotlin, Unity and more!"},{"feedName":"SitePoint","feedUrl":"https://www.sitepoint.com/feed","feedDescription":"Learn CSS, HTML5, JavaScript, Wordpress, Tutorials-Web Development, Reference, Books and More"},{"feedName":"Smashing Magazine","feedUrl":"https://www.smashingmagazine.com/feed/","feedDescription":"Recent content in Articles on Smashing Magazine"},{"feedName":"The GitHub Blog","feedUrl":"https://blog.github.com/all.atom","feedDescription":"Posts about GitHub"},{"feedName":"The GitHub Blog Changelog","feedUrl":"https://blog.github.com/changelog/all.atom","feedDescription":"Changes made to GitHub\'s products"},{"feedName":"Usability Geek","feedUrl":"http://feeds.feedburner.com/usabilitygeek","feedSource":"https://www.grannerman.com/webdev/becoming-a-web-developer/rss-feeds-for-the-web-developer"}]},{"categoryName":"Google","categoryId":"google","channels":[{"feedName":"The Keyword (Google)","feedUrl":"https://blog.google/rss","feedDescription":"The Keyword"},{"feedName":"G Suite Updates Blog","feedUrl":"http://feeds.feedburner.com/GoogleAppsUpdates?format=xml","feedDescription":"The latest updates for G Suite."}]},{"categoryName":"Music","categoryId":"music","channels":[{"feedName":"Billboard.com Music News","feedUrl":"https://www.billboard.com/articles/rss.xml","feedDescription":"Billboard - Music Charts, Music News, Artist Photo Gallery &amp; Free Video"},{"feedName":"Billboard\'s Hot 100 Chart","feedUrl":"https://www.billboard.com/rss/charts/hot-100","feedDescription":"This week\'s most popular songs across all genres, ranked by radio airplay audience impressions as measured by Nielsen Music, sales data as compiled by Nielsen Music and streaming activity data provided by online music sources."},{"feedName":"Billboard - Billboard 200 Chart","feedUrl":"https://www.billboard.com/rss/charts/billboard-200","feedDescription":"The Billboard 200 chart ranks the most popular albums of the week, as compiled by Nielsen Music, based on multi-metric consumption (blending traditional album sales, track equivalent albums, and streaming equivalent albums)."},{"feedName":"Pitchfork: News","feedUrl":"https://pitchfork.com/rss/news/","feedDescription":"News from Pitchfork, one of the web\'s most popular music resources."}]},{"categoryName":"News","categoryId":"news","channels":[{"feedName":"ArsTechnica - All News","feedUrl":"http://feeds.arstechnica.com/arstechnica/index"},{"feedName":"BBC\'s Top Stories","feedUrl":"http://feeds.bbci.co.uk/news/rss.xml","feedDescription":"BBC News - Home"},{"feedName":"CNN Most Recent","feedUrl":"http://rss.cnn.com/rss/cnn_latest.rss?format=xml","feedDescription":"CNN.com delivers up-to-the-minute news and information on the latest top stories, weather, entertainment, politics and more."},{"feedName":"The Guardian | World news","feedUrl":"https://www.theguardian.com/world/rss","feedDescription":"Latest world news, comment and analysis from the Guardian, the world\'s leading liberal voice."},{"feedName":"The New York Times | Top Stories","feedUrl":"https://rss.nytimes.com/services/xml/rss/nyt/HomePage.xml","feedDescription":"Home page articles on The New York Times (US)."},{"feedName":"The Straits Times | World News","feedUrl":"https://www.straitstimes.com/news/world/rss.xml","feedDescription":"World news from The Straits Times (a Singapore newspaper)."},{"feedName":"Vox","feedUrl":"https://www.vox.com/rss/index.xml","feedDescription":"All posts from Vox."}]},{"categoryName":"Science","categoryId":"science","channels":[{"feedName":"ArsTechnica - The Scientific Method","feedUrl":"http://feeds.arstechnica.com/arstechnica/science","feedDescription":"Science & Exploration News from ArsTechnica"},{"feedName":"ScienceDaily - All Top Science News","feedUrl":"https://www.sciencedaily.com/rss/top/science.xml","feedDescription":"Top science stories featured on ScienceDaily\'s home page."},{"feedName":"Scientific American - Top Science News","feedUrl":"http://rss.sciam.com/basic-science?format=xml"},{"feedName":"Science Magazine | Current Journal Issue","feedUrl":"https://science.sciencemag.org/rss/current.xml","feedDescription":"Articles from the current issue of Science Magazine."},{"feedName":"Science Magazine | This Week in Science","feedUrl":"https://science.sciencemag.org/rss/twis.xml","feedDescription":"Recent TWIS (This Week in Science) articles from Science Magazine."}]},{"categoryName":"Technology","categoryId":"technology","channels":[{"feedName":"ArsTechnica - Technology Lab","feedUrl":"http://feeds.arstechnica.com/arstechnica/technology-lab","feedDescription":"Information Technology News from ArsTechnica."},{"feedName":"Mashable","feedUrl":"http://feeds.mashable.com/Mashable?format=xml"},{"feedName":"MIT Technology Review - Top News","feedUrl":"https://www.technologyreview.com/topnews.rss"},{"feedName":"Techcrunch","feedUrl":"http://feeds.feedburner.com/TechCrunch?format=xml","feedDescription":"TechCrunch is a group-edited blog that profiles the companies, products and events defining and transforming the new web."},{"feedName":"The Next Web","feedUrl":"http://feeds2.feedburner.com/thenextweb?format=xml","feedDescription":"International technology news, business & culture"},{"feedName":"The Verge","feedUrl":"https://www.theverge.com/rss/index.xml","feedDescription":"The Verge. News about the latest technology and more."}]}]}')},612:function(module,exports,__webpack_require__){__webpack_require__(613),__webpack_require__(778),__webpack_require__(779),__webpack_require__(1207),__webpack_require__(1209),__webpack_require__(1213),__webpack_require__(1212),__webpack_require__(1210),__webpack_require__(1211),__webpack_require__(1012),module.exports=__webpack_require__(1206)},689:function(module,exports){},779:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(299)}},[[612,2,3]]]);