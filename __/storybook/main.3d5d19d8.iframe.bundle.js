(self.webpackChunkrss_reader=self.webpackChunkrss_reader||[]).push([[179],{"./projects/rss-reader/src/app/components/article-card/article-card.stories.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{WithArticle:function(){return WithArticle},WithImage:function(){return WithImage},default:function(){return article_card_stories}});var client=__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js"),animations=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/animations.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),fesm2020_button=__webpack_require__("./node_modules/@angular/material/fesm2020/button.mjs"),card=__webpack_require__("./node_modules/@angular/material/fesm2020/card.mjs"),chips=__webpack_require__("./node_modules/@angular/material/fesm2020/chips.mjs"),dialog=__webpack_require__("./node_modules/@angular/material/fesm2020/dialog.mjs"),divider=__webpack_require__("./node_modules/@angular/material/fesm2020/divider.mjs"),icon=__webpack_require__("./node_modules/@angular/material/fesm2020/icon.mjs"),menu=__webpack_require__("./node_modules/@angular/material/fesm2020/menu.mjs"),tooltip=__webpack_require__("./node_modules/@angular/material/fesm2020/tooltip.mjs"),article_card_componentngResource=__webpack_require__("./projects/rss-reader/src/app/components/article-card/article-card.component.scss?ngResource"),article_card_componentngResource_default=__webpack_require__.n(article_card_componentngResource);const defaultEnvironment={production:!1,swLocation:"/ngsw-worker.js",latestVersion:new core.Version("1.6.1"),gitRepoDefaults:{host:"https://github.com",username:"EdricChan03",repo:"rss-reader"}},environment=defaultEnvironment;let AboutDialogComponent=class AboutDialogComponent{constructor(){this.latestVersion=environment.latestVersion.full}};AboutDialogComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-about-dialog",template:'<h2 matDialogTitle>About This App</h2>\n<mat-dialog-content>\n  <div class="about-version-container">\n    <h3 style="margin: 0">RSS Reader</h3>\n    <strong>\n      <small>Version {{ latestVersion }}</small>\n    </strong>\n  </div>\n  <p>This RSS reader app is made by Edric which is based on a fork of the original source code by BeCompany.</p>\n  <p>The forked repository is available\n    <a class="anchor-link" href="https://github.com/becompany/angular2-rss-reader-tutorial" target="_blank">here</a> and my version is\n    available\n    <a class="anchor-link" href="https://github.com/EdricChan03/rss-reader" target="_blank">here</a>.</p>\n  <p>This repository is hosted on Github Pages. For more info about Github Pages, visit\n    <a class="anchor-link" href="https://pages.github.com">here</a>.</p>\n  <p>This repository also uses\n    <a class="anchor-link" href="https://angular.io">Angular</a> and\n    <a class="anchor-link" href="https://material.angular.io">Angular Material</a> which are Â©Google 2017. All rights reserved.</p>\n  <p>Social icons in Share dialog are from\n    <a class="anchor-link" href="https://materialdesignicons.com">MaterialDesignIcons</a>. All other icons are from\n    <a class="anchor-link" href="https://google.github.io/material-design-icons">Google\'s Material Icons</a>.</p>\n  <a class="anchor-link" href="https://github.com/EdricChan03" title="Follow me on Github!" target="_blank">\n    <img src="https://img.shields.io/github/followers/EdricChan03.svg?style=social&label=EdricChan03" alt="Github social badge">\n  </a>\n  <a class="anchor-link" href="https://twitter.com/EdricChan03" title="Follow me on Twitter!" target="_blank">\n    <img src="https://img.shields.io/twitter/follow/EdricChan03.svg?style=social&label=EdricChan03" alt="Twitter social badge">\n  </a>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <a mat-button href="https://github.com/EdricChan03/rss-reader" color="accent">\n    <mat-icon>code</mat-icon>\n    View source code\n  </a>\n  <span class="flex--spacer"></span>\n  <button mat-button matDialogClose color="primary">Dismiss</button>\n</mat-dialog-actions>\n'})],AboutDialogComponent);var _class,lib=__webpack_require__("./node_modules/highlight.js/lib/index.js");let CodeViewerDialogComponent=((_class=class CodeViewerDialogComponent{constructor(data){this.data=data}ngAfterViewInit(){lib.highlightBlock(document.getElementById("code"))}}).ctorParameters=()=>[{type:void 0,decorators:[{type:core.Inject,args:[dialog.WI]}]}],_class);CodeViewerDialogComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-code-viewer-dialog",template:'<h2 matDialogTitle>Code View</h2>\n<mat-dialog-content>\n  <pre><code id="code" class="json">{{ data | json }}</code></pre>\n</mat-dialog-content>\n<mat-dialog-actions align="end">\n  <button mat-button color="primary" matDialogClose>Close</button>\n</mat-dialog-actions>\n'})],CodeViewerDialogComponent);var submit_rss_dialog_component_class,feed_dialog_componentngResource=__webpack_require__("./projects/rss-reader/src/app/dialogs/feed-dialog/feed-dialog.component.scss?ngResource"),feed_dialog_componentngResource_default=__webpack_require__.n(feed_dialog_componentngResource),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),startWith=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/startWith.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs");let SubmitRssDialogComponent=((submit_rss_dialog_component_class=class SubmitRssDialogComponent{constructor(dom,data){this.dom=dom,this.data=data}getFormUrl(){return this.dom.sanitize(core.SecurityContext.URL,`https://docs.google.com/forms/d/e/1FAIpQLSca8Iug_FPflBOHJdUN4KUBrUurOLjcyHAWqkn0_TTJ1oYmRQ/viewform?usp=pp_url&entry.1135652000=${this.data.feedUrl}`)}}).ctorParameters=()=>[{type:platform_browser.DomSanitizer},{type:void 0,decorators:[{type:core.Inject,args:[dialog.WI]}]}],submit_rss_dialog_component_class);SubmitRssDialogComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-submit-rss-dialog",template:'<h2 matDialogTitle>Submit RSS</h2>\n<mat-dialog-content>\n  <iframe [src]="getFormUrl()" height="600" frameBorder="0"></iframe>\n</mat-dialog-content>\n<mat-dialog-actions align="end">\n  <button mat-button color="primary" matDialogClose>Close</button>\n</mat-dialog-actions>\n'})],SubmitRssDialogComponent);var feed_dialog_component_class,feedurls_namespaceObject=JSON.parse('{"z1":[{"categoryName":"Android","categoryId":"android","channels":[{"feedName":"Android Central","feedUrl":"http://feeds.feedburner.com/androidcentral?format=xml","feedDescription":"Android Central - Android Forums, News, Reviews, Help and Android Wallpapers"},{"feedName":"Android Police","feedUrl":"https://www.androidpolice.com/feed/","feedDescription":"Looking after everything Android"},{"feedName":"LineageOS Blog","feedUrl":"https://lineageos.org/feed.xml","feedDescription":"LineageOS Android Distribution - Blog"},{"feedName":"LineageOS Status","feedUrl":"https://status.lineageos.org/state_feed/feed.atom","feedDescription":"Status updates of LineageOS (website, Gerrit, etc.)","feedType":"other"},{"feedName":"xda-developers","feedUrl":"https://data.xda-developers.com/portal-feed","feedDescription":"Android and Windows Phone Development Community"}]},{"categoryName":"Apple","categoryId":"apple","channels":[{"feedName":"Apple Newsroom","feedUrl":"https://www.apple.com/newsroom/rss-feed.rss"},{"feedName":"MacRumors - All Stories","feedUrl":"http://feeds.macrumors.com/MacRumors-All","feedDescription":"All stories from MacRumors."},{"feedName":"Macworld","feedUrl":"https://www.macworld.com/index.rss"},{"feedName":"OSX Daily","feedUrl":"http://feeds.feedburner.com/osxdaily?format=xml","feedDescription":"News, tips, software, reviews, and more for Mac OS X, iPhone, iPad"}]},{"categoryName":"Developer","categoryId":"developer","channels":[{"feedName":"Apple Developer News","feedUrl":"https://developer.apple.com/news/rss/news.rss"},{"feedName":"Android Developers Blog","feedUrl":"https://feeds.feedburner.com/blogspot/hsDu","feedDescription":"The latest Android and Google Play news for app and game developers."},{"feedName":"Android Studio Blog","feedUrl":"https://androidstudio.googleblog.com/feeds/posts/default","feedDescription":"Provides official announcements for new versions of Android Studio and other Android developer tools."},{"feedName":"CodePen Blog","feedUrl":"https://blog.codepen.io/feed/","feedDescription":"Chris Coyier, Alex Vazquez, and Tim Sabat, the co-founders of CodePen talk about the ins and outs of running a web software business."},{"feedName":"CSS-Tricks","feedUrl":"https://css-tricks.com/feed/","feedDescription":"Trips, Tricks and Techniques on using Cascading Style Sheets."},{"feedName":"David Walsh Blog","feedUrl":"https://davidwalsh.name/feed","feedDescription":"A blog featuring tutorials about JavaScript, HTML5, AJAX, PHP, CSS, WordPress, and everything else development."},{"feedName":"HTML5 Doctor","feedUrl":"http://feeds2.feedburner.com/html5doctor","feedSource":"https://www.grannerman.com/webdev/becoming-a-web-developer/rss-feeds-for-the-web-developer"},{"feedName":"I Love Typography","feedUrl":"http://feeds2.feedburner.com/ILoveTypography","feedSource":"https://www.grannerman.com/webdev/becoming-a-web-developer/rss-feeds-for-the-web-developer"},{"feedName":"Little Big Details","feedUrl":"http://feeds.feedburner.com/littlebigdetails","feedSource":"https://www.grannerman.com/webdev/becoming-a-web-developer/rss-feeds-for-the-web-developer"},{"feedName":"LukeW | Digital Product Design + Strategy","feedUrl":"http://feeds.feedburner.com/FunctioningForm","feedSource":"https://www.grannerman.com/webdev/becoming-a-web-developer/rss-feeds-for-the-web-developer"},{"feedName":"Mozilla Hacks - the Web developer blog","feedUrl":"https://hacks.mozilla.org/feed/","feedSource":"https://www.grannerman.com/webdev/becoming-a-web-developer/rss-feeds-for-the-web-developer"},{"feedName":"Nice Web Type","feedUrl":"http://feeds2.feedburner.com/NiceWebType","feedSource":"https://www.grannerman.com/webdev/becoming-a-web-developer/rss-feeds-for-the-web-developer"},{"feedName":"QuirksBlog","feedUrl":"https://www.quirksmode.org/blog/index.xml","feedSource":"https://www.grannerman.com/webdev/becoming-a-web-developer/rss-feeds-for-the-web-developer"},{"feedName":"raywenderlich.com","feedUrl":"https://www.raywenderlich.com/feed","feedDescription":"High quality programming tutorials: iOS, Android, Swift, Kotlin, Unity and more!"},{"feedName":"SitePoint","feedUrl":"https://www.sitepoint.com/feed","feedDescription":"Learn CSS, HTML5, JavaScript, Wordpress, Tutorials-Web Development, Reference, Books and More"},{"feedName":"Smashing Magazine","feedUrl":"https://www.smashingmagazine.com/feed/","feedDescription":"Recent content in Articles on Smashing Magazine"},{"feedName":"The GitHub Blog","feedUrl":"https://blog.github.com/all.atom","feedDescription":"Posts about GitHub"},{"feedName":"The GitHub Blog Changelog","feedUrl":"https://blog.github.com/changelog/all.atom","feedDescription":"Changes made to GitHub\'s products"},{"feedName":"Usability Geek","feedUrl":"http://feeds.feedburner.com/usabilitygeek","feedSource":"https://www.grannerman.com/webdev/becoming-a-web-developer/rss-feeds-for-the-web-developer"}]},{"categoryName":"Google","categoryId":"google","channels":[{"feedName":"The Keyword (Google)","feedUrl":"https://blog.google/rss","feedDescription":"The Keyword"},{"feedName":"G Suite Updates Blog","feedUrl":"http://feeds.feedburner.com/GoogleAppsUpdates?format=xml","feedDescription":"The latest updates for G Suite."}]},{"categoryName":"Music","categoryId":"music","channels":[{"feedName":"Billboard.com Music News","feedUrl":"https://www.billboard.com/articles/rss.xml","feedDescription":"Billboard - Music Charts, Music News, Artist Photo Gallery &amp; Free Video"},{"feedName":"Billboard\'s Hot 100 Chart","feedUrl":"https://www.billboard.com/rss/charts/hot-100","feedDescription":"This week\'s most popular songs across all genres, ranked by radio airplay audience impressions as measured by Nielsen Music, sales data as compiled by Nielsen Music and streaming activity data provided by online music sources."},{"feedName":"Billboard - Billboard 200 Chart","feedUrl":"https://www.billboard.com/rss/charts/billboard-200","feedDescription":"The Billboard 200 chart ranks the most popular albums of the week, as compiled by Nielsen Music, based on multi-metric consumption (blending traditional album sales, track equivalent albums, and streaming equivalent albums)."},{"feedName":"Pitchfork: News","feedUrl":"https://pitchfork.com/rss/news/","feedDescription":"News from Pitchfork, one of the web\'s most popular music resources."}]},{"categoryName":"News","categoryId":"news","channels":[{"feedName":"ArsTechnica - All News","feedUrl":"http://feeds.arstechnica.com/arstechnica/index"},{"feedName":"BBC\'s Top Stories","feedUrl":"http://feeds.bbci.co.uk/news/rss.xml","feedDescription":"BBC News - Home"},{"feedName":"CNN Most Recent","feedUrl":"http://rss.cnn.com/rss/cnn_latest.rss?format=xml","feedDescription":"CNN.com delivers up-to-the-minute news and information on the latest top stories, weather, entertainment, politics and more."},{"feedName":"The Guardian | World news","feedUrl":"https://www.theguardian.com/world/rss","feedDescription":"Latest world news, comment and analysis from the Guardian, the world\'s leading liberal voice."},{"feedName":"The New York Times | Top Stories","feedUrl":"https://rss.nytimes.com/services/xml/rss/nyt/HomePage.xml","feedDescription":"Home page articles on The New York Times (US)."},{"feedName":"The Straits Times | World News","feedUrl":"https://www.straitstimes.com/news/world/rss.xml","feedDescription":"World news from The Straits Times (a Singapore newspaper)."},{"feedName":"Vox","feedUrl":"https://www.vox.com/rss/index.xml","feedDescription":"All posts from Vox."}]},{"categoryName":"Science","categoryId":"science","channels":[{"feedName":"ArsTechnica - The Scientific Method","feedUrl":"http://feeds.arstechnica.com/arstechnica/science","feedDescription":"Science & Exploration News from ArsTechnica"},{"feedName":"ScienceDaily - All Top Science News","feedUrl":"https://www.sciencedaily.com/rss/top/science.xml","feedDescription":"Top science stories featured on ScienceDaily\'s home page."},{"feedName":"Scientific American - Top Science News","feedUrl":"http://rss.sciam.com/basic-science?format=xml"},{"feedName":"Science Magazine | Current Journal Issue","feedUrl":"https://science.sciencemag.org/rss/current.xml","feedDescription":"Articles from the current issue of Science Magazine."},{"feedName":"Science Magazine | This Week in Science","feedUrl":"https://science.sciencemag.org/rss/twis.xml","feedDescription":"Recent TWIS (This Week in Science) articles from Science Magazine."}]},{"categoryName":"Technology","categoryId":"technology","channels":[{"feedName":"ArsTechnica - Technology Lab","feedUrl":"http://feeds.arstechnica.com/arstechnica/technology-lab","feedDescription":"Information Technology News from ArsTechnica."},{"feedName":"Mashable","feedUrl":"http://feeds.mashable.com/Mashable?format=xml"},{"feedName":"MIT Technology Review - Top News","feedUrl":"https://www.technologyreview.com/topnews.rss"},{"feedName":"Techcrunch","feedUrl":"http://feeds.feedburner.com/TechCrunch?format=xml","feedDescription":"TechCrunch is a group-edited blog that profiles the companies, products and events defining and transforming the new web."},{"feedName":"The Next Web","feedUrl":"http://feeds2.feedburner.com/thenextweb?format=xml","feedDescription":"International technology news, business & culture"},{"feedName":"The Verge","feedUrl":"https://www.theverge.com/rss/index.xml","feedDescription":"The Verge. News about the latest technology and more."}]}]}');let FeedDialogComponent=(feed_dialog_component_class=class FeedDialogComponent{constructor(dialogRef,fb,dialog){this.dialog=dialog,this.feeds=feedurls_namespaceObject.z1,this.feedUrlValue="",this.orderByOptions=[{title:"None",value:""},{title:"Published date",value:"pubDate"},{title:"Author",value:"author"},{title:"Title",value:"title"}],this.orderDirOptions=[{title:"Default (Descending order)",value:""},{title:"Ascending order",value:"asc"},{title:"Descending order",value:"desc"}],dialogRef.disableClose=!0,this.rssFeedForm=fb.group({rss_url:["",fesm2020_forms.Validators.required],api_key:["",[fesm2020_forms.Validators.required,fesm2020_forms.Validators.maxLength(40),fesm2020_forms.Validators.minLength(40)]],order_by:"",order_dir:"",count:10}),this.filteredOptions=this.rssFeedForm.get("rss_url").valueChanges.pipe((0,startWith.O)(""),(0,map.U)((value=>this.filterFeeds(value))))}ngOnInit(){window.localStorage.getItem("feedOptions")&&this.rssFeedForm.patchValue(JSON.parse(window.localStorage.getItem("feedOptions")))}filterFeeds(name){return this.feeds.reduce(((feeds,feed)=>{const channels=feed.channels.filter((channel=>channel.feedName.includes(name)||channel.feedUrl.includes(name)));return channels.length>0&&feeds.push({...feed,channels:channels}),feeds}),[])}openSubmitRssDialog(){this.dialog.open(SubmitRssDialogComponent,{data:{feedUrl:this.rssFeedForm.get("feedUrl").value}})}},feed_dialog_component_class.ctorParameters=()=>[{type:dialog.so},{type:fesm2020_forms.FormBuilder},{type:dialog.uw}],feed_dialog_component_class);FeedDialogComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-feed-dialog",template:'<h2 matDialogTitle>RSS Config</h2>\n<mat-dialog-content class="feed-dialog--container">\n  <form [formGroup]="rssFeedForm">\n    <p>Select from one of the options or enter a RSS feed URL:</p>\n    <mat-form-field color="accent">\n      <mat-label>RSS feed URL</mat-label>\n      <input matInput [matAutocomplete]="rssFeedAuto" formControlName="rss_url">\n      <mat-autocomplete #rssFeedAuto="matAutocomplete">\n        <mat-optgroup [label]="feed.categoryName" *ngFor="let feed of filteredOptions | async">\n          <mat-option *ngFor="let channel of feed.channels" [value]="channel.feedUrl" class="autocomplete-option">\n            <span>{{channel?.feedName}}</span> |\n            <span>{{channel?.feedUrl}}</span>\n          </mat-option>\n        </mat-optgroup>\n      </mat-autocomplete>\n      <mat-error>This is required.</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>API key</mat-label>\n      <input matInput formControlName="api_key">\n      <mat-error *ngIf="rssFeedForm.get(\'api_key\')?.hasError(\'required\')">This is required.</mat-error>\n      <mat-error *ngIf="rssFeedForm.get(\'api_key\')?.hasError(\'minlength\') || rssFeedForm.get(\'api_key\')?.hasError(\'maxlength\')">Please enter a valid API key.</mat-error>\n      <a mat-icon-button matSuffix routerLink="/doc/guides/generate-api-key" matTooltip="How to generate a key" target="_blank">\n        <mat-icon>help</mat-icon>\n      </a>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Order results by&#8320;</mat-label>\n      <mat-select formControlName="order_by">\n        <mat-option *ngFor="let option of orderByOptions" [value]="option.value">{{ option.title }}</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Order results in</mat-label>\n      <mat-select formControlName="order_dir">\n        <mat-option *ngFor="let option of orderDirOptions" [value]="option.value">{{ option.title }}</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Max. number of posts</mat-label>\n      <input matInput formControlName="count" type="number" min="1" max="100">\n      <mat-hint>(Default: 10)</mat-hint>\n    </mat-form-field>\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button color="accent" (click)="openSubmitRssDialog()">Submit RSS URL</button>\n  <span class="flex--spacer"></span>\n  <button mat-button color="primary" matDialogClose="cancel">Cancel</button>\n  <button mat-button color="primary" [matDialogClose]="rssFeedForm.value" [disabled]="rssFeedForm.invalid">Save</button>\n</mat-dialog-actions>\n',styles:[feed_dialog_componentngResource_default()]})],FeedDialogComponent);var headline_options_dialog_component_class,headline_options_dialog_componentngResource=__webpack_require__("./projects/rss-reader/src/app/dialogs/headline-options-dialog/headline-options-dialog.component.scss?ngResource"),headline_options_dialog_componentngResource_default=__webpack_require__.n(headline_options_dialog_componentngResource),switchMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js"),http=__webpack_require__("./node_modules/@angular/common/fesm2020/http.mjs");let HeadlineOptionsDialogComponent=(headline_options_dialog_component_class=class HeadlineOptionsDialogComponent{constructor(fb,http,headlineOpts){this.http=http,this.headlineOpts=headlineOpts,this.categories=["business","entertainment","general","health","science","sports","technology"],this.headlineOptForm=fb.group({apiKey:["",fesm2020_forms.Validators.required],q:"",country:"",category:"",pageSize:20})}ngOnInit(){this.headlineOpts&&this.headlineOptForm.patchValue(this.headlineOpts),setTimeout((()=>{this.filteredOptions=this.headlineOptForm.get("country").valueChanges.pipe((0,switchMap.w)((value=>this.getCountries(value))))}))}getCountries(name){return this.http.get(`https://restcountries.eu/rest/v2/name/${encodeURIComponent(name)}`)}},headline_options_dialog_component_class.ctorParameters=()=>[{type:fesm2020_forms.FormBuilder},{type:http.eN},{type:void 0,decorators:[{type:core.Inject,args:[dialog.WI]}]}],headline_options_dialog_component_class);HeadlineOptionsDialogComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-headline-options-dialog",template:'<h2 matDialogTitle>Headlines options</h2>\n<mat-dialog-content class="headline-opts-dialog--container">\n  <form [formGroup]="headlineOptForm">\n    <mat-form-field>\n      <mat-label>API Key</mat-label>\n      <input matInput formControlName="apiKey">\n      <a mat-icon-button href="https://newsapi.org/register" target="_blank" matTooltip="Get API Key" matSuffix><mat-icon>open_in_new</mat-icon></a>\n      <mat-error>This is required.</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Query</mat-label>\n      <input matInput formControlName="q">\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Country</mat-label>\n      <input matInput formControlName="country" [matAutocomplete]="countryAutocomplete">\n      <mat-autocomplete #countryAutocomplete="matAutocomplete">\n        <mat-option *ngFor="let country of filteredOptions | async" [value]="country?.alpha2Code" class="autocomplete-option">\n          <img class="autocomplete-option-img" aria-hidden [src]="country?.flag" height="25">\n          <span>{{country?.name}}</span>\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Category</mat-label>\n      <mat-select formControlName="category">\n        <mat-option *ngFor="let category of categories" [value]="category">{{ category | titlecase }}</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Max. no. of articles</mat-label>\n      <input matInput formControlName="pageSize" type="number" min="20" max="100">\n    </mat-form-field>\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions align="end">\n  <button mat-button color="primary" matDialogClose="cancel">Cancel</button>\n  <button mat-button color="primary" [matDialogClose]="headlineOptForm.value" [disabled]="headlineOptForm.invalid">Save</button>\n</mat-dialog-actions>\n',styles:[headline_options_dialog_componentngResource_default()]})],HeadlineOptionsDialogComponent);var rss_channel_info_dialog_component_class;let RSSChannelInfoDialogComponent=((rss_channel_info_dialog_component_class=class RSSChannelInfoDialogComponent{constructor(dialogRef){this.dialogRef=dialogRef}ngOnInit(){}}).ctorParameters=()=>[{type:dialog.so}],rss_channel_info_dialog_component_class);RSSChannelInfoDialogComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-rss-channel-info-dialog",template:'<h2 matDialogTitle>RSS Channel Info</h2>\n<mat-dialog-content>\n  <p>Coming soon!</p>\n</mat-dialog-content>\n<mat-dialog-actions align="end">\n  <button mat-button color="primary" matDialogClose>\n    Dismiss\n  </button>\n</mat-dialog-actions>'})],RSSChannelInfoDialogComponent);var share_dialog_component_class,share_dialog_componentngResource=__webpack_require__("./projects/rss-reader/src/app/dialogs/share-dialog/share-dialog.component.scss?ngResource"),share_dialog_componentngResource_default=__webpack_require__.n(share_dialog_componentngResource);let ShareDialogComponent=((share_dialog_component_class=class ShareDialogComponent{constructor(articleData){this.articleData=articleData}ngOnInit(){this.isFeedEntry(this.articleData)?(this.url=this.articleData.link,this.publishedDate=this.articleData.pubDate.toString()):(this.url=this.articleData.url,this.publishedDate=this.articleData.publishedAt)}isFeedEntry(feed){return void 0!==feed.categories}selectUrl(ev){ev.target instanceof HTMLInputElement&&ev.target.select()}shareToFacebook(){window.open(`https://www.facebook.com/sharer.php?u=${encodeURI(this.url)}`,"")}shareToTwitter(){const text=encodeURI(`Check out this blogpost by ${this.articleData.author}    published on ${this.publishedDate} titled "${this.articleData.title}"!')}`);window.open(`https://twitter.com/intent/tweet?url=${encodeURI(this.url)}&text=${text}`)}shareNative(){void 0!==navigator.share?navigator.share({title:document.title,text:'Check out this page about"'+document.title+'"!',url:document.URL}).then((()=>console.log("Successfully shared current page."))).catch((error=>console.error("Error sharing current page: ",error))):alert("To share natively, please enable the 'Experimental Web Platform Features' flag in chrome://flags. Otherwise, it might not be supported on your platform right now.")}}).ctorParameters=()=>[{type:void 0,decorators:[{type:core.Inject,args:[dialog.WI]}]}],share_dialog_component_class);var settings_storage_service_class;ShareDialogComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-share-dialog",template:'<h2 matDialogTitle>Share "{{articleData.title | slice:0:100}}":</h2>\n<mat-dialog-content class="share-dialog--container">\n  <mat-form-field>\n    <input matInput readonly [(ngModel)]="url" (click)="selectUrl($event)" matTooltip="Click to select and copy">\n    <mat-label>URL</mat-label>\n  </mat-form-field>\n  <p>OR:</p>\n  <div class="share-btns" style="min-width: 150px">\n    <mat-grid-list cols="3">\n      <mat-grid-tile matRipple matRippleColor="rgba(164, 198, 57, 0.3)" class="share-tile android-btn" (click)="shareNative()">\n        <div class="share-div">\n          <mat-icon class="share-icon">share</mat-icon>\n          <h3>Android</h3>\n        </div>\n      </mat-grid-tile>\n      <mat-grid-tile matRipple matRippleColor="rgba(59, 89, 152, 0.3)" class="share-tile facebook-btn" (click)="shareToFacebook()">\n        <div class="share-div">\n          <mat-icon class="share-icon svg-icon">\n            <svg width="24px" height="24px" viewBox="0 0 24 24" fill="currentColor">\n              <path d="M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M18,5H15.5A3.5,3.5 0 0,0 12,8.5V11H10V14H12V21H15V14H18V11H15V9A1,1 0 0,1 16,8H18V5Z"\n              />\n            </svg>\n          </mat-icon>\n          <h3>Facebook</h3>\n        </div>\n      </mat-grid-tile>\n      <mat-grid-tile matRipple matRippleColor="rgba(0, 172, 237, 0.3)" class="share-tile twitter-btn" (click)="shareToTwitter()">\n        <div class="share-div">\n          <mat-icon class="share-icon svg-icon">\n            <svg width="24px" height="24px" viewBox="0 0 24 24" fill="currentColor">\n              <path d="M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M17.71,9.33C18.19,8.93 18.75,8.45 19,7.92C18.59,8.13 18.1,8.26 17.56,8.33C18.06,7.97 18.47,7.5 18.68,6.86C18.16,7.14 17.63,7.38 16.97,7.5C15.42,5.63 11.71,7.15 12.37,9.95C9.76,9.79 8.17,8.61 6.85,7.16C6.1,8.38 6.75,10.23 7.64,10.74C7.18,10.71 6.83,10.57 6.5,10.41C6.54,11.95 7.39,12.69 8.58,13.09C8.22,13.16 7.82,13.18 7.44,13.12C7.81,14.19 8.58,14.86 9.9,15C9,15.76 7.34,16.29 6,16.08C7.15,16.81 8.46,17.39 10.28,17.31C14.69,17.11 17.64,13.95 17.71,9.33Z"\n              />\n            </svg>\n          </mat-icon>\n          <h3>Twitter</h3>\n        </div>\n      </mat-grid-tile>\n    </mat-grid-list>\n  </div>\n</mat-dialog-content>\n<mat-dialog-actions align="end">\n  <button mat-button color="primary" matDialogClose>Dismiss</button>\n</mat-dialog-actions>\n',styles:[share_dialog_componentngResource_default()]})],ShareDialogComponent);const SETTINGS_STORAGE_PROVIDER=new core.InjectionToken("Settings storage provider",{factory:()=>localStorage}),SETTINGS_STORAGE_KEY=new core.InjectionToken("Settings storage key",{factory:()=>"settings"}),SETTINGS_STORAGE_CONFIG=new core.InjectionToken("Settings storage config",{factory:()=>({canRevertDefault:!0,defaultSettings:{openNewTab:!0,showImages:!0,theme:"indigo-pink",notifyNewReleases:!0}})});let SettingsStorageService=((settings_storage_service_class=class SettingsStorageService{constructor(storage,key,config){this.storage=storage,this.key=key,this.config=config}get settings(){return this.storage.getItem(this.key)&&this.config.canRevertDefault?JSON.parse(this.storage.getItem(this.key)):this.config.defaultSettings}setSettings(settings){this.storage.setItem(this.key,JSON.stringify(settings))}clearSettings(resetToDefault=!0){resetToDefault?this.setSettings(this.config.defaultSettings):this.storage.removeItem(this.key)}}).ctorParameters=()=>[{type:Storage,decorators:[{type:core.Inject,args:[SETTINGS_STORAGE_PROVIDER]}]},{type:String,decorators:[{type:core.Inject,args:[SETTINGS_STORAGE_KEY]}]},{type:void 0,decorators:[{type:core.Inject,args:[SETTINGS_STORAGE_CONFIG]},{type:core.Optional}]}],settings_storage_service_class);SettingsStorageService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],SettingsStorageService);let OrderByPipe=class OrderByPipe{transform(array,args){return array.sort(((a,b)=>a<b?-1:a>b?1:0)),array}};OrderByPipe=(0,tslib_es6.gn)([(0,core.Pipe)({name:"orderby"})],OrderByPipe);let StripHtmlTagsPipe=class StripHtmlTagsPipe{constructor(){this.tagBody="(?:[^\"'>]|\"[^\"]*\"|'[^']*')*",this.tagOrComment=new RegExp("<(?:!--(?:(?:-*[^->])*--+|-?)|script\\b"+this.tagBody+">[\\s\\S]*?</script\\s*|style\\b"+this.tagBody+">[\\s\\S]*?</style\\s*|/?[a-z]"+this.tagBody+")>","gi")}transform(value){let oldHtml;do{oldHtml=value,value=value.replace(this.tagOrComment,"")}while(value!==oldHtml);return value.replace(/<[^>]+>/gm,"")}};StripHtmlTagsPipe=(0,tslib_es6.gn)([(0,core.Pipe)({name:"stripHtmlTags"})],StripHtmlTagsPipe);let TruncatePipe=class TruncatePipe{transform(value,...args){const limit=args.length>0?parseInt(args[0],10):20,trail=args.length>1?args[1]:"&hellip;";return value.length>limit?value.substring(0,limit)+trail:value}};var article_card_component_class;TruncatePipe=(0,tslib_es6.gn)([(0,core.Pipe)({name:"truncate"})],TruncatePipe);let ArticleCardComponent=(article_card_component_class=class ArticleCardComponent{constructor(dialog,settingsStorage,stripHtmlTags){this.dialog=dialog,this.settingsStorage=settingsStorage,this.stripHtmlTags=stripHtmlTags}get articleAuthor(){if(void 0!==this.article){if("publishedAt"in this.article)return"author"in this.article&&void 0!==this.article.author?"author"in this.article&&"source"in this.article&&"name"in this.article.source&&void 0!==this.article.source.name?`${this.article.author} | ${this.article.source.name}`:this.article.author:"source"in this.article&&"name"in this.article.source&&void 0!==this.article.source.name?this.article.source.name:void 0;if("pubDate"in this.article)return this.article.author}}get articlePubDate(){if(void 0!==this.article){if("publishedAt"in this.article)return this.article.publishedAt;if("pubDate"in this.article)return this.article.pubDate}}get articleImg(){if(void 0!==this.article)return"urlToImage"in this.article?this.article.urlToImage:"thumbnail"in this.article?this.article.thumbnail:"enclosure"in this.article&&"thumbnail"in this.article.enclosure?this.article.enclosure.thumbnail:void 0}get articleTitle(){return this.article?.title}get articleDesc(){return this.stripHtmlTags.transform(this.article?.description??"")}get articleCategories(){return void 0!==this.article&&"categories"in this.article?this.article.categories:[]}get articleLink(){if(void 0!==this.article){if("url"in this.article)return this.article.url;if("link"in this.article)return this.article.link}}get enclosureIsAudioType(){return void 0!==this.article&&"enclosure"in this.article&&"type"in this.article.enclosure&&this.article.enclosure.type.startsWith("audio")}get enclosureIsVideoType(){return void 0!==this.article&&"enclosure"in this.article&&"type"in this.article.enclosure&&this.article.enclosure.type.startsWith("video")}get enclosureLink(){if(void 0!==this.article&&"enclosure"in this.article&&"link"in this.article.enclosure)return this.article.enclosure.link}ngOnInit(){this.settingsStorage.settings&&("openNewTab"in this.settingsStorage.settings&&(this.target=this.settingsStorage.settings.openNewTab?"_blank":"_self"),"showImages"in this.settingsStorage.settings&&(this.hasImage=this.settingsStorage.settings.showImages)),this.feed?this.article=this.feed:this.headline&&(this.article=this.headline)}share(){this.dialog.open(ShareDialogComponent,{data:this.article})}showCode(){this.dialog.open(CodeViewerDialogComponent,{data:this.article})}},article_card_component_class.ctorParameters=()=>[{type:dialog.uw},{type:SettingsStorageService},{type:StripHtmlTagsPipe}],article_card_component_class.propDecorators={feed:[{type:core.Input}],headline:[{type:core.Input}],article:[{type:core.Input}]},article_card_component_class);ArticleCardComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"app-article-card",template:'<mat-card appearance="outlined" class="article-card">\n  <mat-card-header class="article-card--header">\n    <mat-card-title *ngIf="articleAuthor" class="article-card--author">{{ articleAuthor }}</mat-card-title>\n    <mat-card-subtitle *ngIf="articlePubDate" class="article-card--pub-date">{{ articlePubDate | date:\'short\' }}</mat-card-subtitle>\n    <span class="flex--spacer"></span>\n    <button mat-icon-button [matMenuTriggerFor]="feedMenu">\n      <mat-icon class="icon">more_vert</mat-icon>\n    </button>\n    <mat-menu #feedMenu="matMenu">\n      <button mat-menu-item (click)="showCode()">\n        <mat-icon>code</mat-icon> Show code\n      </button>\n    </mat-menu>\n  </mat-card-header>\n  <img mat-card-image class="article-card--image" *ngIf="articleImg && hasImage" [src]="articleImg" alt="Article thumbnail">\n  <mat-card-content class="article-card--content">\n    <mat-card-title class="article-card--title">{{ articleTitle }}</mat-card-title>\n    <p class="article-card--description">{{ articleDesc | slice:0:300 }}</p>\n    <mat-chip-set *ngIf="articleCategories.length > 0" class="article-card--categories" role="list">\n      <mat-chip *ngFor="let category of articleCategories" role="listitem">{{ category }}</mat-chip>\n    </mat-chip-set>\n    <audio *ngIf="enclosureLink && enclosureIsAudioType" [src]="enclosureLink" class="article-card--media-player" controls preload="metadata"></audio>\n    <video *ngIf="enclosureLink && enclosureIsVideoType" [src]="enclosureLink" class="article-card--media-player" controls preload="metadata"></video>\n  </mat-card-content>\n  <mat-divider class="article-card--divider"></mat-divider>\n  <mat-card-actions align="end" class="article-card--actions">\n    <button mat-icon-button (click)="share()" matTooltip="Share post" color="primary" aria-label="Share post">\n      <mat-icon>share</mat-icon>\n    </button>\n    <a mat-icon-button [href]="articleLink" [target]="target" color="primary" aria-label="View post" matTooltip="View post">\n      <mat-icon>open_in_new</mat-icon>\n    </a>\n  </mat-card-actions>\n</mat-card>\n',styles:[article_card_componentngResource_default()]})],ArticleCardComponent);var autocomplete=__webpack_require__("./node_modules/@angular/material/fesm2020/autocomplete.mjs"),fesm2020_checkbox=__webpack_require__("./node_modules/@angular/material/fesm2020/checkbox.mjs"),form_field=__webpack_require__("./node_modules/@angular/material/fesm2020/form-field.mjs"),grid_list=__webpack_require__("./node_modules/@angular/material/fesm2020/grid-list.mjs"),input=__webpack_require__("./node_modules/@angular/material/fesm2020/input.mjs"),fesm2020_core=__webpack_require__("./node_modules/@angular/material/fesm2020/core.mjs"),fesm2020_select=__webpack_require__("./node_modules/@angular/material/fesm2020/select.mjs"),router=__webpack_require__("./node_modules/@angular/router/fesm2020/router.mjs");const DIALOGS=[AboutDialogComponent,CodeViewerDialogComponent,FeedDialogComponent,HeadlineOptionsDialogComponent,RSSChannelInfoDialogComponent,ShareDialogComponent,SubmitRssDialogComponent],DIALOG_MATERIAL_MODULES=[autocomplete.Bb,fesm2020_button.ot,fesm2020_checkbox.p9,dialog.Is,form_field.lN,grid_list.N6,icon.Ps,input.c,menu.Tx,fesm2020_core.si,fesm2020_select.LD,tooltip.AV];let DialogsModule=class DialogsModule{};DialogsModule=(0,tslib_es6.gn)([(0,core.NgModule)({imports:[common.ez,fesm2020_forms.FormsModule,fesm2020_forms.ReactiveFormsModule,router.Bz,DIALOG_MATERIAL_MODULES],declarations:[DIALOGS],exports:[DIALOGS]})],DialogsModule);const PIPES=[OrderByPipe,StripHtmlTagsPipe,TruncatePipe];let PipesModule=class PipesModule{};PipesModule=(0,tslib_es6.gn)([(0,core.NgModule)({declarations:[PIPES],exports:[PIPES]})],PipesModule);const MATERIAL_MODULES=[fesm2020_button.ot,card.QW,chips.Hi,dialog.Is,divider.t,icon.Ps,menu.Tx,tooltip.AV];let ArticleCardModule=class ArticleCardModule{};ArticleCardModule=(0,tslib_es6.gn)([(0,core.NgModule)({imports:[common.ez,PipesModule,MATERIAL_MODULES,DialogsModule],declarations:[ArticleCardComponent],providers:[SettingsStorageService,StripHtmlTagsPipe],exports:[ArticleCardComponent]})],ArticleCardModule);var article_card_stories={title:"Components/Article Card",component:ArticleCardComponent,decorators:[(0,client.moduleMetadata)({imports:[animations.PW,ArticleCardModule]}),story=>({...story(),template:`<div style="width: 350px">${story().template}</div>`})],parameters:{layout:"centered"}};const Template=args=>({component:ArticleCardComponent,template:'<app-article-card [article]="article"></app-article-card>',props:args}),WithArticle=Template.bind({});WithArticle.args={article:{title:"Example article",description:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed congue odio at tortor elementum iaculis. Vivamus tristique risus vitae sapien placerat rhoncus. Quisque ut gravida nibh. Donec finibus tortor sed libero pharetra tempus. Donec mattis maximus ligula, pellentesque dictum nunc tempor et. Nam convallis mattis lorem, sit amet interdum neque.",link:"https://example.com"}};const WithImage=Template.bind({});WithImage.args={article:{title:"Example article with image",thumbnail:"https://place-hold.it/1600x900&fontsize=60"}}},"./projects/rss-reader/src/polyfills.ts":function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){"use strict";__webpack_require__("./node_modules/zone.js/fesm2015/zone.js")},"./.storybook/preview.js-generated-config-entry.js":function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){"use strict";var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,{parameters:function(){return parameters}});var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),esm=__webpack_require__("./node_modules/@storybook/client-logger/dist/esm/index.js"),angular=__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js"),documentation_namespaceObject=JSON.parse('{"pipes":[{"name":"OrderByPipe","id":"pipe-OrderByPipe-bbd33dee6d57f826c09f6dbdeaf2cf42317051a689371b1a2a9a66b8a29d1bf7a07f676d5eb22ef4c383e74802cbae477526e54c25fca6f973ac8efa4dfc0417","file":"projects/rss-reader/src/app/pipe/orderby.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"array","type":"string[]","deprecated":false,"deprecationMessage":""},{"name":"args","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string[]","typeParameters":[],"line":7,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"array","type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"args","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"orderby","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n\\n@Pipe({\\n  name: \'orderby\'\\n})\\nexport class OrderByPipe implements PipeTransform {\\n  transform(array: string[], args: string): string[] {\\n    array.sort((a: any, b: any) => {\\n      if (a < b) {\\n        return -1;\\n      } else if (a > b) {\\n        return 1;\\n      } else {\\n        return 0;\\n      }\\n    });\\n    return array;\\n  }\\n}\\n"},{"name":"StripHtmlTagsPipe","id":"pipe-StripHtmlTagsPipe-6ea395d626988be2479fe1251a1c81a770a780926bf56212c7a3479eae28b32a78a99e63fcc50de2d9ccb12f7fc7ae1d785ce934bd25ba38e630c2d1510f1a77","file":"projects/rss-reader/src/app/pipe/strip-html-tags.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[{"name":"tagBody","defaultValue":"\'(?:[^\\"\\\\\'>]|\\"[^\\"]*\\"|\\\\\'[^\\\\\']*\\\\\')*\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8,"modifierKind":[121]},{"name":"tagOrComment","defaultValue":"new RegExp(\\n    \'<(?:\'\\n    // Comment body.\\n    + \'!--(?:(?:-*[^->])*--+|-?)\'\\n    // Special \\"raw text\\" elements whose content should be elided.\\n    + \'|script\\\\\\\\b\' + this.tagBody + \'>[\\\\\\\\s\\\\\\\\S]*?</script\\\\\\\\s*\'\\n    + \'|style\\\\\\\\b\' + this.tagBody + \'>[\\\\\\\\s\\\\\\\\S]*?</style\\\\\\\\s*\'\\n    // Regular name\\n    + \'|/?[a-z]\'\\n    + this.tagBody\\n    + \')>\',\\n    \'gi\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":9,"modifierKind":[121]}],"methods":[{"name":"transform","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"ngname":"stripHtmlTags","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n\\n@Pipe({\\n  name: \'stripHtmlTags\'\\n})\\nexport class StripHtmlTagsPipe implements PipeTransform {\\n\\n  private tagBody = \'(?:[^\\"\\\\\'>]|\\"[^\\"]*\\"|\\\\\'[^\\\\\']*\\\\\')*\';\\n  private tagOrComment = new RegExp(\\n    \'<(?:\'\\n    // Comment body.\\n    + \'!--(?:(?:-*[^->])*--+|-?)\'\\n    // Special \\"raw text\\" elements whose content should be elided.\\n    + \'|script\\\\\\\\b\' + this.tagBody + \'>[\\\\\\\\s\\\\\\\\S]*?</script\\\\\\\\s*\'\\n    + \'|style\\\\\\\\b\' + this.tagBody + \'>[\\\\\\\\s\\\\\\\\S]*?</style\\\\\\\\s*\'\\n    // Regular name\\n    + \'|/?[a-z]\'\\n    + this.tagBody\\n    + \')>\',\\n    \'gi\');\\n\\n  transform(value: string): string {\\n    let oldHtml;\\n    do {\\n      oldHtml = value;\\n      value = value.replace(this.tagOrComment, \'\');\\n    } while (value !== oldHtml);\\n    return value.replace(/<[^>]+>/gm, \'\');\\n  }\\n\\n}\\n"},{"name":"TruncatePipe","id":"pipe-TruncatePipe-e43ab39bb12987d87978a0c599db75f08816fa8d585ee3362224d3370e47691ad59b5f5959c2dcfbc5f3fa7825c545c0e9b827a928797ff0d3bb70bf10155af2","file":"projects/rss-reader/src/app/pipe/truncate.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""},{"name":"args","type":"any[]","deprecated":false,"deprecationMessage":"","dotDotDotToken":true}],"optional":false,"returnType":"string","typeParameters":[],"line":8,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"args","type":"any[]","deprecated":false,"deprecationMessage":"","dotDotDotToken":true,"tagName":{"text":"param"}}]}],"ngname":"truncate","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n\\n@Pipe({\\n  name: \'truncate\'\\n})\\nexport class TruncatePipe implements PipeTransform {\\n\\n  transform(value: string, ...args: any[]): string {\\n    const limit = args.length > 0 ? parseInt(args[0], 10) : 20;\\n    const trail = args.length > 1 ? args[1] : \'&hellip;\';\\n    return value.length > limit ? value.substring(0, limit) + trail : value;\\n  }\\n}\\n"}],"interfaces":[{"name":"ActionItem","id":"interface-ActionItem-0372ab80f41c4d2eff5642f79eb76bb30d46fa01363088655325a9eae143ad6257352746c9f8bba335ec7cad5c10f2716028092c17c408842b513f293007ae46","file":"projects/rss-reader/src/app/actionitem.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { Component, Injectable, NgModule } from \'@angular/core\';\\nimport { MatButtonModule } from \'@angular/material/button\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport { MatMenuModule } from \'@angular/material/menu\';\\nimport { MatTooltipModule } from \'@angular/material/tooltip\';\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\nimport { RouterModule } from \'@angular/router\';\\n\\n/** ID used to generate new action items with no explicitly-defined ID. */\\nlet nextKeyId = 0;\\n\\n@Injectable()\\n/**\\n * A action icon service for the toolbar.\\n */\\nexport class ActionItemService {\\n\\n  readonly actionItems = new Map<string, ActionItem>();\\n  /**\\n   * Adds an action item\\n   *\\n   * @param actionItem The action item\\n   */\\n  addActionItem(actionItem: ActionItem) {\\n    this.actionItems.set(`actionItem-${nextKeyId++}`, actionItem);\\n  }\\n  /**\\n   * Adds an action item toggle\\n   *\\n   * @param actionItem The action item\\n   * @deprecated\\n   * @experimental Do not use!\\n   */\\n  addActionItemToggle(actionItem: ActionItemToggle) {\\n    console.warn(\'%cThis method is experimental and may break. Continue at your own risk.\', \'font-weight: 600\');\\n    actionItem.onClickListener = () => {\\n      actionItem.toggleBind = !actionItem.toggleBind;\\n    };\\n    this.actionItems.set(`actionItem-${nextKeyId++}`, actionItem);\\n  }\\n  /**\\n   * Updates an action item by its key\\n   *\\n   * @param key The key of the action item\\n   * @param actionItem The action item\\n   */\\n  updateActionItemByKey(key: string, actionItem: ActionItem) {\\n    try {\\n      this.actionItems[key] = actionItem;\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Gets all action items\\n   */\\n  getActionItems(): ActionItem[] {\\n    return Array.from(this.actionItems.values());\\n  }\\n  /**\\n   * Removes an action item\\n   *\\n   * @param key The key of the action item to remove\\n   */\\n  removeActionItemByKey(key: string) {\\n    try {\\n      this.actionItems.delete(key);\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Removes all action items\\n   */\\n  removeActionItems() {\\n    this.actionItems.clear();\\n  }\\n  /**\\n   * Gets a action item by its key\\n   *\\n   * @param key The key of the action item to retrieve\\n   */\\n  getActionItemByKey(key: string): ActionItem {\\n    try {\\n      return this.actionItems[key];\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Adds a action item on click listener to the specified action item\\n   * Note: This can also be declared manually\\n   *\\n   * @deprecated Please set the onclick listener in the {@link ActionItem} object itself.\\n   * @param id The id of the action item\\n   * @param callback The callback when the action item is clicked (has to be arrow function)\\n   */\\n  addActionItemOnClickListener(key: string, callback: (ev?: Event) => void) {\\n    try {\\n      this.actionItems[key].onClickListener = callback;\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Throws an error where the id couldn\'t be found\\n   */\\n  private throwKeyNotFoundError(id: string) {\\n    throw new Error(`Could not find an action item with key ${id}`);\\n  }\\n  /**\\n   * Throws an error where the title couldn\'t be found\\n   */\\n  private throwTitleNotFoundError(title: string) {\\n    throw new Error(`Could not find an action item with title ${title}`);\\n  }\\n}\\n\\n/**\\n * An action item\\n */\\nexport interface ActionItem {\\n  /**\\n   * The title of the action item\\n   */\\n  title: string;\\n  /** The ID of the action item */\\n  id?: string;\\n  /**\\n   * The icon of the action item\\n   */\\n  icon?: string;\\n  /**\\n   * The href of the action item\\n   * NOTE: If `routerLink` is specified, don\'t use `href`.\\n   */\\n  href?: string;\\n  /**\\n   * Similar to what Android does.\\n   */\\n  showAsAction?: boolean;\\n  /** Whether the action item should be disabled. */\\n  disabled?: boolean;\\n  /**\\n   * The router link of the action item\\n   * NOTE: If `href` is specified, don\'t use `routerLink`.\\n   */\\n  routerLink?: string;\\n  /**\\n   * The on click listener of the action item\\n   * Note: This can also be set by {@link ActionItemService#addActionItemOnClickListener}\\n   */\\n  onClickListener?: (ev?: Event) => void;\\n  /**\\n   * The submenu of the action item\\n   */\\n  subMenu?: ActionItem[];\\n}\\n/**\\n * An action item toggle\\n */\\nexport interface ActionItemToggle extends ActionItem {\\n  /**\\n   * The toggle boolean to bind to\\n   */\\n  toggleBind: boolean;\\n}\\n\\n@Component({\\n  selector: \'app-action-items\',\\n  template: `\\n\\t<ng-container *ngFor=\\"let actionItem of actionItems\\">\\n    <button\\n    mat-icon-button\\n    *ngIf=\\"actionItem.onClickListener\\"\\n    (click)=\\"actionItem.onClickListener($event)\\"\\n    [matTooltip]=\\"actionItem.title\\"\\n    [disabled]=\\"actionItem.disabled\\">\\n      <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n    </button>\\n    <a mat-icon-button *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [matTooltip]=\\"actionItem.title\\" [disabled]=\\"actionItem.disabled\\">\\n    <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n    </a>\\n    <a\\n      mat-icon-button\\n      *ngIf=\\"actionItem.routerLink\\"\\n      [routerLink]=\\"[actionItem.routerLink]\\"\\n      [matTooltip]=\\"actionItem.title\\"\\n      [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t</a>\\n\\t</ng-container>\\n  <button mat-icon-button *ngIf=\\"showMoreMenu\\" [matMenuTriggerFor]=\\"moreMenu\\"\\n    matTooltip=\\"More options\\">\\n\\t\\t<mat-icon>more_vert</mat-icon>\\n\\t</button>\\n\\t<mat-menu #moreMenu=\\"matMenu\\">\\n\\t\\t<ng-container *ngFor=\\"let actionItem of overflowActionItems\\">\\n\\t\\t\\t<button mat-menu-item *ngIf=\\"actionItem.onClickListener\\" (click)=\\"actionItem.onClickListener($event)\\"\\n        [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</button>\\n\\t\\t\\t<a mat-menu-item *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</a>\\n\\t\\t\\t<a mat-menu-item *ngIf=\\"actionItem.routerLink\\" [routerLink]=\\"[actionItem.routerLink]\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</a>\\n\\t\\t</ng-container>\\n\\t</mat-menu>\\n\\t\\t\\t\\t`\\n})\\nexport class ActionItemsComponent {\\n  constructor(private actionItemService: ActionItemService) { }\\n  get actionItems(): ActionItem[] {\\n    return this.actionItemService.getActionItems().filter(item => item.showAsAction);\\n  }\\n  get overflowActionItems(): ActionItem[] {\\n    return this.actionItemService.getActionItems().filter(item => !item.showAsAction);\\n  }\\n  get showMoreMenu() {\\n    return this.actionItemService.getActionItems().find((actionItem: ActionItem): boolean => actionItem.showAsAction !== true);\\n  }\\n}\\n\\n@NgModule({\\n  declarations: [\\n    ActionItemsComponent\\n  ],\\n  exports: [\\n    ActionItemsComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    BrowserAnimationsModule,\\n    MatButtonModule,\\n    MatIconModule,\\n    MatMenuModule,\\n    MatTooltipModule,\\n    RouterModule\\n  ],\\n  providers: [\\n    ActionItemService\\n  ]\\n})\\nexport class ActionItemsModule { }\\n","properties":[{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Whether the action item should be disabled.</p>\\n","line":144,"rawdescription":"\\nWhether the action item should be disabled."},{"name":"href","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The href of the action item\\nNOTE: If <code>routerLink</code> is specified, don&#39;t use <code>href</code>.</p>\\n","line":138,"rawdescription":"\\n\\nThe href of the action item\\nNOTE: If `routerLink` is specified, don\'t use `href`.\\n"},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The icon of the action item</p>\\n","line":133,"rawdescription":"\\n\\nThe icon of the action item\\n"},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The ID of the action item</p>\\n","line":129,"rawdescription":"\\nThe ID of the action item"},{"name":"onClickListener","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"<p>The on click listener of the action item\\nNote: This can also be set by {@link ActionItemService#addActionItemOnClickListener}</p>\\n","line":154,"rawdescription":"\\n\\nThe on click listener of the action item\\nNote: This can also be set by {@link ActionItemService#addActionItemOnClickListener}\\n"},{"name":"routerLink","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The router link of the action item\\nNOTE: If <code>href</code> is specified, don&#39;t use <code>routerLink</code>.</p>\\n","line":149,"rawdescription":"\\n\\nThe router link of the action item\\nNOTE: If `href` is specified, don\'t use `routerLink`.\\n"},{"name":"showAsAction","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Similar to what Android does.</p>\\n","line":142,"rawdescription":"\\n\\nSimilar to what Android does.\\n"},{"name":"subMenu","deprecated":false,"deprecationMessage":"","type":"ActionItem[]","optional":true,"description":"<p>The submenu of the action item</p>\\n","line":158,"rawdescription":"\\n\\nThe submenu of the action item\\n"},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The title of the action item</p>\\n","line":127,"rawdescription":"\\n\\nThe title of the action item\\n"}],"indexSignatures":[],"kind":165,"description":"<p>An action item</p>\\n","rawdescription":"\\n\\nAn action item\\n","methods":[]},{"name":"ActionItemToggle","id":"interface-ActionItemToggle-0372ab80f41c4d2eff5642f79eb76bb30d46fa01363088655325a9eae143ad6257352746c9f8bba335ec7cad5c10f2716028092c17c408842b513f293007ae46","file":"projects/rss-reader/src/app/actionitem.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { Component, Injectable, NgModule } from \'@angular/core\';\\nimport { MatButtonModule } from \'@angular/material/button\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport { MatMenuModule } from \'@angular/material/menu\';\\nimport { MatTooltipModule } from \'@angular/material/tooltip\';\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\nimport { RouterModule } from \'@angular/router\';\\n\\n/** ID used to generate new action items with no explicitly-defined ID. */\\nlet nextKeyId = 0;\\n\\n@Injectable()\\n/**\\n * A action icon service for the toolbar.\\n */\\nexport class ActionItemService {\\n\\n  readonly actionItems = new Map<string, ActionItem>();\\n  /**\\n   * Adds an action item\\n   *\\n   * @param actionItem The action item\\n   */\\n  addActionItem(actionItem: ActionItem) {\\n    this.actionItems.set(`actionItem-${nextKeyId++}`, actionItem);\\n  }\\n  /**\\n   * Adds an action item toggle\\n   *\\n   * @param actionItem The action item\\n   * @deprecated\\n   * @experimental Do not use!\\n   */\\n  addActionItemToggle(actionItem: ActionItemToggle) {\\n    console.warn(\'%cThis method is experimental and may break. Continue at your own risk.\', \'font-weight: 600\');\\n    actionItem.onClickListener = () => {\\n      actionItem.toggleBind = !actionItem.toggleBind;\\n    };\\n    this.actionItems.set(`actionItem-${nextKeyId++}`, actionItem);\\n  }\\n  /**\\n   * Updates an action item by its key\\n   *\\n   * @param key The key of the action item\\n   * @param actionItem The action item\\n   */\\n  updateActionItemByKey(key: string, actionItem: ActionItem) {\\n    try {\\n      this.actionItems[key] = actionItem;\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Gets all action items\\n   */\\n  getActionItems(): ActionItem[] {\\n    return Array.from(this.actionItems.values());\\n  }\\n  /**\\n   * Removes an action item\\n   *\\n   * @param key The key of the action item to remove\\n   */\\n  removeActionItemByKey(key: string) {\\n    try {\\n      this.actionItems.delete(key);\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Removes all action items\\n   */\\n  removeActionItems() {\\n    this.actionItems.clear();\\n  }\\n  /**\\n   * Gets a action item by its key\\n   *\\n   * @param key The key of the action item to retrieve\\n   */\\n  getActionItemByKey(key: string): ActionItem {\\n    try {\\n      return this.actionItems[key];\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Adds a action item on click listener to the specified action item\\n   * Note: This can also be declared manually\\n   *\\n   * @deprecated Please set the onclick listener in the {@link ActionItem} object itself.\\n   * @param id The id of the action item\\n   * @param callback The callback when the action item is clicked (has to be arrow function)\\n   */\\n  addActionItemOnClickListener(key: string, callback: (ev?: Event) => void) {\\n    try {\\n      this.actionItems[key].onClickListener = callback;\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Throws an error where the id couldn\'t be found\\n   */\\n  private throwKeyNotFoundError(id: string) {\\n    throw new Error(`Could not find an action item with key ${id}`);\\n  }\\n  /**\\n   * Throws an error where the title couldn\'t be found\\n   */\\n  private throwTitleNotFoundError(title: string) {\\n    throw new Error(`Could not find an action item with title ${title}`);\\n  }\\n}\\n\\n/**\\n * An action item\\n */\\nexport interface ActionItem {\\n  /**\\n   * The title of the action item\\n   */\\n  title: string;\\n  /** The ID of the action item */\\n  id?: string;\\n  /**\\n   * The icon of the action item\\n   */\\n  icon?: string;\\n  /**\\n   * The href of the action item\\n   * NOTE: If `routerLink` is specified, don\'t use `href`.\\n   */\\n  href?: string;\\n  /**\\n   * Similar to what Android does.\\n   */\\n  showAsAction?: boolean;\\n  /** Whether the action item should be disabled. */\\n  disabled?: boolean;\\n  /**\\n   * The router link of the action item\\n   * NOTE: If `href` is specified, don\'t use `routerLink`.\\n   */\\n  routerLink?: string;\\n  /**\\n   * The on click listener of the action item\\n   * Note: This can also be set by {@link ActionItemService#addActionItemOnClickListener}\\n   */\\n  onClickListener?: (ev?: Event) => void;\\n  /**\\n   * The submenu of the action item\\n   */\\n  subMenu?: ActionItem[];\\n}\\n/**\\n * An action item toggle\\n */\\nexport interface ActionItemToggle extends ActionItem {\\n  /**\\n   * The toggle boolean to bind to\\n   */\\n  toggleBind: boolean;\\n}\\n\\n@Component({\\n  selector: \'app-action-items\',\\n  template: `\\n\\t<ng-container *ngFor=\\"let actionItem of actionItems\\">\\n    <button\\n    mat-icon-button\\n    *ngIf=\\"actionItem.onClickListener\\"\\n    (click)=\\"actionItem.onClickListener($event)\\"\\n    [matTooltip]=\\"actionItem.title\\"\\n    [disabled]=\\"actionItem.disabled\\">\\n      <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n    </button>\\n    <a mat-icon-button *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [matTooltip]=\\"actionItem.title\\" [disabled]=\\"actionItem.disabled\\">\\n    <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n    </a>\\n    <a\\n      mat-icon-button\\n      *ngIf=\\"actionItem.routerLink\\"\\n      [routerLink]=\\"[actionItem.routerLink]\\"\\n      [matTooltip]=\\"actionItem.title\\"\\n      [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t</a>\\n\\t</ng-container>\\n  <button mat-icon-button *ngIf=\\"showMoreMenu\\" [matMenuTriggerFor]=\\"moreMenu\\"\\n    matTooltip=\\"More options\\">\\n\\t\\t<mat-icon>more_vert</mat-icon>\\n\\t</button>\\n\\t<mat-menu #moreMenu=\\"matMenu\\">\\n\\t\\t<ng-container *ngFor=\\"let actionItem of overflowActionItems\\">\\n\\t\\t\\t<button mat-menu-item *ngIf=\\"actionItem.onClickListener\\" (click)=\\"actionItem.onClickListener($event)\\"\\n        [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</button>\\n\\t\\t\\t<a mat-menu-item *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</a>\\n\\t\\t\\t<a mat-menu-item *ngIf=\\"actionItem.routerLink\\" [routerLink]=\\"[actionItem.routerLink]\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</a>\\n\\t\\t</ng-container>\\n\\t</mat-menu>\\n\\t\\t\\t\\t`\\n})\\nexport class ActionItemsComponent {\\n  constructor(private actionItemService: ActionItemService) { }\\n  get actionItems(): ActionItem[] {\\n    return this.actionItemService.getActionItems().filter(item => item.showAsAction);\\n  }\\n  get overflowActionItems(): ActionItem[] {\\n    return this.actionItemService.getActionItems().filter(item => !item.showAsAction);\\n  }\\n  get showMoreMenu() {\\n    return this.actionItemService.getActionItems().find((actionItem: ActionItem): boolean => actionItem.showAsAction !== true);\\n  }\\n}\\n\\n@NgModule({\\n  declarations: [\\n    ActionItemsComponent\\n  ],\\n  exports: [\\n    ActionItemsComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    BrowserAnimationsModule,\\n    MatButtonModule,\\n    MatIconModule,\\n    MatMenuModule,\\n    MatTooltipModule,\\n    RouterModule\\n  ],\\n  providers: [\\n    ActionItemService\\n  ]\\n})\\nexport class ActionItemsModule { }\\n","properties":[{"name":"toggleBind","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"<p>The toggle boolean to bind to</p>\\n","line":167,"rawdescription":"\\n\\nThe toggle boolean to bind to\\n"}],"indexSignatures":[],"kind":165,"description":"<p>An action item toggle</p>\\n","rawdescription":"\\n\\nAn action item toggle\\n","methods":[],"extends":"ActionItem"},{"name":"ArticleCardComponentHarnessFilters","id":"interface-ArticleCardComponentHarnessFilters-4a3c43743ace6662c1d5fc6fd86d3973ec9d689a1bcf08f07e9cfeb709066ab5ab521b4f5c10b9703571ee71917d9d2b12efc92d9a331def6fa3994bfa64b2a0","file":"projects/rss-reader/src/app/components/article-card/testing/article-card-harness-filters.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { BaseHarnessFilters } from \'@angular/cdk/testing\';\\n\\nexport interface ArticleCardComponentHarnessFilters extends BaseHarnessFilters {\\n  /** Filters based on the text of the author. */\\n  author?: string | RegExp;\\n  /** Filters based on the published date. */\\n  // TODO: Add support for JS Dates.\\n  pubDate?: string | RegExp;\\n  /** Filters based on the title. */\\n  title?: string | RegExp;\\n  /** Filters based on the image\'s source. */\\n  imgSrc?: string | RegExp;\\n  /** Filters based on the description. */\\n  desc?: string | RegExp;\\n}\\n","properties":[{"name":"author","deprecated":false,"deprecationMessage":"","type":"string | RegExp","optional":true,"description":"<p>Filters based on the text of the author.</p>\\n","line":5,"rawdescription":"\\nFilters based on the text of the author."},{"name":"desc","deprecated":false,"deprecationMessage":"","type":"string | RegExp","optional":true,"description":"<p>Filters based on the description.</p>\\n","line":14,"rawdescription":"\\nFilters based on the description."},{"name":"imgSrc","deprecated":false,"deprecationMessage":"","type":"string | RegExp","optional":true,"description":"<p>Filters based on the image&#39;s source.</p>\\n","line":12,"rawdescription":"\\nFilters based on the image\'s source."},{"name":"pubDate","deprecated":false,"deprecationMessage":"","type":"string | RegExp","optional":true,"description":"<p>Filters based on the published date.</p>\\n","line":8,"rawdescription":"\\nFilters based on the published date."},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string | RegExp","optional":true,"description":"<p>Filters based on the title.</p>\\n","line":10,"rawdescription":"\\nFilters based on the title."}],"indexSignatures":[],"kind":165,"methods":[],"extends":"BaseHarnessFilters"},{"name":"BaseDialogOpts","id":"interface-BaseDialogOpts-0b7643f37a82ce61640ebaf07ff9ffa7e24c24ea044a2dff74485ed8847d81246cee0314613f5f8602208885b7992f42ebd13e555ca43791019c11ac4d19581d","file":"projects/rss-reader/src/app/core/dialogs/models.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Portal } from \'@angular/cdk/portal\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\n\\nexport type ButtonType = \'negative\' | \'neutral\' | \'positive\';\\n\\nexport type DialogType = \'alert\' | \'confirm\' | \'message\' | \'prompt\' | \'portal\'\\n| \'selection\';\\n\\nexport interface BaseDialogOpts {\\n  /** The dialog\'s title. */\\n  title?: string;\\n}\\n\\nexport interface DialogBtnOpts {\\n  /** The positive button\'s text. */\\n  positiveBtnText?: string;\\n  /** The positive button\'s color. */\\n  positiveBtnColor?: ThemePalette;\\n  /** The negative button\'s text. */\\n  negativeBtnText?: string;\\n  /** The negative button\'s color. */\\n  negativeBtnColor?: ThemePalette;\\n  /** The neutral button\'s text. */\\n  neutralBtnText?: string;\\n  /** The neutral button\'s color. */\\n  neutralBtnColor?: ThemePalette;\\n  /**\\n   * Whether to hide the action buttons.\\n   *\\n   * Optionally, you can specify which buttons to hide.\\n   */\\n  hideActionBtns?: ButtonType[] | boolean;\\n  /** The initial button to focus on. */\\n  initialActionBtnFocus?: ButtonType;\\n}\\n\\nexport interface DialogOptsWithMsg {\\n  /** The dialog\'s message. */\\n  msg?: string | SafeHtml;\\n  /** The dialog\'s title. */\\n  title?: string;\\n  /** Whether the dialog\'s message is in HTML. */\\n  isHtml?: boolean;\\n}\\n\\nexport interface DialogOpts extends BaseDialogOpts, DialogBtnOpts,\\n  DialogOptsWithMsg { }\\n\\nexport interface PromptDialogInputConfig {\\n  /** The input\'s placeholder. */\\n  placeholder?: string;\\n  /** The input\'s label. */\\n  label?: string;\\n  /** The input type. */\\n  inputType?: string;\\n  /** The input\'s initial value. */\\n  value?: string;\\n  /** The input\'s color. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PromptDialogOpts extends DialogOpts {\\n  /** Configuration for the input. */\\n  inputConfig?: PromptDialogInputConfig;\\n  /**\\n   * The input\'s placeholder.\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#placeholder} instead\\n   */\\n  placeholder?: string;\\n  /**\\n   * The input type.\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#inputType} instead\\n   */\\n  inputType?: \'text\' | \'email\' | \'password\' | \'number\';\\n  /**\\n   * The initial value of the input\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#value} instead\\n   */\\n  value?: string | number;\\n  /**\\n   * The color of the input\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#color} instead\\n   */\\n  color?: ThemePalette;\\n}\\n\\nexport interface SelectionDialogOpts extends DialogOpts {\\n  /** Options to be shown in the dialog. */\\n  options: SelectionDialogOption[];\\n}\\n\\nexport interface SelectionDialogOption {\\n  /** The title of the option. */\\n  title: string;\\n  /** The value of the option. */\\n  value: any;\\n  /** Whether the option is disabled. */\\n  disabled?: boolean;\\n  /** Whether the option is initially selected. */\\n  selected?: boolean;\\n  /** The checkbox position of the option. */\\n  checkboxPosition?: \'before\' | \'after\';\\n  /** The color of the option. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PortalDialogOpts<T> extends DialogOpts {\\n  /** The portal to render in the dialog. */\\n  portal: Portal<T>;\\n}\\n\\n/** The result returned by the dialog. */\\n/* eslint-disable @typescript-eslint/naming-convention */\\nexport enum DialogResult {\\n  /** Indicates that the user clicked the \\"Cancel\\" (or negative) button. */\\n  NEGATIVE = \'cancel\',\\n  /** Alias for {@link DialogResult#NEGATIVE}. */\\n  CANCEL = \'cancel\',\\n  /** Indicates that the user clicked the neutral button. */\\n  NEUTRAL = \'neutral\',\\n  /** Indicates that the user clicked the \\"OK\\" (or positive) button. */\\n  POSITIVE = \'ok\',\\n  /** Alias for {@link DialogResult#POSITIVE}. */\\n  OK = \'ok\'\\n}\\n/* eslint-enable @typescript-eslint/naming-convention */\\n","properties":[{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The dialog&#39;s title.</p>\\n","line":12,"rawdescription":"\\nThe dialog\'s title."}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"DialogBtnOpts","id":"interface-DialogBtnOpts-0b7643f37a82ce61640ebaf07ff9ffa7e24c24ea044a2dff74485ed8847d81246cee0314613f5f8602208885b7992f42ebd13e555ca43791019c11ac4d19581d","file":"projects/rss-reader/src/app/core/dialogs/models.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Portal } from \'@angular/cdk/portal\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\n\\nexport type ButtonType = \'negative\' | \'neutral\' | \'positive\';\\n\\nexport type DialogType = \'alert\' | \'confirm\' | \'message\' | \'prompt\' | \'portal\'\\n| \'selection\';\\n\\nexport interface BaseDialogOpts {\\n  /** The dialog\'s title. */\\n  title?: string;\\n}\\n\\nexport interface DialogBtnOpts {\\n  /** The positive button\'s text. */\\n  positiveBtnText?: string;\\n  /** The positive button\'s color. */\\n  positiveBtnColor?: ThemePalette;\\n  /** The negative button\'s text. */\\n  negativeBtnText?: string;\\n  /** The negative button\'s color. */\\n  negativeBtnColor?: ThemePalette;\\n  /** The neutral button\'s text. */\\n  neutralBtnText?: string;\\n  /** The neutral button\'s color. */\\n  neutralBtnColor?: ThemePalette;\\n  /**\\n   * Whether to hide the action buttons.\\n   *\\n   * Optionally, you can specify which buttons to hide.\\n   */\\n  hideActionBtns?: ButtonType[] | boolean;\\n  /** The initial button to focus on. */\\n  initialActionBtnFocus?: ButtonType;\\n}\\n\\nexport interface DialogOptsWithMsg {\\n  /** The dialog\'s message. */\\n  msg?: string | SafeHtml;\\n  /** The dialog\'s title. */\\n  title?: string;\\n  /** Whether the dialog\'s message is in HTML. */\\n  isHtml?: boolean;\\n}\\n\\nexport interface DialogOpts extends BaseDialogOpts, DialogBtnOpts,\\n  DialogOptsWithMsg { }\\n\\nexport interface PromptDialogInputConfig {\\n  /** The input\'s placeholder. */\\n  placeholder?: string;\\n  /** The input\'s label. */\\n  label?: string;\\n  /** The input type. */\\n  inputType?: string;\\n  /** The input\'s initial value. */\\n  value?: string;\\n  /** The input\'s color. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PromptDialogOpts extends DialogOpts {\\n  /** Configuration for the input. */\\n  inputConfig?: PromptDialogInputConfig;\\n  /**\\n   * The input\'s placeholder.\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#placeholder} instead\\n   */\\n  placeholder?: string;\\n  /**\\n   * The input type.\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#inputType} instead\\n   */\\n  inputType?: \'text\' | \'email\' | \'password\' | \'number\';\\n  /**\\n   * The initial value of the input\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#value} instead\\n   */\\n  value?: string | number;\\n  /**\\n   * The color of the input\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#color} instead\\n   */\\n  color?: ThemePalette;\\n}\\n\\nexport interface SelectionDialogOpts extends DialogOpts {\\n  /** Options to be shown in the dialog. */\\n  options: SelectionDialogOption[];\\n}\\n\\nexport interface SelectionDialogOption {\\n  /** The title of the option. */\\n  title: string;\\n  /** The value of the option. */\\n  value: any;\\n  /** Whether the option is disabled. */\\n  disabled?: boolean;\\n  /** Whether the option is initially selected. */\\n  selected?: boolean;\\n  /** The checkbox position of the option. */\\n  checkboxPosition?: \'before\' | \'after\';\\n  /** The color of the option. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PortalDialogOpts<T> extends DialogOpts {\\n  /** The portal to render in the dialog. */\\n  portal: Portal<T>;\\n}\\n\\n/** The result returned by the dialog. */\\n/* eslint-disable @typescript-eslint/naming-convention */\\nexport enum DialogResult {\\n  /** Indicates that the user clicked the \\"Cancel\\" (or negative) button. */\\n  NEGATIVE = \'cancel\',\\n  /** Alias for {@link DialogResult#NEGATIVE}. */\\n  CANCEL = \'cancel\',\\n  /** Indicates that the user clicked the neutral button. */\\n  NEUTRAL = \'neutral\',\\n  /** Indicates that the user clicked the \\"OK\\" (or positive) button. */\\n  POSITIVE = \'ok\',\\n  /** Alias for {@link DialogResult#POSITIVE}. */\\n  OK = \'ok\'\\n}\\n/* eslint-enable @typescript-eslint/naming-convention */\\n","properties":[{"name":"hideActionBtns","deprecated":false,"deprecationMessage":"","type":"ButtonType[] | boolean","optional":true,"description":"<p>Whether to hide the action buttons.</p>\\n<p>Optionally, you can specify which buttons to hide.</p>\\n","line":33,"rawdescription":"\\n\\nWhether to hide the action buttons.\\n\\nOptionally, you can specify which buttons to hide.\\n"},{"name":"initialActionBtnFocus","deprecated":false,"deprecationMessage":"","type":"ButtonType","optional":true,"description":"<p>The initial button to focus on.</p>\\n","line":35,"rawdescription":"\\nThe initial button to focus on."},{"name":"negativeBtnColor","deprecated":false,"deprecationMessage":"","type":"ThemePalette","optional":true,"description":"<p>The negative button&#39;s color.</p>\\n","line":23,"rawdescription":"\\nThe negative button\'s color."},{"name":"negativeBtnText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The negative button&#39;s text.</p>\\n","line":21,"rawdescription":"\\nThe negative button\'s text."},{"name":"neutralBtnColor","deprecated":false,"deprecationMessage":"","type":"ThemePalette","optional":true,"description":"<p>The neutral button&#39;s color.</p>\\n","line":27,"rawdescription":"\\nThe neutral button\'s color."},{"name":"neutralBtnText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The neutral button&#39;s text.</p>\\n","line":25,"rawdescription":"\\nThe neutral button\'s text."},{"name":"positiveBtnColor","deprecated":false,"deprecationMessage":"","type":"ThemePalette","optional":true,"description":"<p>The positive button&#39;s color.</p>\\n","line":19,"rawdescription":"\\nThe positive button\'s color."},{"name":"positiveBtnText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The positive button&#39;s text.</p>\\n","line":17,"rawdescription":"\\nThe positive button\'s text."}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"DialogOpts","id":"interface-DialogOpts-0b7643f37a82ce61640ebaf07ff9ffa7e24c24ea044a2dff74485ed8847d81246cee0314613f5f8602208885b7992f42ebd13e555ca43791019c11ac4d19581d","file":"projects/rss-reader/src/app/core/dialogs/models.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Portal } from \'@angular/cdk/portal\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\n\\nexport type ButtonType = \'negative\' | \'neutral\' | \'positive\';\\n\\nexport type DialogType = \'alert\' | \'confirm\' | \'message\' | \'prompt\' | \'portal\'\\n| \'selection\';\\n\\nexport interface BaseDialogOpts {\\n  /** The dialog\'s title. */\\n  title?: string;\\n}\\n\\nexport interface DialogBtnOpts {\\n  /** The positive button\'s text. */\\n  positiveBtnText?: string;\\n  /** The positive button\'s color. */\\n  positiveBtnColor?: ThemePalette;\\n  /** The negative button\'s text. */\\n  negativeBtnText?: string;\\n  /** The negative button\'s color. */\\n  negativeBtnColor?: ThemePalette;\\n  /** The neutral button\'s text. */\\n  neutralBtnText?: string;\\n  /** The neutral button\'s color. */\\n  neutralBtnColor?: ThemePalette;\\n  /**\\n   * Whether to hide the action buttons.\\n   *\\n   * Optionally, you can specify which buttons to hide.\\n   */\\n  hideActionBtns?: ButtonType[] | boolean;\\n  /** The initial button to focus on. */\\n  initialActionBtnFocus?: ButtonType;\\n}\\n\\nexport interface DialogOptsWithMsg {\\n  /** The dialog\'s message. */\\n  msg?: string | SafeHtml;\\n  /** The dialog\'s title. */\\n  title?: string;\\n  /** Whether the dialog\'s message is in HTML. */\\n  isHtml?: boolean;\\n}\\n\\nexport interface DialogOpts extends BaseDialogOpts, DialogBtnOpts,\\n  DialogOptsWithMsg { }\\n\\nexport interface PromptDialogInputConfig {\\n  /** The input\'s placeholder. */\\n  placeholder?: string;\\n  /** The input\'s label. */\\n  label?: string;\\n  /** The input type. */\\n  inputType?: string;\\n  /** The input\'s initial value. */\\n  value?: string;\\n  /** The input\'s color. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PromptDialogOpts extends DialogOpts {\\n  /** Configuration for the input. */\\n  inputConfig?: PromptDialogInputConfig;\\n  /**\\n   * The input\'s placeholder.\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#placeholder} instead\\n   */\\n  placeholder?: string;\\n  /**\\n   * The input type.\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#inputType} instead\\n   */\\n  inputType?: \'text\' | \'email\' | \'password\' | \'number\';\\n  /**\\n   * The initial value of the input\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#value} instead\\n   */\\n  value?: string | number;\\n  /**\\n   * The color of the input\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#color} instead\\n   */\\n  color?: ThemePalette;\\n}\\n\\nexport interface SelectionDialogOpts extends DialogOpts {\\n  /** Options to be shown in the dialog. */\\n  options: SelectionDialogOption[];\\n}\\n\\nexport interface SelectionDialogOption {\\n  /** The title of the option. */\\n  title: string;\\n  /** The value of the option. */\\n  value: any;\\n  /** Whether the option is disabled. */\\n  disabled?: boolean;\\n  /** Whether the option is initially selected. */\\n  selected?: boolean;\\n  /** The checkbox position of the option. */\\n  checkboxPosition?: \'before\' | \'after\';\\n  /** The color of the option. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PortalDialogOpts<T> extends DialogOpts {\\n  /** The portal to render in the dialog. */\\n  portal: Portal<T>;\\n}\\n\\n/** The result returned by the dialog. */\\n/* eslint-disable @typescript-eslint/naming-convention */\\nexport enum DialogResult {\\n  /** Indicates that the user clicked the \\"Cancel\\" (or negative) button. */\\n  NEGATIVE = \'cancel\',\\n  /** Alias for {@link DialogResult#NEGATIVE}. */\\n  CANCEL = \'cancel\',\\n  /** Indicates that the user clicked the neutral button. */\\n  NEUTRAL = \'neutral\',\\n  /** Indicates that the user clicked the \\"OK\\" (or positive) button. */\\n  POSITIVE = \'ok\',\\n  /** Alias for {@link DialogResult#POSITIVE}. */\\n  OK = \'ok\'\\n}\\n/* eslint-enable @typescript-eslint/naming-convention */\\n","properties":[],"indexSignatures":[],"methods":[],"extends":"BaseDialogOpts"},{"name":"DialogOptsWithMsg","id":"interface-DialogOptsWithMsg-0b7643f37a82ce61640ebaf07ff9ffa7e24c24ea044a2dff74485ed8847d81246cee0314613f5f8602208885b7992f42ebd13e555ca43791019c11ac4d19581d","file":"projects/rss-reader/src/app/core/dialogs/models.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Portal } from \'@angular/cdk/portal\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\n\\nexport type ButtonType = \'negative\' | \'neutral\' | \'positive\';\\n\\nexport type DialogType = \'alert\' | \'confirm\' | \'message\' | \'prompt\' | \'portal\'\\n| \'selection\';\\n\\nexport interface BaseDialogOpts {\\n  /** The dialog\'s title. */\\n  title?: string;\\n}\\n\\nexport interface DialogBtnOpts {\\n  /** The positive button\'s text. */\\n  positiveBtnText?: string;\\n  /** The positive button\'s color. */\\n  positiveBtnColor?: ThemePalette;\\n  /** The negative button\'s text. */\\n  negativeBtnText?: string;\\n  /** The negative button\'s color. */\\n  negativeBtnColor?: ThemePalette;\\n  /** The neutral button\'s text. */\\n  neutralBtnText?: string;\\n  /** The neutral button\'s color. */\\n  neutralBtnColor?: ThemePalette;\\n  /**\\n   * Whether to hide the action buttons.\\n   *\\n   * Optionally, you can specify which buttons to hide.\\n   */\\n  hideActionBtns?: ButtonType[] | boolean;\\n  /** The initial button to focus on. */\\n  initialActionBtnFocus?: ButtonType;\\n}\\n\\nexport interface DialogOptsWithMsg {\\n  /** The dialog\'s message. */\\n  msg?: string | SafeHtml;\\n  /** The dialog\'s title. */\\n  title?: string;\\n  /** Whether the dialog\'s message is in HTML. */\\n  isHtml?: boolean;\\n}\\n\\nexport interface DialogOpts extends BaseDialogOpts, DialogBtnOpts,\\n  DialogOptsWithMsg { }\\n\\nexport interface PromptDialogInputConfig {\\n  /** The input\'s placeholder. */\\n  placeholder?: string;\\n  /** The input\'s label. */\\n  label?: string;\\n  /** The input type. */\\n  inputType?: string;\\n  /** The input\'s initial value. */\\n  value?: string;\\n  /** The input\'s color. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PromptDialogOpts extends DialogOpts {\\n  /** Configuration for the input. */\\n  inputConfig?: PromptDialogInputConfig;\\n  /**\\n   * The input\'s placeholder.\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#placeholder} instead\\n   */\\n  placeholder?: string;\\n  /**\\n   * The input type.\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#inputType} instead\\n   */\\n  inputType?: \'text\' | \'email\' | \'password\' | \'number\';\\n  /**\\n   * The initial value of the input\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#value} instead\\n   */\\n  value?: string | number;\\n  /**\\n   * The color of the input\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#color} instead\\n   */\\n  color?: ThemePalette;\\n}\\n\\nexport interface SelectionDialogOpts extends DialogOpts {\\n  /** Options to be shown in the dialog. */\\n  options: SelectionDialogOption[];\\n}\\n\\nexport interface SelectionDialogOption {\\n  /** The title of the option. */\\n  title: string;\\n  /** The value of the option. */\\n  value: any;\\n  /** Whether the option is disabled. */\\n  disabled?: boolean;\\n  /** Whether the option is initially selected. */\\n  selected?: boolean;\\n  /** The checkbox position of the option. */\\n  checkboxPosition?: \'before\' | \'after\';\\n  /** The color of the option. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PortalDialogOpts<T> extends DialogOpts {\\n  /** The portal to render in the dialog. */\\n  portal: Portal<T>;\\n}\\n\\n/** The result returned by the dialog. */\\n/* eslint-disable @typescript-eslint/naming-convention */\\nexport enum DialogResult {\\n  /** Indicates that the user clicked the \\"Cancel\\" (or negative) button. */\\n  NEGATIVE = \'cancel\',\\n  /** Alias for {@link DialogResult#NEGATIVE}. */\\n  CANCEL = \'cancel\',\\n  /** Indicates that the user clicked the neutral button. */\\n  NEUTRAL = \'neutral\',\\n  /** Indicates that the user clicked the \\"OK\\" (or positive) button. */\\n  POSITIVE = \'ok\',\\n  /** Alias for {@link DialogResult#POSITIVE}. */\\n  OK = \'ok\'\\n}\\n/* eslint-enable @typescript-eslint/naming-convention */\\n","properties":[{"name":"isHtml","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Whether the dialog&#39;s message is in HTML.</p>\\n","line":44,"rawdescription":"\\nWhether the dialog\'s message is in HTML."},{"name":"msg","deprecated":false,"deprecationMessage":"","type":"string | SafeHtml","optional":true,"description":"<p>The dialog&#39;s message.</p>\\n","line":40,"rawdescription":"\\nThe dialog\'s message."},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The dialog&#39;s title.</p>\\n","line":42,"rawdescription":"\\nThe dialog\'s title."}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"Environment","id":"interface-Environment-264773c802c8724b021cbeee0faf2e49236aef85f271d1160d096af0b74f121b06010a3e04f2a487cd13aaafe6f5b0bf558a5df9a684150525fd3e856f80ae2a","file":"projects/rss-reader/src/environment.base.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Version } from \'@angular/core\';\\nimport { ExtraOptions } from \'@angular/router\';\\nimport { GitRepo } from \'./app/pages/release-notes/models/release-notes\';\\nimport releaseNotesJson from \'./assets/release-notes/release-notes.json\';\\n\\n// This file contains the constants that all of the environments\\n// that the app defines.\\n\\n/** Environment interface */\\nexport interface Environment {\\n  /** The app\'s latest version. */\\n  latestVersion: Version;\\n  /** Whether the environment is in production mode. */\\n  production: boolean;\\n  /** Location of the service worker file. */\\n  swLocation?: string;\\n  /**\\n   * Router options to be passed to `RouterModule.forRoot` in the main routing\\n   * module.\\n   */\\n  routerOptions?: ExtraOptions;\\n  /** Default Git repo options to be used in-place for the release notes options. */\\n  gitRepoDefaults?: GitRepo;\\n}\\n\\n/** The latest version of the app. */\\nexport const latestVersion = new Version(releaseNotesJson.latestVersion);\\n\\n/** Default configuration for the Git repository. */\\nexport const gitRepoDefaults: GitRepo = {\\n  host: \'https://github.com\',\\n  username: \'EdricChan03\',\\n  repo: \'rss-reader\'\\n};\\n\\n/** Default environment that other enviroments can extend from. */\\nexport const defaultEnvironment: Environment = {\\n  production: false,\\n  swLocation: \'/ngsw-worker.js\',\\n  latestVersion,\\n  gitRepoDefaults\\n};\\n\\n/**\\n * Merges the specified environment with the default environment\\n * and returns the result.\\n *\\n * @param env The enviroment to merge\\n */\\nexport const mergeWithDefaultEnv: (env: Partial<Environment>) => Environment =\\n  (env) => ({ ...defaultEnvironment, ...env });\\n","properties":[{"name":"gitRepoDefaults","deprecated":false,"deprecationMessage":"","type":"GitRepo","optional":true,"description":"<p>Default Git repo options to be used in-place for the release notes options.</p>\\n","line":23,"rawdescription":"\\nDefault Git repo options to be used in-place for the release notes options."},{"name":"latestVersion","deprecated":false,"deprecationMessage":"","type":"Version","optional":false,"description":"<p>The app&#39;s latest version.</p>\\n","line":12,"rawdescription":"\\nThe app\'s latest version."},{"name":"production","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"<p>Whether the environment is in production mode.</p>\\n","line":14,"rawdescription":"\\nWhether the environment is in production mode."},{"name":"routerOptions","deprecated":false,"deprecationMessage":"","type":"ExtraOptions","optional":true,"description":"<p>Router options to be passed to <code>RouterModule.forRoot</code> in the main routing\\nmodule.</p>\\n","line":21,"rawdescription":"\\n\\nRouter options to be passed to `RouterModule.forRoot` in the main routing\\nmodule.\\n"},{"name":"swLocation","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Location of the service worker file.</p>\\n","line":16,"rawdescription":"\\nLocation of the service worker file."}],"indexSignatures":[],"kind":165,"description":"<p>Environment interface</p>\\n","rawdescription":"\\nEnvironment interface","methods":[]},{"name":"Feed","id":"interface-Feed-bfea2f3dd5087246986d276bca8e31909da8c3e4beeab73bc4ccdc6912255732469e561ba09c365ba42dd570dd60a339148bbf9f6cb22a3aa31ff9e94ad99c2f","file":"projects/rss-reader/src/app/models/feed.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FeedCategory } from \'./feed-category\';\\n\\nexport interface Feed {\\n  // status: string;\\n  // feed: FeedInfo;\\n  // items: FeedEntry[];\\n  $schema: string;\\n  feedUrls: FeedCategory[];\\n}\\n","properties":[{"name":"$schema","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9},{"name":"feedUrls","deprecated":false,"deprecationMessage":"","type":"FeedCategory[]","optional":false,"description":"","line":10}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"FeedCategory","id":"interface-FeedCategory-e1db88f2209887c9f976ac9c976cc6a3d6bb3892e5c8fc5efd3ec876d5d63ada02940e7be1c06b24771be72f2588b587f3a3bd54cbe7227da73d48887ee6c59e","file":"projects/rss-reader/src/app/models/feed-category.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FeedChannel } from \'./feed-channel\';\\n\\nexport interface FeedCategory {\\n  categoryName: string;\\n  categoryId: string;\\n  channels: FeedChannel[];\\n}\\n","properties":[{"name":"categoryId","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"categoryName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4},{"name":"channels","deprecated":false,"deprecationMessage":"","type":"FeedChannel[]","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"FeedChannel","id":"interface-FeedChannel-f4814874b7ed155f1e00232453cb4c6eee38453b7c07b507ec5e67392a54a0bc692b31bfe25ab329d903bf5f394614365d66f246068c46244b22032de22329f7","file":"projects/rss-reader/src/app/models/feed-channel.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface FeedChannel {\\n  /**\\n   * The name of the RSS channel\\n   */\\n  feedName: string;\\n  /**\\n   * The RSS feed URL of the RSS channel\\n   */\\n  feedUrl: string;\\n  /**\\n   * More info about the RSS channel\\n   */\\n  feedDescription?: string;\\n}\\n","properties":[{"name":"feedDescription","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>More info about the RSS channel</p>\\n","line":13,"rawdescription":"\\n\\nMore info about the RSS channel\\n"},{"name":"feedName","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The name of the RSS channel</p>\\n","line":5,"rawdescription":"\\n\\nThe name of the RSS channel\\n"},{"name":"feedUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The RSS feed URL of the RSS channel</p>\\n","line":9,"rawdescription":"\\n\\nThe RSS feed URL of the RSS channel\\n"}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"FeedEntry","id":"interface-FeedEntry-12151c4238417361438794314a07c6720d56207638c6b2608b0d79967ecec41d0cb103dbd7617f045c45d98144b5981f9515345de47c8cd787c23be974edaf1d","file":"projects/rss-reader/src/app/models/feed-entry.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface FeedEntry {\\n  /**\\n   * The title of the entry\\n   */\\n  title?: string;\\n  /**\\n   * The link of the entry\\n   */\\n  link?: string;\\n  guid?: string;\\n  /**\\n   * The date that the entry was published on\\n   */\\n  pubDate?: string;\\n  /**\\n   * An array of categories/tags assigned to the entry\\n   */\\n  categories?: string[];\\n  /**\\n   * The person who wrote the entry\\n   */\\n  author?: string;\\n  /**\\n   * A thumbnail of the entry\\n   */\\n  thumbnail?: string;\\n  /**\\n   * Description/the contents of the entry\\n   */\\n  description?: string;\\n  content?: string;\\n  enclosure?: {\\n    link?: string;\\n    length?: number;\\n    type?: string;\\n  } | {\\n    [key: string]: string;\\n  };\\n}\\n","properties":[{"name":"author","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The person who wrote the entry</p>\\n","line":22,"rawdescription":"\\n\\nThe person who wrote the entry\\n"},{"name":"categories","deprecated":false,"deprecationMessage":"","type":"string[]","optional":true,"description":"<p>An array of categories/tags assigned to the entry</p>\\n","line":18,"rawdescription":"\\n\\nAn array of categories/tags assigned to the entry\\n"},{"name":"content","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":31},{"name":"description","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Description/the contents of the entry</p>\\n","line":30,"rawdescription":"\\n\\nDescription/the contents of the entry\\n"},{"name":"enclosure","deprecated":false,"deprecationMessage":"","type":"literal type | literal type","optional":true,"description":"","line":32},{"name":"guid","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":10},{"name":"link","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The link of the entry</p>\\n","line":9,"rawdescription":"\\n\\nThe link of the entry\\n"},{"name":"pubDate","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The date that the entry was published on</p>\\n","line":14,"rawdescription":"\\n\\nThe date that the entry was published on\\n"},{"name":"thumbnail","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>A thumbnail of the entry</p>\\n","line":26,"rawdescription":"\\n\\nA thumbnail of the entry\\n"},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The title of the entry</p>\\n","line":5,"rawdescription":"\\n\\nThe title of the entry\\n"}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"FeedInfo","id":"interface-FeedInfo-bbe36283b4dbec278c0b33b40b64b39e2d2c5ef72f57f830671ffc96d5af184d1b9f6d5370d0128b9e91a74992c381e76bef8e03667884966d90e5fa5015b757","file":"projects/rss-reader/src/app/models/feed-info.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface FeedInfo {\\n  title: string;\\n  link: string;\\n  author: string;\\n  description: string;\\n  image: string;\\n}\\n","properties":[{"name":"author","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4},{"name":"description","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"image","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"link","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":2}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"FeedOptions","id":"interface-FeedOptions-89cd8a0e49e07e5d02e0567c68551f69c2fc1fb50726abc5cc9c55e47a15bc2bd70e04da4c4e9517dd22afbb56659c378fd981ae56e77f497d77856054caa5bb","file":"projects/rss-reader/src/app/feed/feed.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { HttpClient, HttpErrorResponse, HttpParams } from \'@angular/common/http\';\\nimport { Component, OnDestroy, OnInit } from \'@angular/core\';\\nimport { MatDialog } from \'@angular/material/dialog\';\\nimport { Observable, Subject, Subscription, throwError } from \'rxjs\';\\nimport { catchError, map, tap } from \'rxjs/operators\';\\n\\nimport { ActionItemService } from \'../actionitem.service\';\\nimport { DialogsService } from \'../core/dialogs/dialogs.service\';\\nimport { CodeViewerDialogComponent, FeedDialogComponent, RSSChannelInfoDialogComponent } from \'../dialogs\';\\nimport { HotkeysService } from \'../hotkeys/hotkeys.service\';\\nimport { Rss2JsonResponseItem } from \'../models/rss2json-api/item\';\\nimport { migrateKeys } from \'../models/rss2json-api/migrate-keys\';\\nimport { Rss2JsonParams } from \'../models/rss2json-api/params\';\\nimport { Rss2JsonResponse } from \'../models/rss2json-api/response\';\\nimport { SharedService } from \'../shared.service\';\\n\\n\\n@Component({\\n  selector: \'app-feed\',\\n  templateUrl: \'./feed.component.html\'\\n})\\nexport class FeedComponent implements OnDestroy, OnInit {\\n  isRefreshing = true;\\n  errorObject = new Subject<HttpErrorResponse>();\\n  rss2JsonResponse$: Observable<Rss2JsonResponse>;\\n  feedItems$: Observable<Rss2JsonResponseItem[]>;\\n  rssToJsonServiceBaseUrl = \'https://api.rss2json.com/v1/api.json\';\\n  // See https://stackoverflow.com/a/12444641 for more info\\n  shortcutHandlers: Subscription[] = [];\\n  constructor(\\n    private coreDialogs: DialogsService,\\n    private dialog: MatDialog,\\n    private http: HttpClient,\\n    private shared: SharedService,\\n    private actionItemService: ActionItemService,\\n    private hotkeys: HotkeysService\\n  ) {\\n    const refreshShortcut = hotkeys.addShortcut({ keys: \'r\', description: \'Refresh the feed\', shortcutBlacklistEls: [\'input\', \'textarea\'] })\\n      .subscribe(() => {\\n        this.reloadFeed();\\n      });\\n    this.shortcutHandlers.push(refreshShortcut);\\n    this.actionItemService.addActionItem({\\n      title: \'RSS Options...\', icon: \'tune\', showAsAction: true, onClickListener: () => {\\n        this.selectRss();\\n      }\\n    });\\n    this.actionItemService.addActionItem({\\n      title: \'Refresh feed\',\\n      icon: \'sync\',\\n      showAsAction: true,\\n      onClickListener: () => {\\n        this.reloadFeed();\\n      }\\n    });\\n    this.actionItemService.addActionItem({\\n      title: \'View API response\',\\n      icon: \'code\',\\n      onClickListener: () => {\\n        this.openCodeViewerDialog();\\n      }\\n    });\\n  }\\n\\n  openRSSInfoDialog() {\\n    this.dialog.open(RSSChannelInfoDialogComponent);\\n  }\\n\\n  openCodeViewerDialog() {\\n    this.rss2JsonResponse$.subscribe(res => {\\n      this.dialog.open(CodeViewerDialogComponent, {\\n        data: res\\n      });\\n    }, error => {\\n      this.shared.openSnackBar({\\n        msg: \'Could not view API response because an error occurred. Please try again later\'\\n      });\\n      console.error(\'Could not view API response:\', error);\\n    });\\n  }\\n\\n  reload() {\\n    this.coreDialogs.openConfirmDialog({\\n      msg: \'Are you sure you want to refresh? Changes will not be saved!\',\\n      title: \'Reload?\'\\n    }).afterClosed().subscribe(result => {\\n      if (result === \'ok\') {\\n        window.location.reload();\\n      }\\n    });\\n  }\\n\\n  getFeed(options: Rss2JsonParams) {\\n    let params = new HttpParams();\\n    for (const key in options) {\\n      if (options[key] !== null) {\\n        // HttpParams is immutable, so we have to manually set the new value\\n        params = params.append(key, options[key]);\\n      }\\n    }\\n    return this.http.get<Rss2JsonResponse>(this.rssToJsonServiceBaseUrl, { params });\\n  }\\n\\n  reloadFeed() {\\n    let params: Rss2JsonParams = {\\n      // eslint-disable-next-line @typescript-eslint/naming-convention\\n      rss_url: \'\'\\n    };\\n    if (localStorage.feedOptions) {\\n      if (\'feedUrl\' in JSON.parse(localStorage.feedOptions)) {\\n        // feedOptions is using the old values - so we migrate the values\\n        const migratedOpts: Partial<Rss2JsonParams> = {};\\n\\n        const opts = JSON.parse(localStorage.feedOptions) as FeedOptions;\\n        for (const key in opts) {\\n          if (opts[key] !== null) {\\n            migratedOpts[migrateKeys[key]] = opts[key];\\n          }\\n        }\\n        console.log(\'Old feed options:\', opts);\\n        console.log(\'Migrated feed options:\', migratedOpts);\\n        localStorage.feedOptions = JSON.stringify(migratedOpts);\\n      }\\n      params = JSON.parse(localStorage.feedOptions) as Rss2JsonParams;\\n    }\\n    this.isRefreshing = true;\\n    this.errorObject.next(null);\\n    this.rss2JsonResponse$ = this.getFeed(params).pipe(tap(() => {\\n      this.isRefreshing = false;\\n    }), catchError(error => {\\n      this.errorObject.next(error);\\n      console.error(\'An error occurred:\', error);\\n      return throwError(error);\\n    }));\\n    this.feedItems$ = this.rss2JsonResponse$.pipe(map(res => res.items));\\n  }\\n\\n  selectRss() {\\n    const dialogRef = this.dialog.open(FeedDialogComponent);\\n    dialogRef.afterClosed().subscribe(result => {\\n      if (result !== \'save\' && typeof result === \'object\') {\\n        localStorage.feedOptions = JSON.stringify(result);\\n        this.reloadFeed();\\n      }\\n    });\\n  }\\n\\n  ngOnInit() {\\n    if (!localStorage.feedOptions) {\\n      this.selectRss();\\n    }\\n    this.reloadFeed();\\n  }\\n\\n  ngOnDestroy() {\\n    if (this.shortcutHandlers.length > 0) {\\n      this.shortcutHandlers.forEach((handler) => {\\n        handler.unsubscribe();\\n      });\\n    }\\n  }\\n\\n}\\n\\nexport interface FeedOptions {\\n  feedUrl?: string;\\n  apiKey?: string;\\n  amount?: number;\\n}\\n","properties":[{"name":"amount","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"","line":168},{"name":"apiKey","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":167},{"name":"feedUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":166}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"GuideItem","id":"interface-GuideItem-7eda09c3cd8d944359482b572503dedc63550f78a283f3fc3f7cd8acb5c970def0a894ffa774004e523118c388ff959df996afb5b678090cf076124b52633ca4","file":"projects/rss-reader/src/app/guide-items.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\n\\nexport interface GuideItem {\\n  id: string;\\n  name: string;\\n  document: string;\\n  url: string;\\n}\\n\\nconst GUIDES: GuideItem[] = [\\n  {\\n    id: \'getting-started\',\\n    document: \'assets/docs/guides/getting-started.html\',\\n    url: \'doc/guides/getting-started\',\\n    name: \'Getting Started\'\\n  },\\n  {\\n    id: \'generate-api-key\',\\n    document: \'assets/docs/guides/generate-api-key.html\',\\n    url: \'doc/guides/generate-api-key\',\\n    name: \'Generating an API Key\'\\n  },\\n  {\\n    id: \'troubleshooting\',\\n    document: \'assets/docs/guides/troubleshooting.html\',\\n    url: \'doc/guides/troubleshooting\',\\n    name: \'Troubleshooting\'\\n  }\\n];\\n\\n@Injectable()\\nexport class GuideItemsService {\\n  getAllItems(): GuideItem[] {\\n    return this.getGuideItems();\\n  }\\n  getGuideItems(): GuideItem[] {\\n    return GUIDES;\\n  }\\n  getGuideItemById(id: string): GuideItem {\\n    return GUIDES.find(i => i.id === id);\\n  }\\n}\\n","properties":[{"name":"document","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"url","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"HeadlineOptions","id":"interface-HeadlineOptions-49916e78d7015a834f5361602211a931b5abd7729119964034e4d5ef46bf3d28f9410a612ce4f68b124f4c35699c0d3dd9e2324601bed520c6ff2b881dc68e63","file":"projects/rss-reader/src/app/dialogs/headline-options-dialog/headline-options-dialog.component.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Component, OnInit, Inject } from \'@angular/core\';\\nimport { FormBuilder, FormControl, FormGroup, Validators } from \'@angular/forms\';\\nimport { Observable } from \'rxjs\';\\nimport { RestCountriesAPICountry } from \'../../models/rest-countries-api\';\\nimport { switchMap } from \'rxjs/operators\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\n\\ntype HeadlineForm = FormGroup<{\\n  apiKey: FormControl<string | null>;\\n  q: FormControl<string | null>;\\n  country: FormControl<string | null>;\\n  category: FormControl<string | null>;\\n  pageSize: FormControl<number | null>;\\n}>;\\n\\nexport interface HeadlineOptions {\\n  /**\\n   * The API key\\n   */\\n  apiKey?: string;\\n  /**\\n   * A country code\\n   */\\n  country?: string;\\n  /**\\n   * The category to fetch\\n   */\\n  category?: string;\\n  /**\\n   * The number of articles to return\\n   */\\n  pageSize?: number;\\n}\\n\\n@Component({\\n  selector: \'app-headline-options-dialog\',\\n  templateUrl: \'./headline-options-dialog.component.html\',\\n  styleUrls: [\'./headline-options-dialog.component.scss\']\\n})\\nexport class HeadlineOptionsDialogComponent implements OnInit {\\n\\n  filteredOptions: Observable<RestCountriesAPICountry[]>;\\n  headlineOptForm: HeadlineForm;\\n  categories = [\'business\', \'entertainment\', \'general\', \'health\', \'science\', \'sports\', \'technology\'];\\n  constructor(\\n    fb: FormBuilder,\\n    private http: HttpClient,\\n    @Inject(MAT_DIALOG_DATA) public headlineOpts: HeadlineOptions\\n  ) {\\n    this.headlineOptForm = fb.group({\\n      apiKey: [\'\', Validators.required],\\n      q: \'\',\\n      country: \'\',\\n      // country: [\'\', [Validators.required, Validators.minLength(2), Validators.maxLength(2)]],\\n      category: \'\',\\n      pageSize: 20\\n    });\\n  }\\n\\n  ngOnInit() {\\n    if (this.headlineOpts) {\\n      this.headlineOptForm.patchValue(this.headlineOpts);\\n    }\\n    setTimeout(() => {\\n      this.filteredOptions = this.headlineOptForm.get(\'country\').valueChanges\\n        .pipe(\\n          // debounceTime(150),\\n          switchMap(value => this.getCountries(value))\\n        );\\n    });\\n  }\\n  getCountries(name: string): Observable<RestCountriesAPICountry[]> {\\n    return this.http.get<RestCountriesAPICountry[]>(`https://restcountries.eu/rest/v2/name/${encodeURIComponent(name)}`);\\n  }\\n\\n}\\n","properties":[{"name":"apiKey","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The API key</p>\\n","line":21,"rawdescription":"\\n\\nThe API key\\n"},{"name":"category","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The category to fetch</p>\\n","line":29,"rawdescription":"\\n\\nThe category to fetch\\n"},{"name":"country","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>A country code</p>\\n","line":25,"rawdescription":"\\n\\nA country code\\n"},{"name":"pageSize","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"<p>The number of articles to return</p>\\n","line":33,"rawdescription":"\\n\\nThe number of articles to return\\n"}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"Hotkey","id":"interface-Hotkey-bdb64f5101d42101c7bbc40e8233d8ba5a9381698eccc0d5d877b54aed206956b57fe5fd288aebcecad53f1bcfc37ef07f44141cce17d4ec121c3baa3f47519f","file":"projects/rss-reader/src/app/hotkeys/hotkeys.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable, Inject } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { EventManager } from \'@angular/platform-browser\';\\nimport { DOCUMENT } from \'@angular/common\';\\nimport { MatDialog } from \'@angular/material/dialog\';\\nimport { HotkeyHelpDialogComponent } from \'./hotkey-help-dialog/hotkey-help-dialog.component\';\\n\\ntype Platform = \'windows\' | \'macos\' | \'linux\' | \'other\';\\n\\ninterface Hotkey {\\n  /** A valid hotkey bind. */\\n  keys: string;\\n  /** The platform where this hotkey will be valid for. */\\n  platform?: Platform;\\n}\\ninterface HotkeyOptions {\\n  /** The element to bind the hotkey to. */\\n  element: any;\\n  /** A valid hotkey bind, or a list of hotkey binds. */\\n  keys: string | Hotkey[];\\n  /** The description of the hotkey, if any. */\\n  description?: string;\\n  /**\\n   * Blacklist for elements that should not have keyboard shortcuts\\n   *\\n   * When specified, it is assumed that all other elements are whitelisted.\\n   */\\n  shortcutBlacklistEls?: string[];\\n  /**\\n   * Whitelist for elements that should have keyboard shortcuts\\n   *\\n   * When specified, it is assumed that all other elements are blacklisted.\\n   */\\n  shortcutWhitelistEls?: string[];\\n}\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class HotkeysService {\\n  hotkeys = new Map<string, string>();\\n  readonly hotkeyHelpDialogId = \'hotkey-help-dialog\';\\n  defaults: Partial<HotkeyOptions> = {\\n    // Specify a default description for hotkeys with no specified desc\\n    description: \'<No description>\',\\n    element: this.document\\n  };\\n\\n  constructor(\\n    private eventManager: EventManager,\\n    private dialog: MatDialog,\\n    @Inject(DOCUMENT) private document: Document\\n  ) {\\n    this.addShortcut({ keys: \'shift.?\', description: \'Show this help dialog\', shortcutBlacklistEls: [\'input\', \'textarea\'] })\\n      .subscribe(() => {\\n        this.openHotkeyHelpDialog();\\n      });\\n  }\\n\\n  /**\\n   * Adds a keyboard shortcut which binds to the specified `element`\\n   *\\n   * @param options Options for the shortcut\\n   * @returns The observable\\n   */\\n  addShortcut(options: Partial<HotkeyOptions>): Observable<KeyboardEvent> {\\n    const merged = { ...this.defaults, ...options };\\n    const event = `keydown.${merged.keys}`;\\n\\n    if (merged.description) {\\n      if (typeof merged.keys === \'string\') {\\n        this.hotkeys.set(merged.keys, merged.description);\\n      } else {\\n        merged.keys.forEach(hotkey => {\\n          if (this.isPlatform(hotkey.platform)) {\\n            this.hotkeys.set(hotkey.keys, merged.description);\\n          }\\n        });\\n      }\\n    }\\n\\n    return new Observable(observer => {\\n      const handler = (e: KeyboardEvent) => {\\n        let skipHotkey = false;\\n        if (merged.shortcutBlacklistEls !== undefined) {\\n          const blacklistEls = merged.shortcutBlacklistEls.map(el => el.toUpperCase());\\n          // We can\'t just assume that the target is always a HTML element\\n          // See https://stackoverflow.com/q/28900077/6782707\\n          if (e.target instanceof Element) {\\n            // Target is a HTML element\\n            if (blacklistEls.includes(e.target.tagName)) {\\n              skipHotkey = true;\\n            }\\n          }\\n        }\\n        if (merged.shortcutWhitelistEls !== undefined) {\\n          const whitelistEls = merged.shortcutWhitelistEls.map(el => el.toUpperCase());\\n          // We can\'t just assume that the target is always a HTML element\\n          // See https://stackoverflow.com/q/28900077/6782707\\n          if (e.target instanceof Element) {\\n            // Target is a HTML element\\n            if (!whitelistEls.includes(e.target.tagName)) {\\n              skipHotkey = true;\\n            }\\n          }\\n        }\\n\\n        if (!skipHotkey) {\\n          e.preventDefault();\\n          observer.next(e);\\n        }\\n      };\\n\\n      const dispose = this.eventManager.addEventListener(\\n        merged.element, event, handler\\n      );\\n\\n      return () => {\\n        dispose();\\n        if (typeof merged.keys === \'string\') {\\n          this.hotkeys.delete(merged.keys);\\n        } else {\\n          merged.keys.forEach(hotkey => {\\n            if (this.isPlatform(hotkey.platform)) {\\n              this.hotkeys.delete(hotkey.keys);\\n            }\\n          });\\n        }\\n      };\\n    });\\n  }\\n\\n  openHotkeyHelpDialog() {\\n    // Interesting tidbit: as it turns out, MatDialog#getDialogById actually\\n    // returns undefined, not null if the dialog doesn\'t exist\\n    if (this.dialog.getDialogById(this.hotkeyHelpDialogId) !== undefined) {\\n      // Close existing dialog\\n      this.dialog.getDialogById(this.hotkeyHelpDialogId).close();\\n    } else {\\n      this.dialog.open(HotkeyHelpDialogComponent, {\\n        data: this.hotkeys,\\n        id: this.hotkeyHelpDialogId\\n      });\\n    }\\n  }\\n\\n  /**\\n   * Whether the platform matches the specified `platform`.\\n   *\\n   * @param platform The platform to check.\\n   */\\n  private isPlatform(platform: Platform): boolean {\\n    // See https://stackoverflow.com/a/19883965/6782707\\n    let result = false;\\n    switch (window.navigator.platform) {\\n      case \'Macintosh\':\\n      case \'MacIntel\':\\n        result = platform === \'macos\';\\n        break;\\n      case \'Windows\':\\n      case \'Win16\':\\n      case \'Win32\':\\n      case \'WinCE\':\\n        result = platform === \'windows\';\\n        break;\\n      default:\\n        if (window.navigator.platform.includes(\'Linux\')) {\\n          result = platform === \'linux\';\\n        } else {\\n          result = platform === \'other\';\\n        }\\n        break;\\n    }\\n    return result;\\n  }\\n}\\n","properties":[{"name":"keys","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>A valid hotkey bind.</p>\\n","line":14,"rawdescription":"\\nA valid hotkey bind."},{"name":"platform","deprecated":false,"deprecationMessage":"","type":"Platform","optional":true,"description":"<p>The platform where this hotkey will be valid for.</p>\\n","line":16,"rawdescription":"\\nThe platform where this hotkey will be valid for."}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"HotkeyOptions","id":"interface-HotkeyOptions-bdb64f5101d42101c7bbc40e8233d8ba5a9381698eccc0d5d877b54aed206956b57fe5fd288aebcecad53f1bcfc37ef07f44141cce17d4ec121c3baa3f47519f","file":"projects/rss-reader/src/app/hotkeys/hotkeys.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable, Inject } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { EventManager } from \'@angular/platform-browser\';\\nimport { DOCUMENT } from \'@angular/common\';\\nimport { MatDialog } from \'@angular/material/dialog\';\\nimport { HotkeyHelpDialogComponent } from \'./hotkey-help-dialog/hotkey-help-dialog.component\';\\n\\ntype Platform = \'windows\' | \'macos\' | \'linux\' | \'other\';\\n\\ninterface Hotkey {\\n  /** A valid hotkey bind. */\\n  keys: string;\\n  /** The platform where this hotkey will be valid for. */\\n  platform?: Platform;\\n}\\ninterface HotkeyOptions {\\n  /** The element to bind the hotkey to. */\\n  element: any;\\n  /** A valid hotkey bind, or a list of hotkey binds. */\\n  keys: string | Hotkey[];\\n  /** The description of the hotkey, if any. */\\n  description?: string;\\n  /**\\n   * Blacklist for elements that should not have keyboard shortcuts\\n   *\\n   * When specified, it is assumed that all other elements are whitelisted.\\n   */\\n  shortcutBlacklistEls?: string[];\\n  /**\\n   * Whitelist for elements that should have keyboard shortcuts\\n   *\\n   * When specified, it is assumed that all other elements are blacklisted.\\n   */\\n  shortcutWhitelistEls?: string[];\\n}\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class HotkeysService {\\n  hotkeys = new Map<string, string>();\\n  readonly hotkeyHelpDialogId = \'hotkey-help-dialog\';\\n  defaults: Partial<HotkeyOptions> = {\\n    // Specify a default description for hotkeys with no specified desc\\n    description: \'<No description>\',\\n    element: this.document\\n  };\\n\\n  constructor(\\n    private eventManager: EventManager,\\n    private dialog: MatDialog,\\n    @Inject(DOCUMENT) private document: Document\\n  ) {\\n    this.addShortcut({ keys: \'shift.?\', description: \'Show this help dialog\', shortcutBlacklistEls: [\'input\', \'textarea\'] })\\n      .subscribe(() => {\\n        this.openHotkeyHelpDialog();\\n      });\\n  }\\n\\n  /**\\n   * Adds a keyboard shortcut which binds to the specified `element`\\n   *\\n   * @param options Options for the shortcut\\n   * @returns The observable\\n   */\\n  addShortcut(options: Partial<HotkeyOptions>): Observable<KeyboardEvent> {\\n    const merged = { ...this.defaults, ...options };\\n    const event = `keydown.${merged.keys}`;\\n\\n    if (merged.description) {\\n      if (typeof merged.keys === \'string\') {\\n        this.hotkeys.set(merged.keys, merged.description);\\n      } else {\\n        merged.keys.forEach(hotkey => {\\n          if (this.isPlatform(hotkey.platform)) {\\n            this.hotkeys.set(hotkey.keys, merged.description);\\n          }\\n        });\\n      }\\n    }\\n\\n    return new Observable(observer => {\\n      const handler = (e: KeyboardEvent) => {\\n        let skipHotkey = false;\\n        if (merged.shortcutBlacklistEls !== undefined) {\\n          const blacklistEls = merged.shortcutBlacklistEls.map(el => el.toUpperCase());\\n          // We can\'t just assume that the target is always a HTML element\\n          // See https://stackoverflow.com/q/28900077/6782707\\n          if (e.target instanceof Element) {\\n            // Target is a HTML element\\n            if (blacklistEls.includes(e.target.tagName)) {\\n              skipHotkey = true;\\n            }\\n          }\\n        }\\n        if (merged.shortcutWhitelistEls !== undefined) {\\n          const whitelistEls = merged.shortcutWhitelistEls.map(el => el.toUpperCase());\\n          // We can\'t just assume that the target is always a HTML element\\n          // See https://stackoverflow.com/q/28900077/6782707\\n          if (e.target instanceof Element) {\\n            // Target is a HTML element\\n            if (!whitelistEls.includes(e.target.tagName)) {\\n              skipHotkey = true;\\n            }\\n          }\\n        }\\n\\n        if (!skipHotkey) {\\n          e.preventDefault();\\n          observer.next(e);\\n        }\\n      };\\n\\n      const dispose = this.eventManager.addEventListener(\\n        merged.element, event, handler\\n      );\\n\\n      return () => {\\n        dispose();\\n        if (typeof merged.keys === \'string\') {\\n          this.hotkeys.delete(merged.keys);\\n        } else {\\n          merged.keys.forEach(hotkey => {\\n            if (this.isPlatform(hotkey.platform)) {\\n              this.hotkeys.delete(hotkey.keys);\\n            }\\n          });\\n        }\\n      };\\n    });\\n  }\\n\\n  openHotkeyHelpDialog() {\\n    // Interesting tidbit: as it turns out, MatDialog#getDialogById actually\\n    // returns undefined, not null if the dialog doesn\'t exist\\n    if (this.dialog.getDialogById(this.hotkeyHelpDialogId) !== undefined) {\\n      // Close existing dialog\\n      this.dialog.getDialogById(this.hotkeyHelpDialogId).close();\\n    } else {\\n      this.dialog.open(HotkeyHelpDialogComponent, {\\n        data: this.hotkeys,\\n        id: this.hotkeyHelpDialogId\\n      });\\n    }\\n  }\\n\\n  /**\\n   * Whether the platform matches the specified `platform`.\\n   *\\n   * @param platform The platform to check.\\n   */\\n  private isPlatform(platform: Platform): boolean {\\n    // See https://stackoverflow.com/a/19883965/6782707\\n    let result = false;\\n    switch (window.navigator.platform) {\\n      case \'Macintosh\':\\n      case \'MacIntel\':\\n        result = platform === \'macos\';\\n        break;\\n      case \'Windows\':\\n      case \'Win16\':\\n      case \'Win32\':\\n      case \'WinCE\':\\n        result = platform === \'windows\';\\n        break;\\n      default:\\n        if (window.navigator.platform.includes(\'Linux\')) {\\n          result = platform === \'linux\';\\n        } else {\\n          result = platform === \'other\';\\n        }\\n        break;\\n    }\\n    return result;\\n  }\\n}\\n","properties":[{"name":"description","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The description of the hotkey, if any.</p>\\n","line":24,"rawdescription":"\\nThe description of the hotkey, if any."},{"name":"element","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"<p>The element to bind the hotkey to.</p>\\n","line":20,"rawdescription":"\\nThe element to bind the hotkey to."},{"name":"keys","deprecated":false,"deprecationMessage":"","type":"string | Hotkey[]","optional":false,"description":"<p>A valid hotkey bind, or a list of hotkey binds.</p>\\n","line":22,"rawdescription":"\\nA valid hotkey bind, or a list of hotkey binds."},{"name":"shortcutBlacklistEls","deprecated":false,"deprecationMessage":"","type":"string[]","optional":true,"description":"<p>Blacklist for elements that should not have keyboard shortcuts</p>\\n<p>When specified, it is assumed that all other elements are whitelisted.</p>\\n","line":30,"rawdescription":"\\n\\nBlacklist for elements that should not have keyboard shortcuts\\n\\nWhen specified, it is assumed that all other elements are whitelisted.\\n"},{"name":"shortcutWhitelistEls","deprecated":false,"deprecationMessage":"","type":"string[]","optional":true,"description":"<p>Whitelist for elements that should have keyboard shortcuts</p>\\n<p>When specified, it is assumed that all other elements are blacklisted.</p>\\n","line":36,"rawdescription":"\\n\\nWhitelist for elements that should have keyboard shortcuts\\n\\nWhen specified, it is assumed that all other elements are blacklisted.\\n"}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"NewsAPITopHeadlines","id":"interface-NewsAPITopHeadlines-fee29d55b1c9677b79a63762c691b0cef30ea86b8a25603e27a8c80765e73914557499a826ef8dcc40f3f8c2e949d5f9c0297c9b250c9cc1d447b375525f4fbe","file":"projects/rss-reader/src/app/models/news-api/top-headlines.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { NewsAPITopHeadlinesArticle } from \'./top-headlines-article\';\\n\\nexport interface NewsAPITopHeadlines {\\n  /**\\n   * The status of the API result.\\n   */\\n  status: string;\\n  /**\\n   * The total number of articles returned.\\n   */\\n  totalResults?: string;\\n  /**\\n   * The articles returned from the API.\\n   */\\n  articles?: NewsAPITopHeadlinesArticle[];\\n}\\n\\nexport interface NewsAPITopHeadlinesOpts {\\n  /**\\n   * The API key\\n   * Go to https://newsapi.org/register to get an API key\\n   */\\n  apiKey?: string;\\n  /** The category to get headlines for. */\\n  category?: string;\\n  /** Keywords or a phrase to search for. */\\n  q?: string;\\n  /**\\n   * A list/comma-separated string of identifiers for the news sources/\\n   * blogs to get headlines from.\\n   */\\n  sources?: string | string[];\\n  /**\\n   * The country to get headlines from\\n   * Note: This parameter only accepts a 2-letter country code.\\n   */\\n  country?: string;\\n  /** The number of results to return per page. (Default: 20, Max: 100) */\\n  pageSize?: number;\\n}\\n","properties":[{"name":"articles","deprecated":false,"deprecationMessage":"","type":"NewsAPITopHeadlinesArticle[]","optional":true,"description":"<p>The articles returned from the API.</p>\\n","line":15,"rawdescription":"\\n\\nThe articles returned from the API.\\n"},{"name":"status","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The status of the API result.</p>\\n","line":7,"rawdescription":"\\n\\nThe status of the API result.\\n"},{"name":"totalResults","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The total number of articles returned.</p>\\n","line":11,"rawdescription":"\\n\\nThe total number of articles returned.\\n"}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"NewsAPITopHeadlinesArticle","id":"interface-NewsAPITopHeadlinesArticle-250480497d6affa5546e219090769f062683a29861a3c83092a797f108d89d1bfa60edd9c458ec11b39d4fdf46d412741de3601780f3c232ef412cca0b41c281","file":"projects/rss-reader/src/app/models/news-api/top-headlines-article.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface NewsAPITopHeadlinesArticle {\\n  /**\\n   * The source of where the article originated from.\\n   */\\n  source?: {\\n    id?: string;\\n    /**\\n     * The name of the source of where the article originated from.\\n     */\\n    name?: string;\\n  };\\n  /**\\n   * The author of the article.\\n   */\\n  author?: string;\\n  /**\\n   * The article\'s title.\\n   */\\n  title?: string;\\n  /**\\n   * The article\'s description.\\n   */\\n  description?: string;\\n  /**\\n   * The URL of the actual article.\\n   */\\n  url?: string;\\n  /**\\n   * A thumbnail of the article.\\n   */\\n  urlToImage?: string;\\n  /**\\n   * When the article was published on.\\n   */\\n  publishedAt?: string;\\n  /**\\n   * The article\'s content.\\n   */\\n  content?: string;\\n}\\n","properties":[{"name":"author","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The author of the article.</p>\\n","line":15,"rawdescription":"\\n\\nThe author of the article.\\n"},{"name":"content","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The article&#39;s content.</p>\\n","line":39,"rawdescription":"\\n\\nThe article\'s content.\\n"},{"name":"description","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The article&#39;s description.</p>\\n","line":23,"rawdescription":"\\n\\nThe article\'s description.\\n"},{"name":"publishedAt","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>When the article was published on.</p>\\n","line":35,"rawdescription":"\\n\\nWhen the article was published on.\\n"},{"name":"source","deprecated":false,"deprecationMessage":"","type":"literal type","optional":true,"description":"<p>The source of where the article originated from.</p>\\n","line":5,"rawdescription":"\\n\\nThe source of where the article originated from.\\n"},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The article&#39;s title.</p>\\n","line":19,"rawdescription":"\\n\\nThe article\'s title.\\n"},{"name":"url","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The URL of the actual article.</p>\\n","line":27,"rawdescription":"\\n\\nThe URL of the actual article.\\n"},{"name":"urlToImage","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>A thumbnail of the article.</p>\\n","line":31,"rawdescription":"\\n\\nA thumbnail of the article.\\n"}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"NewsAPITopHeadlinesOpts","id":"interface-NewsAPITopHeadlinesOpts-fee29d55b1c9677b79a63762c691b0cef30ea86b8a25603e27a8c80765e73914557499a826ef8dcc40f3f8c2e949d5f9c0297c9b250c9cc1d447b375525f4fbe","file":"projects/rss-reader/src/app/models/news-api/top-headlines.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { NewsAPITopHeadlinesArticle } from \'./top-headlines-article\';\\n\\nexport interface NewsAPITopHeadlines {\\n  /**\\n   * The status of the API result.\\n   */\\n  status: string;\\n  /**\\n   * The total number of articles returned.\\n   */\\n  totalResults?: string;\\n  /**\\n   * The articles returned from the API.\\n   */\\n  articles?: NewsAPITopHeadlinesArticle[];\\n}\\n\\nexport interface NewsAPITopHeadlinesOpts {\\n  /**\\n   * The API key\\n   * Go to https://newsapi.org/register to get an API key\\n   */\\n  apiKey?: string;\\n  /** The category to get headlines for. */\\n  category?: string;\\n  /** Keywords or a phrase to search for. */\\n  q?: string;\\n  /**\\n   * A list/comma-separated string of identifiers for the news sources/\\n   * blogs to get headlines from.\\n   */\\n  sources?: string | string[];\\n  /**\\n   * The country to get headlines from\\n   * Note: This parameter only accepts a 2-letter country code.\\n   */\\n  country?: string;\\n  /** The number of results to return per page. (Default: 20, Max: 100) */\\n  pageSize?: number;\\n}\\n","properties":[{"name":"apiKey","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The API key\\nGo to <a href=\\"https://newsapi.org/register\\">https://newsapi.org/register</a> to get an API key</p>\\n","line":23,"rawdescription":"\\n\\nThe API key\\nGo to https://newsapi.org/register to get an API key\\n"},{"name":"category","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The category to get headlines for.</p>\\n","line":25,"rawdescription":"\\nThe category to get headlines for."},{"name":"country","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The country to get headlines from\\nNote: This parameter only accepts a 2-letter country code.</p>\\n","line":37,"rawdescription":"\\n\\nThe country to get headlines from\\nNote: This parameter only accepts a 2-letter country code.\\n"},{"name":"pageSize","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"<p>The number of results to return per page. (Default: 20, Max: 100)</p>\\n","line":39,"rawdescription":"\\nThe number of results to return per page. (Default: 20, Max: 100)"},{"name":"q","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Keywords or a phrase to search for.</p>\\n","line":27,"rawdescription":"\\nKeywords or a phrase to search for."},{"name":"sources","deprecated":false,"deprecationMessage":"","type":"string | string[]","optional":true,"description":"<p>A list/comma-separated string of identifiers for the news sources/\\nblogs to get headlines from.</p>\\n","line":32,"rawdescription":"\\n\\nA list/comma-separated string of identifiers for the news sources/\\nblogs to get headlines from.\\n"}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"PortalDialogOpts","id":"interface-PortalDialogOpts-0b7643f37a82ce61640ebaf07ff9ffa7e24c24ea044a2dff74485ed8847d81246cee0314613f5f8602208885b7992f42ebd13e555ca43791019c11ac4d19581d","file":"projects/rss-reader/src/app/core/dialogs/models.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Portal } from \'@angular/cdk/portal\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\n\\nexport type ButtonType = \'negative\' | \'neutral\' | \'positive\';\\n\\nexport type DialogType = \'alert\' | \'confirm\' | \'message\' | \'prompt\' | \'portal\'\\n| \'selection\';\\n\\nexport interface BaseDialogOpts {\\n  /** The dialog\'s title. */\\n  title?: string;\\n}\\n\\nexport interface DialogBtnOpts {\\n  /** The positive button\'s text. */\\n  positiveBtnText?: string;\\n  /** The positive button\'s color. */\\n  positiveBtnColor?: ThemePalette;\\n  /** The negative button\'s text. */\\n  negativeBtnText?: string;\\n  /** The negative button\'s color. */\\n  negativeBtnColor?: ThemePalette;\\n  /** The neutral button\'s text. */\\n  neutralBtnText?: string;\\n  /** The neutral button\'s color. */\\n  neutralBtnColor?: ThemePalette;\\n  /**\\n   * Whether to hide the action buttons.\\n   *\\n   * Optionally, you can specify which buttons to hide.\\n   */\\n  hideActionBtns?: ButtonType[] | boolean;\\n  /** The initial button to focus on. */\\n  initialActionBtnFocus?: ButtonType;\\n}\\n\\nexport interface DialogOptsWithMsg {\\n  /** The dialog\'s message. */\\n  msg?: string | SafeHtml;\\n  /** The dialog\'s title. */\\n  title?: string;\\n  /** Whether the dialog\'s message is in HTML. */\\n  isHtml?: boolean;\\n}\\n\\nexport interface DialogOpts extends BaseDialogOpts, DialogBtnOpts,\\n  DialogOptsWithMsg { }\\n\\nexport interface PromptDialogInputConfig {\\n  /** The input\'s placeholder. */\\n  placeholder?: string;\\n  /** The input\'s label. */\\n  label?: string;\\n  /** The input type. */\\n  inputType?: string;\\n  /** The input\'s initial value. */\\n  value?: string;\\n  /** The input\'s color. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PromptDialogOpts extends DialogOpts {\\n  /** Configuration for the input. */\\n  inputConfig?: PromptDialogInputConfig;\\n  /**\\n   * The input\'s placeholder.\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#placeholder} instead\\n   */\\n  placeholder?: string;\\n  /**\\n   * The input type.\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#inputType} instead\\n   */\\n  inputType?: \'text\' | \'email\' | \'password\' | \'number\';\\n  /**\\n   * The initial value of the input\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#value} instead\\n   */\\n  value?: string | number;\\n  /**\\n   * The color of the input\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#color} instead\\n   */\\n  color?: ThemePalette;\\n}\\n\\nexport interface SelectionDialogOpts extends DialogOpts {\\n  /** Options to be shown in the dialog. */\\n  options: SelectionDialogOption[];\\n}\\n\\nexport interface SelectionDialogOption {\\n  /** The title of the option. */\\n  title: string;\\n  /** The value of the option. */\\n  value: any;\\n  /** Whether the option is disabled. */\\n  disabled?: boolean;\\n  /** Whether the option is initially selected. */\\n  selected?: boolean;\\n  /** The checkbox position of the option. */\\n  checkboxPosition?: \'before\' | \'after\';\\n  /** The color of the option. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PortalDialogOpts<T> extends DialogOpts {\\n  /** The portal to render in the dialog. */\\n  portal: Portal<T>;\\n}\\n\\n/** The result returned by the dialog. */\\n/* eslint-disable @typescript-eslint/naming-convention */\\nexport enum DialogResult {\\n  /** Indicates that the user clicked the \\"Cancel\\" (or negative) button. */\\n  NEGATIVE = \'cancel\',\\n  /** Alias for {@link DialogResult#NEGATIVE}. */\\n  CANCEL = \'cancel\',\\n  /** Indicates that the user clicked the neutral button. */\\n  NEUTRAL = \'neutral\',\\n  /** Indicates that the user clicked the \\"OK\\" (or positive) button. */\\n  POSITIVE = \'ok\',\\n  /** Alias for {@link DialogResult#POSITIVE}. */\\n  OK = \'ok\'\\n}\\n/* eslint-enable @typescript-eslint/naming-convention */\\n","properties":[{"name":"portal","deprecated":false,"deprecationMessage":"","type":"Portal<T>","optional":false,"description":"<p>The portal to render in the dialog.</p>\\n","line":114,"rawdescription":"\\nThe portal to render in the dialog."}],"indexSignatures":[],"kind":165,"methods":[],"extends":"DialogOpts"},{"name":"PromptDialogInputConfig","id":"interface-PromptDialogInputConfig-0b7643f37a82ce61640ebaf07ff9ffa7e24c24ea044a2dff74485ed8847d81246cee0314613f5f8602208885b7992f42ebd13e555ca43791019c11ac4d19581d","file":"projects/rss-reader/src/app/core/dialogs/models.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Portal } from \'@angular/cdk/portal\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\n\\nexport type ButtonType = \'negative\' | \'neutral\' | \'positive\';\\n\\nexport type DialogType = \'alert\' | \'confirm\' | \'message\' | \'prompt\' | \'portal\'\\n| \'selection\';\\n\\nexport interface BaseDialogOpts {\\n  /** The dialog\'s title. */\\n  title?: string;\\n}\\n\\nexport interface DialogBtnOpts {\\n  /** The positive button\'s text. */\\n  positiveBtnText?: string;\\n  /** The positive button\'s color. */\\n  positiveBtnColor?: ThemePalette;\\n  /** The negative button\'s text. */\\n  negativeBtnText?: string;\\n  /** The negative button\'s color. */\\n  negativeBtnColor?: ThemePalette;\\n  /** The neutral button\'s text. */\\n  neutralBtnText?: string;\\n  /** The neutral button\'s color. */\\n  neutralBtnColor?: ThemePalette;\\n  /**\\n   * Whether to hide the action buttons.\\n   *\\n   * Optionally, you can specify which buttons to hide.\\n   */\\n  hideActionBtns?: ButtonType[] | boolean;\\n  /** The initial button to focus on. */\\n  initialActionBtnFocus?: ButtonType;\\n}\\n\\nexport interface DialogOptsWithMsg {\\n  /** The dialog\'s message. */\\n  msg?: string | SafeHtml;\\n  /** The dialog\'s title. */\\n  title?: string;\\n  /** Whether the dialog\'s message is in HTML. */\\n  isHtml?: boolean;\\n}\\n\\nexport interface DialogOpts extends BaseDialogOpts, DialogBtnOpts,\\n  DialogOptsWithMsg { }\\n\\nexport interface PromptDialogInputConfig {\\n  /** The input\'s placeholder. */\\n  placeholder?: string;\\n  /** The input\'s label. */\\n  label?: string;\\n  /** The input type. */\\n  inputType?: string;\\n  /** The input\'s initial value. */\\n  value?: string;\\n  /** The input\'s color. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PromptDialogOpts extends DialogOpts {\\n  /** Configuration for the input. */\\n  inputConfig?: PromptDialogInputConfig;\\n  /**\\n   * The input\'s placeholder.\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#placeholder} instead\\n   */\\n  placeholder?: string;\\n  /**\\n   * The input type.\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#inputType} instead\\n   */\\n  inputType?: \'text\' | \'email\' | \'password\' | \'number\';\\n  /**\\n   * The initial value of the input\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#value} instead\\n   */\\n  value?: string | number;\\n  /**\\n   * The color of the input\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#color} instead\\n   */\\n  color?: ThemePalette;\\n}\\n\\nexport interface SelectionDialogOpts extends DialogOpts {\\n  /** Options to be shown in the dialog. */\\n  options: SelectionDialogOption[];\\n}\\n\\nexport interface SelectionDialogOption {\\n  /** The title of the option. */\\n  title: string;\\n  /** The value of the option. */\\n  value: any;\\n  /** Whether the option is disabled. */\\n  disabled?: boolean;\\n  /** Whether the option is initially selected. */\\n  selected?: boolean;\\n  /** The checkbox position of the option. */\\n  checkboxPosition?: \'before\' | \'after\';\\n  /** The color of the option. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PortalDialogOpts<T> extends DialogOpts {\\n  /** The portal to render in the dialog. */\\n  portal: Portal<T>;\\n}\\n\\n/** The result returned by the dialog. */\\n/* eslint-disable @typescript-eslint/naming-convention */\\nexport enum DialogResult {\\n  /** Indicates that the user clicked the \\"Cancel\\" (or negative) button. */\\n  NEGATIVE = \'cancel\',\\n  /** Alias for {@link DialogResult#NEGATIVE}. */\\n  CANCEL = \'cancel\',\\n  /** Indicates that the user clicked the neutral button. */\\n  NEUTRAL = \'neutral\',\\n  /** Indicates that the user clicked the \\"OK\\" (or positive) button. */\\n  POSITIVE = \'ok\',\\n  /** Alias for {@link DialogResult#POSITIVE}. */\\n  OK = \'ok\'\\n}\\n/* eslint-enable @typescript-eslint/naming-convention */\\n","properties":[{"name":"color","deprecated":false,"deprecationMessage":"","type":"ThemePalette","optional":true,"description":"<p>The input&#39;s color.</p>\\n","line":60,"rawdescription":"\\nThe input\'s color."},{"name":"inputType","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The input type.</p>\\n","line":56,"rawdescription":"\\nThe input type."},{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The input&#39;s label.</p>\\n","line":54,"rawdescription":"\\nThe input\'s label."},{"name":"placeholder","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The input&#39;s placeholder.</p>\\n","line":52,"rawdescription":"\\nThe input\'s placeholder."},{"name":"value","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The input&#39;s initial value.</p>\\n","line":58,"rawdescription":"\\nThe input\'s initial value."}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"PromptDialogOpts","id":"interface-PromptDialogOpts-0b7643f37a82ce61640ebaf07ff9ffa7e24c24ea044a2dff74485ed8847d81246cee0314613f5f8602208885b7992f42ebd13e555ca43791019c11ac4d19581d","file":"projects/rss-reader/src/app/core/dialogs/models.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Portal } from \'@angular/cdk/portal\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\n\\nexport type ButtonType = \'negative\' | \'neutral\' | \'positive\';\\n\\nexport type DialogType = \'alert\' | \'confirm\' | \'message\' | \'prompt\' | \'portal\'\\n| \'selection\';\\n\\nexport interface BaseDialogOpts {\\n  /** The dialog\'s title. */\\n  title?: string;\\n}\\n\\nexport interface DialogBtnOpts {\\n  /** The positive button\'s text. */\\n  positiveBtnText?: string;\\n  /** The positive button\'s color. */\\n  positiveBtnColor?: ThemePalette;\\n  /** The negative button\'s text. */\\n  negativeBtnText?: string;\\n  /** The negative button\'s color. */\\n  negativeBtnColor?: ThemePalette;\\n  /** The neutral button\'s text. */\\n  neutralBtnText?: string;\\n  /** The neutral button\'s color. */\\n  neutralBtnColor?: ThemePalette;\\n  /**\\n   * Whether to hide the action buttons.\\n   *\\n   * Optionally, you can specify which buttons to hide.\\n   */\\n  hideActionBtns?: ButtonType[] | boolean;\\n  /** The initial button to focus on. */\\n  initialActionBtnFocus?: ButtonType;\\n}\\n\\nexport interface DialogOptsWithMsg {\\n  /** The dialog\'s message. */\\n  msg?: string | SafeHtml;\\n  /** The dialog\'s title. */\\n  title?: string;\\n  /** Whether the dialog\'s message is in HTML. */\\n  isHtml?: boolean;\\n}\\n\\nexport interface DialogOpts extends BaseDialogOpts, DialogBtnOpts,\\n  DialogOptsWithMsg { }\\n\\nexport interface PromptDialogInputConfig {\\n  /** The input\'s placeholder. */\\n  placeholder?: string;\\n  /** The input\'s label. */\\n  label?: string;\\n  /** The input type. */\\n  inputType?: string;\\n  /** The input\'s initial value. */\\n  value?: string;\\n  /** The input\'s color. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PromptDialogOpts extends DialogOpts {\\n  /** Configuration for the input. */\\n  inputConfig?: PromptDialogInputConfig;\\n  /**\\n   * The input\'s placeholder.\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#placeholder} instead\\n   */\\n  placeholder?: string;\\n  /**\\n   * The input type.\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#inputType} instead\\n   */\\n  inputType?: \'text\' | \'email\' | \'password\' | \'number\';\\n  /**\\n   * The initial value of the input\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#value} instead\\n   */\\n  value?: string | number;\\n  /**\\n   * The color of the input\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#color} instead\\n   */\\n  color?: ThemePalette;\\n}\\n\\nexport interface SelectionDialogOpts extends DialogOpts {\\n  /** Options to be shown in the dialog. */\\n  options: SelectionDialogOption[];\\n}\\n\\nexport interface SelectionDialogOption {\\n  /** The title of the option. */\\n  title: string;\\n  /** The value of the option. */\\n  value: any;\\n  /** Whether the option is disabled. */\\n  disabled?: boolean;\\n  /** Whether the option is initially selected. */\\n  selected?: boolean;\\n  /** The checkbox position of the option. */\\n  checkboxPosition?: \'before\' | \'after\';\\n  /** The color of the option. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PortalDialogOpts<T> extends DialogOpts {\\n  /** The portal to render in the dialog. */\\n  portal: Portal<T>;\\n}\\n\\n/** The result returned by the dialog. */\\n/* eslint-disable @typescript-eslint/naming-convention */\\nexport enum DialogResult {\\n  /** Indicates that the user clicked the \\"Cancel\\" (or negative) button. */\\n  NEGATIVE = \'cancel\',\\n  /** Alias for {@link DialogResult#NEGATIVE}. */\\n  CANCEL = \'cancel\',\\n  /** Indicates that the user clicked the neutral button. */\\n  NEUTRAL = \'neutral\',\\n  /** Indicates that the user clicked the \\"OK\\" (or positive) button. */\\n  POSITIVE = \'ok\',\\n  /** Alias for {@link DialogResult#POSITIVE}. */\\n  OK = \'ok\'\\n}\\n/* eslint-enable @typescript-eslint/naming-convention */\\n","properties":[{"name":"color","deprecated":true,"deprecationMessage":[{"pos":2336,"end":2340,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":319,"text":"Use "},{"pos":2340,"end":2377,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":322,"name":{"pos":2347,"end":2376,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":309,"left":{"pos":2347,"end":2370,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"PromptDialogInputConfig"},"right":{"pos":2371,"end":2376,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"color"}},"text":""},{"pos":2377,"end":2389,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":319,"text":" instead"}],"type":"ThemePalette","optional":true,"description":"<p>The color of the input</p>\\n","line":89,"rawdescription":"\\n\\nThe color of the input\\n\\n","jsdoctags":[{"pos":2324,"end":2389,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":329,"tagName":{"pos":2325,"end":2335,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"deprecated"},"comment":"<p>Use {@link PromptDialogInputConfig.color} instead</p>\\n"}]},{"name":"inputConfig","deprecated":false,"deprecationMessage":"","type":"PromptDialogInputConfig","optional":true,"description":"<p>Configuration for the input.</p>\\n","line":65,"rawdescription":"\\nConfiguration for the input."},{"name":"inputType","deprecated":true,"deprecationMessage":[{"pos":2017,"end":2021,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":319,"text":"Use "},{"pos":2021,"end":2062,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":322,"name":{"pos":2028,"end":2061,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":309,"left":{"pos":2028,"end":2051,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"PromptDialogInputConfig"},"right":{"pos":2052,"end":2061,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"inputType"}},"text":""},{"pos":2062,"end":2074,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":319,"text":" instead"}],"type":"\\"text\\" | \\"email\\" | \\"password\\" | \\"number\\"","optional":true,"description":"<p>The input type.</p>\\n","line":77,"rawdescription":"\\n\\nThe input type.\\n\\n","jsdoctags":[{"pos":2005,"end":2074,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":329,"tagName":{"pos":2006,"end":2016,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"deprecated"},"comment":"<p>Use {@link PromptDialogInputConfig.inputType} instead</p>\\n"}]},{"name":"placeholder","deprecated":true,"deprecationMessage":[{"pos":1882,"end":1886,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":319,"text":"Use "},{"pos":1886,"end":1929,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":322,"name":{"pos":1893,"end":1928,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":309,"left":{"pos":1893,"end":1916,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"PromptDialogInputConfig"},"right":{"pos":1917,"end":1928,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"placeholder"}},"text":""},{"pos":1929,"end":1941,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":319,"text":" instead"}],"type":"string","optional":true,"description":"<p>The input&#39;s placeholder.</p>\\n","line":71,"rawdescription":"\\n\\nThe input\'s placeholder.\\n\\n","jsdoctags":[{"pos":1870,"end":1941,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":329,"tagName":{"pos":1871,"end":1881,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"deprecated"},"comment":"<p>Use {@link PromptDialogInputConfig.placeholder} instead</p>\\n"}]},{"name":"value","deprecated":true,"deprecationMessage":[{"pos":2197,"end":2201,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":319,"text":"Use "},{"pos":2201,"end":2238,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":322,"name":{"pos":2208,"end":2237,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":309,"left":{"pos":2208,"end":2231,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"PromptDialogInputConfig"},"right":{"pos":2232,"end":2237,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"}},"text":""},{"pos":2238,"end":2250,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":319,"text":" instead"}],"type":"string | number","optional":true,"description":"<p>The initial value of the input</p>\\n","line":83,"rawdescription":"\\n\\nThe initial value of the input\\n\\n","jsdoctags":[{"pos":2185,"end":2250,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":329,"tagName":{"pos":2186,"end":2196,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"deprecated"},"comment":"<p>Use {@link PromptDialogInputConfig.value} instead</p>\\n"}]}],"indexSignatures":[],"kind":165,"methods":[],"extends":"DialogOpts"},{"name":"Release","id":"interface-Release-da88299e38c1c4e11e3ec4afe8f6654c25b99d398a04350ea144edba72f1d404a22cf489e11bd08a2ebfaf6d336b455e60d92e855ce014b67c75fbd92b31d842","file":"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface Release {\\n  /** Release notes for the version. */\\n  releaseNotes: string[] | string;\\n  /** Release name for the version. */\\n  releaseName?: string;\\n  /** Release date for the version. */\\n  releaseDate?: string;\\n  /** The person who released the version. */\\n  releaseAuthor?: string;\\n  /** The Git commit SHA of the version. */\\n  releaseCommitSha?: string;\\n  /** The release\'s status. */\\n  releaseStatus?: ReleaseStatus[] | string;\\n  /** Comments about the release, if any. */\\n  releaseComments?: string[] | string;\\n}\\n\\n/**\\n * Contains either a string representing a link to the repository, or an\\n * object containing metadata of the repository.\\n */\\nexport type GitRepo = {\\n  /** The host of the repository. (The host\'s address should be used) */\\n  host: string;\\n  /** The username that owns the repository. */\\n  username: string;\\n  /** The name of the repository. */\\n  repo: string;\\n} | string;\\n\\nexport type ReleaseStatus = \'draft\' | \'wip\' | \'deprecated\' | \'released\' | \'unreleased\' | \'other\';\\n\\nexport interface Releases {\\n  [key: string]: Release;\\n}\\nexport interface ReleaseNotesJSON {\\n  /** The schema of the JSON file. */\\n  $schema: string;\\n  /** The latest version of the app. */\\n  latestVersion: string;\\n  /** The list of releases. */\\n  releases: Releases;\\n  /** A link to the Git repository. */\\n  gitRepo?: GitRepo;\\n}\\n","properties":[{"name":"releaseAuthor","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The person who released the version.</p>\\n","line":9,"rawdescription":"\\nThe person who released the version."},{"name":"releaseComments","deprecated":false,"deprecationMessage":"","type":"string[] | string","optional":true,"description":"<p>Comments about the release, if any.</p>\\n","line":15,"rawdescription":"\\nComments about the release, if any."},{"name":"releaseCommitSha","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The Git commit SHA of the version.</p>\\n","line":11,"rawdescription":"\\nThe Git commit SHA of the version."},{"name":"releaseDate","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Release date for the version.</p>\\n","line":7,"rawdescription":"\\nRelease date for the version."},{"name":"releaseName","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Release name for the version.</p>\\n","line":5,"rawdescription":"\\nRelease name for the version."},{"name":"releaseNotes","deprecated":false,"deprecationMessage":"","type":"string[] | string","optional":false,"description":"<p>Release notes for the version.</p>\\n","line":3,"rawdescription":"\\nRelease notes for the version."},{"name":"releaseStatus","deprecated":false,"deprecationMessage":"","type":"ReleaseStatus[] | string","optional":true,"description":"<p>The release&#39;s status.</p>\\n","line":13,"rawdescription":"\\nThe release\'s status."}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"ReleaseNotesJSON","id":"interface-ReleaseNotesJSON-da88299e38c1c4e11e3ec4afe8f6654c25b99d398a04350ea144edba72f1d404a22cf489e11bd08a2ebfaf6d336b455e60d92e855ce014b67c75fbd92b31d842","file":"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface Release {\\n  /** Release notes for the version. */\\n  releaseNotes: string[] | string;\\n  /** Release name for the version. */\\n  releaseName?: string;\\n  /** Release date for the version. */\\n  releaseDate?: string;\\n  /** The person who released the version. */\\n  releaseAuthor?: string;\\n  /** The Git commit SHA of the version. */\\n  releaseCommitSha?: string;\\n  /** The release\'s status. */\\n  releaseStatus?: ReleaseStatus[] | string;\\n  /** Comments about the release, if any. */\\n  releaseComments?: string[] | string;\\n}\\n\\n/**\\n * Contains either a string representing a link to the repository, or an\\n * object containing metadata of the repository.\\n */\\nexport type GitRepo = {\\n  /** The host of the repository. (The host\'s address should be used) */\\n  host: string;\\n  /** The username that owns the repository. */\\n  username: string;\\n  /** The name of the repository. */\\n  repo: string;\\n} | string;\\n\\nexport type ReleaseStatus = \'draft\' | \'wip\' | \'deprecated\' | \'released\' | \'unreleased\' | \'other\';\\n\\nexport interface Releases {\\n  [key: string]: Release;\\n}\\nexport interface ReleaseNotesJSON {\\n  /** The schema of the JSON file. */\\n  $schema: string;\\n  /** The latest version of the app. */\\n  latestVersion: string;\\n  /** The list of releases. */\\n  releases: Releases;\\n  /** A link to the Git repository. */\\n  gitRepo?: GitRepo;\\n}\\n","properties":[{"name":"$schema","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The schema of the JSON file.</p>\\n","line":38,"rawdescription":"\\nThe schema of the JSON file."},{"name":"gitRepo","deprecated":false,"deprecationMessage":"","type":"GitRepo","optional":true,"description":"<p>A link to the Git repository.</p>\\n","line":44,"rawdescription":"\\nA link to the Git repository."},{"name":"latestVersion","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The latest version of the app.</p>\\n","line":40,"rawdescription":"\\nThe latest version of the app."},{"name":"releases","deprecated":false,"deprecationMessage":"","type":"Releases","optional":false,"description":"<p>The list of releases.</p>\\n","line":42,"rawdescription":"\\nThe list of releases."}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"Releases","id":"interface-Releases-da88299e38c1c4e11e3ec4afe8f6654c25b99d398a04350ea144edba72f1d404a22cf489e11bd08a2ebfaf6d336b455e60d92e855ce014b67c75fbd92b31d842","file":"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface Release {\\n  /** Release notes for the version. */\\n  releaseNotes: string[] | string;\\n  /** Release name for the version. */\\n  releaseName?: string;\\n  /** Release date for the version. */\\n  releaseDate?: string;\\n  /** The person who released the version. */\\n  releaseAuthor?: string;\\n  /** The Git commit SHA of the version. */\\n  releaseCommitSha?: string;\\n  /** The release\'s status. */\\n  releaseStatus?: ReleaseStatus[] | string;\\n  /** Comments about the release, if any. */\\n  releaseComments?: string[] | string;\\n}\\n\\n/**\\n * Contains either a string representing a link to the repository, or an\\n * object containing metadata of the repository.\\n */\\nexport type GitRepo = {\\n  /** The host of the repository. (The host\'s address should be used) */\\n  host: string;\\n  /** The username that owns the repository. */\\n  username: string;\\n  /** The name of the repository. */\\n  repo: string;\\n} | string;\\n\\nexport type ReleaseStatus = \'draft\' | \'wip\' | \'deprecated\' | \'released\' | \'unreleased\' | \'other\';\\n\\nexport interface Releases {\\n  [key: string]: Release;\\n}\\nexport interface ReleaseNotesJSON {\\n  /** The schema of the JSON file. */\\n  $schema: string;\\n  /** The latest version of the app. */\\n  latestVersion: string;\\n  /** The list of releases. */\\n  releases: Releases;\\n  /** A link to the Git repository. */\\n  gitRepo?: GitRepo;\\n}\\n","properties":[],"indexSignatures":[{"id":"index-declaration-da88299e38c1c4e11e3ec4afe8f6654c25b99d398a04350ea144edba72f1d404a22cf489e11bd08a2ebfaf6d336b455e60d92e855ce014b67c75fbd92b31d842","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"Release","line":33,"deprecated":false,"deprecationMessage":""}],"kind":175,"methods":[]},{"name":"RestCountriesAPICountry","id":"interface-RestCountriesAPICountry-be8290a8363a7c9d03ab24fb0c3317e860914608a07c8fc9039386735d34d2d3200ae90d22683706bca31e36f3eaf4311961f1098c822f919aa5e8bcbff6a8c2","file":"projects/rss-reader/src/app/models/rest-countries-api/index.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface RestCountriesAPICountryCurrency {\\n  /**\\n   * The codename of the country\'s currency\\n   */\\n  code?: string;\\n  /**\\n   * The name of the country\'s currency\\n   */\\n  name?: string;\\n  /**\\n   * The Unicode symbol of the country\'s currency\\n   */\\n  symbol?: string;\\n}\\nexport interface RestCountriesAPICountryLanguage {\\n  iso639_1?: string;\\n  iso639_2?: string;\\n  name?: string;\\n  nativeName?: string;\\n}\\nexport interface RestCountriesAPICountryTranslation {\\n  [key: string]: string;\\n}\\nexport interface RestCountriesAPICountryRegionalBloc {\\n  acronym?: string;\\n  name?: string;\\n  otherAcronyms?: string[];\\n  otherNames?: string[];\\n}\\nexport interface RestCountriesAPICountry {\\n  /**\\n   * The country\'s name\\n   */\\n  name?: string;\\n  /**\\n   * The top level domain of the country\\n   */\\n  topLevelDomain?: string[];\\n  /**\\n   * The 2 letter code of the country\\n   */\\n  alpha2Code?: string;\\n  /**\\n   * The 3 letter code of the country\\n   */\\n  alpha3Code?: string;\\n  /**\\n   * Phone number codes for the country\\n   */\\n  callingCodes?: string[];\\n  /**\\n   * The capital of the country\\n   * Note: This field will be an empty string if there\'s no capital.\\n   */\\n  capital?: string;\\n  /**\\n   * Alternate spellings of the country\\n   */\\n  altSpellings?: string[];\\n  /**\\n   * The region that the country is in\\n   */\\n  region?: string;\\n  /**\\n   * The subregion that the country is in\\n   */\\n  subregion?: string;\\n  /**\\n   * The total population of the country\\n   */\\n  population?: number;\\n  /**\\n   * The latitude and longtitude points of the country\\n   */\\n  latlng?: number[];\\n  /**\\n   * The name given to inhabitants of the country\\n   */\\n  demonym?: string;\\n  /**\\n   * The area of the country in square kilometres\\n   */\\n  area?: number;\\n  /**\\n   * Used for representing the income distribution of the country\'s residents\\n   * See https://en.wikipedia.org/wiki/Gini_coefficient for more info.\\n   */\\n  gini?: number;\\n  /**\\n   * The timezone(s) of the country (in GMT)\\n   */\\n  timezones?: string[];\\n  /**\\n   * The borders of the country denoted with country codes\\n   */\\n  borders?: string[];\\n  /**\\n   * The name of the country according to inhabitants\\n   */\\n  nativeName?: string;\\n  /**\\n   * A 3-digit country code denoted to represent a country\\n   * See https://en.wikipedia.org/wiki/ISO_3166-1_numeric for more info\\n   */\\n  numericCode?: string;\\n  /**\\n   * An array of currencies used in the country\\n   */\\n  currencies?: RestCountriesAPICountryCurrency[];\\n  /**\\n   * An array of languages spoken in the country\\n   */\\n  languages?: RestCountriesAPICountryLanguage[];\\n  /**\\n   * An array of alternative names of the country in other areas\\n   */\\n  translations?: RestCountriesAPICountryTranslation[];\\n  /**\\n   * The country\'s flag (as a URL)\\n   */\\n  flag?: string;\\n  /**\\n   * Trading blocs\\n   */\\n  regionalBlocs?: RestCountriesAPICountryRegionalBloc[];\\n  /**\\n   * Unknown property\\n   */\\n  cioc?: string;\\n}\\n","properties":[{"name":"alpha2Code","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The 2 letter code of the country</p>\\n","line":50,"rawdescription":"\\n\\nThe 2 letter code of the country\\n"},{"name":"alpha3Code","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The 3 letter code of the country</p>\\n","line":54,"rawdescription":"\\n\\nThe 3 letter code of the country\\n"},{"name":"altSpellings","deprecated":false,"deprecationMessage":"","type":"string[]","optional":true,"description":"<p>Alternate spellings of the country</p>\\n","line":67,"rawdescription":"\\n\\nAlternate spellings of the country\\n"},{"name":"area","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"<p>The area of the country in square kilometres</p>\\n","line":91,"rawdescription":"\\n\\nThe area of the country in square kilometres\\n"},{"name":"borders","deprecated":false,"deprecationMessage":"","type":"string[]","optional":true,"description":"<p>The borders of the country denoted with country codes</p>\\n","line":104,"rawdescription":"\\n\\nThe borders of the country denoted with country codes\\n"},{"name":"callingCodes","deprecated":false,"deprecationMessage":"","type":"string[]","optional":true,"description":"<p>Phone number codes for the country</p>\\n","line":58,"rawdescription":"\\n\\nPhone number codes for the country\\n"},{"name":"capital","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The capital of the country\\nNote: This field will be an empty string if there&#39;s no capital.</p>\\n","line":63,"rawdescription":"\\n\\nThe capital of the country\\nNote: This field will be an empty string if there\'s no capital.\\n"},{"name":"cioc","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Unknown property</p>\\n","line":137,"rawdescription":"\\n\\nUnknown property\\n"},{"name":"currencies","deprecated":false,"deprecationMessage":"","type":"RestCountriesAPICountryCurrency[]","optional":true,"description":"<p>An array of currencies used in the country</p>\\n","line":117,"rawdescription":"\\n\\nAn array of currencies used in the country\\n"},{"name":"demonym","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The name given to inhabitants of the country</p>\\n","line":87,"rawdescription":"\\n\\nThe name given to inhabitants of the country\\n"},{"name":"flag","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The country&#39;s flag (as a URL)</p>\\n","line":129,"rawdescription":"\\n\\nThe country\'s flag (as a URL)\\n"},{"name":"gini","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"<p>Used for representing the income distribution of the country&#39;s residents\\nSee <a href=\\"https://en.wikipedia.org/wiki/Gini_coefficient\\">https://en.wikipedia.org/wiki/Gini_coefficient</a> for more info.</p>\\n","line":96,"rawdescription":"\\n\\nUsed for representing the income distribution of the country\'s residents\\nSee https://en.wikipedia.org/wiki/Gini_coefficient for more info.\\n"},{"name":"languages","deprecated":false,"deprecationMessage":"","type":"RestCountriesAPICountryLanguage[]","optional":true,"description":"<p>An array of languages spoken in the country</p>\\n","line":121,"rawdescription":"\\n\\nAn array of languages spoken in the country\\n"},{"name":"latlng","deprecated":false,"deprecationMessage":"","type":"number[]","optional":true,"description":"<p>The latitude and longtitude points of the country</p>\\n","line":83,"rawdescription":"\\n\\nThe latitude and longtitude points of the country\\n"},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The country&#39;s name</p>\\n","line":42,"rawdescription":"\\n\\nThe country\'s name\\n"},{"name":"nativeName","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The name of the country according to inhabitants</p>\\n","line":108,"rawdescription":"\\n\\nThe name of the country according to inhabitants\\n"},{"name":"numericCode","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>A 3-digit country code denoted to represent a country\\nSee <a href=\\"https://en.wikipedia.org/wiki/ISO_3166-1_numeric\\">https://en.wikipedia.org/wiki/ISO_3166-1_numeric</a> for more info</p>\\n","line":113,"rawdescription":"\\n\\nA 3-digit country code denoted to represent a country\\nSee https://en.wikipedia.org/wiki/ISO_3166-1_numeric for more info\\n"},{"name":"population","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"<p>The total population of the country</p>\\n","line":79,"rawdescription":"\\n\\nThe total population of the country\\n"},{"name":"region","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The region that the country is in</p>\\n","line":71,"rawdescription":"\\n\\nThe region that the country is in\\n"},{"name":"regionalBlocs","deprecated":false,"deprecationMessage":"","type":"RestCountriesAPICountryRegionalBloc[]","optional":true,"description":"<p>Trading blocs</p>\\n","line":133,"rawdescription":"\\n\\nTrading blocs\\n"},{"name":"subregion","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The subregion that the country is in</p>\\n","line":75,"rawdescription":"\\n\\nThe subregion that the country is in\\n"},{"name":"timezones","deprecated":false,"deprecationMessage":"","type":"string[]","optional":true,"description":"<p>The timezone(s) of the country (in GMT)</p>\\n","line":100,"rawdescription":"\\n\\nThe timezone(s) of the country (in GMT)\\n"},{"name":"topLevelDomain","deprecated":false,"deprecationMessage":"","type":"string[]","optional":true,"description":"<p>The top level domain of the country</p>\\n","line":46,"rawdescription":"\\n\\nThe top level domain of the country\\n"},{"name":"translations","deprecated":false,"deprecationMessage":"","type":"RestCountriesAPICountryTranslation[]","optional":true,"description":"<p>An array of alternative names of the country in other areas</p>\\n","line":125,"rawdescription":"\\n\\nAn array of alternative names of the country in other areas\\n"}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"RestCountriesAPICountryCurrency","id":"interface-RestCountriesAPICountryCurrency-be8290a8363a7c9d03ab24fb0c3317e860914608a07c8fc9039386735d34d2d3200ae90d22683706bca31e36f3eaf4311961f1098c822f919aa5e8bcbff6a8c2","file":"projects/rss-reader/src/app/models/rest-countries-api/index.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface RestCountriesAPICountryCurrency {\\n  /**\\n   * The codename of the country\'s currency\\n   */\\n  code?: string;\\n  /**\\n   * The name of the country\'s currency\\n   */\\n  name?: string;\\n  /**\\n   * The Unicode symbol of the country\'s currency\\n   */\\n  symbol?: string;\\n}\\nexport interface RestCountriesAPICountryLanguage {\\n  iso639_1?: string;\\n  iso639_2?: string;\\n  name?: string;\\n  nativeName?: string;\\n}\\nexport interface RestCountriesAPICountryTranslation {\\n  [key: string]: string;\\n}\\nexport interface RestCountriesAPICountryRegionalBloc {\\n  acronym?: string;\\n  name?: string;\\n  otherAcronyms?: string[];\\n  otherNames?: string[];\\n}\\nexport interface RestCountriesAPICountry {\\n  /**\\n   * The country\'s name\\n   */\\n  name?: string;\\n  /**\\n   * The top level domain of the country\\n   */\\n  topLevelDomain?: string[];\\n  /**\\n   * The 2 letter code of the country\\n   */\\n  alpha2Code?: string;\\n  /**\\n   * The 3 letter code of the country\\n   */\\n  alpha3Code?: string;\\n  /**\\n   * Phone number codes for the country\\n   */\\n  callingCodes?: string[];\\n  /**\\n   * The capital of the country\\n   * Note: This field will be an empty string if there\'s no capital.\\n   */\\n  capital?: string;\\n  /**\\n   * Alternate spellings of the country\\n   */\\n  altSpellings?: string[];\\n  /**\\n   * The region that the country is in\\n   */\\n  region?: string;\\n  /**\\n   * The subregion that the country is in\\n   */\\n  subregion?: string;\\n  /**\\n   * The total population of the country\\n   */\\n  population?: number;\\n  /**\\n   * The latitude and longtitude points of the country\\n   */\\n  latlng?: number[];\\n  /**\\n   * The name given to inhabitants of the country\\n   */\\n  demonym?: string;\\n  /**\\n   * The area of the country in square kilometres\\n   */\\n  area?: number;\\n  /**\\n   * Used for representing the income distribution of the country\'s residents\\n   * See https://en.wikipedia.org/wiki/Gini_coefficient for more info.\\n   */\\n  gini?: number;\\n  /**\\n   * The timezone(s) of the country (in GMT)\\n   */\\n  timezones?: string[];\\n  /**\\n   * The borders of the country denoted with country codes\\n   */\\n  borders?: string[];\\n  /**\\n   * The name of the country according to inhabitants\\n   */\\n  nativeName?: string;\\n  /**\\n   * A 3-digit country code denoted to represent a country\\n   * See https://en.wikipedia.org/wiki/ISO_3166-1_numeric for more info\\n   */\\n  numericCode?: string;\\n  /**\\n   * An array of currencies used in the country\\n   */\\n  currencies?: RestCountriesAPICountryCurrency[];\\n  /**\\n   * An array of languages spoken in the country\\n   */\\n  languages?: RestCountriesAPICountryLanguage[];\\n  /**\\n   * An array of alternative names of the country in other areas\\n   */\\n  translations?: RestCountriesAPICountryTranslation[];\\n  /**\\n   * The country\'s flag (as a URL)\\n   */\\n  flag?: string;\\n  /**\\n   * Trading blocs\\n   */\\n  regionalBlocs?: RestCountriesAPICountryRegionalBloc[];\\n  /**\\n   * Unknown property\\n   */\\n  cioc?: string;\\n}\\n","properties":[{"name":"code","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The codename of the country&#39;s currency</p>\\n","line":13,"rawdescription":"\\n\\nThe codename of the country\'s currency\\n"},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The name of the country&#39;s currency</p>\\n","line":17,"rawdescription":"\\n\\nThe name of the country\'s currency\\n"},{"name":"symbol","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The Unicode symbol of the country&#39;s currency</p>\\n","line":21,"rawdescription":"\\n\\nThe Unicode symbol of the country\'s currency\\n"}],"indexSignatures":[],"kind":165,"description":"<p>Descriptions of each property are provided by me.\\nProps to the devs of the website for providing such a useful API! ð\\nIt&#39;s open source as well! Link: <a href=\\"https://github.com/apilayer/restcountries\\">https://github.com/apilayer/restcountries</a></p>\\n","rawdescription":"\\n\\nDescriptions of each property are provided by me.\\nProps to the devs of the website for providing such a useful API! ð\\nIt\'s open source as well! Link: https://github.com/apilayer/restcountries\\n","methods":[]},{"name":"RestCountriesAPICountryLanguage","id":"interface-RestCountriesAPICountryLanguage-be8290a8363a7c9d03ab24fb0c3317e860914608a07c8fc9039386735d34d2d3200ae90d22683706bca31e36f3eaf4311961f1098c822f919aa5e8bcbff6a8c2","file":"projects/rss-reader/src/app/models/rest-countries-api/index.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface RestCountriesAPICountryCurrency {\\n  /**\\n   * The codename of the country\'s currency\\n   */\\n  code?: string;\\n  /**\\n   * The name of the country\'s currency\\n   */\\n  name?: string;\\n  /**\\n   * The Unicode symbol of the country\'s currency\\n   */\\n  symbol?: string;\\n}\\nexport interface RestCountriesAPICountryLanguage {\\n  iso639_1?: string;\\n  iso639_2?: string;\\n  name?: string;\\n  nativeName?: string;\\n}\\nexport interface RestCountriesAPICountryTranslation {\\n  [key: string]: string;\\n}\\nexport interface RestCountriesAPICountryRegionalBloc {\\n  acronym?: string;\\n  name?: string;\\n  otherAcronyms?: string[];\\n  otherNames?: string[];\\n}\\nexport interface RestCountriesAPICountry {\\n  /**\\n   * The country\'s name\\n   */\\n  name?: string;\\n  /**\\n   * The top level domain of the country\\n   */\\n  topLevelDomain?: string[];\\n  /**\\n   * The 2 letter code of the country\\n   */\\n  alpha2Code?: string;\\n  /**\\n   * The 3 letter code of the country\\n   */\\n  alpha3Code?: string;\\n  /**\\n   * Phone number codes for the country\\n   */\\n  callingCodes?: string[];\\n  /**\\n   * The capital of the country\\n   * Note: This field will be an empty string if there\'s no capital.\\n   */\\n  capital?: string;\\n  /**\\n   * Alternate spellings of the country\\n   */\\n  altSpellings?: string[];\\n  /**\\n   * The region that the country is in\\n   */\\n  region?: string;\\n  /**\\n   * The subregion that the country is in\\n   */\\n  subregion?: string;\\n  /**\\n   * The total population of the country\\n   */\\n  population?: number;\\n  /**\\n   * The latitude and longtitude points of the country\\n   */\\n  latlng?: number[];\\n  /**\\n   * The name given to inhabitants of the country\\n   */\\n  demonym?: string;\\n  /**\\n   * The area of the country in square kilometres\\n   */\\n  area?: number;\\n  /**\\n   * Used for representing the income distribution of the country\'s residents\\n   * See https://en.wikipedia.org/wiki/Gini_coefficient for more info.\\n   */\\n  gini?: number;\\n  /**\\n   * The timezone(s) of the country (in GMT)\\n   */\\n  timezones?: string[];\\n  /**\\n   * The borders of the country denoted with country codes\\n   */\\n  borders?: string[];\\n  /**\\n   * The name of the country according to inhabitants\\n   */\\n  nativeName?: string;\\n  /**\\n   * A 3-digit country code denoted to represent a country\\n   * See https://en.wikipedia.org/wiki/ISO_3166-1_numeric for more info\\n   */\\n  numericCode?: string;\\n  /**\\n   * An array of currencies used in the country\\n   */\\n  currencies?: RestCountriesAPICountryCurrency[];\\n  /**\\n   * An array of languages spoken in the country\\n   */\\n  languages?: RestCountriesAPICountryLanguage[];\\n  /**\\n   * An array of alternative names of the country in other areas\\n   */\\n  translations?: RestCountriesAPICountryTranslation[];\\n  /**\\n   * The country\'s flag (as a URL)\\n   */\\n  flag?: string;\\n  /**\\n   * Trading blocs\\n   */\\n  regionalBlocs?: RestCountriesAPICountryRegionalBloc[];\\n  /**\\n   * Unknown property\\n   */\\n  cioc?: string;\\n}\\n","properties":[{"name":"iso639_1","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":24},{"name":"iso639_2","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":25},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":26},{"name":"nativeName","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":27}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"RestCountriesAPICountryRegionalBloc","id":"interface-RestCountriesAPICountryRegionalBloc-be8290a8363a7c9d03ab24fb0c3317e860914608a07c8fc9039386735d34d2d3200ae90d22683706bca31e36f3eaf4311961f1098c822f919aa5e8bcbff6a8c2","file":"projects/rss-reader/src/app/models/rest-countries-api/index.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface RestCountriesAPICountryCurrency {\\n  /**\\n   * The codename of the country\'s currency\\n   */\\n  code?: string;\\n  /**\\n   * The name of the country\'s currency\\n   */\\n  name?: string;\\n  /**\\n   * The Unicode symbol of the country\'s currency\\n   */\\n  symbol?: string;\\n}\\nexport interface RestCountriesAPICountryLanguage {\\n  iso639_1?: string;\\n  iso639_2?: string;\\n  name?: string;\\n  nativeName?: string;\\n}\\nexport interface RestCountriesAPICountryTranslation {\\n  [key: string]: string;\\n}\\nexport interface RestCountriesAPICountryRegionalBloc {\\n  acronym?: string;\\n  name?: string;\\n  otherAcronyms?: string[];\\n  otherNames?: string[];\\n}\\nexport interface RestCountriesAPICountry {\\n  /**\\n   * The country\'s name\\n   */\\n  name?: string;\\n  /**\\n   * The top level domain of the country\\n   */\\n  topLevelDomain?: string[];\\n  /**\\n   * The 2 letter code of the country\\n   */\\n  alpha2Code?: string;\\n  /**\\n   * The 3 letter code of the country\\n   */\\n  alpha3Code?: string;\\n  /**\\n   * Phone number codes for the country\\n   */\\n  callingCodes?: string[];\\n  /**\\n   * The capital of the country\\n   * Note: This field will be an empty string if there\'s no capital.\\n   */\\n  capital?: string;\\n  /**\\n   * Alternate spellings of the country\\n   */\\n  altSpellings?: string[];\\n  /**\\n   * The region that the country is in\\n   */\\n  region?: string;\\n  /**\\n   * The subregion that the country is in\\n   */\\n  subregion?: string;\\n  /**\\n   * The total population of the country\\n   */\\n  population?: number;\\n  /**\\n   * The latitude and longtitude points of the country\\n   */\\n  latlng?: number[];\\n  /**\\n   * The name given to inhabitants of the country\\n   */\\n  demonym?: string;\\n  /**\\n   * The area of the country in square kilometres\\n   */\\n  area?: number;\\n  /**\\n   * Used for representing the income distribution of the country\'s residents\\n   * See https://en.wikipedia.org/wiki/Gini_coefficient for more info.\\n   */\\n  gini?: number;\\n  /**\\n   * The timezone(s) of the country (in GMT)\\n   */\\n  timezones?: string[];\\n  /**\\n   * The borders of the country denoted with country codes\\n   */\\n  borders?: string[];\\n  /**\\n   * The name of the country according to inhabitants\\n   */\\n  nativeName?: string;\\n  /**\\n   * A 3-digit country code denoted to represent a country\\n   * See https://en.wikipedia.org/wiki/ISO_3166-1_numeric for more info\\n   */\\n  numericCode?: string;\\n  /**\\n   * An array of currencies used in the country\\n   */\\n  currencies?: RestCountriesAPICountryCurrency[];\\n  /**\\n   * An array of languages spoken in the country\\n   */\\n  languages?: RestCountriesAPICountryLanguage[];\\n  /**\\n   * An array of alternative names of the country in other areas\\n   */\\n  translations?: RestCountriesAPICountryTranslation[];\\n  /**\\n   * The country\'s flag (as a URL)\\n   */\\n  flag?: string;\\n  /**\\n   * Trading blocs\\n   */\\n  regionalBlocs?: RestCountriesAPICountryRegionalBloc[];\\n  /**\\n   * Unknown property\\n   */\\n  cioc?: string;\\n}\\n","properties":[{"name":"acronym","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":33},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":34},{"name":"otherAcronyms","deprecated":false,"deprecationMessage":"","type":"string[]","optional":true,"description":"","line":35},{"name":"otherNames","deprecated":false,"deprecationMessage":"","type":"string[]","optional":true,"description":"","line":36}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"RestCountriesAPICountryTranslation","id":"interface-RestCountriesAPICountryTranslation-be8290a8363a7c9d03ab24fb0c3317e860914608a07c8fc9039386735d34d2d3200ae90d22683706bca31e36f3eaf4311961f1098c822f919aa5e8bcbff6a8c2","file":"projects/rss-reader/src/app/models/rest-countries-api/index.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface RestCountriesAPICountryCurrency {\\n  /**\\n   * The codename of the country\'s currency\\n   */\\n  code?: string;\\n  /**\\n   * The name of the country\'s currency\\n   */\\n  name?: string;\\n  /**\\n   * The Unicode symbol of the country\'s currency\\n   */\\n  symbol?: string;\\n}\\nexport interface RestCountriesAPICountryLanguage {\\n  iso639_1?: string;\\n  iso639_2?: string;\\n  name?: string;\\n  nativeName?: string;\\n}\\nexport interface RestCountriesAPICountryTranslation {\\n  [key: string]: string;\\n}\\nexport interface RestCountriesAPICountryRegionalBloc {\\n  acronym?: string;\\n  name?: string;\\n  otherAcronyms?: string[];\\n  otherNames?: string[];\\n}\\nexport interface RestCountriesAPICountry {\\n  /**\\n   * The country\'s name\\n   */\\n  name?: string;\\n  /**\\n   * The top level domain of the country\\n   */\\n  topLevelDomain?: string[];\\n  /**\\n   * The 2 letter code of the country\\n   */\\n  alpha2Code?: string;\\n  /**\\n   * The 3 letter code of the country\\n   */\\n  alpha3Code?: string;\\n  /**\\n   * Phone number codes for the country\\n   */\\n  callingCodes?: string[];\\n  /**\\n   * The capital of the country\\n   * Note: This field will be an empty string if there\'s no capital.\\n   */\\n  capital?: string;\\n  /**\\n   * Alternate spellings of the country\\n   */\\n  altSpellings?: string[];\\n  /**\\n   * The region that the country is in\\n   */\\n  region?: string;\\n  /**\\n   * The subregion that the country is in\\n   */\\n  subregion?: string;\\n  /**\\n   * The total population of the country\\n   */\\n  population?: number;\\n  /**\\n   * The latitude and longtitude points of the country\\n   */\\n  latlng?: number[];\\n  /**\\n   * The name given to inhabitants of the country\\n   */\\n  demonym?: string;\\n  /**\\n   * The area of the country in square kilometres\\n   */\\n  area?: number;\\n  /**\\n   * Used for representing the income distribution of the country\'s residents\\n   * See https://en.wikipedia.org/wiki/Gini_coefficient for more info.\\n   */\\n  gini?: number;\\n  /**\\n   * The timezone(s) of the country (in GMT)\\n   */\\n  timezones?: string[];\\n  /**\\n   * The borders of the country denoted with country codes\\n   */\\n  borders?: string[];\\n  /**\\n   * The name of the country according to inhabitants\\n   */\\n  nativeName?: string;\\n  /**\\n   * A 3-digit country code denoted to represent a country\\n   * See https://en.wikipedia.org/wiki/ISO_3166-1_numeric for more info\\n   */\\n  numericCode?: string;\\n  /**\\n   * An array of currencies used in the country\\n   */\\n  currencies?: RestCountriesAPICountryCurrency[];\\n  /**\\n   * An array of languages spoken in the country\\n   */\\n  languages?: RestCountriesAPICountryLanguage[];\\n  /**\\n   * An array of alternative names of the country in other areas\\n   */\\n  translations?: RestCountriesAPICountryTranslation[];\\n  /**\\n   * The country\'s flag (as a URL)\\n   */\\n  flag?: string;\\n  /**\\n   * Trading blocs\\n   */\\n  regionalBlocs?: RestCountriesAPICountryRegionalBloc[];\\n  /**\\n   * Unknown property\\n   */\\n  cioc?: string;\\n}\\n","properties":[],"indexSignatures":[{"id":"index-declaration-be8290a8363a7c9d03ab24fb0c3317e860914608a07c8fc9039386735d34d2d3200ae90d22683706bca31e36f3eaf4311961f1098c822f919aa5e8bcbff6a8c2","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"string","line":29,"deprecated":false,"deprecationMessage":""}],"kind":175,"methods":[]},{"name":"Rss2JsonParams","id":"interface-Rss2JsonParams-ad2c75da27397bd4b3b34065779e3fe79f34d8859b1b87b9b1dde4e3b2c8d6522bba1ec425f0619bb987450ce96f7b4cc5049f3eaafe1f37af9bfb9c2f3f4a7c","file":"projects/rss-reader/src/app/models/rss2json-api/params.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface Rss2JsonParams {\\n  /** The RSS feed to be converted to JSON. (Note: The URL has to be escaped) */\\n  rss_url: string;\\n  /** A valid API key. */\\n  api_key?: string;\\n  /**\\n   * Order the results by the chosen value.\\n   * Note: `api_key` must be specified to use this parameter.\\n   */\\n  order_by?: \'pubDate\' | \'author\' | \'title\';\\n  /**\\n   * The order direction of feed items to return.\\n   * Note: `api_key` must be specified to use this parameter.\\n   */\\n  order_dir?: \'asc\' | \'desc\';\\n  /**\\n   * The number of feed items to return. (Default: `10`)\\n   * Note: `api_key` must be specified to use this parameter.\\n   */\\n  count?: number;\\n  /** The callback name to be used for JSONP. */\\n  callback?: string;\\n}\\n","properties":[{"name":"api_key","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>A valid API key.</p>\\n","line":6,"rawdescription":"\\nA valid API key."},{"name":"callback","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The callback name to be used for JSONP.</p>\\n","line":23,"rawdescription":"\\nThe callback name to be used for JSONP."},{"name":"count","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"<p>The number of feed items to return. (Default: <code>10</code>)\\nNote: <code>api_key</code> must be specified to use this parameter.</p>\\n","line":21,"rawdescription":"\\n\\nThe number of feed items to return. (Default: `10`)\\nNote: `api_key` must be specified to use this parameter.\\n"},{"name":"order_by","deprecated":false,"deprecationMessage":"","type":"\\"pubDate\\" | \\"author\\" | \\"title\\"","optional":true,"description":"<p>Order the results by the chosen value.\\nNote: <code>api_key</code> must be specified to use this parameter.</p>\\n","line":11,"rawdescription":"\\n\\nOrder the results by the chosen value.\\nNote: `api_key` must be specified to use this parameter.\\n"},{"name":"order_dir","deprecated":false,"deprecationMessage":"","type":"\\"asc\\" | \\"desc\\"","optional":true,"description":"<p>The order direction of feed items to return.\\nNote: <code>api_key</code> must be specified to use this parameter.</p>\\n","line":16,"rawdescription":"\\n\\nThe order direction of feed items to return.\\nNote: `api_key` must be specified to use this parameter.\\n"},{"name":"rss_url","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The RSS feed to be converted to JSON. (Note: The URL has to be escaped)</p>\\n","line":4,"rawdescription":"\\nThe RSS feed to be converted to JSON. (Note: The URL has to be escaped)"}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"Rss2JsonResponse","id":"interface-Rss2JsonResponse-0d72e4d3a826e1a32715a9f52c6891ae8c961d83ad1cb0ccad0bd5656f00066a2536e6a3d580fb6856044b0424f310fdfaa621dfbc70c50761cdb413e9b1bff4","file":"projects/rss-reader/src/app/models/rss2json-api/response.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Rss2JsonResponseChannel } from \'./channel\';\\nimport { Rss2JsonResponseItem } from \'./item\';\\n\\nexport interface Rss2JsonResponse {\\n  /** The status of the API response. */\\n  status?: string;\\n  /** The error message if the API errors. */\\n  message?: string;\\n  /** Metadata about the RSS feed channel. */\\n  feed?: Rss2JsonResponseChannel;\\n  items?: Rss2JsonResponseItem[];\\n}\\n","properties":[{"name":"feed","deprecated":false,"deprecationMessage":"","type":"Rss2JsonResponseChannel","optional":true,"description":"<p>Metadata about the RSS feed channel.</p>\\n","line":10,"rawdescription":"\\nMetadata about the RSS feed channel."},{"name":"items","deprecated":false,"deprecationMessage":"","type":"Rss2JsonResponseItem[]","optional":true,"description":"","line":11},{"name":"message","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The error message if the API errors.</p>\\n","line":8,"rawdescription":"\\nThe error message if the API errors."},{"name":"status","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The status of the API response.</p>\\n","line":6,"rawdescription":"\\nThe status of the API response."}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"Rss2JsonResponseChannel","id":"interface-Rss2JsonResponseChannel-608ff857e60309f0754da72ec841ee1c0b3396905578ba12c5052f22d278df2093a1e9d3c5dfbbf56e2f7de8cf992da54c3fbb5b4850ef816f1293b71cac803c","file":"projects/rss-reader/src/app/models/rss2json-api/channel.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface Rss2JsonResponseChannel {\\n  /** The URL to the RSS feed channel. */\\n  url?: string;\\n  /** The name of the RSS feed channel. */\\n  title?: string;\\n  /** A link to the website corresponding to the RSS feed channel. */\\n  link?: string;\\n  /** The author of the RSS feed channel. */\\n  author?: string;\\n  /** The description of the RSS feed channel. */\\n  description?: string;\\n  /** The image that can be displayed with the RSS feed channel. */\\n  image?: string;\\n}\\n","properties":[{"name":"author","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The author of the RSS feed channel.</p>\\n","line":9,"rawdescription":"\\nThe author of the RSS feed channel."},{"name":"description","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The description of the RSS feed channel.</p>\\n","line":11,"rawdescription":"\\nThe description of the RSS feed channel."},{"name":"image","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The image that can be displayed with the RSS feed channel.</p>\\n","line":13,"rawdescription":"\\nThe image that can be displayed with the RSS feed channel."},{"name":"link","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>A link to the website corresponding to the RSS feed channel.</p>\\n","line":7,"rawdescription":"\\nA link to the website corresponding to the RSS feed channel."},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The name of the RSS feed channel.</p>\\n","line":5,"rawdescription":"\\nThe name of the RSS feed channel."},{"name":"url","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The URL to the RSS feed channel.</p>\\n","line":3,"rawdescription":"\\nThe URL to the RSS feed channel."}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"Rss2JsonResponseItem","id":"interface-Rss2JsonResponseItem-f56a3f33729087cfd9970421aeb43054bc36b3de5ac4a2b9496f3cae66c9ea69f56acab7648e36b13aae89bc535bf3717d6aa91cb9dc8a7c116040fbdb3f5827","file":"projects/rss-reader/src/app/models/rss2json-api/item.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface Rss2JsonResponseItem {\\n  /** The title of the item. */\\n  title?: string;\\n  /** The date when the item was published at. */\\n  pubDate?: string;\\n  /** The URL of the item. */\\n  link?: string;\\n  /** A string that uniquely identifies the item. */\\n  guid?: string;\\n  /** The author of the item. */\\n  author?: string;\\n  /** The thumbnail URL of the item. */\\n  thumbnail?: string;\\n  /** The item synopsis. */\\n  description?: string;\\n  /** The content of the item. */\\n  content?: string;\\n  /** Describes a media object that is attached to the item. */\\n  enclosure?: {\\n    [key: string]: any;\\n  };\\n  /** A list of categories that the item is in. */\\n  categories?: string[];\\n}\\n","properties":[{"name":"author","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The author of the item.</p>\\n","line":11,"rawdescription":"\\nThe author of the item."},{"name":"categories","deprecated":false,"deprecationMessage":"","type":"string[]","optional":true,"description":"<p>A list of categories that the item is in.</p>\\n","line":23,"rawdescription":"\\nA list of categories that the item is in."},{"name":"content","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The content of the item.</p>\\n","line":17,"rawdescription":"\\nThe content of the item."},{"name":"description","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The item synopsis.</p>\\n","line":15,"rawdescription":"\\nThe item synopsis."},{"name":"enclosure","deprecated":false,"deprecationMessage":"","type":"literal type","optional":true,"description":"<p>Describes a media object that is attached to the item.</p>\\n","line":19,"rawdescription":"\\nDescribes a media object that is attached to the item."},{"name":"guid","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>A string that uniquely identifies the item.</p>\\n","line":9,"rawdescription":"\\nA string that uniquely identifies the item."},{"name":"link","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The URL of the item.</p>\\n","line":7,"rawdescription":"\\nThe URL of the item."},{"name":"pubDate","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The date when the item was published at.</p>\\n","line":5,"rawdescription":"\\nThe date when the item was published at."},{"name":"thumbnail","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The thumbnail URL of the item.</p>\\n","line":13,"rawdescription":"\\nThe thumbnail URL of the item."},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The title of the item.</p>\\n","line":3,"rawdescription":"\\nThe title of the item."}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"SelectionDialogOption","id":"interface-SelectionDialogOption-0b7643f37a82ce61640ebaf07ff9ffa7e24c24ea044a2dff74485ed8847d81246cee0314613f5f8602208885b7992f42ebd13e555ca43791019c11ac4d19581d","file":"projects/rss-reader/src/app/core/dialogs/models.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Portal } from \'@angular/cdk/portal\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\n\\nexport type ButtonType = \'negative\' | \'neutral\' | \'positive\';\\n\\nexport type DialogType = \'alert\' | \'confirm\' | \'message\' | \'prompt\' | \'portal\'\\n| \'selection\';\\n\\nexport interface BaseDialogOpts {\\n  /** The dialog\'s title. */\\n  title?: string;\\n}\\n\\nexport interface DialogBtnOpts {\\n  /** The positive button\'s text. */\\n  positiveBtnText?: string;\\n  /** The positive button\'s color. */\\n  positiveBtnColor?: ThemePalette;\\n  /** The negative button\'s text. */\\n  negativeBtnText?: string;\\n  /** The negative button\'s color. */\\n  negativeBtnColor?: ThemePalette;\\n  /** The neutral button\'s text. */\\n  neutralBtnText?: string;\\n  /** The neutral button\'s color. */\\n  neutralBtnColor?: ThemePalette;\\n  /**\\n   * Whether to hide the action buttons.\\n   *\\n   * Optionally, you can specify which buttons to hide.\\n   */\\n  hideActionBtns?: ButtonType[] | boolean;\\n  /** The initial button to focus on. */\\n  initialActionBtnFocus?: ButtonType;\\n}\\n\\nexport interface DialogOptsWithMsg {\\n  /** The dialog\'s message. */\\n  msg?: string | SafeHtml;\\n  /** The dialog\'s title. */\\n  title?: string;\\n  /** Whether the dialog\'s message is in HTML. */\\n  isHtml?: boolean;\\n}\\n\\nexport interface DialogOpts extends BaseDialogOpts, DialogBtnOpts,\\n  DialogOptsWithMsg { }\\n\\nexport interface PromptDialogInputConfig {\\n  /** The input\'s placeholder. */\\n  placeholder?: string;\\n  /** The input\'s label. */\\n  label?: string;\\n  /** The input type. */\\n  inputType?: string;\\n  /** The input\'s initial value. */\\n  value?: string;\\n  /** The input\'s color. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PromptDialogOpts extends DialogOpts {\\n  /** Configuration for the input. */\\n  inputConfig?: PromptDialogInputConfig;\\n  /**\\n   * The input\'s placeholder.\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#placeholder} instead\\n   */\\n  placeholder?: string;\\n  /**\\n   * The input type.\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#inputType} instead\\n   */\\n  inputType?: \'text\' | \'email\' | \'password\' | \'number\';\\n  /**\\n   * The initial value of the input\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#value} instead\\n   */\\n  value?: string | number;\\n  /**\\n   * The color of the input\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#color} instead\\n   */\\n  color?: ThemePalette;\\n}\\n\\nexport interface SelectionDialogOpts extends DialogOpts {\\n  /** Options to be shown in the dialog. */\\n  options: SelectionDialogOption[];\\n}\\n\\nexport interface SelectionDialogOption {\\n  /** The title of the option. */\\n  title: string;\\n  /** The value of the option. */\\n  value: any;\\n  /** Whether the option is disabled. */\\n  disabled?: boolean;\\n  /** Whether the option is initially selected. */\\n  selected?: boolean;\\n  /** The checkbox position of the option. */\\n  checkboxPosition?: \'before\' | \'after\';\\n  /** The color of the option. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PortalDialogOpts<T> extends DialogOpts {\\n  /** The portal to render in the dialog. */\\n  portal: Portal<T>;\\n}\\n\\n/** The result returned by the dialog. */\\n/* eslint-disable @typescript-eslint/naming-convention */\\nexport enum DialogResult {\\n  /** Indicates that the user clicked the \\"Cancel\\" (or negative) button. */\\n  NEGATIVE = \'cancel\',\\n  /** Alias for {@link DialogResult#NEGATIVE}. */\\n  CANCEL = \'cancel\',\\n  /** Indicates that the user clicked the neutral button. */\\n  NEUTRAL = \'neutral\',\\n  /** Indicates that the user clicked the \\"OK\\" (or positive) button. */\\n  POSITIVE = \'ok\',\\n  /** Alias for {@link DialogResult#POSITIVE}. */\\n  OK = \'ok\'\\n}\\n/* eslint-enable @typescript-eslint/naming-convention */\\n","properties":[{"name":"checkboxPosition","deprecated":false,"deprecationMessage":"","type":"\\"before\\" | \\"after\\"","optional":true,"description":"<p>The checkbox position of the option.</p>\\n","line":107,"rawdescription":"\\nThe checkbox position of the option."},{"name":"color","deprecated":false,"deprecationMessage":"","type":"ThemePalette","optional":true,"description":"<p>The color of the option.</p>\\n","line":109,"rawdescription":"\\nThe color of the option."},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Whether the option is disabled.</p>\\n","line":103,"rawdescription":"\\nWhether the option is disabled."},{"name":"selected","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Whether the option is initially selected.</p>\\n","line":105,"rawdescription":"\\nWhether the option is initially selected."},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The title of the option.</p>\\n","line":99,"rawdescription":"\\nThe title of the option."},{"name":"value","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"<p>The value of the option.</p>\\n","line":101,"rawdescription":"\\nThe value of the option."}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"SelectionDialogOpts","id":"interface-SelectionDialogOpts-0b7643f37a82ce61640ebaf07ff9ffa7e24c24ea044a2dff74485ed8847d81246cee0314613f5f8602208885b7992f42ebd13e555ca43791019c11ac4d19581d","file":"projects/rss-reader/src/app/core/dialogs/models.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Portal } from \'@angular/cdk/portal\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\n\\nexport type ButtonType = \'negative\' | \'neutral\' | \'positive\';\\n\\nexport type DialogType = \'alert\' | \'confirm\' | \'message\' | \'prompt\' | \'portal\'\\n| \'selection\';\\n\\nexport interface BaseDialogOpts {\\n  /** The dialog\'s title. */\\n  title?: string;\\n}\\n\\nexport interface DialogBtnOpts {\\n  /** The positive button\'s text. */\\n  positiveBtnText?: string;\\n  /** The positive button\'s color. */\\n  positiveBtnColor?: ThemePalette;\\n  /** The negative button\'s text. */\\n  negativeBtnText?: string;\\n  /** The negative button\'s color. */\\n  negativeBtnColor?: ThemePalette;\\n  /** The neutral button\'s text. */\\n  neutralBtnText?: string;\\n  /** The neutral button\'s color. */\\n  neutralBtnColor?: ThemePalette;\\n  /**\\n   * Whether to hide the action buttons.\\n   *\\n   * Optionally, you can specify which buttons to hide.\\n   */\\n  hideActionBtns?: ButtonType[] | boolean;\\n  /** The initial button to focus on. */\\n  initialActionBtnFocus?: ButtonType;\\n}\\n\\nexport interface DialogOptsWithMsg {\\n  /** The dialog\'s message. */\\n  msg?: string | SafeHtml;\\n  /** The dialog\'s title. */\\n  title?: string;\\n  /** Whether the dialog\'s message is in HTML. */\\n  isHtml?: boolean;\\n}\\n\\nexport interface DialogOpts extends BaseDialogOpts, DialogBtnOpts,\\n  DialogOptsWithMsg { }\\n\\nexport interface PromptDialogInputConfig {\\n  /** The input\'s placeholder. */\\n  placeholder?: string;\\n  /** The input\'s label. */\\n  label?: string;\\n  /** The input type. */\\n  inputType?: string;\\n  /** The input\'s initial value. */\\n  value?: string;\\n  /** The input\'s color. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PromptDialogOpts extends DialogOpts {\\n  /** Configuration for the input. */\\n  inputConfig?: PromptDialogInputConfig;\\n  /**\\n   * The input\'s placeholder.\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#placeholder} instead\\n   */\\n  placeholder?: string;\\n  /**\\n   * The input type.\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#inputType} instead\\n   */\\n  inputType?: \'text\' | \'email\' | \'password\' | \'number\';\\n  /**\\n   * The initial value of the input\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#value} instead\\n   */\\n  value?: string | number;\\n  /**\\n   * The color of the input\\n   *\\n   * @deprecated Use {@link PromptDialogInputConfig#color} instead\\n   */\\n  color?: ThemePalette;\\n}\\n\\nexport interface SelectionDialogOpts extends DialogOpts {\\n  /** Options to be shown in the dialog. */\\n  options: SelectionDialogOption[];\\n}\\n\\nexport interface SelectionDialogOption {\\n  /** The title of the option. */\\n  title: string;\\n  /** The value of the option. */\\n  value: any;\\n  /** Whether the option is disabled. */\\n  disabled?: boolean;\\n  /** Whether the option is initially selected. */\\n  selected?: boolean;\\n  /** The checkbox position of the option. */\\n  checkboxPosition?: \'before\' | \'after\';\\n  /** The color of the option. */\\n  color?: ThemePalette;\\n}\\n\\nexport interface PortalDialogOpts<T> extends DialogOpts {\\n  /** The portal to render in the dialog. */\\n  portal: Portal<T>;\\n}\\n\\n/** The result returned by the dialog. */\\n/* eslint-disable @typescript-eslint/naming-convention */\\nexport enum DialogResult {\\n  /** Indicates that the user clicked the \\"Cancel\\" (or negative) button. */\\n  NEGATIVE = \'cancel\',\\n  /** Alias for {@link DialogResult#NEGATIVE}. */\\n  CANCEL = \'cancel\',\\n  /** Indicates that the user clicked the neutral button. */\\n  NEUTRAL = \'neutral\',\\n  /** Indicates that the user clicked the \\"OK\\" (or positive) button. */\\n  POSITIVE = \'ok\',\\n  /** Alias for {@link DialogResult#POSITIVE}. */\\n  OK = \'ok\'\\n}\\n/* eslint-enable @typescript-eslint/naming-convention */\\n","properties":[{"name":"options","deprecated":false,"deprecationMessage":"","type":"SelectionDialogOption[]","optional":false,"description":"<p>Options to be shown in the dialog.</p>\\n","line":94,"rawdescription":"\\nOptions to be shown in the dialog."}],"indexSignatures":[],"kind":165,"methods":[],"extends":"DialogOpts"},{"name":"Settings","id":"interface-Settings-86223a5251167ae330a100389c73877422043a2fd8199ad139feabb82e798d309f227231124d6520b5b0abc6e8fda6434e70210274351bdb178a15abd48a532e","file":"projects/rss-reader/src/app/models/settings.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface Settings {\\n  /**\\n   * Whether to allow multiple RSS feeds\\n   *\\n   * @deprecated Option doesn\'t do anything and has been removed from settings\\n   */\\n  multipleRss?: boolean;\\n  /**\\n   * Opens posts in a new tab\\n   */\\n  openNewTab?: boolean;\\n  /**\\n   * Whether to show images for feed card\\n   */\\n  showImages?: boolean;\\n  /**\\n   * The theme for the app\\n   */\\n  theme?: \'indigo-pink\' | \'deeppurple-amber\' | \'pink-bluegrey\' | \'purple-green\';\\n  /**\\n   * Whether to show the offline snackbar\\n   *\\n   * @deprecated Option doesn\'t do anything and has been removed from settings\\n   */\\n  showOfflineSnackBar?: boolean;\\n  /**\\n   * Whether to enable push notifications\\n   *\\n   * @deprecated Option doesn\'t do anything and has been removed from settings\\n   */\\n  pushNotifications?: boolean;\\n  /**\\n   * Whether to enable notifications\\n   *\\n   * @deprecated Option doesn\'t do anything and has been removed from settings\\n   */\\n  notifications?: boolean;\\n  /**\\n   * The maximum number of notifications to show\\n   *\\n   * @deprecated Option doesn\'t do anything and has been removed from settings\\n   */\\n  maxNotifications?: number | any;\\n  /** Whether the user should be notified when a new release of the app is out. */\\n  notifyNewReleases?: boolean;\\n}\\n","properties":[{"name":"maxNotifications","deprecated":true,"deprecationMessage":"Option doesn\'t do anything and has been removed from settings","type":"number | any","optional":true,"description":"<p>The maximum number of notifications to show</p>\\n","line":43,"rawdescription":"\\n\\nThe maximum number of notifications to show\\n\\n","jsdoctags":[{"pos":1019,"end":1096,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":329,"tagName":{"pos":1020,"end":1030,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"deprecated"},"comment":"<p>Option doesn&#39;t do anything and has been removed from settings</p>\\n"}]},{"name":"multipleRss","deprecated":true,"deprecationMessage":"Option doesn\'t do anything and has been removed from settings","type":"boolean","optional":true,"description":"<p>Whether to allow multiple RSS feeds</p>\\n","line":7,"rawdescription":"\\n\\nWhether to allow multiple RSS feeds\\n\\n","jsdoctags":[{"pos":85,"end":162,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":329,"tagName":{"pos":86,"end":96,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"deprecated"},"comment":"<p>Option doesn&#39;t do anything and has been removed from settings</p>\\n"}]},{"name":"notifications","deprecated":true,"deprecationMessage":"Option doesn\'t do anything and has been removed from settings","type":"boolean","optional":true,"description":"<p>Whether to enable notifications</p>\\n","line":37,"rawdescription":"\\n\\nWhether to enable notifications\\n\\n","jsdoctags":[{"pos":847,"end":924,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":329,"tagName":{"pos":848,"end":858,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"deprecated"},"comment":"<p>Option doesn&#39;t do anything and has been removed from settings</p>\\n"}]},{"name":"notifyNewReleases","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Whether the user should be notified when a new release of the app is out.</p>\\n","line":45,"rawdescription":"\\nWhether the user should be notified when a new release of the app is out."},{"name":"openNewTab","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Opens posts in a new tab</p>\\n","line":11,"rawdescription":"\\n\\nOpens posts in a new tab\\n"},{"name":"pushNotifications","deprecated":true,"deprecationMessage":"Option doesn\'t do anything and has been removed from settings","type":"boolean","optional":true,"description":"<p>Whether to enable push notifications</p>\\n","line":31,"rawdescription":"\\n\\nWhether to enable push notifications\\n\\n","jsdoctags":[{"pos":683,"end":760,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":329,"tagName":{"pos":684,"end":694,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"deprecated"},"comment":"<p>Option doesn&#39;t do anything and has been removed from settings</p>\\n"}]},{"name":"showImages","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Whether to show images for feed card</p>\\n","line":15,"rawdescription":"\\n\\nWhether to show images for feed card\\n"},{"name":"showOfflineSnackBar","deprecated":true,"deprecationMessage":"Option doesn\'t do anything and has been removed from settings","type":"boolean","optional":true,"description":"<p>Whether to show the offline snackbar</p>\\n","line":25,"rawdescription":"\\n\\nWhether to show the offline snackbar\\n\\n","jsdoctags":[{"pos":512,"end":589,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":329,"tagName":{"pos":513,"end":523,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"deprecated"},"comment":"<p>Option doesn&#39;t do anything and has been removed from settings</p>\\n"}]},{"name":"theme","deprecated":false,"deprecationMessage":"","type":"\\"indigo-pink\\" | \\"deeppurple-amber\\" | \\"pink-bluegrey\\" | \\"purple-green\\"","optional":true,"description":"<p>The theme for the app</p>\\n","line":19,"rawdescription":"\\n\\nThe theme for the app\\n"}],"indexSignatures":[],"kind":165,"methods":[]},{"name":"SettingsStorageConfig","id":"interface-SettingsStorageConfig-1a47c9848ae72dffc6e1e17f93f1dcf7bedf26fc8ca239dd31e2bd3a3c478c524c4caf78231125b2791e83da520a28e4d3cbf45dbd542598c0cdd9472b4915ad","file":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Injectable, Inject, InjectionToken, Optional } from \'@angular/core\';\\nimport { Settings } from \'../../models/settings\';\\n\\n/** Configuration options for {@link SettingsStorageService}. */\\nexport interface SettingsStorageConfig<S = Settings> {\\n  /** Whether to revert to the default settings if no such value exists in storage. */\\n  canRevertDefault?: boolean;\\n  /** Default settings to be used if no such value exists in storage. */\\n  defaultSettings?: S;\\n}\\n\\n/** The settings storage provider to use. (Default: `localStorage`) */\\nexport const SETTINGS_STORAGE_PROVIDER: InjectionToken<Storage> = new InjectionToken(\'Settings storage provider\', {\\n  factory: () => localStorage\\n});\\n\\n/** The settings key to store the settings in. (Default: `settings`) */\\nexport const SETTINGS_STORAGE_KEY: InjectionToken<string> = new InjectionToken(\'Settings storage key\', {\\n  factory: () => \'settings\'\\n});\\n\\nexport const SETTINGS_STORAGE_DEFAULT_CONFIG_FACTORY: () => SettingsStorageConfig\\n  = () => ({\\n    canRevertDefault: true,\\n    defaultSettings: {\\n      openNewTab: true,\\n      showImages: true,\\n      theme: \'indigo-pink\',\\n      notifyNewReleases: true\\n    }\\n  });\\n\\n/** Configuration options to change the behavior of {@link SettingsStorageService}. */\\nexport const SETTINGS_STORAGE_CONFIG: InjectionToken<SettingsStorageConfig> = new InjectionToken(\'Settings storage config\', {\\n  factory: SETTINGS_STORAGE_DEFAULT_CONFIG_FACTORY\\n});\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class SettingsStorageService<S = Settings> {\\n  constructor(\\n    @Inject(SETTINGS_STORAGE_PROVIDER) private storage: Storage,\\n    @Inject(SETTINGS_STORAGE_KEY) private key: string,\\n    @Inject(SETTINGS_STORAGE_CONFIG) @Optional() private config: SettingsStorageConfig<S>\\n  ) { }\\n\\n  /** Retrieves the current settings (as JSON). */\\n  get settings(): S {\\n    return (this.storage.getItem(this.key) && this.config.canRevertDefault) ?\\n      JSON.parse(this.storage.getItem(this.key)) as S : this.config.defaultSettings;\\n  }\\n\\n  /** Overrides the current settings. */\\n  setSettings(settings: S) {\\n    this.storage.setItem(this.key, JSON.stringify(settings));\\n  }\\n\\n  /**\\n   * Clears the current settings.\\n   *\\n   * @param resetToDefault Whether to reset to the default settings\\n   * instead of clearing them. (Default: `true`)\\n   */\\n  clearSettings(resetToDefault: boolean = true) {\\n    if (resetToDefault) {\\n      this.setSettings(this.config.defaultSettings);\\n    } else {\\n      this.storage.removeItem(this.key);\\n    }\\n  }\\n}\\n","properties":[{"name":"canRevertDefault","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Whether to revert to the default settings if no such value exists in storage.</p>\\n","line":7,"rawdescription":"\\nWhether to revert to the default settings if no such value exists in storage."},{"name":"defaultSettings","deprecated":false,"deprecationMessage":"","type":"S","optional":true,"description":"<p>Default settings to be used if no such value exists in storage.</p>\\n","line":9,"rawdescription":"\\nDefault settings to be used if no such value exists in storage."}],"indexSignatures":[],"kind":165,"description":"<p>Configuration options for {@link SettingsStorageService}.</p>\\n","rawdescription":"\\nConfiguration options for {@link SettingsStorageService}.","methods":[]},{"name":"SnackBarOpts","id":"interface-SnackBarOpts-9334dad92eeeb5d0cefa25dd4265b4f23c348f928d6c9f823864de0c2f0f1bed31825f7c3d03e52e053dfbb913bf9b977b3511c8fe9ea128e31590a6006bb0af","file":"projects/rss-reader/src/app/shared.service.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { BreakpointObserver, Breakpoints } from \'@angular/cdk/layout\';\\nimport { ComponentType } from \'@angular/cdk/portal\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { Injectable, NgModule } from \'@angular/core\';\\nimport { FormsModule } from \'@angular/forms\';\\nimport { MatSnackBar, MatSnackBarConfig, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar } from \'@angular/material/snack-bar\';\\nimport { Title } from \'@angular/platform-browser\';\\n\\nexport interface SnackBarOpts<D = any> {\\n  /** The snackbar\'s message. */\\n  msg: string;\\n  /** The snackbar\'s action. */\\n  action?: string;\\n  /** A component to open the snackbar with. */\\n  component?: ComponentType<any>;\\n  /** Configuration for the snackbar. */\\n  config?: MatSnackBarConfig<D>;\\n  /**\\n   * Additional options for the snackbar.\\n   *\\n   * @deprecated Use {@link SnackBarOpts#config} instead\\n   */\\n  additionalOpts?: MatSnackBarConfig<D>;\\n}\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class SharedService {\\n  private internalTitle = \'\';\\n  constructor(\\n    private snackBar: MatSnackBar,\\n    private documentTitle: Title,\\n    private breakpointObserver: BreakpointObserver\\n  ) { }\\n\\n  /** Detects if the user is using a mobile device based on CSS media queries. */\\n  get isMobile(): boolean {\\n    return this.breakpointObserver.isMatched(Breakpoints.Handset);\\n  }\\n\\n  /** Detects if the user is using a handset in portrait mode based on CSS media queries. */\\n  get isPortraitHandset(): boolean {\\n    return this.breakpointObserver.isMatched(Breakpoints.HandsetPortrait);\\n  }\\n\\n  /**\\n   * Returns the document\'s title\\n   */\\n  get title(): string {\\n    return this.internalTitle;\\n  }\\n\\n  /**\\n   * Sets the document\'s title\\n   *\\n   * @param title The title of the document to set\\n   */\\n  set title(title: string) {\\n    this.internalTitle = title;\\n    if (title !== \'\') {\\n      title = `${title} | `;\\n    }\\n    this.documentTitle.setTitle(`${title}Angular RSS Reader`);\\n  }\\n\\n  /**\\n   * Opens a snackBar with the specified params and no return\\n   *\\n   * @param opts The options of the snackBar\\n   */\\n  openSnackBar(opts: SnackBarOpts): MatSnackBarRef<SimpleSnackBar> {\\n    return this.handleSnackBar(opts);\\n  }\\n  /**\\n   * Opens a snackBar with the specified params and a return of the snackBar\'s ref (for component)\\n   *\\n   * @param opts The options of the snackBar\\n   * @returns The snackbar reference\\n   */\\n  openSnackBarComponent(opts: SnackBarOpts): MatSnackBarRef<any> {\\n    return this.handleSnackBarWithComponent(opts);\\n  }\\n\\n  /** Closes the current snackbar. */\\n  closeSnackBar() {\\n    this.snackBar.dismiss();\\n  }\\n\\n  private handleSnackBar(opts: SnackBarOpts): MatSnackBarRef<SimpleSnackBar> {\\n    // eslint-disable-next-line import/no-deprecated\\n    const config = opts.config ? opts.config : opts.additionalOpts;\\n    return this.snackBar.open(opts.msg, opts.action ? opts.action : undefined, config);\\n  }\\n\\n  private handleSnackBarWithComponent(opts: SnackBarOpts): MatSnackBarRef<any> {\\n    // eslint-disable-next-line import/no-deprecated\\n    const config = opts.config ? opts.config : opts.additionalOpts;\\n    return this.snackBar.openFromComponent(opts.component, config);\\n  }\\n}\\n\\n@NgModule({\\n  providers: [\\n    SharedService\\n  ],\\n  imports: [\\n    CommonModule,\\n    FormsModule,\\n    MatSnackBarModule\\n  ]\\n})\\nexport class SharedModule { }\\n","properties":[{"name":"action","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>The snackbar&#39;s action.</p>\\n","line":13,"rawdescription":"\\nThe snackbar\'s action."},{"name":"additionalOpts","deprecated":true,"deprecationMessage":[{"pos":819,"end":823,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":319,"text":"Use "},{"pos":823,"end":850,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":322,"name":{"pos":830,"end":849,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":309,"left":{"pos":830,"end":842,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"SnackBarOpts"},"right":{"pos":843,"end":849,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"config"}},"text":""},{"pos":850,"end":862,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":319,"text":" instead"}],"type":"MatSnackBarConfig<D>","optional":true,"description":"<p>Additional options for the snackbar.</p>\\n","line":23,"rawdescription":"\\n\\nAdditional options for the snackbar.\\n\\n","jsdoctags":[{"pos":807,"end":862,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":329,"tagName":{"pos":808,"end":818,"flags":4194304,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"deprecated"},"comment":"<p>Use {@link SnackBarOpts.config} instead</p>\\n"}]},{"name":"component","deprecated":false,"deprecationMessage":"","type":"ComponentType<any>","optional":true,"description":"<p>A component to open the snackbar with.</p>\\n","line":15,"rawdescription":"\\nA component to open the snackbar with."},{"name":"config","deprecated":false,"deprecationMessage":"","type":"MatSnackBarConfig<D>","optional":true,"description":"<p>Configuration for the snackbar.</p>\\n","line":17,"rawdescription":"\\nConfiguration for the snackbar."},{"name":"msg","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The snackbar&#39;s message.</p>\\n","line":11,"rawdescription":"\\nThe snackbar\'s message."}],"indexSignatures":[],"kind":165,"methods":[]}],"injectables":[{"name":"ActionItemService","id":"injectable-ActionItemService-0372ab80f41c4d2eff5642f79eb76bb30d46fa01363088655325a9eae143ad6257352746c9f8bba335ec7cad5c10f2716028092c17c408842b513f293007ae46","file":"projects/rss-reader/src/app/actionitem.service.ts","properties":[{"name":"actionItems","defaultValue":"new Map<string, ActionItem>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19,"modifierKind":[144]}],"methods":[{"name":"addActionItem","args":[{"name":"actionItem","type":"ActionItem","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdds an action item\\n\\n","description":"<p>Adds an action item</p>\\n","jsdoctags":[{"name":{"pos":773,"end":783,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"actionItem"},"type":"ActionItem","deprecated":false,"deprecationMessage":"","tagName":{"pos":767,"end":772,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The action item</p>\\n"}]},{"name":"addActionItemOnClickListener","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""},{"name":"callback","type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"ev","type":"Event","deprecated":false,"deprecationMessage":"","optional":true}]}],"optional":false,"returnType":"void","typeParameters":[],"line":99,"deprecated":true,"deprecationMessage":[{"pos":2606,"end":2645,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":319,"text":"Please set the onclick listener in the "},{"pos":2645,"end":2663,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":322,"name":{"pos":2652,"end":2662,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"ActionItem"},"text":""},{"pos":2663,"end":2684,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":319,"text":" object itself."}],"rawdescription":"\\n\\nAdds a action item on click listener to the specified action item\\nNote: This can also be declared manually\\n\\n","description":"<p>Adds a action item on click listener to the specified action item\\nNote: This can also be declared manually</p>\\n","jsdoctags":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":{"pos":2732,"end":2740,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"callback"},"type":"function","deprecated":false,"deprecationMessage":"","function":[{"name":"ev","type":"Event","deprecated":false,"deprecationMessage":"","optional":true}],"tagName":{"pos":2726,"end":2731,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The callback when the action item is clicked (has to be arrow function)</p>\\n"}]},{"name":"addActionItemToggle","args":[{"name":"actionItem","type":"ActionItemToggle","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":true,"deprecationMessage":"","rawdescription":"\\n\\nAdds an action item toggle\\n\\n","description":"<p>Adds an action item toggle</p>\\n","jsdoctags":[{"name":{"pos":974,"end":984,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"actionItem"},"type":"ActionItemToggle","deprecated":false,"deprecationMessage":"","tagName":{"pos":968,"end":973,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The action item</p>\\n"}]},{"name":"getActionItemByKey","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ActionItem","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGets a action item by its key\\n\\n","description":"<p>Gets a action item by its key</p>\\n","jsdoctags":[{"name":{"pos":2251,"end":2254,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"key"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":2245,"end":2250,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The key of the action item to retrieve</p>\\n"}]},{"name":"getActionItems","args":[],"optional":false,"returnType":"ActionItem[]","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGets all action items\\n","description":"<p>Gets all action items</p>\\n"},{"name":"removeActionItemByKey","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRemoves an action item\\n\\n","description":"<p>Removes an action item</p>\\n","jsdoctags":[{"name":{"pos":1894,"end":1897,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"key"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1888,"end":1893,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The key of the action item to remove</p>\\n"}]},{"name":"removeActionItems","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRemoves all action items\\n","description":"<p>Removes all action items</p>\\n"},{"name":"throwKeyNotFoundError","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":109,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThrows an error where the id couldn\'t be found\\n","description":"<p>Throws an error where the id couldn&#39;t be found</p>\\n","modifierKind":[121],"jsdoctags":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"throwTitleNotFoundError","args":[{"name":"title","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":115,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThrows an error where the title couldn\'t be found\\n","description":"<p>Throws an error where the title couldn&#39;t be found</p>\\n","modifierKind":[121],"jsdoctags":[{"name":"title","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updateActionItemByKey","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""},{"name":"actionItem","type":"ActionItem","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates an action item by its key\\n\\n","description":"<p>Updates an action item by its key</p>\\n","jsdoctags":[{"name":{"pos":1457,"end":1460,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"key"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1451,"end":1456,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The key of the action item</p>\\n"},{"name":{"pos":1500,"end":1510,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"actionItem"},"type":"ActionItem","deprecated":false,"deprecationMessage":"","tagName":{"pos":1494,"end":1499,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The action item</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { Component, Injectable, NgModule } from \'@angular/core\';\\nimport { MatButtonModule } from \'@angular/material/button\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport { MatMenuModule } from \'@angular/material/menu\';\\nimport { MatTooltipModule } from \'@angular/material/tooltip\';\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\nimport { RouterModule } from \'@angular/router\';\\n\\n/** ID used to generate new action items with no explicitly-defined ID. */\\nlet nextKeyId = 0;\\n\\n@Injectable()\\n/**\\n * A action icon service for the toolbar.\\n */\\nexport class ActionItemService {\\n\\n  readonly actionItems = new Map<string, ActionItem>();\\n  /**\\n   * Adds an action item\\n   *\\n   * @param actionItem The action item\\n   */\\n  addActionItem(actionItem: ActionItem) {\\n    this.actionItems.set(`actionItem-${nextKeyId++}`, actionItem);\\n  }\\n  /**\\n   * Adds an action item toggle\\n   *\\n   * @param actionItem The action item\\n   * @deprecated\\n   * @experimental Do not use!\\n   */\\n  addActionItemToggle(actionItem: ActionItemToggle) {\\n    console.warn(\'%cThis method is experimental and may break. Continue at your own risk.\', \'font-weight: 600\');\\n    actionItem.onClickListener = () => {\\n      actionItem.toggleBind = !actionItem.toggleBind;\\n    };\\n    this.actionItems.set(`actionItem-${nextKeyId++}`, actionItem);\\n  }\\n  /**\\n   * Updates an action item by its key\\n   *\\n   * @param key The key of the action item\\n   * @param actionItem The action item\\n   */\\n  updateActionItemByKey(key: string, actionItem: ActionItem) {\\n    try {\\n      this.actionItems[key] = actionItem;\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Gets all action items\\n   */\\n  getActionItems(): ActionItem[] {\\n    return Array.from(this.actionItems.values());\\n  }\\n  /**\\n   * Removes an action item\\n   *\\n   * @param key The key of the action item to remove\\n   */\\n  removeActionItemByKey(key: string) {\\n    try {\\n      this.actionItems.delete(key);\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Removes all action items\\n   */\\n  removeActionItems() {\\n    this.actionItems.clear();\\n  }\\n  /**\\n   * Gets a action item by its key\\n   *\\n   * @param key The key of the action item to retrieve\\n   */\\n  getActionItemByKey(key: string): ActionItem {\\n    try {\\n      return this.actionItems[key];\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Adds a action item on click listener to the specified action item\\n   * Note: This can also be declared manually\\n   *\\n   * @deprecated Please set the onclick listener in the {@link ActionItem} object itself.\\n   * @param id The id of the action item\\n   * @param callback The callback when the action item is clicked (has to be arrow function)\\n   */\\n  addActionItemOnClickListener(key: string, callback: (ev?: Event) => void) {\\n    try {\\n      this.actionItems[key].onClickListener = callback;\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Throws an error where the id couldn\'t be found\\n   */\\n  private throwKeyNotFoundError(id: string) {\\n    throw new Error(`Could not find an action item with key ${id}`);\\n  }\\n  /**\\n   * Throws an error where the title couldn\'t be found\\n   */\\n  private throwTitleNotFoundError(title: string) {\\n    throw new Error(`Could not find an action item with title ${title}`);\\n  }\\n}\\n\\n/**\\n * An action item\\n */\\nexport interface ActionItem {\\n  /**\\n   * The title of the action item\\n   */\\n  title: string;\\n  /** The ID of the action item */\\n  id?: string;\\n  /**\\n   * The icon of the action item\\n   */\\n  icon?: string;\\n  /**\\n   * The href of the action item\\n   * NOTE: If `routerLink` is specified, don\'t use `href`.\\n   */\\n  href?: string;\\n  /**\\n   * Similar to what Android does.\\n   */\\n  showAsAction?: boolean;\\n  /** Whether the action item should be disabled. */\\n  disabled?: boolean;\\n  /**\\n   * The router link of the action item\\n   * NOTE: If `href` is specified, don\'t use `routerLink`.\\n   */\\n  routerLink?: string;\\n  /**\\n   * The on click listener of the action item\\n   * Note: This can also be set by {@link ActionItemService#addActionItemOnClickListener}\\n   */\\n  onClickListener?: (ev?: Event) => void;\\n  /**\\n   * The submenu of the action item\\n   */\\n  subMenu?: ActionItem[];\\n}\\n/**\\n * An action item toggle\\n */\\nexport interface ActionItemToggle extends ActionItem {\\n  /**\\n   * The toggle boolean to bind to\\n   */\\n  toggleBind: boolean;\\n}\\n\\n@Component({\\n  selector: \'app-action-items\',\\n  template: `\\n\\t<ng-container *ngFor=\\"let actionItem of actionItems\\">\\n    <button\\n    mat-icon-button\\n    *ngIf=\\"actionItem.onClickListener\\"\\n    (click)=\\"actionItem.onClickListener($event)\\"\\n    [matTooltip]=\\"actionItem.title\\"\\n    [disabled]=\\"actionItem.disabled\\">\\n      <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n    </button>\\n    <a mat-icon-button *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [matTooltip]=\\"actionItem.title\\" [disabled]=\\"actionItem.disabled\\">\\n    <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n    </a>\\n    <a\\n      mat-icon-button\\n      *ngIf=\\"actionItem.routerLink\\"\\n      [routerLink]=\\"[actionItem.routerLink]\\"\\n      [matTooltip]=\\"actionItem.title\\"\\n      [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t</a>\\n\\t</ng-container>\\n  <button mat-icon-button *ngIf=\\"showMoreMenu\\" [matMenuTriggerFor]=\\"moreMenu\\"\\n    matTooltip=\\"More options\\">\\n\\t\\t<mat-icon>more_vert</mat-icon>\\n\\t</button>\\n\\t<mat-menu #moreMenu=\\"matMenu\\">\\n\\t\\t<ng-container *ngFor=\\"let actionItem of overflowActionItems\\">\\n\\t\\t\\t<button mat-menu-item *ngIf=\\"actionItem.onClickListener\\" (click)=\\"actionItem.onClickListener($event)\\"\\n        [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</button>\\n\\t\\t\\t<a mat-menu-item *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</a>\\n\\t\\t\\t<a mat-menu-item *ngIf=\\"actionItem.routerLink\\" [routerLink]=\\"[actionItem.routerLink]\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</a>\\n\\t\\t</ng-container>\\n\\t</mat-menu>\\n\\t\\t\\t\\t`\\n})\\nexport class ActionItemsComponent {\\n  constructor(private actionItemService: ActionItemService) { }\\n  get actionItems(): ActionItem[] {\\n    return this.actionItemService.getActionItems().filter(item => item.showAsAction);\\n  }\\n  get overflowActionItems(): ActionItem[] {\\n    return this.actionItemService.getActionItems().filter(item => !item.showAsAction);\\n  }\\n  get showMoreMenu() {\\n    return this.actionItemService.getActionItems().find((actionItem: ActionItem): boolean => actionItem.showAsAction !== true);\\n  }\\n}\\n\\n@NgModule({\\n  declarations: [\\n    ActionItemsComponent\\n  ],\\n  exports: [\\n    ActionItemsComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    BrowserAnimationsModule,\\n    MatButtonModule,\\n    MatIconModule,\\n    MatMenuModule,\\n    MatTooltipModule,\\n    RouterModule\\n  ],\\n  providers: [\\n    ActionItemService\\n  ]\\n})\\nexport class ActionItemsModule { }\\n","type":"injectable"},{"name":"DialogBuilderService","id":"injectable-DialogBuilderService-27b67c9c5eb72133f107a06f5616d3f32f08e7df0ef33faa395f5e63a4cc5fe949add40789f98484e8b33fb6e5fb3224c0fd4c8c7bc4628ad47b7a03629622c0","file":"projects/rss-reader/src/app/core/dialogs/dialog-builder/dialog-builder.service.ts","properties":[{"name":"message","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The message of the dialog.</p>\\n","line":16,"rawdescription":"\\nThe message of the dialog."},{"name":"negativeBtnColor","deprecated":false,"deprecationMessage":"","type":"ThemePalette","optional":false,"description":"<p>The negative button&#39;s colour.</p>\\n","line":26,"rawdescription":"\\nThe negative button\'s colour."},{"name":"negativeBtnText","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The negative button&#39;s text.</p>\\n","line":24,"rawdescription":"\\nThe negative button\'s text."},{"name":"neutralBtnColor","deprecated":false,"deprecationMessage":"","type":"ThemePalette","optional":false,"description":"<p>The neutral button&#39;s colour.</p>\\n","line":30,"rawdescription":"\\nThe neutral button\'s colour."},{"name":"neutralBtnText","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The neutral button&#39;s text.</p>\\n","line":28,"rawdescription":"\\nThe neutral button\'s text."},{"name":"portal","deprecated":false,"deprecationMessage":"","type":"Portal<any>","optional":false,"description":"<p>The portal to render in the dialog.</p>\\n","line":21,"rawdescription":"\\nThe portal to render in the dialog."},{"name":"positiveBtnColor","deprecated":false,"deprecationMessage":"","type":"ThemePalette","optional":false,"description":"<p>The positive button&#39;s colour.</p>\\n","line":34,"rawdescription":"\\nThe positive button\'s colour."},{"name":"positiveBtnText","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The positive button&#39;s text.</p>\\n","line":32,"rawdescription":"\\nThe positive button\'s text."},{"name":"title","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The title of the dialog.</p>\\n","line":18,"rawdescription":"\\nThe title of the dialog."}],"methods":[{"name":"setMessage","args":[{"name":"message","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"DialogBuilderService","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSets the dialog\'s message.\\n\\n","description":"<p>Sets the dialog&#39;s message.</p>\\n","jsdoctags":[{"name":{"pos":1090,"end":1097,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"message"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1084,"end":1089,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The message to set.</p>\\n"},{"tagName":{"pos":1124,"end":1131,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The current instance of the builder.</p>\\n"}]},{"name":"setNegativeButton","args":[{"name":"text","type":"string","deprecated":false,"deprecationMessage":""},{"name":"color","type":"ThemePalette","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"DialogBuilderService","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSets the dialog negative button\'s properties.\\n\\n","description":"<p>Sets the dialog negative button&#39;s properties.</p>\\n","jsdoctags":[{"name":{"pos":1583,"end":1587,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"text"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1577,"end":1582,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The text to set.</p>\\n"},{"name":{"pos":1617,"end":1622,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"color"},"type":"ThemePalette","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1611,"end":1616,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The colour to set.</p>\\n"},{"tagName":{"pos":1648,"end":1655,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The current instance of the builder.</p>\\n"}]},{"name":"setNeutralButton","args":[{"name":"text","type":"string","deprecated":false,"deprecationMessage":""},{"name":"color","type":"ThemePalette","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"DialogBuilderService","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSets the dialog neutral button\'s properties.\\n\\n","description":"<p>Sets the dialog neutral button&#39;s properties.</p>\\n","jsdoctags":[{"name":{"pos":1942,"end":1946,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"text"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1936,"end":1941,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The text to set.</p>\\n"},{"name":{"pos":1976,"end":1981,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"color"},"type":"ThemePalette","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1970,"end":1975,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The colour to set.</p>\\n"},{"tagName":{"pos":2007,"end":2014,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The current instance of the builder.</p>\\n"}]},{"name":"setPositiveButton","args":[{"name":"text","type":"string","deprecated":false,"deprecationMessage":""},{"name":"color","type":"ThemePalette","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"DialogBuilderService","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSets the dialog positive button\'s properties.\\n\\n","description":"<p>Sets the dialog positive button&#39;s properties.</p>\\n","jsdoctags":[{"name":{"pos":2299,"end":2303,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"text"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":2293,"end":2298,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The text to set.</p>\\n"},{"name":{"pos":2333,"end":2338,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"color"},"type":"ThemePalette","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2327,"end":2332,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The colour to set.</p>\\n"},{"tagName":{"pos":2364,"end":2371,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The current instance of the builder.</p>\\n"}]},{"name":"setTitle","args":[{"name":"title","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"DialogBuilderService","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSets the dialog\'s title.\\n\\n","description":"<p>Sets the dialog&#39;s title.</p>\\n","jsdoctags":[{"name":{"pos":1332,"end":1337,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"title"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1326,"end":1331,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The title to set.</p>\\n"},{"tagName":{"pos":1362,"end":1369,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The current instance of the builder.</p>\\n"}]},{"name":"show","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":99,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { MatDialog } from \'@angular/material/dialog\';\\n\\nimport { PortalDialogOpts } from \'../models\';\\nimport { Portal } from \'@angular/cdk/portal\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\n/**\\n * A dialog builder service, akin to Android\'s `AlertDialog.Builder` class.\\n */\\nexport class DialogBuilderService {\\n  /** The message of the dialog. */\\n  message: string;\\n  /** The title of the dialog. */\\n  title: string;\\n\\n  /** The portal to render in the dialog. */\\n  portal: Portal<any>;\\n\\n  /** The negative button\'s text. */\\n  negativeBtnText: string;\\n  /** The negative button\'s colour. */\\n  negativeBtnColor: ThemePalette;\\n  /** The neutral button\'s text. */\\n  neutralBtnText: string;\\n  /** The neutral button\'s colour. */\\n  neutralBtnColor: ThemePalette;\\n  /** The positive button\'s text. */\\n  positiveBtnText: string;\\n  /** The positive button\'s colour. */\\n  positiveBtnColor: ThemePalette;\\n\\n  constructor(private dialog: MatDialog) { }\\n\\n  /**\\n   * Sets the dialog\'s message.\\n   *\\n   * @param message The message to set.\\n   * @returns The current instance of the builder.\\n   */\\n  setMessage(message: string): DialogBuilderService {\\n    this.message = message;\\n    return this;\\n  }\\n\\n  /**\\n   * Sets the dialog\'s title.\\n   *\\n   * @param title The title to set.\\n   * @returns The current instance of the builder.\\n   */\\n  setTitle(title: string): DialogBuilderService {\\n    this.title = title;\\n    return this;\\n  }\\n\\n  /**\\n   * Sets the dialog negative button\'s properties.\\n   *\\n   * @param text The text to set.\\n   * @param color The colour to set.\\n   * @returns The current instance of the builder.\\n   */\\n  setNegativeButton(text: string, color?: ThemePalette): DialogBuilderService {\\n    this.negativeBtnText = text;\\n    this.negativeBtnColor = color;\\n    return this;\\n  }\\n\\n  /**\\n   * Sets the dialog neutral button\'s properties.\\n   *\\n   * @param text The text to set.\\n   * @param color The colour to set.\\n   * @returns The current instance of the builder.\\n   */\\n  setNeutralButton(text: string, color?: ThemePalette): DialogBuilderService {\\n    this.neutralBtnText = text;\\n    this.neutralBtnColor = color;\\n    return this;\\n  }\\n\\n  /**\\n   * Sets the dialog positive button\'s properties.\\n   *\\n   * @param text The text to set.\\n   * @param color The colour to set.\\n   * @returns The current instance of the builder.\\n   */\\n  setPositiveButton(text: string, color?: ThemePalette): DialogBuilderService {\\n    this.positiveBtnText = text;\\n    this.positiveBtnColor = color;\\n    return this;\\n  }\\n\\n  show() {\\n\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"dialog","type":"MatDialog","deprecated":false,"deprecationMessage":""}],"line":34,"jsdoctags":[{"name":"dialog","type":"MatDialog","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"DialogsService","id":"injectable-DialogsService-7d930dbfd8db352bf470cde38c59aa1ec0cb3bdf165aaf067cfda4bd9d597ff7119d1c40344329662f7f48823edb1368bdf7a52aeff211ca34fd9eb9a79e4ebf","file":"projects/rss-reader/src/app/core/dialogs/dialogs.service.ts","properties":[],"methods":[{"name":"createOrGetDialogConfig","args":[{"name":"config","type":"MatDialogConfig<D>","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"MatDialogConfig<D>","typeParameters":["D"],"line":112,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"config","type":"MatDialogConfig<D>","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"openAlertDialog","args":[{"name":"opts","type":"DialogOpts","deprecated":false,"deprecationMessage":""},{"name":"config","type":"MatDialogConfig<DialogOpts>","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"MatDialogRef<MessageDialogComponent, DialogResult>","typeParameters":[],"line":34,"deprecated":true,"deprecationMessage":"Use `DialogsService#openMessageDialog` instead","rawdescription":"\\n\\nOpens an alert dialog with the specified parameters\\n\\n","description":"<p>Opens an alert dialog with the specified parameters</p>\\n","jsdoctags":[{"name":{"pos":957,"end":961,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"opts"},"type":"DialogOpts","deprecated":false,"deprecationMessage":"","tagName":{"pos":951,"end":956,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The options for the dialog.</p>\\n"},{"name":{"pos":1002,"end":1008,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"config"},"type":"MatDialogConfig<DialogOpts>","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":996,"end":1001,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Additional configurations for the dialog.</p>\\n"},{"tagName":{"pos":1057,"end":1064,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The dialog reference</p>\\n"}]},{"name":"openConfirmDialog","args":[{"name":"opts","type":"DialogOpts","deprecated":false,"deprecationMessage":""},{"name":"config","type":"MatDialogConfig<DialogOpts>","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"MatDialogRef<MessageDialogComponent, DialogResult>","typeParameters":[],"line":49,"deprecated":true,"deprecationMessage":"Use `DialogsService#openMessageDialog` instead","rawdescription":"\\n\\nOpens a confirm dialog with the specified parameters\\n\\n","description":"<p>Opens a confirm dialog with the specified parameters</p>\\n","jsdoctags":[{"name":{"pos":1469,"end":1473,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"opts"},"type":"DialogOpts","deprecated":false,"deprecationMessage":"","tagName":{"pos":1463,"end":1468,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The options for the dialog</p>\\n"},{"name":{"pos":1513,"end":1519,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"config"},"type":"MatDialogConfig<DialogOpts>","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1507,"end":1512,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Additional configurations for the dialog.</p>\\n"},{"tagName":{"pos":1568,"end":1575,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The dialog reference</p>\\n"}]},{"name":"openDialog","args":[{"name":"dialogType","type":"DialogType","deprecated":false,"deprecationMessage":""},{"name":"opts","type":"Opts","deprecated":false,"deprecationMessage":""},{"name":"config","type":"MatDialogConfig<Opts>","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"MatDialogRef<T, DialogResult>","typeParameters":["Opts","T"],"line":140,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"dialogType","type":"DialogType","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"opts","type":"Opts","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"config","type":"MatDialogConfig<Opts>","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"openMessageDialog","args":[{"name":"opts","type":"DialogOpts","deprecated":false,"deprecationMessage":""},{"name":"config","type":"MatDialogConfig<DialogOpts>","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"MatDialogRef<MessageDialogComponent, DialogResult>","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOpens a message dialog with the specified parameters\\n\\n","description":"<p>Opens a message dialog with the specified parameters</p>\\n","jsdoctags":[{"name":{"pos":1984,"end":1988,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"opts"},"type":"DialogOpts","deprecated":false,"deprecationMessage":"","tagName":{"pos":1978,"end":1983,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Options for the dialog</p>\\n"},{"name":{"pos":2024,"end":2030,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"config"},"type":"MatDialogConfig<DialogOpts>","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2018,"end":2023,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Additional configuration for the dialog</p>\\n"},{"tagName":{"pos":2077,"end":2084,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The dialog reference</p>\\n"}]},{"name":"openPortalDialog","args":[{"name":"opts","type":"PortalDialogOpts<T>","deprecated":false,"deprecationMessage":""},{"name":"config","type":"MatDialogConfig<PortalDialogOpts<T>>","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"MatDialogRef<PortalDialogComponent, DialogResult>","typeParameters":["T"],"line":105,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOpens a portal dialog with the specified parameters\\n\\n","description":"<p>Opens a portal dialog with the specified parameters</p>\\n","jsdoctags":[{"name":{"pos":3377,"end":3381,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"opts"},"type":"PortalDialogOpts<T>","deprecated":false,"deprecationMessage":"","tagName":{"pos":3371,"end":3376,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The options for the dialog</p>\\n"},{"name":{"pos":3421,"end":3427,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"config"},"type":"MatDialogConfig<PortalDialogOpts<T>>","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":3415,"end":3420,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Additional configurations for the dialog</p>\\n"},{"tagName":{"pos":3510,"end":3517,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The dialog reference</p>\\n"}]},{"name":"openPromptDialog","args":[{"name":"opts","type":"PromptDialogOpts","deprecated":false,"deprecationMessage":""},{"name":"config","type":"MatDialogConfig<PromptDialogOpts>","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"MatDialogRef<PromptDialogComponent, DialogResult>","typeParameters":[],"line":77,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOpens a prompt dialog with the specified parameters\\n\\n","description":"<p>Opens a prompt dialog with the specified parameters</p>\\n","jsdoctags":[{"name":{"pos":2428,"end":2432,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"opts"},"type":"PromptDialogOpts","deprecated":false,"deprecationMessage":"","tagName":{"pos":2422,"end":2427,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The options for the dialog</p>\\n"},{"name":{"pos":2472,"end":2478,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"config"},"type":"MatDialogConfig<PromptDialogOpts>","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2466,"end":2471,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Additional configurations for the dialog.</p>\\n"},{"tagName":{"pos":2527,"end":2534,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The dialog reference</p>\\n"}]},{"name":"openSelectionDialog","args":[{"name":"opts","type":"SelectionDialogOpts","deprecated":false,"deprecationMessage":""},{"name":"config","type":"MatDialogConfig<SelectionDialogOpts>","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"MatDialogRef<SelectionDialogComponent, DialogResult>","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOpens a selection dialog with the configured options\\n\\n","description":"<p>Opens a selection dialog with the configured options</p>\\n","jsdoctags":[{"name":{"pos":2892,"end":2896,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"opts"},"type":"SelectionDialogOpts","deprecated":false,"deprecationMessage":"","tagName":{"pos":2886,"end":2891,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The options for the dialog</p>\\n"},{"name":{"pos":2936,"end":2942,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"config"},"type":"MatDialogConfig<SelectionDialogOpts>","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2930,"end":2935,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Additional configurations for the dialog.</p>\\n"},{"tagName":{"pos":2991,"end":2998,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The dialog reference</p>\\n"}]},{"name":"setDefaultOpts","args":[{"name":"opts","type":"Opts","deprecated":false,"deprecationMessage":""},{"name":"dialogType","type":"DialogType","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Opts","typeParameters":["Opts"],"line":116,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"opts","type":"Opts","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dialogType","type":"DialogType","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { MatDialog, MatDialogConfig, MatDialogRef } from \'@angular/material/dialog\';\\n\\nimport { MessageDialogComponent } from \'./message-dialog/message-dialog.component\';\\nimport { PortalDialogComponent } from \'./portal-dialog/portal-dialog.component\';\\nimport { PromptDialogComponent } from \'./prompt-dialog/prompt-dialog.component\';\\nimport { SelectionDialogComponent } from \'./selection-dialog/selection-dialog.component\';\\n\\nimport { Dialog } from \'./dialog\';\\nimport { DialogsModule } from \'./dialogs.module\';\\nimport {\\n  DialogOpts,\\n  DialogResult,\\n  DialogType,\\n  PortalDialogOpts,\\n  PromptDialogOpts,\\n  SelectionDialogOpts\\n} from \'./models\';\\n\\n@Injectable({\\n  // Note: Angular auto-adds the service to the module as a provider.\\n  providedIn: DialogsModule\\n})\\nexport class DialogsService {\\n  constructor(private dialog: MatDialog) { }\\n  /**\\n   * Opens an alert dialog with the specified parameters\\n   *\\n   * @param opts The options for the dialog.\\n   * @param config Additional configurations for the dialog.\\n   * @returns The dialog reference\\n   * @deprecated Use `DialogsService#openMessageDialog` instead\\n   */\\n  openAlertDialog(\\n    opts: DialogOpts,\\n    config?: MatDialogConfig<DialogOpts>\\n  ): MatDialogRef<MessageDialogComponent, DialogResult> {\\n    return this.openDialog<DialogOpts, MessageDialogComponent>(\'alert\', opts, config);\\n  }\\n\\n  /**\\n   * Opens a confirm dialog with the specified parameters\\n   *\\n   * @param opts The options for the dialog\\n   * @param config Additional configurations for the dialog.\\n   * @returns The dialog reference\\n   * @deprecated Use `DialogsService#openMessageDialog` instead\\n   */\\n  openConfirmDialog(\\n    opts: DialogOpts,\\n    config?: MatDialogConfig<DialogOpts>\\n  ): MatDialogRef<MessageDialogComponent, DialogResult> {\\n    return this.openDialog<DialogOpts, MessageDialogComponent>(\'confirm\', opts, config);\\n  }\\n\\n  /**\\n   * Opens a message dialog with the specified parameters\\n   *\\n   * @param opts Options for the dialog\\n   * @param config Additional configuration for the dialog\\n   * @returns The dialog reference\\n   */\\n  openMessageDialog(\\n    opts: DialogOpts,\\n    config?: MatDialogConfig<DialogOpts>\\n  ): MatDialogRef<MessageDialogComponent, DialogResult> {\\n    return this.openDialog<DialogOpts, MessageDialogComponent>(\'message\', opts, config);\\n  }\\n\\n  /**\\n   * Opens a prompt dialog with the specified parameters\\n   *\\n   * @param opts The options for the dialog\\n   * @param config Additional configurations for the dialog.\\n   * @returns The dialog reference\\n   */\\n  openPromptDialog(\\n    opts: PromptDialogOpts,\\n    config?: MatDialogConfig<PromptDialogOpts>\\n  ): MatDialogRef<PromptDialogComponent, DialogResult> {\\n    return this.openDialog<PromptDialogOpts, PromptDialogComponent>(\'prompt\', opts, config);\\n  }\\n  /**\\n   * Opens a selection dialog with the configured options\\n   *\\n   * @param opts The options for the dialog\\n   * @param config Additional configurations for the dialog.\\n   * @returns The dialog reference\\n   */\\n  openSelectionDialog(\\n    opts: SelectionDialogOpts,\\n    config?: MatDialogConfig<SelectionDialogOpts>\\n  ): MatDialogRef<SelectionDialogComponent, DialogResult> {\\n    return this.openDialog<SelectionDialogOpts, SelectionDialogComponent>(\'selection\', opts, config);\\n  }\\n\\n  /**\\n   * Opens a portal dialog with the specified parameters\\n   *\\n   * @param opts The options for the dialog\\n   * @param config Additional configurations for the dialog\\n   * @template T The portal\'s type\\n   * @returns The dialog reference\\n   */\\n  openPortalDialog<T>(\\n    opts: PortalDialogOpts<T>,\\n    config?: MatDialogConfig<PortalDialogOpts<T>>\\n  ): MatDialogRef<PortalDialogComponent, DialogResult> {\\n    return this.openDialog<PortalDialogOpts<T>, PortalDialogComponent>(\'portal\', opts, config);\\n  }\\n\\n  private createOrGetDialogConfig<D = any>(config?: MatDialogConfig<D>): MatDialogConfig<D> {\\n    return config ? config : new MatDialogConfig<D>();\\n  }\\n\\n  private setDefaultOpts<Opts extends DialogOpts>(opts: Opts, dialogType: DialogType): Opts {\\n    switch (dialogType) {\\n      case \'alert\':\\n      case \'portal\':\\n        if (!(\'positiveBtnText\' in opts)) {\\n          opts.positiveBtnText = \'Dismiss\';\\n        }\\n        break;\\n      case \'confirm\':\\n      case \'prompt\':\\n        if (!(\'negativeBtnText\' in opts)) {\\n          opts.negativeBtnText = \'Cancel\';\\n        }\\n        if (!(\'positiveBtnText\' in opts)) {\\n          opts.positiveBtnText = \'Confirm\';\\n        }\\n        break;\\n      default:\\n        // No-op\\n        break;\\n    }\\n    return opts;\\n  }\\n\\n  private openDialog<Opts extends DialogOpts, T extends Dialog>(\\n    dialogType: DialogType,\\n    opts: Opts,\\n    config?: MatDialogConfig<Opts>\\n  ): MatDialogRef<T, DialogResult> {\\n    const tempConfig = this.createOrGetDialogConfig<Opts>(config);\\n    const tempOpts = this.setDefaultOpts(opts, dialogType);\\n    tempConfig.data = tempOpts;\\n    let dialogRef: MatDialogRef<any, DialogResult> = null;\\n    switch (dialogType) {\\n      case \'alert\':\\n      case \'confirm\':\\n      case \'message\':\\n        dialogRef = this.dialog.open(MessageDialogComponent, tempConfig);\\n        break;\\n      case \'prompt\':\\n        dialogRef = this.dialog.open(PromptDialogComponent, tempConfig);\\n        break;\\n      case \'portal\':\\n        dialogRef = this.dialog.open(PortalDialogComponent, tempConfig);\\n        break;\\n      case \'selection\':\\n        tempConfig.panelClass = \'selection-dialog\';\\n        dialogRef = this.dialog.open(PortalDialogComponent, tempConfig);\\n        break;\\n      default:\\n        throw new Error(`Unsupported dialog type ${dialogType} was specified! Skipping...`);\\n    }\\n    return dialogRef;\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"dialog","type":"MatDialog","deprecated":false,"deprecationMessage":""}],"line":24,"jsdoctags":[{"name":"dialog","type":"MatDialog","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"GuideItemsService","id":"injectable-GuideItemsService-7eda09c3cd8d944359482b572503dedc63550f78a283f3fc3f7cd8acb5c970def0a894ffa774004e523118c388ff959df996afb5b678090cf076124b52633ca4","file":"projects/rss-reader/src/app/guide-items.ts","properties":[],"methods":[{"name":"getAllItems","args":[],"optional":false,"returnType":"GuideItem[]","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":""},{"name":"getGuideItemById","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"GuideItem","typeParameters":[],"line":39,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getGuideItems","args":[],"optional":false,"returnType":"GuideItem[]","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n\\nexport interface GuideItem {\\n  id: string;\\n  name: string;\\n  document: string;\\n  url: string;\\n}\\n\\nconst GUIDES: GuideItem[] = [\\n  {\\n    id: \'getting-started\',\\n    document: \'assets/docs/guides/getting-started.html\',\\n    url: \'doc/guides/getting-started\',\\n    name: \'Getting Started\'\\n  },\\n  {\\n    id: \'generate-api-key\',\\n    document: \'assets/docs/guides/generate-api-key.html\',\\n    url: \'doc/guides/generate-api-key\',\\n    name: \'Generating an API Key\'\\n  },\\n  {\\n    id: \'troubleshooting\',\\n    document: \'assets/docs/guides/troubleshooting.html\',\\n    url: \'doc/guides/troubleshooting\',\\n    name: \'Troubleshooting\'\\n  }\\n];\\n\\n@Injectable()\\nexport class GuideItemsService {\\n  getAllItems(): GuideItem[] {\\n    return this.getGuideItems();\\n  }\\n  getGuideItems(): GuideItem[] {\\n    return GUIDES;\\n  }\\n  getGuideItemById(id: string): GuideItem {\\n    return GUIDES.find(i => i.id === id);\\n  }\\n}\\n","type":"injectable"},{"name":"HotkeysService","id":"injectable-HotkeysService-bdb64f5101d42101c7bbc40e8233d8ba5a9381698eccc0d5d877b54aed206956b57fe5fd288aebcecad53f1bcfc37ef07f44141cce17d4ec121c3baa3f47519f","file":"projects/rss-reader/src/app/hotkeys/hotkeys.service.ts","properties":[{"name":"defaults","defaultValue":"{\\n    // Specify a default description for hotkeys with no specified desc\\n    description: \'<No description>\',\\n    element: this.document\\n  }","deprecated":false,"deprecationMessage":"","type":"Partial<HotkeyOptions>","optional":false,"description":"","line":45},{"name":"hotkeyHelpDialogId","defaultValue":"\'hotkey-help-dialog\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":44,"modifierKind":[144]},{"name":"hotkeys","defaultValue":"new Map<string, string>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":43}],"methods":[{"name":"addShortcut","args":[{"name":"options","type":"Partial<HotkeyOptions>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<KeyboardEvent>","typeParameters":[],"line":68,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdds a keyboard shortcut which binds to the specified `element`\\n\\n","description":"<p>Adds a keyboard shortcut which binds to the specified <code>element</code></p>\\n","jsdoctags":[{"name":{"pos":2063,"end":2070,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"options"},"type":"Partial<HotkeyOptions>","deprecated":false,"deprecationMessage":"","tagName":{"pos":2057,"end":2062,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Options for the shortcut</p>\\n"},{"tagName":{"pos":2102,"end":2109,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The observable</p>\\n"}]},{"name":"isPlatform","args":[{"name":"platform","type":"Platform","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWhether the platform matches the specified `platform`.\\n\\n","description":"<p>Whether the platform matches the specified <code>platform</code>.</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":4891,"end":4899,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"platform"},"type":"Platform","deprecated":false,"deprecationMessage":"","tagName":{"pos":4885,"end":4890,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The platform to check.</p>\\n"}]},{"name":"openHotkeyHelpDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":135,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable, Inject } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { EventManager } from \'@angular/platform-browser\';\\nimport { DOCUMENT } from \'@angular/common\';\\nimport { MatDialog } from \'@angular/material/dialog\';\\nimport { HotkeyHelpDialogComponent } from \'./hotkey-help-dialog/hotkey-help-dialog.component\';\\n\\ntype Platform = \'windows\' | \'macos\' | \'linux\' | \'other\';\\n\\ninterface Hotkey {\\n  /** A valid hotkey bind. */\\n  keys: string;\\n  /** The platform where this hotkey will be valid for. */\\n  platform?: Platform;\\n}\\ninterface HotkeyOptions {\\n  /** The element to bind the hotkey to. */\\n  element: any;\\n  /** A valid hotkey bind, or a list of hotkey binds. */\\n  keys: string | Hotkey[];\\n  /** The description of the hotkey, if any. */\\n  description?: string;\\n  /**\\n   * Blacklist for elements that should not have keyboard shortcuts\\n   *\\n   * When specified, it is assumed that all other elements are whitelisted.\\n   */\\n  shortcutBlacklistEls?: string[];\\n  /**\\n   * Whitelist for elements that should have keyboard shortcuts\\n   *\\n   * When specified, it is assumed that all other elements are blacklisted.\\n   */\\n  shortcutWhitelistEls?: string[];\\n}\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class HotkeysService {\\n  hotkeys = new Map<string, string>();\\n  readonly hotkeyHelpDialogId = \'hotkey-help-dialog\';\\n  defaults: Partial<HotkeyOptions> = {\\n    // Specify a default description for hotkeys with no specified desc\\n    description: \'<No description>\',\\n    element: this.document\\n  };\\n\\n  constructor(\\n    private eventManager: EventManager,\\n    private dialog: MatDialog,\\n    @Inject(DOCUMENT) private document: Document\\n  ) {\\n    this.addShortcut({ keys: \'shift.?\', description: \'Show this help dialog\', shortcutBlacklistEls: [\'input\', \'textarea\'] })\\n      .subscribe(() => {\\n        this.openHotkeyHelpDialog();\\n      });\\n  }\\n\\n  /**\\n   * Adds a keyboard shortcut which binds to the specified `element`\\n   *\\n   * @param options Options for the shortcut\\n   * @returns The observable\\n   */\\n  addShortcut(options: Partial<HotkeyOptions>): Observable<KeyboardEvent> {\\n    const merged = { ...this.defaults, ...options };\\n    const event = `keydown.${merged.keys}`;\\n\\n    if (merged.description) {\\n      if (typeof merged.keys === \'string\') {\\n        this.hotkeys.set(merged.keys, merged.description);\\n      } else {\\n        merged.keys.forEach(hotkey => {\\n          if (this.isPlatform(hotkey.platform)) {\\n            this.hotkeys.set(hotkey.keys, merged.description);\\n          }\\n        });\\n      }\\n    }\\n\\n    return new Observable(observer => {\\n      const handler = (e: KeyboardEvent) => {\\n        let skipHotkey = false;\\n        if (merged.shortcutBlacklistEls !== undefined) {\\n          const blacklistEls = merged.shortcutBlacklistEls.map(el => el.toUpperCase());\\n          // We can\'t just assume that the target is always a HTML element\\n          // See https://stackoverflow.com/q/28900077/6782707\\n          if (e.target instanceof Element) {\\n            // Target is a HTML element\\n            if (blacklistEls.includes(e.target.tagName)) {\\n              skipHotkey = true;\\n            }\\n          }\\n        }\\n        if (merged.shortcutWhitelistEls !== undefined) {\\n          const whitelistEls = merged.shortcutWhitelistEls.map(el => el.toUpperCase());\\n          // We can\'t just assume that the target is always a HTML element\\n          // See https://stackoverflow.com/q/28900077/6782707\\n          if (e.target instanceof Element) {\\n            // Target is a HTML element\\n            if (!whitelistEls.includes(e.target.tagName)) {\\n              skipHotkey = true;\\n            }\\n          }\\n        }\\n\\n        if (!skipHotkey) {\\n          e.preventDefault();\\n          observer.next(e);\\n        }\\n      };\\n\\n      const dispose = this.eventManager.addEventListener(\\n        merged.element, event, handler\\n      );\\n\\n      return () => {\\n        dispose();\\n        if (typeof merged.keys === \'string\') {\\n          this.hotkeys.delete(merged.keys);\\n        } else {\\n          merged.keys.forEach(hotkey => {\\n            if (this.isPlatform(hotkey.platform)) {\\n              this.hotkeys.delete(hotkey.keys);\\n            }\\n          });\\n        }\\n      };\\n    });\\n  }\\n\\n  openHotkeyHelpDialog() {\\n    // Interesting tidbit: as it turns out, MatDialog#getDialogById actually\\n    // returns undefined, not null if the dialog doesn\'t exist\\n    if (this.dialog.getDialogById(this.hotkeyHelpDialogId) !== undefined) {\\n      // Close existing dialog\\n      this.dialog.getDialogById(this.hotkeyHelpDialogId).close();\\n    } else {\\n      this.dialog.open(HotkeyHelpDialogComponent, {\\n        data: this.hotkeys,\\n        id: this.hotkeyHelpDialogId\\n      });\\n    }\\n  }\\n\\n  /**\\n   * Whether the platform matches the specified `platform`.\\n   *\\n   * @param platform The platform to check.\\n   */\\n  private isPlatform(platform: Platform): boolean {\\n    // See https://stackoverflow.com/a/19883965/6782707\\n    let result = false;\\n    switch (window.navigator.platform) {\\n      case \'Macintosh\':\\n      case \'MacIntel\':\\n        result = platform === \'macos\';\\n        break;\\n      case \'Windows\':\\n      case \'Win16\':\\n      case \'Win32\':\\n      case \'WinCE\':\\n        result = platform === \'windows\';\\n        break;\\n      default:\\n        if (window.navigator.platform.includes(\'Linux\')) {\\n          result = platform === \'linux\';\\n        } else {\\n          result = platform === \'other\';\\n        }\\n        break;\\n    }\\n    return result;\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"eventManager","type":"EventManager","deprecated":false,"deprecationMessage":""},{"name":"dialog","type":"MatDialog","deprecated":false,"deprecationMessage":""},{"name":"document","type":"Document","deprecated":false,"deprecationMessage":""}],"line":49,"jsdoctags":[{"name":"eventManager","type":"EventManager","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dialog","type":"MatDialog","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"document","type":"Document","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"OverlayService","id":"injectable-OverlayService-a30402be5a3eab7bcf6cd295379b8432a8c7b0ec59537877e293e07d18e4be994f10785035f685ac763b55988d149ee9a8215668aed8b43ad214fa7ad501c839","file":"projects/rss-reader/src/app/overlay.service.ts","properties":[{"name":"componentPortal","deprecated":false,"deprecationMessage":"","type":"ComponentPortal<any>","optional":false,"description":"","line":16,"modifierKind":[121]},{"name":"overlayRef","deprecated":false,"deprecationMessage":"","type":"OverlayRef","optional":false,"description":"","line":15,"modifierKind":[121]}],"methods":[{"name":"attachPortal","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAttaches a portal to the overlay\\n","description":"<p>Attaches a portal to the overlay</p>\\n","modifierKind":[121]},{"name":"close","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCloses the overlay currently opened (alias of {@link OverlayService#destroyOverlay})\\n\\nSee {@link OverlayService#destroyOverlay}\\n","description":"<p>Closes the overlay currently opened (alias of {@link OverlayService#destroyOverlay})</p>\\n<p>See {@link OverlayService#destroyOverlay}</p>\\n","jsdoctags":[]},{"name":"createBelowPosElPositionStrategy","args":[{"name":"elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FlexibleConnectedPositionStrategy","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreates a below the position of an element position strategy\\n\\n","description":"<p>Creates a below the position of an element position strategy</p>\\n","jsdoctags":[{"name":{"pos":1307,"end":1317,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"elementRef"},"type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"pos":1301,"end":1306,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The element ref</p>\\n"},{"tagName":{"pos":1340,"end":1347,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The position strategy</p>\\n"}]},{"name":"createCenterOverlayPositionStrategy","args":[],"optional":false,"returnType":"GlobalPositionStrategy","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreates a center overlay position strategy\\n\\n","description":"<p>Creates a center overlay position strategy</p>\\n","jsdoctags":[{"tagName":{"pos":999,"end":1006,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The position strategy</p>\\n"}]},{"name":"createOverlay","args":[{"name":"portal","type":"ComponentPortal<any>","deprecated":false,"deprecationMessage":""},{"name":"config","type":"OverlayConfig","deprecated":false,"deprecationMessage":"","optional":true},{"name":"backdropClickClosesOverlay","type":"boolean","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"OverlayRef","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreates an overlay with the specified parameters\\n\\n","description":"<p>Creates an overlay with the specified parameters</p>\\n","jsdoctags":[{"name":{"pos":1644,"end":1650,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"portal"},"type":"ComponentPortal<any>","deprecated":false,"deprecationMessage":"","tagName":{"pos":1638,"end":1643,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The portal to attach to the overlay&#39;s ref. For more info, visit {@link Overlay.create}</p>\\n"},{"name":{"pos":1750,"end":1756,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"config"},"type":"OverlayConfig","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1744,"end":1749,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The configuration of the overlay. See {@link OverlayConfig} for more properties.</p>\\n"},{"name":{"pos":1850,"end":1876,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"backdropClickClosesOverlay"},"type":"boolean","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1844,"end":1849,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Whether when the overlay&#39;s backdrop is clicked and it will close the overlay</p>\\n"}]},{"name":"destroyOverlay","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDestroys the currently opened overlay\\n","description":"<p>Destroys the currently opened overlay</p>\\n"},{"name":"getOverlayRef","args":[],"optional":false,"returnType":"OverlayRef | void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import {\\n  FlexibleConnectedPositionStrategy,\\n  GlobalPositionStrategy,\\n  Overlay,\\n  OverlayConfig,\\n  OverlayRef\\n} from \'@angular/cdk/overlay\';\\nimport { ElementRef, Injectable } from \'@angular/core\';\\n\\nimport { ComponentPortal } from \'@angular/cdk/portal\';\\n\\n@Injectable()\\nexport class OverlayService {\\n\\n  private overlayRef: OverlayRef;\\n  private componentPortal: ComponentPortal<any>;\\n  constructor(private overlay: Overlay) { }\\n\\n  /**\\n   * Destroys the currently opened overlay\\n   */\\n  destroyOverlay(): void {\\n    if (this.overlayRef.hasAttached() && this.overlayRef !== null) {\\n      this.overlayRef.dispose();\\n    }\\n  }\\n  /**\\n   * Closes the overlay currently opened (alias of {@link OverlayService#destroyOverlay})\\n   *\\n   * @see {@link OverlayService#destroyOverlay}\\n   */\\n  close(): void {\\n    this.destroyOverlay();\\n  }\\n  getOverlayRef(): OverlayRef | void {\\n    if (this.overlayRef) {\\n      return this.overlayRef;\\n    }\\n  }\\n  /**\\n   * Creates a center overlay position strategy\\n   *\\n   * @returns The position strategy\\n   */\\n  createCenterOverlayPositionStrategy(): GlobalPositionStrategy {\\n    return this.overlay\\n      .position()\\n      .global()\\n      .centerHorizontally()\\n      .centerVertically();\\n  }\\n  /**\\n   * Creates a below the position of an element position strategy\\n   *\\n   * @param elementRef The element ref\\n   * @returns The position strategy\\n   */\\n  createBelowPosElPositionStrategy(\\n    elementRef: ElementRef\\n  ): FlexibleConnectedPositionStrategy {\\n    return this.overlay\\n      .position()\\n      .flexibleConnectedTo(elementRef);\\n  }\\n\\n  /**\\n   * Creates an overlay with the specified parameters\\n   *\\n   * @param portal The portal to attach to the overlay\'s ref. For more info, visit {@link Overlay#create}\\n   * @param config The configuration of the overlay. See {@link OverlayConfig} for more properties.\\n   * @param backdropClickClosesOverlay Whether when the overlay\'s backdrop is clicked and it will close the overlay\\n   */\\n  createOverlay(portal: ComponentPortal<any>, config?: OverlayConfig, backdropClickClosesOverlay?: boolean): OverlayRef {\\n    this.overlayRef = this.overlay.create(config);\\n    this.componentPortal = portal;\\n    this.attachPortal();\\n    if (backdropClickClosesOverlay && config.hasBackdrop) {\\n      this.overlayRef.backdropClick().subscribe(() => {\\n        this.destroyOverlay();\\n      });\\n    }\\n    return this.overlayRef;\\n  }\\n  /**\\n   * Attaches a portal to the overlay\\n   */\\n  private attachPortal(): void {\\n    if (!this.overlayRef.hasAttached() && this.componentPortal) {\\n      this.overlayRef.attach(this.componentPortal);\\n    }\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"overlay","type":"Overlay","deprecated":false,"deprecationMessage":""}],"line":16,"jsdoctags":[{"name":"overlay","type":"Overlay","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"type":"injectable"},{"name":"SettingsStorageService","id":"injectable-SettingsStorageService-1a47c9848ae72dffc6e1e17f93f1dcf7bedf26fc8ca239dd31e2bd3a3c478c524c4caf78231125b2791e83da520a28e4d3cbf45dbd542598c0cdd9472b4915ad","file":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","properties":[],"methods":[{"name":"clearSettings","args":[{"name":"resetToDefault","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nClears the current settings.\\n\\ninstead of clearing them. (Default: `true`)\\n","description":"<p>Clears the current settings.</p>\\n<p>instead of clearing them. (Default: <code>true</code>)</p>\\n","jsdoctags":[{"name":{"pos":2190,"end":2204,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"resetToDefault"},"type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"true","tagName":{"pos":2184,"end":2189,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>Whether to reset to the default settings\\ninstead of clearing them. (Default: <code>true</code>)</p>\\n"}]},{"name":"setSettings","args":[{"name":"settings","type":"S","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nOverrides the current settings.","description":"<p>Overrides the current settings.</p>\\n","jsdoctags":[{"name":"settings","type":"S","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable, Inject, InjectionToken, Optional } from \'@angular/core\';\\nimport { Settings } from \'../../models/settings\';\\n\\n/** Configuration options for {@link SettingsStorageService}. */\\nexport interface SettingsStorageConfig<S = Settings> {\\n  /** Whether to revert to the default settings if no such value exists in storage. */\\n  canRevertDefault?: boolean;\\n  /** Default settings to be used if no such value exists in storage. */\\n  defaultSettings?: S;\\n}\\n\\n/** The settings storage provider to use. (Default: `localStorage`) */\\nexport const SETTINGS_STORAGE_PROVIDER: InjectionToken<Storage> = new InjectionToken(\'Settings storage provider\', {\\n  factory: () => localStorage\\n});\\n\\n/** The settings key to store the settings in. (Default: `settings`) */\\nexport const SETTINGS_STORAGE_KEY: InjectionToken<string> = new InjectionToken(\'Settings storage key\', {\\n  factory: () => \'settings\'\\n});\\n\\nexport const SETTINGS_STORAGE_DEFAULT_CONFIG_FACTORY: () => SettingsStorageConfig\\n  = () => ({\\n    canRevertDefault: true,\\n    defaultSettings: {\\n      openNewTab: true,\\n      showImages: true,\\n      theme: \'indigo-pink\',\\n      notifyNewReleases: true\\n    }\\n  });\\n\\n/** Configuration options to change the behavior of {@link SettingsStorageService}. */\\nexport const SETTINGS_STORAGE_CONFIG: InjectionToken<SettingsStorageConfig> = new InjectionToken(\'Settings storage config\', {\\n  factory: SETTINGS_STORAGE_DEFAULT_CONFIG_FACTORY\\n});\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class SettingsStorageService<S = Settings> {\\n  constructor(\\n    @Inject(SETTINGS_STORAGE_PROVIDER) private storage: Storage,\\n    @Inject(SETTINGS_STORAGE_KEY) private key: string,\\n    @Inject(SETTINGS_STORAGE_CONFIG) @Optional() private config: SettingsStorageConfig<S>\\n  ) { }\\n\\n  /** Retrieves the current settings (as JSON). */\\n  get settings(): S {\\n    return (this.storage.getItem(this.key) && this.config.canRevertDefault) ?\\n      JSON.parse(this.storage.getItem(this.key)) as S : this.config.defaultSettings;\\n  }\\n\\n  /** Overrides the current settings. */\\n  setSettings(settings: S) {\\n    this.storage.setItem(this.key, JSON.stringify(settings));\\n  }\\n\\n  /**\\n   * Clears the current settings.\\n   *\\n   * @param resetToDefault Whether to reset to the default settings\\n   * instead of clearing them. (Default: `true`)\\n   */\\n  clearSettings(resetToDefault: boolean = true) {\\n    if (resetToDefault) {\\n      this.setSettings(this.config.defaultSettings);\\n    } else {\\n      this.storage.removeItem(this.key);\\n    }\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"storage","type":"Storage","deprecated":false,"deprecationMessage":""},{"name":"key","type":"string","deprecated":false,"deprecationMessage":""},{"name":"config","type":"SettingsStorageConfig<S>","deprecated":false,"deprecationMessage":""}],"line":41,"jsdoctags":[{"name":"storage","type":"Storage","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"key","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"config","type":"SettingsStorageConfig<S>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"settings":{"name":"settings","getSignature":{"name":"settings","type":"","returnType":"S","line":49,"rawdescription":"\\nRetrieves the current settings (as JSON).","description":"<p>Retrieves the current settings (as JSON).</p>\\n"}}},"type":"injectable"},{"name":"SharedService","id":"injectable-SharedService-9334dad92eeeb5d0cefa25dd4265b4f23c348f928d6c9f823864de0c2f0f1bed31825f7c3d03e52e053dfbb913bf9b977b3511c8fe9ea128e31590a6006bb0af","file":"projects/rss-reader/src/app/shared.service.ts","properties":[{"name":"internalTitle","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":30,"modifierKind":[121]}],"methods":[{"name":"closeSnackBar","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nCloses the current snackbar.","description":"<p>Closes the current snackbar.</p>\\n"},{"name":"handleSnackBar","args":[{"name":"opts","type":"SnackBarOpts","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"MatSnackBarRef<SimpleSnackBar>","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"opts","type":"SnackBarOpts","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleSnackBarWithComponent","args":[{"name":"opts","type":"SnackBarOpts","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"MatSnackBarRef<any>","typeParameters":[],"line":96,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"opts","type":"SnackBarOpts","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"openSnackBar","args":[{"name":"opts","type":"SnackBarOpts","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"MatSnackBarRef<SimpleSnackBar>","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOpens a snackBar with the specified params and no return\\n\\n","description":"<p>Opens a snackBar with the specified params and no return</p>\\n","jsdoctags":[{"name":{"pos":2020,"end":2024,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"opts"},"type":"SnackBarOpts","deprecated":false,"deprecationMessage":"","tagName":{"pos":2014,"end":2019,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The options of the snackBar</p>\\n"}]},{"name":"openSnackBarComponent","args":[{"name":"opts","type":"SnackBarOpts","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"MatSnackBarRef<any>","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOpens a snackBar with the specified params and a return of the snackBar\'s ref (for component)\\n\\n","description":"<p>Opens a snackBar with the specified params and a return of the snackBar&#39;s ref (for component)</p>\\n","jsdoctags":[{"name":{"pos":2292,"end":2296,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"opts"},"type":"SnackBarOpts","deprecated":false,"deprecationMessage":"","tagName":{"pos":2286,"end":2291,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The options of the snackBar</p>\\n"},{"tagName":{"pos":2331,"end":2338,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>The snackbar reference</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { BreakpointObserver, Breakpoints } from \'@angular/cdk/layout\';\\nimport { ComponentType } from \'@angular/cdk/portal\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { Injectable, NgModule } from \'@angular/core\';\\nimport { FormsModule } from \'@angular/forms\';\\nimport { MatSnackBar, MatSnackBarConfig, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar } from \'@angular/material/snack-bar\';\\nimport { Title } from \'@angular/platform-browser\';\\n\\nexport interface SnackBarOpts<D = any> {\\n  /** The snackbar\'s message. */\\n  msg: string;\\n  /** The snackbar\'s action. */\\n  action?: string;\\n  /** A component to open the snackbar with. */\\n  component?: ComponentType<any>;\\n  /** Configuration for the snackbar. */\\n  config?: MatSnackBarConfig<D>;\\n  /**\\n   * Additional options for the snackbar.\\n   *\\n   * @deprecated Use {@link SnackBarOpts#config} instead\\n   */\\n  additionalOpts?: MatSnackBarConfig<D>;\\n}\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class SharedService {\\n  private internalTitle = \'\';\\n  constructor(\\n    private snackBar: MatSnackBar,\\n    private documentTitle: Title,\\n    private breakpointObserver: BreakpointObserver\\n  ) { }\\n\\n  /** Detects if the user is using a mobile device based on CSS media queries. */\\n  get isMobile(): boolean {\\n    return this.breakpointObserver.isMatched(Breakpoints.Handset);\\n  }\\n\\n  /** Detects if the user is using a handset in portrait mode based on CSS media queries. */\\n  get isPortraitHandset(): boolean {\\n    return this.breakpointObserver.isMatched(Breakpoints.HandsetPortrait);\\n  }\\n\\n  /**\\n   * Returns the document\'s title\\n   */\\n  get title(): string {\\n    return this.internalTitle;\\n  }\\n\\n  /**\\n   * Sets the document\'s title\\n   *\\n   * @param title The title of the document to set\\n   */\\n  set title(title: string) {\\n    this.internalTitle = title;\\n    if (title !== \'\') {\\n      title = `${title} | `;\\n    }\\n    this.documentTitle.setTitle(`${title}Angular RSS Reader`);\\n  }\\n\\n  /**\\n   * Opens a snackBar with the specified params and no return\\n   *\\n   * @param opts The options of the snackBar\\n   */\\n  openSnackBar(opts: SnackBarOpts): MatSnackBarRef<SimpleSnackBar> {\\n    return this.handleSnackBar(opts);\\n  }\\n  /**\\n   * Opens a snackBar with the specified params and a return of the snackBar\'s ref (for component)\\n   *\\n   * @param opts The options of the snackBar\\n   * @returns The snackbar reference\\n   */\\n  openSnackBarComponent(opts: SnackBarOpts): MatSnackBarRef<any> {\\n    return this.handleSnackBarWithComponent(opts);\\n  }\\n\\n  /** Closes the current snackbar. */\\n  closeSnackBar() {\\n    this.snackBar.dismiss();\\n  }\\n\\n  private handleSnackBar(opts: SnackBarOpts): MatSnackBarRef<SimpleSnackBar> {\\n    // eslint-disable-next-line import/no-deprecated\\n    const config = opts.config ? opts.config : opts.additionalOpts;\\n    return this.snackBar.open(opts.msg, opts.action ? opts.action : undefined, config);\\n  }\\n\\n  private handleSnackBarWithComponent(opts: SnackBarOpts): MatSnackBarRef<any> {\\n    // eslint-disable-next-line import/no-deprecated\\n    const config = opts.config ? opts.config : opts.additionalOpts;\\n    return this.snackBar.openFromComponent(opts.component, config);\\n  }\\n}\\n\\n@NgModule({\\n  providers: [\\n    SharedService\\n  ],\\n  imports: [\\n    CommonModule,\\n    FormsModule,\\n    MatSnackBarModule\\n  ]\\n})\\nexport class SharedModule { }\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"snackBar","type":"MatSnackBar","deprecated":false,"deprecationMessage":""},{"name":"documentTitle","type":"Title","deprecated":false,"deprecationMessage":""},{"name":"breakpointObserver","type":"BreakpointObserver","deprecated":false,"deprecationMessage":""}],"line":30,"jsdoctags":[{"name":"snackBar","type":"MatSnackBar","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"documentTitle","type":"Title","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"breakpointObserver","type":"BreakpointObserver","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"isMobile":{"name":"isMobile","getSignature":{"name":"isMobile","type":"boolean","returnType":"boolean","line":38,"rawdescription":"\\nDetects if the user is using a mobile device based on CSS media queries.","description":"<p>Detects if the user is using a mobile device based on CSS media queries.</p>\\n"}},"isPortraitHandset":{"name":"isPortraitHandset","getSignature":{"name":"isPortraitHandset","type":"boolean","returnType":"boolean","line":43,"rawdescription":"\\nDetects if the user is using a handset in portrait mode based on CSS media queries.","description":"<p>Detects if the user is using a handset in portrait mode based on CSS media queries.</p>\\n"}},"title":{"name":"title","setSignature":{"name":"title","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"title","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":59,"rawdescription":"\\n\\nSets the document\'s title\\n\\n","description":"<p>Sets the document&#39;s title</p>\\n","jsdoctags":[{"name":{"pos":1702,"end":1707,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"title"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1696,"end":1701,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The title of the document to set</p>\\n"}]},"getSignature":{"name":"title","type":"string","returnType":"string","line":50,"rawdescription":"\\n\\nReturns the document\'s title\\n","description":"<p>Returns the document&#39;s title</p>\\n"}}},"type":"injectable"}],"guards":[],"interceptors":[],"classes":[{"name":"AppPage","id":"class-AppPage-2de417840fd33dceb19dac3a22db763faced9d60a42ebfb04a8c845ec2e94b3a41b81964919c8f382559eb0e6b4df16f6b4ae76ec3d061ae705335e774d97ea5","file":"projects/rss-reader/e2e/src/app.po.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { browser, element, by } from \'protractor\';\\n\\nexport class AppPage {\\n  /**\\n   * Navigates to the specified URL, or the default base URL.\\n   *\\n   * @param url The URL to navigate to\\n   */\\n  navigateTo(url?: string) {\\n    return browser.get(url ? url : browser.baseUrl) as Promise<any>;\\n  }\\n\\n  getToolbarText() {\\n    return element(by.css(\'#toolbar-title\')).getText() as Promise<string>;\\n  }\\n}\\n","properties":[],"methods":[{"name":"getToolbarText","args":[],"optional":false,"returnType":"Promise<string>","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":""},{"name":"navigateTo","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Promise<any>","typeParameters":[],"line":9,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nNavigates to the specified URL, or the default base URL.\\n\\n","description":"<p>Navigates to the specified URL, or the default base URL.</p>\\n","jsdoctags":[{"name":{"pos":160,"end":163,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"url"},"type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":154,"end":159,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The URL to navigate to</p>\\n"}]}],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"ArticleCardComponentHarness","id":"class-ArticleCardComponentHarness-93d5c941b7a3dec3b46ef6dda6d55a8b6705ff3a7e37b7a8d07dc3efdc06597ad292876826964581df4f6935c27c0e14f99aa48983715fc956d5a66987c44316","file":"projects/rss-reader/src/app/components/article-card/testing/article-card-harness.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { ComponentHarness, HarnessPredicate } from \'@angular/cdk/testing\';\\nimport { MatButtonHarness } from \'@angular/material/button/testing\';\\nimport { MatChipSetHarness } from \'@angular/material/chips/testing\';\\n\\nimport { ArticleCardComponentHarnessFilters } from \'./article-card-harness-filters\';\\n\\n/** Harness for interacting with a standard `app-article-card` in tests. */\\nexport class ArticleCardComponentHarness extends ComponentHarness {\\n  /** The selector for the host element of a `ArticleCardComponent` instance. */\\n  static hostSelector = \'.article-card\';\\n\\n  // Header elements\\n  protected getHeaderAuthorEl = this.locatorForOptional(\'.article-card--author\');\\n  protected getHeaderPubDateEl = this.locatorForOptional(\'.article-card--pub-date\');\\n\\n  // Title elements\\n  protected getTitleEl = this.locatorFor(\'.article-card--title\');\\n  protected getImageEl = this.locatorForOptional(\'.article-card--image\');\\n\\n  // Content elements\\n  protected getDescEl = this.locatorFor(\'.article-card--description\');\\n  /** Gets the list of categories. */\\n  getCategoriesLoader = this.locatorForOptional(MatChipSetHarness.with(\\n    { selector: \'.article-card--categories\' }));\\n\\n  // Actions element\\n  protected getActionsEl = this.locatorFor(\'.article-card--actions\');\\n  /** Gets the list of action buttons. */\\n  getActionBtnsLoader = this.locatorForAll(MatButtonHarness);\\n  /** Gets the share action button. */\\n  getShareActionBtnLoader = this.locatorFor(MatButtonHarness.with({ text: \'share\' }));\\n  /** Gets the view/open action button. */\\n  getOpenActionBtnLoader = this.locatorFor(MatButtonHarness.with({ text: \'open_in_new\' }));\\n\\n  /** Creates a `HarnessPredicate` used to locate a particular `ArticleCardComponentHarness`. */\\n  static with(options: ArticleCardComponentHarnessFilters): HarnessPredicate<ArticleCardComponentHarness> {\\n    return new HarnessPredicate(ArticleCardComponentHarness, options)\\n      .addOption(\'author\', options.author,\\n        (harness, text) => HarnessPredicate.stringMatches(harness.getHeaderAuthorText(), text))\\n      .addOption(\'published date\', options.pubDate,\\n        (harness, text) => HarnessPredicate.stringMatches(harness.getHeaderPubDateText(), text))\\n      .addOption(\'title\', options.title,\\n        (harness, text) => HarnessPredicate.stringMatches(harness.getTitleText(), text))\\n      .addOption(\'image source\', options.imgSrc,\\n        (harness, src) => HarnessPredicate.stringMatches(harness.getImageSrc(), src))\\n      .addOption(\'description\', options.desc,\\n        (harness, text) => HarnessPredicate.stringMatches(harness.getDescText(), text));\\n  }\\n\\n  /** Gets the header author text. */\\n  async getHeaderAuthorText() {\\n    return (await this.getHeaderAuthorEl())?.text() ?? \'\';\\n  }\\n\\n  /** Gets the header published date text. */\\n  async getHeaderPubDateText() {\\n    return (await this.getHeaderPubDateEl())?.text() ?? \'\';\\n  }\\n\\n  /** Gets the header published date as a `Date` object. */\\n  async getHeaderPubDate() {\\n    return new Date((await this.getHeaderPubDateText()));\\n  }\\n\\n  /** Gets the title text. */\\n  async getTitleText() {\\n    return (await this.getTitleEl()).text();\\n  }\\n\\n  /** Gets the image source. */\\n  async getImageSrc() {\\n    return (await this.getImageEl())?.getAttribute(\'src\') ?? null;\\n  }\\n\\n  /** Gets the description text. */\\n  async getDescText() {\\n    return (await this.getDescEl()).text();\\n  }\\n}\\n","properties":[{"name":"getActionBtnsLoader","defaultValue":"this.locatorForAll(MatButtonHarness)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Gets the list of action buttons.</p>\\n","line":30,"rawdescription":"\\nGets the list of action buttons."},{"name":"getActionsEl","defaultValue":"this.locatorFor(\'.article-card--actions\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":28,"modifierKind":[122]},{"name":"getCategoriesLoader","defaultValue":"this.locatorForOptional(MatChipSetHarness.with(\\n    { selector: \'.article-card--categories\' }))","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Gets the list of categories.</p>\\n","line":24,"rawdescription":"\\nGets the list of categories."},{"name":"getDescEl","defaultValue":"this.locatorFor(\'.article-card--description\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":22,"modifierKind":[122]},{"name":"getHeaderAuthorEl","defaultValue":"this.locatorForOptional(\'.article-card--author\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14,"modifierKind":[122]},{"name":"getHeaderPubDateEl","defaultValue":"this.locatorForOptional(\'.article-card--pub-date\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15,"modifierKind":[122]},{"name":"getImageEl","defaultValue":"this.locatorForOptional(\'.article-card--image\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19,"modifierKind":[122]},{"name":"getOpenActionBtnLoader","defaultValue":"this.locatorFor(MatButtonHarness.with({ text: \'open_in_new\' }))","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Gets the view/open action button.</p>\\n","line":34,"rawdescription":"\\nGets the view/open action button."},{"name":"getShareActionBtnLoader","defaultValue":"this.locatorFor(MatButtonHarness.with({ text: \'share\' }))","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"<p>Gets the share action button.</p>\\n","line":32,"rawdescription":"\\nGets the share action button."},{"name":"getTitleEl","defaultValue":"this.locatorFor(\'.article-card--title\')","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18,"modifierKind":[122]},{"name":"hostSelector","defaultValue":"\'.article-card\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The selector for the host element of a <code>ArticleCardComponent</code> instance.</p>\\n","line":11,"rawdescription":"\\nThe selector for the host element of a `ArticleCardComponent` instance.","modifierKind":[124]}],"description":"<p>Harness for interacting with a standard <code>app-article-card</code> in tests.</p>\\n","rawdescription":"\\nHarness for interacting with a standard `app-article-card` in tests.","methods":[{"name":"getDescText","args":[],"optional":false,"returnType":"unknown","typeParameters":[],"line":77,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nGets the description text.","description":"<p>Gets the description text.</p>\\n","modifierKind":[131]},{"name":"getHeaderAuthorText","args":[],"optional":false,"returnType":"unknown","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nGets the header author text.","description":"<p>Gets the header author text.</p>\\n","modifierKind":[131]},{"name":"getHeaderPubDate","args":[],"optional":false,"returnType":"unknown","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nGets the header published date as a `Date` object.","description":"<p>Gets the header published date as a <code>Date</code> object.</p>\\n","modifierKind":[131]},{"name":"getHeaderPubDateText","args":[],"optional":false,"returnType":"unknown","typeParameters":[],"line":57,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nGets the header published date text.","description":"<p>Gets the header published date text.</p>\\n","modifierKind":[131]},{"name":"getImageSrc","args":[],"optional":false,"returnType":"unknown","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nGets the image source.","description":"<p>Gets the image source.</p>\\n","modifierKind":[131]},{"name":"getTitleText","args":[],"optional":false,"returnType":"unknown","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nGets the title text.","description":"<p>Gets the title text.</p>\\n","modifierKind":[131]},{"name":"with","args":[{"name":"options","type":"ArticleCardComponentHarnessFilters","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"HarnessPredicate<ArticleCardComponentHarness>","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nCreates a `HarnessPredicate` used to locate a particular `ArticleCardComponentHarness`.","description":"<p>Creates a <code>HarnessPredicate</code> used to locate a particular <code>ArticleCardComponentHarness</code>.</p>\\n","modifierKind":[124],"jsdoctags":[{"name":"options","type":"ArticleCardComponentHarnessFilters","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":"ComponentHarness","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"Dialog","id":"class-Dialog-c1b3d6423255412dde05f846cb0cef0d920d50b7d296829dd0101c25b6f5d13f4e4c98061a3caff51f8e036f829f4955bd94fd514101b4991aaa1869d1f596c4","file":"projects/rss-reader/src/app/core/dialogs/dialog.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { ThemePalette } from \'@angular/material/core\';\\n\\nimport { DialogOpts } from \'./models\';\\n\\n/** An abstract dialog class. */\\nexport abstract class Dialog {\\n  /** The default color to be used for the dialog\'s buttons. */\\n  readonly defaultBtnColor: ThemePalette = \'primary\';\\n  constructor(public opts: DialogOpts) { }\\n\\n  /** Whether the dialog has action buttons. */\\n  get hasActionBtns(): boolean {\\n    if (\'hideActionBtns\' in this.opts) {\\n      if (typeof this.opts.hideActionBtns === \'boolean\') {\\n        return !this.opts.hideActionBtns;\\n      } else if (Array.isArray(this.opts.hideActionBtns)) {\\n        // Skip the below logic\\n        return true;\\n      }\\n    }\\n\\n    return \'negativeBtnText\' in this.opts || \'positiveBtnText\' in this.opts || \'neutralBtnText\' in this.opts;\\n  }\\n\\n  /** The negative button\'s colour. */\\n  get negativeBtnColor(): ThemePalette {\\n    return \'negativeBtnColor\' in this.opts ? this.opts.negativeBtnColor : this.defaultBtnColor;\\n  }\\n\\n  /** The neutral button\'s colour. */\\n  get neutralBtnColor(): ThemePalette {\\n    return \'neutralBtnColor\' in this.opts ? this.opts.neutralBtnColor : this.defaultBtnColor;\\n  }\\n\\n  /** The positive button\'s colour. */\\n  get positiveBtnColor(): ThemePalette {\\n    return \'positiveBtnColor\' in this.opts ? this.opts.positiveBtnColor : this.defaultBtnColor;\\n  }\\n\\n  /** Whether the negative button should be hidden. */\\n  abstract get hideNegativeBtn(): boolean;\\n\\n  /** Whether the neutral button should be hidden. */\\n  abstract get hideNeutralBtn(): boolean;\\n\\n  /** Whether the positive button should be hidden. */\\n  abstract get hidePositiveBtn(): boolean;\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"opts","type":"DialogOpts","deprecated":false,"deprecationMessage":""}],"line":8,"jsdoctags":[{"name":"opts","type":"DialogOpts","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"properties":[{"name":"defaultBtnColor","defaultValue":"\'primary\'","deprecated":false,"deprecationMessage":"","type":"ThemePalette","optional":false,"description":"<p>The default color to be used for the dialog&#39;s buttons.</p>\\n","line":8,"rawdescription":"\\nThe default color to be used for the dialog\'s buttons.","modifierKind":[144]},{"name":"opts","deprecated":false,"deprecationMessage":"","type":"DialogOpts","optional":false,"description":"","line":9,"modifierKind":[123]}],"description":"<p>An abstract dialog class.</p>\\n","rawdescription":"\\nAn abstract dialog class.","methods":[],"indexSignatures":[],"accessors":{"hasActionBtns":{"name":"hasActionBtns","getSignature":{"name":"hasActionBtns","type":"boolean","returnType":"boolean","line":12,"rawdescription":"\\nWhether the dialog has action buttons.","description":"<p>Whether the dialog has action buttons.</p>\\n"}},"negativeBtnColor":{"name":"negativeBtnColor","getSignature":{"name":"negativeBtnColor","type":"","returnType":"ThemePalette","line":26,"rawdescription":"\\nThe negative button\'s colour.","description":"<p>The negative button&#39;s colour.</p>\\n"}},"neutralBtnColor":{"name":"neutralBtnColor","getSignature":{"name":"neutralBtnColor","type":"","returnType":"ThemePalette","line":31,"rawdescription":"\\nThe neutral button\'s colour.","description":"<p>The neutral button&#39;s colour.</p>\\n"}},"positiveBtnColor":{"name":"positiveBtnColor","getSignature":{"name":"positiveBtnColor","type":"","returnType":"ThemePalette","line":36,"rawdescription":"\\nThe positive button\'s colour.","description":"<p>The positive button&#39;s colour.</p>\\n"}},"hideNegativeBtn":{"name":"hideNegativeBtn","getSignature":{"name":"hideNegativeBtn","type":"boolean","returnType":"boolean","line":41,"rawdescription":"\\nWhether the negative button should be hidden.","description":"<p>Whether the negative button should be hidden.</p>\\n"}},"hideNeutralBtn":{"name":"hideNeutralBtn","getSignature":{"name":"hideNeutralBtn","type":"boolean","returnType":"boolean","line":44,"rawdescription":"\\nWhether the neutral button should be hidden.","description":"<p>Whether the neutral button should be hidden.</p>\\n"}},"hidePositiveBtn":{"name":"hidePositiveBtn","getSignature":{"name":"hidePositiveBtn","type":"boolean","returnType":"boolean","line":47,"rawdescription":"\\nWhether the positive button should be hidden.","description":"<p>Whether the positive button should be hidden.</p>\\n"}}},"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"MockStorage","id":"class-MockStorage-f61e605eabce43555bcf83764dfebcd81a5fee17de9bc4295e650e92b5282d67f7915e78114f58f69e399a33e715304db4173d143e5d0c0f7a987ecebf54374a","file":"projects/rss-reader/src/app/core/testing/utils/mock-storage.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"export class MockStorage {\\n  private keys = [];\\n  private store = {};\\n\\n  constructor(initialStore?: { [key: string]: string }) {\\n    for (const key in initialStore) {\\n      if (key in initialStore) {\\n        this.setItem(key, initialStore[key]);\\n      }\\n    }\\n  }\\n\\n  get length(): number {\\n    return this.keys.length;\\n  }\\n\\n  key(i: number): string {\\n    return this.keys[i];\\n  }\\n\\n  getItem(key: string): string | null {\\n    return key in this.store ? this.store[key] : null;\\n  }\\n\\n  setItem(key: string, value: string) {\\n    if (!(key in this.store)) {\\n      this.keys.push(key);\\n    }\\n\\n    this.store[key] = value;\\n  }\\n\\n  removeItem(key: string) {\\n    if (key in this.store) {\\n      delete this.store[key];\\n      this.keys.splice(this.keys.indexOf(key), 1);\\n    }\\n  }\\n\\n  clear() {\\n    this.keys = [];\\n    this.store = {};\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"initialStore","type":"literal type","deprecated":false,"deprecationMessage":"","optional":true}],"line":3,"jsdoctags":[{"name":"initialStore","type":"literal type","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},"properties":[{"name":"keys","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":2,"modifierKind":[121]},{"name":"store","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"object","optional":false,"description":"","line":3,"modifierKind":[121]}],"methods":[{"name":"clear","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":""},{"name":"getItem","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string | null","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"key","args":[{"name":"i","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"i","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"removeItem","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setItem","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""},{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"accessors":{"length":{"name":"length","getSignature":{"name":"length","type":"number","returnType":"number","line":13}}},"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]}],"directives":[],"components":[{"name":"AboutDialogComponent","id":"component-AboutDialogComponent-11766bdc9059dc41ef772217ac27135278a67ce0253117820fae30d6e57870112a6cdd3ab4e933d671277520921b170c2761a67bc7c08fd230903467abccaee1","file":"projects/rss-reader/src/app/dialogs/about-dialog/about-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-about-dialog","styleUrls":[],"styles":[],"templateUrl":["./about-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"latestVersion","defaultValue":"environment.latestVersion.full","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":9}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { environment } from \'../../../environments/environment\';\\n\\n@Component({\\n  selector: \'app-about-dialog\',\\n  templateUrl: \'./about-dialog.component.html\'\\n})\\nexport class AboutDialogComponent {\\n  latestVersion = environment.latestVersion.full;\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","templateData":"<h2 matDialogTitle>About This App</h2>\\n<mat-dialog-content>\\n  <div class=\\"about-version-container\\">\\n    <h3 style=\\"margin: 0\\">RSS Reader</h3>\\n    <strong>\\n      <small>Version {{ latestVersion }}</small>\\n    </strong>\\n  </div>\\n  <p>This RSS reader app is made by Edric which is based on a fork of the original source code by BeCompany.</p>\\n  <p>The forked repository is available\\n    <a class=\\"anchor-link\\" href=\\"https://github.com/becompany/angular2-rss-reader-tutorial\\" target=\\"_blank\\">here</a> and my version is\\n    available\\n    <a class=\\"anchor-link\\" href=\\"https://github.com/EdricChan03/rss-reader\\" target=\\"_blank\\">here</a>.</p>\\n  <p>This repository is hosted on Github Pages. For more info about Github Pages, visit\\n    <a class=\\"anchor-link\\" href=\\"https://pages.github.com\\">here</a>.</p>\\n  <p>This repository also uses\\n    <a class=\\"anchor-link\\" href=\\"https://angular.io\\">Angular</a> and\\n    <a class=\\"anchor-link\\" href=\\"https://material.angular.io\\">Angular Material</a> which are Â©Google 2017. All rights reserved.</p>\\n  <p>Social icons in Share dialog are from\\n    <a class=\\"anchor-link\\" href=\\"https://materialdesignicons.com\\">MaterialDesignIcons</a>. All other icons are from\\n    <a class=\\"anchor-link\\" href=\\"https://google.github.io/material-design-icons\\">Google\'s Material Icons</a>.</p>\\n  <a class=\\"anchor-link\\" href=\\"https://github.com/EdricChan03\\" title=\\"Follow me on Github!\\" target=\\"_blank\\">\\n    <img src=\\"https://img.shields.io/github/followers/EdricChan03.svg?style=social&label=EdricChan03\\" alt=\\"Github social badge\\">\\n  </a>\\n  <a class=\\"anchor-link\\" href=\\"https://twitter.com/EdricChan03\\" title=\\"Follow me on Twitter!\\" target=\\"_blank\\">\\n    <img src=\\"https://img.shields.io/twitter/follow/EdricChan03.svg?style=social&label=EdricChan03\\" alt=\\"Twitter social badge\\">\\n  </a>\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n  <a mat-button href=\\"https://github.com/EdricChan03/rss-reader\\" color=\\"accent\\">\\n    <mat-icon>code</mat-icon>\\n    View source code\\n  </a>\\n  <span class=\\"flex--spacer\\"></span>\\n  <button mat-button matDialogClose color=\\"primary\\">Dismiss</button>\\n</mat-dialog-actions>\\n"},{"name":"ActionItemsComponent","id":"component-ActionItemsComponent-0372ab80f41c4d2eff5642f79eb76bb30d46fa01363088655325a9eae143ad6257352746c9f8bba335ec7cad5c10f2716028092c17c408842b513f293007ae46","file":"projects/rss-reader/src/app/actionitem.service.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-action-items","styleUrls":[],"styles":[],"template":"<ng-container *ngFor=\\"let actionItem of actionItems\\">\\n   <button\\n   mat-icon-button\\n   *ngIf=\\"actionItem.onClickListener\\"\\n   (click)=\\"actionItem.onClickListener($event)\\"\\n   [matTooltip]=\\"actionItem.title\\"\\n   [disabled]=\\"actionItem.disabled\\">\\n     <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n   </button>\\n   <a mat-icon-button *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [matTooltip]=\\"actionItem.title\\" [disabled]=\\"actionItem.disabled\\">\\n   <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n   </a>\\n   <a\\n     mat-icon-button\\n     *ngIf=\\"actionItem.routerLink\\"\\n     [routerLink]=\\"[actionItem.routerLink]\\"\\n     [matTooltip]=\\"actionItem.title\\"\\n     [disabled]=\\"actionItem.disabled\\">\\n\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t</a>\\n</ng-container>\\n <button mat-icon-button *ngIf=\\"showMoreMenu\\" [matMenuTriggerFor]=\\"moreMenu\\"\\n   matTooltip=\\"More options\\">\\n\\t<mat-icon>more_vert</mat-icon>\\n</button>\\n<mat-menu #moreMenu=\\"matMenu\\">\\n\\t<ng-container *ngFor=\\"let actionItem of overflowActionItems\\">\\n\\t\\t<button mat-menu-item *ngIf=\\"actionItem.onClickListener\\" (click)=\\"actionItem.onClickListener($event)\\"\\n       [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t{{actionItem.title}}\\n\\t\\t</button>\\n\\t\\t<a mat-menu-item *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t{{actionItem.title}}\\n\\t\\t</a>\\n\\t\\t<a mat-menu-item *ngIf=\\"actionItem.routerLink\\" [routerLink]=\\"[actionItem.routerLink]\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t{{actionItem.title}}\\n\\t\\t</a>\\n\\t</ng-container>\\n</mat-menu>\\n\\t\\t\\t","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { Component, Injectable, NgModule } from \'@angular/core\';\\nimport { MatButtonModule } from \'@angular/material/button\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport { MatMenuModule } from \'@angular/material/menu\';\\nimport { MatTooltipModule } from \'@angular/material/tooltip\';\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\nimport { RouterModule } from \'@angular/router\';\\n\\n/** ID used to generate new action items with no explicitly-defined ID. */\\nlet nextKeyId = 0;\\n\\n@Injectable()\\n/**\\n * A action icon service for the toolbar.\\n */\\nexport class ActionItemService {\\n\\n  readonly actionItems = new Map<string, ActionItem>();\\n  /**\\n   * Adds an action item\\n   *\\n   * @param actionItem The action item\\n   */\\n  addActionItem(actionItem: ActionItem) {\\n    this.actionItems.set(`actionItem-${nextKeyId++}`, actionItem);\\n  }\\n  /**\\n   * Adds an action item toggle\\n   *\\n   * @param actionItem The action item\\n   * @deprecated\\n   * @experimental Do not use!\\n   */\\n  addActionItemToggle(actionItem: ActionItemToggle) {\\n    console.warn(\'%cThis method is experimental and may break. Continue at your own risk.\', \'font-weight: 600\');\\n    actionItem.onClickListener = () => {\\n      actionItem.toggleBind = !actionItem.toggleBind;\\n    };\\n    this.actionItems.set(`actionItem-${nextKeyId++}`, actionItem);\\n  }\\n  /**\\n   * Updates an action item by its key\\n   *\\n   * @param key The key of the action item\\n   * @param actionItem The action item\\n   */\\n  updateActionItemByKey(key: string, actionItem: ActionItem) {\\n    try {\\n      this.actionItems[key] = actionItem;\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Gets all action items\\n   */\\n  getActionItems(): ActionItem[] {\\n    return Array.from(this.actionItems.values());\\n  }\\n  /**\\n   * Removes an action item\\n   *\\n   * @param key The key of the action item to remove\\n   */\\n  removeActionItemByKey(key: string) {\\n    try {\\n      this.actionItems.delete(key);\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Removes all action items\\n   */\\n  removeActionItems() {\\n    this.actionItems.clear();\\n  }\\n  /**\\n   * Gets a action item by its key\\n   *\\n   * @param key The key of the action item to retrieve\\n   */\\n  getActionItemByKey(key: string): ActionItem {\\n    try {\\n      return this.actionItems[key];\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Adds a action item on click listener to the specified action item\\n   * Note: This can also be declared manually\\n   *\\n   * @deprecated Please set the onclick listener in the {@link ActionItem} object itself.\\n   * @param id The id of the action item\\n   * @param callback The callback when the action item is clicked (has to be arrow function)\\n   */\\n  addActionItemOnClickListener(key: string, callback: (ev?: Event) => void) {\\n    try {\\n      this.actionItems[key].onClickListener = callback;\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Throws an error where the id couldn\'t be found\\n   */\\n  private throwKeyNotFoundError(id: string) {\\n    throw new Error(`Could not find an action item with key ${id}`);\\n  }\\n  /**\\n   * Throws an error where the title couldn\'t be found\\n   */\\n  private throwTitleNotFoundError(title: string) {\\n    throw new Error(`Could not find an action item with title ${title}`);\\n  }\\n}\\n\\n/**\\n * An action item\\n */\\nexport interface ActionItem {\\n  /**\\n   * The title of the action item\\n   */\\n  title: string;\\n  /** The ID of the action item */\\n  id?: string;\\n  /**\\n   * The icon of the action item\\n   */\\n  icon?: string;\\n  /**\\n   * The href of the action item\\n   * NOTE: If `routerLink` is specified, don\'t use `href`.\\n   */\\n  href?: string;\\n  /**\\n   * Similar to what Android does.\\n   */\\n  showAsAction?: boolean;\\n  /** Whether the action item should be disabled. */\\n  disabled?: boolean;\\n  /**\\n   * The router link of the action item\\n   * NOTE: If `href` is specified, don\'t use `routerLink`.\\n   */\\n  routerLink?: string;\\n  /**\\n   * The on click listener of the action item\\n   * Note: This can also be set by {@link ActionItemService#addActionItemOnClickListener}\\n   */\\n  onClickListener?: (ev?: Event) => void;\\n  /**\\n   * The submenu of the action item\\n   */\\n  subMenu?: ActionItem[];\\n}\\n/**\\n * An action item toggle\\n */\\nexport interface ActionItemToggle extends ActionItem {\\n  /**\\n   * The toggle boolean to bind to\\n   */\\n  toggleBind: boolean;\\n}\\n\\n@Component({\\n  selector: \'app-action-items\',\\n  template: `\\n\\t<ng-container *ngFor=\\"let actionItem of actionItems\\">\\n    <button\\n    mat-icon-button\\n    *ngIf=\\"actionItem.onClickListener\\"\\n    (click)=\\"actionItem.onClickListener($event)\\"\\n    [matTooltip]=\\"actionItem.title\\"\\n    [disabled]=\\"actionItem.disabled\\">\\n      <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n    </button>\\n    <a mat-icon-button *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [matTooltip]=\\"actionItem.title\\" [disabled]=\\"actionItem.disabled\\">\\n    <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n    </a>\\n    <a\\n      mat-icon-button\\n      *ngIf=\\"actionItem.routerLink\\"\\n      [routerLink]=\\"[actionItem.routerLink]\\"\\n      [matTooltip]=\\"actionItem.title\\"\\n      [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t</a>\\n\\t</ng-container>\\n  <button mat-icon-button *ngIf=\\"showMoreMenu\\" [matMenuTriggerFor]=\\"moreMenu\\"\\n    matTooltip=\\"More options\\">\\n\\t\\t<mat-icon>more_vert</mat-icon>\\n\\t</button>\\n\\t<mat-menu #moreMenu=\\"matMenu\\">\\n\\t\\t<ng-container *ngFor=\\"let actionItem of overflowActionItems\\">\\n\\t\\t\\t<button mat-menu-item *ngIf=\\"actionItem.onClickListener\\" (click)=\\"actionItem.onClickListener($event)\\"\\n        [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</button>\\n\\t\\t\\t<a mat-menu-item *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</a>\\n\\t\\t\\t<a mat-menu-item *ngIf=\\"actionItem.routerLink\\" [routerLink]=\\"[actionItem.routerLink]\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</a>\\n\\t\\t</ng-container>\\n\\t</mat-menu>\\n\\t\\t\\t\\t`\\n})\\nexport class ActionItemsComponent {\\n  constructor(private actionItemService: ActionItemService) { }\\n  get actionItems(): ActionItem[] {\\n    return this.actionItemService.getActionItems().filter(item => item.showAsAction);\\n  }\\n  get overflowActionItems(): ActionItem[] {\\n    return this.actionItemService.getActionItems().filter(item => !item.showAsAction);\\n  }\\n  get showMoreMenu() {\\n    return this.actionItemService.getActionItems().find((actionItem: ActionItem): boolean => actionItem.showAsAction !== true);\\n  }\\n}\\n\\n@NgModule({\\n  declarations: [\\n    ActionItemsComponent\\n  ],\\n  exports: [\\n    ActionItemsComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    BrowserAnimationsModule,\\n    MatButtonModule,\\n    MatIconModule,\\n    MatMenuModule,\\n    MatTooltipModule,\\n    RouterModule\\n  ],\\n  providers: [\\n    ActionItemService\\n  ]\\n})\\nexport class ActionItemsModule { }\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"actionItemService","type":"ActionItemService","deprecated":false,"deprecationMessage":""}],"line":217,"jsdoctags":[{"name":"actionItemService","type":"ActionItemService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"actionItems":{"name":"actionItems","getSignature":{"name":"actionItems","type":"[]","returnType":"ActionItem[]","line":219}},"overflowActionItems":{"name":"overflowActionItems","getSignature":{"name":"overflowActionItems","type":"[]","returnType":"ActionItem[]","line":222}},"showMoreMenu":{"name":"showMoreMenu","getSignature":{"name":"showMoreMenu","type":"","returnType":"","line":225}}}},{"name":"AppComponent","id":"component-AppComponent-e9515a0010e746cc9e3693db1643994941c2d0c1cef3074720e22f9eb0ebb10d5585239090bbd48fe59d5a141e60406e51da68aa63b15cdca32b16d7ed6bc8ea","file":"projects/rss-reader/src/app/app.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"rss-reader","styleUrls":[],"styles":[],"templateUrl":["./app.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"environment","defaultValue":"environment","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25},{"name":"links","defaultValue":"[\\n    {\\n      name: \'Feed\',\\n      url: \'feed\',\\n      icon: \'rss_feed\'\\n    },\\n    {\\n      name: \'Headlines\',\\n      url: \'headlines\',\\n      icon: \'newspaper\',\\n      isSvgIcon: true\\n    },\\n    {\\n      name: \'Guides\',\\n      url: \'docs\',\\n      icon: \'book\'\\n    },\\n    {\\n      name: \'Settings\',\\n      url: \'settings\',\\n      icon: \'settings\'\\n    },\\n    {\\n      name: \'Release notes\',\\n      url: \'release-notes\',\\n      icon: \'new_releases\'\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":67},{"name":"projects","defaultValue":"[\\n    {\\n      subheaderName: \'Projects\',\\n      subheaderProjects: [\\n        {\\n          name: \'RSS Reader\',\\n          url: \'https://edricchan03.github.io/rss-reader\',\\n          icon: \'rss_feed\'\\n        },\\n        {\\n          name: \'StudyBuddy\',\\n          url: \'https://studybuddy-e5f46.firebaseapp.com\',\\n          icon: \'book\'\\n        },\\n        {\\n          name: \'Market2\',\\n          url: \'https://market2-ed1e4.firebaseapp.com\',\\n          icon: \'shopping_cart\'\\n        },\\n        {\\n          name: \'My website\',\\n          url: \'https://edricchan03.github.io\',\\n          icon: \'home\'\\n        },\\n        {\\n          name: \'First-Mod\',\\n          url: \'https://edricchan03.github.io/First-Mod\',\\n          icon: \'gamepads\'\\n        }]\\n    },\\n    {\\n      subheaderName: \'Libraries\',\\n      subheaderProjects: [\\n        {\\n          name: \'ngx-ytd-api\',\\n          url: \'https://ngx-ytd-api.firebaseapp.com/master\',\\n          icon: \'\'\\n        }\\n      ]\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":26},{"name":"shared","deprecated":false,"deprecationMessage":"","type":"SharedService","optional":false,"description":"","line":96,"modifierKind":[123]},{"name":"sidenav","deprecated":false,"deprecationMessage":"","type":"MatSidenav","optional":false,"description":"","line":24,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'left\', {static: true}"}]}],"methodsClass":[{"name":"aboutThisApp","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":125,"deprecated":false,"deprecationMessage":""},{"name":"addDefaultActionItems","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":228,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"createOnboardingOverlay","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":238,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":137,"deprecated":false,"deprecationMessage":""},{"name":"showOnboardingOverlay","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":129,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ComponentPortal } from \'@angular/cdk/portal\';\\nimport { Component, OnDestroy, OnInit, ViewChild } from \'@angular/core\';\\nimport { MatDialog } from \'@angular/material/dialog\';\\nimport { MatSidenav } from \'@angular/material/sidenav\';\\nimport { NavigationStart, Router } from \'@angular/router\';\\nimport { SwUpdate } from \'@angular/service-worker\';\\n\\nimport { ActionItemService } from \'./actionitem.service\';\\nimport { AboutDialogComponent } from \'./dialogs\';\\nimport { environment } from \'../environments/environment\';\\nimport { Settings } from \'./models/settings\';\\nimport { OverlayService } from \'./overlay.service\';\\nimport { OnboardingOverlayComponent } from \'./overlays\';\\nimport { SharedService } from \'./shared.service\';\\nimport { HotkeysService } from \'./hotkeys/hotkeys.service\';\\nimport { SettingsStorageService } from \'./core/settings-storage/settings-storage.service\';\\n\\n@Component({\\n  // eslint-disable-next-line @angular-eslint/component-selector\\n  selector: \'rss-reader\',\\n  templateUrl: \'./app.component.html\'\\n})\\nexport class AppComponent implements OnInit, OnDestroy {\\n  @ViewChild(\'left\', { static: true }) sidenav: MatSidenav;\\n  environment = environment;\\n  projects = [\\n    {\\n      subheaderName: \'Projects\',\\n      subheaderProjects: [\\n        {\\n          name: \'RSS Reader\',\\n          url: \'https://edricchan03.github.io/rss-reader\',\\n          icon: \'rss_feed\'\\n        },\\n        {\\n          name: \'StudyBuddy\',\\n          url: \'https://studybuddy-e5f46.firebaseapp.com\',\\n          icon: \'book\'\\n        },\\n        {\\n          name: \'Market2\',\\n          url: \'https://market2-ed1e4.firebaseapp.com\',\\n          icon: \'shopping_cart\'\\n        },\\n        {\\n          name: \'My website\',\\n          url: \'https://edricchan03.github.io\',\\n          icon: \'home\'\\n        },\\n        {\\n          name: \'First-Mod\',\\n          url: \'https://edricchan03.github.io/First-Mod\',\\n          icon: \'gamepads\'\\n        }]\\n    },\\n    {\\n      subheaderName: \'Libraries\',\\n      subheaderProjects: [\\n        {\\n          name: \'ngx-ytd-api\',\\n          url: \'https://ngx-ytd-api.firebaseapp.com/master\',\\n          icon: \'\'\\n        }\\n      ]\\n    }\\n  ];\\n  links = [\\n    {\\n      name: \'Feed\',\\n      url: \'feed\',\\n      icon: \'rss_feed\'\\n    },\\n    {\\n      name: \'Headlines\',\\n      url: \'headlines\',\\n      icon: \'newspaper\',\\n      isSvgIcon: true\\n    },\\n    {\\n      name: \'Guides\',\\n      url: \'docs\',\\n      icon: \'book\'\\n    },\\n    {\\n      name: \'Settings\',\\n      url: \'settings\',\\n      icon: \'settings\'\\n    },\\n    {\\n      name: \'Release notes\',\\n      url: \'release-notes\',\\n      icon: \'new_releases\'\\n    }\\n  ];\\n  constructor(\\n    public shared: SharedService,\\n    private overlayService: OverlayService,\\n    private actionItemService: ActionItemService,\\n    router: Router,\\n    private dialog: MatDialog,\\n    private swUpdate: SwUpdate,\\n    private hotkeys: HotkeysService,\\n    private settingsStorage: SettingsStorageService\\n  ) {\\n    router.events.subscribe(event => {\\n      if (event instanceof NavigationStart) {\\n        this.actionItemService.removeActionItems();\\n        this.addDefaultActionItems();\\n      }\\n    });\\n  }\\n\\n  get isOffline() {\\n    return !navigator.onLine;\\n  }\\n\\n  get isSidenavOpen() {\\n    if (this.sidenav.opened) {\\n      return true;\\n    } else {\\n      return false;\\n    }\\n  }\\n\\n  aboutThisApp() {\\n    this.dialog.open(AboutDialogComponent);\\n  }\\n\\n  showOnboardingOverlay() {\\n    this.createOnboardingOverlay();\\n  }\\n\\n  ngOnDestroy() {\\n    this.overlayService.destroyOverlay();\\n  }\\n\\n  ngOnInit() {\\n    if (window.localStorage.getItem(\'hasLaunched\')) {\\n      if (!JSON.parse(window.localStorage.getItem(\'hasLaunched\'))) {\\n        window.localStorage.setItem(\'hasLaunched\', JSON.stringify(true));\\n        this.showOnboardingOverlay();\\n      }\\n    }\\n    if (this.settingsStorage.settings) {\\n      if (this.settingsStorage.settings.theme) {\\n        document.body.classList.add(this.settingsStorage.settings.theme);\\n      } else {\\n        console.warn(\'Theme setting was not found. Using default...\');\\n        document.body.classList.add(\'indigo-pink\');\\n      }\\n    } else {\\n      const tempSettings: Settings = { showImages: true, multipleRss: false, openNewTab: true, theme: \'indigo-pink\' };\\n      document.body.classList.add(\'indigo-pink\');\\n      this.settingsStorage.setSettings(tempSettings);\\n    }\\n    if (this.isOffline) {\\n      console.log(\'User is offline\');\\n      // eslint-disable-next-line max-len\\n      const snackBarRef = this.shared.openSnackBar({\\n        msg: \'You are currently offline. Some features may not be available.\',\\n        action: \'Retry\',\\n        additionalOpts: {\\n          panelClass: [\'mat-elevation-z2\'],\\n          horizontalPosition: \'start\'\\n        }\\n      });\\n      snackBarRef.onAction().subscribe(() => {\\n        window.location.reload();\\n      });\\n    }\\n\\n    // SwUpdate functionality\\n    console.log(\'SwUpdate#isEnabled:\', this.swUpdate.isEnabled);\\n\\n    this.swUpdate.checkForUpdate().then(() => {\\n      console.log(\'[AppComponent] Successfully checked for updates.\');\\n    }, error => {\\n      console.error(\'[AppComponent] Could not check for updates:\', error);\\n    });\\n\\n    this.swUpdate.activated.subscribe(event => {\\n      console.log(\'[AppComponent] Successfully activated update!\');\\n      this.shared.openSnackBar({\\n        msg: \'Successfully updated the app!\'\\n      });\\n      console.log(\'[AppComponent] Current version is:\', event.current);\\n      console.log(\'[AppComponent] Previous version is:\', event.previous);\\n    });\\n\\n    this.swUpdate.available.subscribe(event => {\\n      console.log(\'[AppComponent] Update available: current version is\', event.current, \'available version is\', event.available);\\n\\n      const hasNewerVer = () => {\\n        const availableHasVer = \'version\' in event.available.appData;\\n        const currentHasVer = \'version\' in event.current.appData;\\n        let returnVal = false;\\n\\n        if (availableHasVer && currentHasVer) {\\n          returnVal = event.available.appData[\'version\'] !== event.current.appData[\'version\'];\\n        }\\n\\n        return returnVal;\\n      };\\n\\n      const message = hasNewerVer() ?\\n        `A newer version (${event.available.appData[\'version\']}) of the app is available!` :\\n        \'A newer version of the app is available!\';\\n      const snackBarRef = this.shared.openSnackBar({\\n        msg: message,\\n        action: \'Update & Refresh\',\\n        additionalOpts: {\\n          // Interesting note: The snackbar code actually checks if the duration is above 0 and only enables auto-hide from that.\\n          duration: 0\\n        }\\n      });\\n\\n      snackBarRef.onAction().subscribe(() => {\\n        this.swUpdate.activateUpdate().then(() => {\\n          window.location.reload();\\n        }, error => {\\n          console.error(\'[AppComponent] Could not activate update:\', error);\\n        });\\n      });\\n\\n    });\\n  }\\n\\n  private addDefaultActionItems() {\\n    this.actionItemService.addActionItem({\\n      id: \'keyboard-shortcuts-action-item\',\\n      title: \'Keyboard shortcuts\',\\n      icon: \'keyboard\',\\n      showAsAction: false,\\n      onClickListener: () => { this.hotkeys.openHotkeyHelpDialog(); }\\n    });\\n  }\\n\\n  private createOnboardingOverlay() {\\n    this.overlayService.createOverlay(new ComponentPortal(OnboardingOverlayComponent), {\\n      positionStrategy: this.overlayService.createCenterOverlayPositionStrategy(),\\n      hasBackdrop: true\\n    }, true);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"shared","type":"SharedService","deprecated":false,"deprecationMessage":""},{"name":"overlayService","type":"OverlayService","deprecated":false,"deprecationMessage":""},{"name":"actionItemService","type":"ActionItemService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"dialog","type":"MatDialog","deprecated":false,"deprecationMessage":""},{"name":"swUpdate","type":"SwUpdate","deprecated":false,"deprecationMessage":""},{"name":"hotkeys","type":"HotkeysService","deprecated":false,"deprecationMessage":""},{"name":"settingsStorage","type":"SettingsStorageService","deprecated":false,"deprecationMessage":""}],"line":94,"jsdoctags":[{"name":"shared","type":"SharedService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"overlayService","type":"OverlayService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"actionItemService","type":"ActionItemService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dialog","type":"MatDialog","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"swUpdate","type":"SwUpdate","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"hotkeys","type":"HotkeysService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"settingsStorage","type":"SettingsStorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit","OnDestroy"],"accessors":{"isOffline":{"name":"isOffline","getSignature":{"name":"isOffline","type":"","returnType":"","line":113}},"isSidenavOpen":{"name":"isSidenavOpen","getSignature":{"name":"isSidenavOpen","type":"","returnType":"","line":117}}},"templateData":"<mat-sidenav-container fullscreen>\\n  <mat-sidenav #left class=\\"app-sidenav\\" [mode]=\\"shared.isPortraitHandset ? \'over\' : \'side\'\\">\\n    <mat-toolbar>\\n      Links\\n      <span class=\\"flex--spacer\\"></span>\\n      <button mat-icon-button (click)=\\"left.close()\\" matTooltip=\\"Close Sidenav\\" matTooltipPosition=\\"left\\">\\n        <mat-icon>keyboard_arrow_left</mat-icon>\\n      </button>\\n    </mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item [routerLink]=\\"[\'/\', link.url]\\" routerLinkActive=\\"mdc-list-item--activated\\" *ngFor=\\"let link of links\\">\\n        <mat-icon matListItemIcon *ngIf=\\"!link.isSvgIcon\\">{{link.icon}}</mat-icon>\\n        <mat-icon matListItemIcon *ngIf=\\"link.isSvgIcon\\" [svgIcon]=\\"link.icon\\"></mat-icon>\\n        <h3 matListItemTitle>{{link.name}}</h3>\\n      </a>\\n      <h3 matSubheader>More</h3>\\n      <a mat-list-item href=\\"https://goo.gl/forms/hopvyFXOqHfpA1kq2\\" target=\\"_blank\\">\\n        <mat-icon matListItemIcon>feedback</mat-icon>\\n        <h3 matListItemTitle>Send Feedback</h3>\\n        <span class=\\"flex--spacer\\"></span>\\n        <span matListItemMeta>\\n          <mat-icon class=\\"open-in-new-icon\\">open_in_new</mat-icon>\\n        </span>\\n      </a>\\n      <a mat-list-item href=\\"https://github.com/EdricChan03/rss-reader\\">\\n        <mat-icon matListItemIcon>code</mat-icon>\\n        <h3 matListItemTitle>View source code</h3>\\n      </a>\\n      <mat-list-item (click)=\\"showOnboardingOverlay()\\" *ngIf=\\"!shared.isPortraitHandset\\">\\n        <mat-icon matListItemIcon>open_in_browser</mat-icon>\\n        <h3 matListItemTitle>Show onboarding</h3>\\n      </mat-list-item>\\n      <mat-list-item (click)=\\"aboutThisApp()\\">\\n        <mat-icon matListItemIcon>info</mat-icon>\\n        <h3 matListItemTitle>About</h3>\\n      </mat-list-item>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content class=\\"mat-typography\\">\\n    <mat-toolbar color=\\"primary\\" class=\\"mat-elevation-z3\\">\\n      <button mat-icon-button (click)=\\"left.toggle()\\" *ngIf=\\"!isSidenavOpen\\" aria-label=\\"Toggle left sidenav\\">\\n        <mat-icon>menu</mat-icon>\\n      </button>\\n      <span id=\\"toolbar-title\\">RSS Reader</span>\\n      <span class=\\"flex--spacer\\"></span>\\n      <app-action-items></app-action-items>\\n    </mat-toolbar>\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n"},{"name":"ArticleCardComponent","id":"component-ArticleCardComponent-39aa7f283f3611272cd7240e6fcef064ccc23d365b1327626dc3b267e70081ff6f0a4b9b336f4cd0eccec1e0dbaec565eda6ed9fd9ea3ab1d387e5f72f3edc9e","file":"projects/rss-reader/src/app/components/article-card/article-card.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-article-card","styleUrls":["./article-card.component.scss"],"styles":[],"templateUrl":["./article-card.component.html"],"viewProviders":[],"inputsClass":[{"name":"article","deprecated":false,"deprecationMessage":"","rawdescription":"\\nThe article that this card represents.","description":"<p>The article that this card represents.</p>\\n","line":29,"type":"FeedEntry | NewsAPITopHeadlinesArticle","decorators":[]},{"name":"feed","deprecated":true,"deprecationMessage":[{"pos":846,"end":850,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":319,"text":"Use "},{"pos":850,"end":886,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":322,"name":{"pos":857,"end":885,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":309,"left":{"pos":857,"end":877,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"ArticleCardComponent"},"right":{"pos":878,"end":885,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"article"}},"text":""},{"pos":886,"end":891,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":319,"text":"."}],"jsdoctags":[{"pos":834,"end":891,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":329,"tagName":{"pos":835,"end":845,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"deprecated"},"comment":"<p>Use {@link ArticleCardComponent.article}.</p>\\n"}],"rawdescription":"\\n\\nThe feed entry that this card represents.\\n\\n","description":"<p>The feed entry that this card represents.</p>\\n","line":21,"type":"FeedEntry","decorators":[]},{"name":"headline","deprecated":true,"deprecationMessage":[{"pos":1004,"end":1008,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":319,"text":"Use "},{"pos":1008,"end":1044,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":322,"name":{"pos":1015,"end":1043,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":309,"left":{"pos":1015,"end":1035,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"ArticleCardComponent"},"right":{"pos":1036,"end":1043,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"article"}},"text":""},{"pos":1044,"end":1049,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":319,"text":"."}],"jsdoctags":[{"pos":992,"end":1049,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":329,"tagName":{"pos":993,"end":1003,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"deprecated"},"comment":"<p>Use {@link ArticleCardComponent.article}.</p>\\n"}],"rawdescription":"\\n\\nThe headline article that this card represents.\\n\\n","description":"<p>The headline article that this card represents.</p>\\n","line":27,"type":"NewsAPITopHeadlinesArticle","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"hasImage","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":31},{"name":"imageSrc","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":32},{"name":"target","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":33}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":144,"deprecated":false,"deprecationMessage":""},{"name":"share","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":164,"deprecated":false,"deprecationMessage":""},{"name":"showCode","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":170,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"<p>Card used to represent an article entry (<code>FeedEntry</code> or <code>NewsAPITopHeadlinesArticle</code>).</p>\\n","rawdescription":"\\nCard used to represent an article entry (`FeedEntry` or `NewsAPITopHeadlinesArticle`).","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { MatDialog } from \'@angular/material/dialog\';\\nimport { CodeViewerDialogComponent, ShareDialogComponent } from \'../../dialogs\';\\nimport { FeedEntry } from \'../../models/feed-entry\';\\nimport { NewsAPITopHeadlinesArticle } from \'../../models/news-api/top-headlines-article\';\\nimport { SettingsStorageService } from \'../../core/settings-storage/settings-storage.service\';\\nimport { StripHtmlTagsPipe } from \'../../pipe\';\\n\\n/** Card used to represent an article entry (`FeedEntry` or `NewsAPITopHeadlinesArticle`). */\\n@Component({\\n  selector: \'app-article-card\',\\n  templateUrl: \'./article-card.component.html\',\\n  styleUrls: [\'./article-card.component.scss\']\\n})\\nexport class ArticleCardComponent implements OnInit {\\n  /**\\n   * The feed entry that this card represents.\\n   *\\n   * @deprecated Use {@link ArticleCardComponent#article}.\\n   */\\n  @Input() feed?: FeedEntry;\\n  /**\\n   * The headline article that this card represents.\\n   *\\n   * @deprecated Use {@link ArticleCardComponent#article}.\\n   */\\n  @Input() headline?: NewsAPITopHeadlinesArticle;\\n  /** The article that this card represents. */\\n  @Input() article: FeedEntry | NewsAPITopHeadlinesArticle;\\n\\n  hasImage: boolean;\\n  imageSrc: string;\\n  target: string;\\n\\n  constructor(\\n    private dialog: MatDialog,\\n    private settingsStorage: SettingsStorageService,\\n    private stripHtmlTags: StripHtmlTagsPipe\\n  ) { }\\n\\n  get articleAuthor(): string {\\n    if (this.article !== undefined) {\\n      if (\'publishedAt\' in this.article) {\\n        if (\'author\' in this.article && this.article.author !== undefined) {\\n          if (\'author\' in this.article && \'source\' in this.article &&\\n            \'name\' in this.article.source && this.article.source.name !== undefined) {\\n            return `${this.article.author} | ${this.article.source.name}`;\\n          } else {\\n            return this.article.author;\\n          }\\n        } else if (\'source\' in this.article &&\\n          \'name\' in this.article.source && this.article.source.name !== undefined) {\\n          return this.article.source.name;\\n        } else {\\n          return;\\n        }\\n      } else if (\'pubDate\' in this.article) {\\n        return this.article.author;\\n      }\\n    }\\n    return;\\n  }\\n\\n  get articlePubDate(): string {\\n    if (this.article !== undefined) {\\n      if (\'publishedAt\' in this.article) {\\n        return this.article.publishedAt;\\n      } else if (\'pubDate\' in this.article) {\\n        return this.article.pubDate;\\n      }\\n    }\\n    return;\\n  }\\n\\n  get articleImg(): string {\\n    if (this.article !== undefined) {\\n      if (\'urlToImage\' in this.article) {\\n        return this.article.urlToImage;\\n      } else if (\'thumbnail\' in this.article) {\\n        return this.article.thumbnail;\\n      } else if (\'enclosure\' in this.article && \'thumbnail\' in this.article.enclosure) {\\n        return this.article.enclosure.thumbnail;\\n      } else {\\n        return;\\n      }\\n    }\\n  }\\n\\n  get articleTitle(): string {\\n    return this.article?.title;\\n  }\\n\\n  get articleDesc(): string {\\n    return this.stripHtmlTags.transform(this.article?.description ?? \'\');\\n  }\\n\\n  get articleCategories(): string[] {\\n    if (this.article !== undefined) {\\n      if (\'categories\' in this.article) {\\n        return this.article.categories;\\n      }\\n    }\\n    return [];\\n  }\\n\\n  get articleLink(): string {\\n    if (this.article !== undefined) {\\n      if (\'url\' in this.article) {\\n        return this.article.url;\\n      } else if (\'link\' in this.article) {\\n        return this.article.link;\\n      }\\n    }\\n    return;\\n  }\\n\\n  get enclosureIsAudioType(): boolean {\\n    if (this.article !== undefined) {\\n      if (\'enclosure\' in this.article && \'type\' in this.article.enclosure) {\\n        return this.article.enclosure.type.startsWith(\'audio\');\\n      }\\n    }\\n    return false;\\n  }\\n\\n  get enclosureIsVideoType(): boolean {\\n    if (this.article !== undefined) {\\n      if (\'enclosure\' in this.article && \'type\' in this.article.enclosure) {\\n        return this.article.enclosure.type.startsWith(\'video\');\\n      }\\n    }\\n    return false;\\n  }\\n\\n  get enclosureLink(): string {\\n    if (this.article !== undefined) {\\n      if (\'enclosure\' in this.article && \'link\' in this.article.enclosure) {\\n        return this.article.enclosure.link;\\n      }\\n    }\\n    return;\\n  }\\n\\n  ngOnInit() {\\n    if (this.settingsStorage.settings) {\\n      if (\'openNewTab\' in this.settingsStorage.settings) {\\n        this.target = this.settingsStorage.settings.openNewTab ? \'_blank\' : \'_self\';\\n      }\\n      if (\'showImages\' in this.settingsStorage.settings) {\\n        this.hasImage = this.settingsStorage.settings.showImages;\\n      }\\n    }\\n\\n    // Deprecated usages\\n    /* eslint-disable import/no-deprecated */\\n    if (this.feed) {\\n      this.article = this.feed;\\n    } else if (this.headline) {\\n      this.article = this.headline;\\n    }\\n    /* eslint-enable import/no-deprecated */\\n  }\\n\\n  share() {\\n    this.dialog.open(ShareDialogComponent, {\\n      data: this.article\\n    });\\n  }\\n\\n  showCode() {\\n    this.dialog.open(CodeViewerDialogComponent, {\\n      data: this.article\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".article-card {\\n  .article-card--title {\\n    line-height: 32px;\\n    margin: 8px 0;\\n  }\\n\\n  .article-card--categories {\\n    margin-bottom: 8px;\\n  }\\n}\\n","styleUrl":"./article-card.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"dialog","type":"MatDialog","deprecated":false,"deprecationMessage":""},{"name":"settingsStorage","type":"SettingsStorageService","deprecated":false,"deprecationMessage":""},{"name":"stripHtmlTags","type":"StripHtmlTagsPipe","deprecated":false,"deprecationMessage":""}],"line":33,"jsdoctags":[{"name":"dialog","type":"MatDialog","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"settingsStorage","type":"SettingsStorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"stripHtmlTags","type":"StripHtmlTagsPipe","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"accessors":{"articleAuthor":{"name":"articleAuthor","getSignature":{"name":"articleAuthor","type":"string","returnType":"string","line":41}},"articlePubDate":{"name":"articlePubDate","getSignature":{"name":"articlePubDate","type":"string","returnType":"string","line":64}},"articleImg":{"name":"articleImg","getSignature":{"name":"articleImg","type":"string","returnType":"string","line":75}},"articleTitle":{"name":"articleTitle","getSignature":{"name":"articleTitle","type":"string","returnType":"string","line":89}},"articleDesc":{"name":"articleDesc","getSignature":{"name":"articleDesc","type":"string","returnType":"string","line":93}},"articleCategories":{"name":"articleCategories","getSignature":{"name":"articleCategories","type":"[]","returnType":"string[]","line":97}},"articleLink":{"name":"articleLink","getSignature":{"name":"articleLink","type":"string","returnType":"string","line":106}},"enclosureIsAudioType":{"name":"enclosureIsAudioType","getSignature":{"name":"enclosureIsAudioType","type":"boolean","returnType":"boolean","line":117}},"enclosureIsVideoType":{"name":"enclosureIsVideoType","getSignature":{"name":"enclosureIsVideoType","type":"boolean","returnType":"boolean","line":126}},"enclosureLink":{"name":"enclosureLink","getSignature":{"name":"enclosureLink","type":"string","returnType":"string","line":135}}},"templateData":"<mat-card appearance=\\"outlined\\" class=\\"article-card\\">\\n  <mat-card-header class=\\"article-card--header\\">\\n    <mat-card-title *ngIf=\\"articleAuthor\\" class=\\"article-card--author\\">{{ articleAuthor }}</mat-card-title>\\n    <mat-card-subtitle *ngIf=\\"articlePubDate\\" class=\\"article-card--pub-date\\">{{ articlePubDate | date:\'short\' }}</mat-card-subtitle>\\n    <span class=\\"flex--spacer\\"></span>\\n    <button mat-icon-button [matMenuTriggerFor]=\\"feedMenu\\">\\n      <mat-icon class=\\"icon\\">more_vert</mat-icon>\\n    </button>\\n    <mat-menu #feedMenu=\\"matMenu\\">\\n      <button mat-menu-item (click)=\\"showCode()\\">\\n        <mat-icon>code</mat-icon> Show code\\n      </button>\\n    </mat-menu>\\n  </mat-card-header>\\n  <img mat-card-image class=\\"article-card--image\\" *ngIf=\\"articleImg && hasImage\\" [src]=\\"articleImg\\" alt=\\"Article thumbnail\\">\\n  <mat-card-content class=\\"article-card--content\\">\\n    <mat-card-title class=\\"article-card--title\\">{{ articleTitle }}</mat-card-title>\\n    <p class=\\"article-card--description\\">{{ articleDesc | slice:0:300 }}</p>\\n    <mat-chip-set *ngIf=\\"articleCategories.length > 0\\" class=\\"article-card--categories\\" role=\\"list\\">\\n      <mat-chip *ngFor=\\"let category of articleCategories\\" role=\\"listitem\\">{{ category }}</mat-chip>\\n    </mat-chip-set>\\n    <audio *ngIf=\\"enclosureLink && enclosureIsAudioType\\" [src]=\\"enclosureLink\\" class=\\"article-card--media-player\\" controls preload=\\"metadata\\"></audio>\\n    <video *ngIf=\\"enclosureLink && enclosureIsVideoType\\" [src]=\\"enclosureLink\\" class=\\"article-card--media-player\\" controls preload=\\"metadata\\"></video>\\n  </mat-card-content>\\n  <mat-divider class=\\"article-card--divider\\"></mat-divider>\\n  <mat-card-actions align=\\"end\\" class=\\"article-card--actions\\">\\n    <button mat-icon-button (click)=\\"share()\\" matTooltip=\\"Share post\\" color=\\"primary\\" aria-label=\\"Share post\\">\\n      <mat-icon>share</mat-icon>\\n    </button>\\n    <a mat-icon-button [href]=\\"articleLink\\" [target]=\\"target\\" color=\\"primary\\" aria-label=\\"View post\\" matTooltip=\\"View post\\">\\n      <mat-icon>open_in_new</mat-icon>\\n    </a>\\n  </mat-card-actions>\\n</mat-card>\\n"},{"name":"CodeViewerDialogComponent","id":"component-CodeViewerDialogComponent-a39877832fa0559d3e5265f07e45aacfda0068f3e9f9c4ffc73fba8a424879613af6a245aa46ce749bf0dca9e57b946fe49f3093e2d8ec9f069fd7fab669d7ae","file":"projects/rss-reader/src/app/dialogs/code-viewer-dialog/code-viewer-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-code-viewer-dialog","styleUrls":[],"styles":[],"templateUrl":["./code-viewer-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"data","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":11,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[123]}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, AfterViewInit, Inject } from \'@angular/core\';\\nimport { MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\nimport * as hljs from \'highlight.js\';\\n\\n@Component({\\n  selector: \'app-code-viewer-dialog\',\\n  templateUrl: \'./code-viewer-dialog.component.html\'\\n})\\nexport class CodeViewerDialogComponent implements AfterViewInit {\\n  constructor(\\n    @Inject(MAT_DIALOG_DATA) public data: any\\n  ) { }\\n\\n  ngAfterViewInit() {\\n    hljs.highlightBlock(document.getElementById(\'code\'));\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":""}],"line":9,"jsdoctags":[{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["AfterViewInit"],"templateData":"<h2 matDialogTitle>Code View</h2>\\n<mat-dialog-content>\\n  <pre><code id=\\"code\\" class=\\"json\\">{{ data | json }}</code></pre>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\"end\\">\\n  <button mat-button color=\\"primary\\" matDialogClose>Close</button>\\n</mat-dialog-actions>\\n"},{"name":"DocViewerComponent","id":"component-DocViewerComponent-8c81b05b0796a061a0829677af0a94e55e37ed78d4fffe852c9ded242a37502d5d9571232887594068dfe99a72ab4458bbd952dee92d9cdf2ee9beda7b11e415","file":"projects/rss-reader/src/app/pages/doc-viewer/doc-viewer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-doc-viewer","styleUrls":[],"styles":[],"template":"Loading document&hellip;","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"documentUrl","deprecated":false,"deprecationMessage":"","rawdescription":"\\nThe URL of the document to display.","description":"<p>The URL of the document to display.</p>\\n","line":46,"type":"string","decorators":[]}],"outputsClass":[{"name":"contentLoaded","defaultValue":"new EventEmitter<void>()","deprecated":false,"deprecationMessage":"","line":26,"type":"EventEmitter"}],"propertiesClass":[{"name":"documentFetchSubscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":33,"modifierKind":[121]},{"name":"html","deprecated":false,"deprecationMessage":"","type":"Document","optional":false,"description":"","line":30},{"name":"parse","defaultValue":"new DOMParser()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":31},{"name":"textContent","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The document text. It should not be HTML encoded.</p>\\n","line":29,"rawdescription":"\\nThe document text. It should not be HTML encoded."}],"methodsClass":[{"name":"_fetchDocument","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":57,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nFetch a document by URL.","description":"<p>Fetch a document by URL.</p>\\n","modifierKind":[121],"jsdoctags":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"_loadExpansionPanel","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","modifierKind":[121]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ApplicationRef,\\n  Component,\\n  ComponentFactoryResolver,\\n  ElementRef,\\n  EventEmitter,\\n  Injector,\\n  Input,\\n  OnDestroy,\\n  ViewContainerRef,\\n  SecurityContext,\\n  Output\\n} from \'@angular/core\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { Subscription } from \'rxjs\';\\nimport { ComponentPortal, DomPortalOutlet } from \'@angular/cdk/portal\';\\nimport { ExpansionPanelComponent } from \'../../components/expansion-panel/expansion-panel.component\';\\nimport { DomSanitizer } from \'@angular/platform-browser\';\\n\\n@Component({\\n  selector: \'app-doc-viewer\',\\n  template: \'Loading document&hellip;\',\\n})\\nexport class DocViewerComponent implements OnDestroy {\\n  @Output() contentLoaded = new EventEmitter<void>();\\n\\n  /** The document text. It should not be HTML encoded. */\\n  textContent = \'\';\\n  html: Document;\\n  parse = new DOMParser();\\n\\n  private documentFetchSubscription: Subscription;\\n\\n  constructor(\\n    private appRef: ApplicationRef,\\n    private componentFactoryResolver: ComponentFactoryResolver,\\n    private elementRef: ElementRef,\\n    private http: HttpClient,\\n    private injector: Injector,\\n    private viewContainerRef: ViewContainerRef,\\n    private dom: DomSanitizer) { }\\n\\n  /** The URL of the document to display. */\\n  @Input()\\n  set documentUrl(url: string) {\\n    this._fetchDocument(url);\\n  }\\n\\n  ngOnDestroy() {\\n    if (this.documentFetchSubscription) {\\n      this.documentFetchSubscription.unsubscribe();\\n    }\\n  }\\n\\n  /** Fetch a document by URL. */\\n  private _fetchDocument(url: string) {\\n    // Cancel previous pending request\\n    if (this.documentFetchSubscription) {\\n      this.documentFetchSubscription.unsubscribe();\\n    }\\n\\n    this.documentFetchSubscription = this.http.get(url, { responseType: \'text\' }).subscribe(\\n      result => {\\n        this.html = this.parse.parseFromString(result, \'text/html\');\\n        this.elementRef.nativeElement.innerHTML = result;\\n        this.textContent = this.elementRef.nativeElement.textContent;\\n        this._loadExpansionPanel();\\n        this.contentLoaded.next();\\n      },\\n      error => {\\n        this.elementRef.nativeElement.innerText =\\n          `Failed to load document: ${url}. Error: ${error.message}`;\\n      });\\n  }\\n  private _loadExpansionPanel() {\\n    // Query selects all elements which have the `expansion-panel` attribute\\n    const elements = this.elementRef.nativeElement.querySelectorAll(\'[expansion-panel]\');\\n    // Similar to the above line of code, but queries from the result of the http get itself\\n    const tempElements = this.html.querySelectorAll(\'[expansion-panel]\');\\n    // Loop between all the elements\\n    for (let i = 0; i < elements.length; i++) {\\n      // Creates a new portal host\\n      const portalHost = new DomPortalOutlet(\\n        elements[i], this.componentFactoryResolver, this.appRef, this.injector);\\n      // Creates a new component portal\\n      const expansionPanelPortal = new ComponentPortal(ExpansionPanelComponent);\\n      // Clears the html of the element\\n      elements[i].innerHTML = \'\';\\n      // Attaches the portal to the portal host declared earlier\\n      const expansionPanel = portalHost.attach(expansionPanelPortal);\\n      // Sets the `html` instance to be a `SafeHtml` of the original element\'s HTML\\n      expansionPanel.instance.html = this.dom.sanitize(SecurityContext.HTML, tempElements[i].innerHTML);\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"appRef","type":"ApplicationRef","deprecated":false,"deprecationMessage":""},{"name":"componentFactoryResolver","type":"ComponentFactoryResolver","deprecated":false,"deprecationMessage":""},{"name":"elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":""},{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":""},{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":""},{"name":"viewContainerRef","type":"ViewContainerRef","deprecated":false,"deprecationMessage":""},{"name":"dom","type":"DomSanitizer","deprecated":false,"deprecationMessage":""}],"line":33,"jsdoctags":[{"name":"appRef","type":"ApplicationRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"componentFactoryResolver","type":"ComponentFactoryResolver","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"injector","type":"Injector","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"viewContainerRef","type":"ViewContainerRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dom","type":"DomSanitizer","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnDestroy"],"accessors":{"documentUrl":{"name":"documentUrl","setSignature":{"name":"documentUrl","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":46,"rawdescription":"\\nThe URL of the document to display.","description":"<p>The URL of the document to display.</p>\\n","jsdoctags":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}}}},{"name":"ExpansionPanelComponent","id":"component-ExpansionPanelComponent-fdb5d1bba02972f9ce9538bab0829b36b642329d1f9f3723c8800feebd7ada47e57ac9352887e61d1a5b90c628e3463a1635193b86cf612ca58b00992b049a0c","file":"projects/rss-reader/src/app/components/expansion-panel/expansion-panel.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"expansion-panel","styleUrls":[],"styles":[],"templateUrl":["./expansion-panel.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"html","deprecated":false,"deprecationMessage":"","type":"SafeHtml","optional":false,"description":"","line":10}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\n\\n@Component({\\n  // eslint-disable-next-line @angular-eslint/component-selector\\n  selector: \'expansion-panel\',\\n  templateUrl: \'./expansion-panel.component.html\'\\n})\\nexport class ExpansionPanelComponent {\\n  html: SafeHtml;\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","templateData":"<mat-expansion-panel>\\n  <mat-expansion-panel-header>\\n    <mat-panel-title>Click on this panel to reveal/hide content</mat-panel-title>\\n  </mat-expansion-panel-header>\\n  <div [innerHTML]=\\"html\\"></div>\\n</mat-expansion-panel>\\n"},{"name":"FeedComponent","id":"component-FeedComponent-89cd8a0e49e07e5d02e0567c68551f69c2fc1fb50726abc5cc9c55e47a15bc2bd70e04da4c4e9517dd22afbb56659c378fd981ae56e77f497d77856054caa5bb","file":"projects/rss-reader/src/app/feed/feed.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-feed","styleUrls":[],"styles":[],"templateUrl":["./feed.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"errorObject","defaultValue":"new Subject<HttpErrorResponse>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24},{"name":"feedItems$","deprecated":false,"deprecationMessage":"","type":"Observable<Rss2JsonResponseItem[]>","optional":false,"description":"","line":26},{"name":"isRefreshing","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23},{"name":"rss2JsonResponse$","deprecated":false,"deprecationMessage":"","type":"Observable<Rss2JsonResponse>","optional":false,"description":"","line":25},{"name":"rssToJsonServiceBaseUrl","defaultValue":"\'https://api.rss2json.com/v1/api.json\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":27},{"name":"shortcutHandlers","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Subscription[]","optional":false,"description":"","line":29}],"methodsClass":[{"name":"getFeed","args":[{"name":"options","type":"Rss2JsonParams","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"options","type":"Rss2JsonParams","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":155,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":148,"deprecated":false,"deprecationMessage":""},{"name":"openCodeViewerDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":""},{"name":"openRSSInfoDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":""},{"name":"reload","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":""},{"name":"reloadFeed","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":104,"deprecated":false,"deprecationMessage":""},{"name":"selectRss","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":138,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { HttpClient, HttpErrorResponse, HttpParams } from \'@angular/common/http\';\\nimport { Component, OnDestroy, OnInit } from \'@angular/core\';\\nimport { MatDialog } from \'@angular/material/dialog\';\\nimport { Observable, Subject, Subscription, throwError } from \'rxjs\';\\nimport { catchError, map, tap } from \'rxjs/operators\';\\n\\nimport { ActionItemService } from \'../actionitem.service\';\\nimport { DialogsService } from \'../core/dialogs/dialogs.service\';\\nimport { CodeViewerDialogComponent, FeedDialogComponent, RSSChannelInfoDialogComponent } from \'../dialogs\';\\nimport { HotkeysService } from \'../hotkeys/hotkeys.service\';\\nimport { Rss2JsonResponseItem } from \'../models/rss2json-api/item\';\\nimport { migrateKeys } from \'../models/rss2json-api/migrate-keys\';\\nimport { Rss2JsonParams } from \'../models/rss2json-api/params\';\\nimport { Rss2JsonResponse } from \'../models/rss2json-api/response\';\\nimport { SharedService } from \'../shared.service\';\\n\\n\\n@Component({\\n  selector: \'app-feed\',\\n  templateUrl: \'./feed.component.html\'\\n})\\nexport class FeedComponent implements OnDestroy, OnInit {\\n  isRefreshing = true;\\n  errorObject = new Subject<HttpErrorResponse>();\\n  rss2JsonResponse$: Observable<Rss2JsonResponse>;\\n  feedItems$: Observable<Rss2JsonResponseItem[]>;\\n  rssToJsonServiceBaseUrl = \'https://api.rss2json.com/v1/api.json\';\\n  // See https://stackoverflow.com/a/12444641 for more info\\n  shortcutHandlers: Subscription[] = [];\\n  constructor(\\n    private coreDialogs: DialogsService,\\n    private dialog: MatDialog,\\n    private http: HttpClient,\\n    private shared: SharedService,\\n    private actionItemService: ActionItemService,\\n    private hotkeys: HotkeysService\\n  ) {\\n    const refreshShortcut = hotkeys.addShortcut({ keys: \'r\', description: \'Refresh the feed\', shortcutBlacklistEls: [\'input\', \'textarea\'] })\\n      .subscribe(() => {\\n        this.reloadFeed();\\n      });\\n    this.shortcutHandlers.push(refreshShortcut);\\n    this.actionItemService.addActionItem({\\n      title: \'RSS Options...\', icon: \'tune\', showAsAction: true, onClickListener: () => {\\n        this.selectRss();\\n      }\\n    });\\n    this.actionItemService.addActionItem({\\n      title: \'Refresh feed\',\\n      icon: \'sync\',\\n      showAsAction: true,\\n      onClickListener: () => {\\n        this.reloadFeed();\\n      }\\n    });\\n    this.actionItemService.addActionItem({\\n      title: \'View API response\',\\n      icon: \'code\',\\n      onClickListener: () => {\\n        this.openCodeViewerDialog();\\n      }\\n    });\\n  }\\n\\n  openRSSInfoDialog() {\\n    this.dialog.open(RSSChannelInfoDialogComponent);\\n  }\\n\\n  openCodeViewerDialog() {\\n    this.rss2JsonResponse$.subscribe(res => {\\n      this.dialog.open(CodeViewerDialogComponent, {\\n        data: res\\n      });\\n    }, error => {\\n      this.shared.openSnackBar({\\n        msg: \'Could not view API response because an error occurred. Please try again later\'\\n      });\\n      console.error(\'Could not view API response:\', error);\\n    });\\n  }\\n\\n  reload() {\\n    this.coreDialogs.openConfirmDialog({\\n      msg: \'Are you sure you want to refresh? Changes will not be saved!\',\\n      title: \'Reload?\'\\n    }).afterClosed().subscribe(result => {\\n      if (result === \'ok\') {\\n        window.location.reload();\\n      }\\n    });\\n  }\\n\\n  getFeed(options: Rss2JsonParams) {\\n    let params = new HttpParams();\\n    for (const key in options) {\\n      if (options[key] !== null) {\\n        // HttpParams is immutable, so we have to manually set the new value\\n        params = params.append(key, options[key]);\\n      }\\n    }\\n    return this.http.get<Rss2JsonResponse>(this.rssToJsonServiceBaseUrl, { params });\\n  }\\n\\n  reloadFeed() {\\n    let params: Rss2JsonParams = {\\n      // eslint-disable-next-line @typescript-eslint/naming-convention\\n      rss_url: \'\'\\n    };\\n    if (localStorage.feedOptions) {\\n      if (\'feedUrl\' in JSON.parse(localStorage.feedOptions)) {\\n        // feedOptions is using the old values - so we migrate the values\\n        const migratedOpts: Partial<Rss2JsonParams> = {};\\n\\n        const opts = JSON.parse(localStorage.feedOptions) as FeedOptions;\\n        for (const key in opts) {\\n          if (opts[key] !== null) {\\n            migratedOpts[migrateKeys[key]] = opts[key];\\n          }\\n        }\\n        console.log(\'Old feed options:\', opts);\\n        console.log(\'Migrated feed options:\', migratedOpts);\\n        localStorage.feedOptions = JSON.stringify(migratedOpts);\\n      }\\n      params = JSON.parse(localStorage.feedOptions) as Rss2JsonParams;\\n    }\\n    this.isRefreshing = true;\\n    this.errorObject.next(null);\\n    this.rss2JsonResponse$ = this.getFeed(params).pipe(tap(() => {\\n      this.isRefreshing = false;\\n    }), catchError(error => {\\n      this.errorObject.next(error);\\n      console.error(\'An error occurred:\', error);\\n      return throwError(error);\\n    }));\\n    this.feedItems$ = this.rss2JsonResponse$.pipe(map(res => res.items));\\n  }\\n\\n  selectRss() {\\n    const dialogRef = this.dialog.open(FeedDialogComponent);\\n    dialogRef.afterClosed().subscribe(result => {\\n      if (result !== \'save\' && typeof result === \'object\') {\\n        localStorage.feedOptions = JSON.stringify(result);\\n        this.reloadFeed();\\n      }\\n    });\\n  }\\n\\n  ngOnInit() {\\n    if (!localStorage.feedOptions) {\\n      this.selectRss();\\n    }\\n    this.reloadFeed();\\n  }\\n\\n  ngOnDestroy() {\\n    if (this.shortcutHandlers.length > 0) {\\n      this.shortcutHandlers.forEach((handler) => {\\n        handler.unsubscribe();\\n      });\\n    }\\n  }\\n\\n}\\n\\nexport interface FeedOptions {\\n  feedUrl?: string;\\n  apiKey?: string;\\n  amount?: number;\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"coreDialogs","type":"DialogsService","deprecated":false,"deprecationMessage":""},{"name":"dialog","type":"MatDialog","deprecated":false,"deprecationMessage":""},{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":""},{"name":"shared","type":"SharedService","deprecated":false,"deprecationMessage":""},{"name":"actionItemService","type":"ActionItemService","deprecated":false,"deprecationMessage":""},{"name":"hotkeys","type":"HotkeysService","deprecated":false,"deprecationMessage":""}],"line":29,"jsdoctags":[{"name":"coreDialogs","type":"DialogsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dialog","type":"MatDialog","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"shared","type":"SharedService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"actionItemService","type":"ActionItemService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"hotkeys","type":"HotkeysService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnDestroy","OnInit"],"templateData":"<ng-container *ngIf=\\"feedItems$ | async as feedItems; else: errorOrLoading\\">\\n  <div class=\\"rss-reader-cards-container\\">\\n    <app-article-card [article]=\\"feed\\" *ngFor=\\"let feed of feedItems\\" class=\\"rss-reader-card\\"></app-article-card>\\n  </div>\\n</ng-container>\\n<ng-template #errorOrLoading>\\n  <div class=\\"center\\">\\n    <ng-container *ngIf=\\"errorObject | async as error; else: loading\\">\\n      <ng-container *ngIf=\\"error?.error?.message\\">\\n        <p>An error occurred:</p>\\n        <p><code>{{ error?.error?.message }}</code></p>\\n      </ng-container>\\n      <ng-container *ngIf=\\"!error?.error || !error?.error?.message\\">\\n        <p>An unknown error occurred.</p>\\n      </ng-container>\\n      <p>Status code: {{ error?.status }}</p>\\n      <button mat-button [matMenuTriggerFor]=\\"moreMenu\\">Options\\n        <mat-icon>arrow_drop_down</mat-icon>\\n      </button>\\n      <mat-menu [overlapTrigger]=\\"false\\" #moreMenu=\\"matMenu\\">\\n        <button mat-menu-item (click)=\\"reload()\\">\\n          <mat-icon>refresh</mat-icon>Reload page\\n        </button>\\n        <button mat-menu-item (click)=\\"reloadFeed()\\">\\n          <mat-icon>sync</mat-icon>Refresh feed\\n        </button>\\n        <button mat-menu-item (click)=\\"selectRss()\\">\\n          <mat-icon>rss_feed</mat-icon> Reselect RSS\\n        </button>\\n      </mat-menu>\\n    </ng-container>\\n    <ng-template #loading>\\n      <p>Loading&#8320;</p>\\n      <mat-spinner class=\\"start-indicator\\"></mat-spinner>\\n    </ng-template>\\n  </div>\\n</ng-template>\\n"},{"name":"FeedDialogComponent","id":"component-FeedDialogComponent-7242db39787c03a33ebe37c572f15723b58cc9fafe836327930feb6fef92edac0086542c92bb4723835b66e5b9b8a126349687feb0ba6060e8e041ea5d5ee07e","file":"projects/rss-reader/src/app/dialogs/feed-dialog/feed-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-feed-dialog","styleUrls":["./feed-dialog.component.scss"],"styles":[],"templateUrl":["./feed-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"feedCategory","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":36},{"name":"feeds","defaultValue":"feedUrlsJson.feedUrls","deprecated":false,"deprecationMessage":"","type":"FeedCategory[]","optional":false,"description":"<p>The list of feeds\\nAvailable at {@link <code>/assets/feedurls.json</code>}</p>\\n","line":31,"rawdescription":"\\n\\nThe list of feeds\\nAvailable at {@link `/assets/feedurls.json`}\\n"},{"name":"feedUrlChannel","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The feed URL channel for the publishing</p>\\n","line":35,"rawdescription":"\\n\\nThe feed URL channel for the publishing\\n"},{"name":"feedUrlValue","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":38},{"name":"filteredOptions","deprecated":false,"deprecationMessage":"","type":"Observable<FeedCategory[]>","optional":false,"description":"","line":37},{"name":"orderByOptions","defaultValue":"[\\n    {\\n      title: \'None\',\\n      value: \'\'\\n    },\\n    {\\n      title: \'Published date\',\\n      value: \'pubDate\'\\n    },\\n    {\\n      title: \'Author\',\\n      value: \'author\'\\n    },\\n    {\\n      title: \'Title\',\\n      value: \'title\'\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":40},{"name":"orderDirOptions","defaultValue":"[\\n    {\\n      title: \'Default (Descending order)\',\\n      value: \'\'\\n    },\\n    {\\n      title: \'Ascending order\',\\n      value: \'asc\'\\n    },\\n    {\\n      title: \'Descending order\',\\n      value: \'desc\'\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":58},{"name":"rssFeedForm","deprecated":false,"deprecationMessage":"","type":"FeedForm","optional":false,"description":"","line":39}],"methodsClass":[{"name":"filterFeeds","args":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FeedCategory[]","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":94,"deprecated":false,"deprecationMessage":""},{"name":"openSubmitRssDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":113,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\nimport { FeedCategory } from \'../../models/feed-category\';\\nimport { FormGroup, FormBuilder, Validators, FormControl } from \'@angular/forms\';\\nimport { MatDialogRef, MatDialog } from \'@angular/material/dialog\';\\nimport { Observable } from \'rxjs\';\\nimport { map, startWith } from \'rxjs/operators\';\\nimport { SubmitRssDialogComponent } from \'../submit-rss-dialog/submit-rss-dialog.component\';\\nimport feedUrlsJson from \'../../../assets/feedurls.json\';\\n\\n/* eslint-disable @typescript-eslint/naming-convention */\\n// TODO: Use camelCase\\ntype FeedForm = FormGroup<{\\n  rss_url: FormControl<string | null>;\\n  api_key: FormControl<string | null>;\\n  order_by: FormControl<string | null>;\\n  order_dir: FormControl<string | null>;\\n  count: FormControl<number | null>;\\n}>;\\n/* eslint-enable @typescript-eslint/naming-convention */\\n@Component({\\n  selector: \'app-feed-dialog\',\\n  templateUrl: \'./feed-dialog.component.html\',\\n  styleUrls: [\'./feed-dialog.component.scss\']\\n})\\nexport class FeedDialogComponent implements OnInit {\\n  /**\\n   * The list of feeds\\n   * Available at {@link `/assets/feedurls.json`}\\n   */\\n  feeds: FeedCategory[] = feedUrlsJson.feedUrls;\\n  /**\\n   * The feed URL channel for the publishing\\n   */\\n  feedUrlChannel: string;\\n  feedCategory: string;\\n  filteredOptions: Observable<FeedCategory[]>;\\n  feedUrlValue = \'\';\\n  rssFeedForm: FeedForm;\\n  orderByOptions = [\\n    {\\n      title: \'None\',\\n      value: \'\'\\n    },\\n    {\\n      title: \'Published date\',\\n      value: \'pubDate\'\\n    },\\n    {\\n      title: \'Author\',\\n      value: \'author\'\\n    },\\n    {\\n      title: \'Title\',\\n      value: \'title\'\\n    }\\n  ];\\n  orderDirOptions = [\\n    {\\n      title: \'Default (Descending order)\',\\n      value: \'\'\\n    },\\n    {\\n      title: \'Ascending order\',\\n      value: \'asc\'\\n    },\\n    {\\n      title: \'Descending order\',\\n      value: \'desc\'\\n    }\\n  ];\\n\\n  constructor(\\n    dialogRef: MatDialogRef<FeedDialogComponent>,\\n    fb: FormBuilder,\\n    private dialog: MatDialog\\n  ) {\\n    dialogRef.disableClose = true;\\n    /* eslint-disable @typescript-eslint/naming-convention */\\n    this.rssFeedForm = fb.group({\\n      rss_url: [\'\', Validators.required],\\n      api_key: [\'\', [Validators.required, Validators.maxLength(40), Validators.minLength(40)]],\\n      order_by: \'\',\\n      order_dir: \'\',\\n      count: 10 // The default value\\n    });\\n    /* eslint-enable @typescript-eslint/naming-convention */\\n    this.filteredOptions = this.rssFeedForm.get(\'rss_url\').valueChanges\\n      .pipe(\\n        startWith(\'\'),\\n        map(value => this.filterFeeds(value))\\n      );\\n  }\\n  ngOnInit() {\\n    if (window.localStorage.getItem(\'feedOptions\')) {\\n      this.rssFeedForm.patchValue(JSON.parse(window.localStorage.getItem(\'feedOptions\')));\\n    }\\n  }\\n\\n  filterFeeds(name: string): FeedCategory[] {\\n    return this.feeds.reduce((feeds, feed) => {\\n      const channels = feed.channels.filter(\\n        channel => channel.feedName.includes(name) || channel.feedUrl.includes(name)\\n      );\\n      // Only add the filtered feed channels if there were any results\\n      if (channels.length > 0) {\\n        feeds.push({ ...feed, channels });\\n      }\\n      return feeds;\\n    }, [] as FeedCategory[]);\\n  }\\n\\n  openSubmitRssDialog() {\\n    this.dialog.open(SubmitRssDialogComponent, {\\n      data: { feedUrl: this.rssFeedForm.get(\'feedUrl\').value }\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".feed-dialog--container form {\\n  display: flex;\\n  flex-direction: column;\\n}\\n","styleUrl":"./feed-dialog.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"dialogRef","type":"MatDialogRef<FeedDialogComponent>","deprecated":false,"deprecationMessage":""},{"name":"fb","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"dialog","type":"MatDialog","deprecated":false,"deprecationMessage":""}],"line":71,"jsdoctags":[{"name":"dialogRef","type":"MatDialogRef<FeedDialogComponent>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"fb","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dialog","type":"MatDialog","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<h2 matDialogTitle>RSS Config</h2>\\n<mat-dialog-content class=\\"feed-dialog--container\\">\\n  <form [formGroup]=\\"rssFeedForm\\">\\n    <p>Select from one of the options or enter a RSS feed URL:</p>\\n    <mat-form-field color=\\"accent\\">\\n      <mat-label>RSS feed URL</mat-label>\\n      <input matInput [matAutocomplete]=\\"rssFeedAuto\\" formControlName=\\"rss_url\\">\\n      <mat-autocomplete #rssFeedAuto=\\"matAutocomplete\\">\\n        <mat-optgroup [label]=\\"feed.categoryName\\" *ngFor=\\"let feed of filteredOptions | async\\">\\n          <mat-option *ngFor=\\"let channel of feed.channels\\" [value]=\\"channel.feedUrl\\" class=\\"autocomplete-option\\">\\n            <span>{{channel?.feedName}}</span> |\\n            <span>{{channel?.feedUrl}}</span>\\n          </mat-option>\\n        </mat-optgroup>\\n      </mat-autocomplete>\\n      <mat-error>This is required.</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label>API key</mat-label>\\n      <input matInput formControlName=\\"api_key\\">\\n      <mat-error *ngIf=\\"rssFeedForm.get(\'api_key\')?.hasError(\'required\')\\">This is required.</mat-error>\\n      <mat-error *ngIf=\\"rssFeedForm.get(\'api_key\')?.hasError(\'minlength\') || rssFeedForm.get(\'api_key\')?.hasError(\'maxlength\')\\">Please enter a valid API key.</mat-error>\\n      <a mat-icon-button matSuffix routerLink=\\"/doc/guides/generate-api-key\\" matTooltip=\\"How to generate a key\\" target=\\"_blank\\">\\n        <mat-icon>help</mat-icon>\\n      </a>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label>Order results by&#8320;</mat-label>\\n      <mat-select formControlName=\\"order_by\\">\\n        <mat-option *ngFor=\\"let option of orderByOptions\\" [value]=\\"option.value\\">{{ option.title }}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label>Order results in</mat-label>\\n      <mat-select formControlName=\\"order_dir\\">\\n        <mat-option *ngFor=\\"let option of orderDirOptions\\" [value]=\\"option.value\\">{{ option.title }}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label>Max. number of posts</mat-label>\\n      <input matInput formControlName=\\"count\\" type=\\"number\\" min=\\"1\\" max=\\"100\\">\\n      <mat-hint>(Default: 10)</mat-hint>\\n    </mat-form-field>\\n  </form>\\n</mat-dialog-content>\\n<mat-dialog-actions>\\n  <button mat-button color=\\"accent\\" (click)=\\"openSubmitRssDialog()\\">Submit RSS URL</button>\\n  <span class=\\"flex--spacer\\"></span>\\n  <button mat-button color=\\"primary\\" matDialogClose=\\"cancel\\">Cancel</button>\\n  <button mat-button color=\\"primary\\" [matDialogClose]=\\"rssFeedForm.value\\" [disabled]=\\"rssFeedForm.invalid\\">Save</button>\\n</mat-dialog-actions>\\n"},{"name":"GuidesListComponent","id":"component-GuidesListComponent-4f823d9adcabdf66b711f2572242686cb316d92d40f4f66f029de5308020684c73265c0180216c22a9890ff4f17d39f3a246cb0c3c936b6e94a8e9e03fc266fa","file":"projects/rss-reader/src/app/pages/guide-list/guide-list.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-guide-list","styleUrls":[],"styles":[],"templateUrl":["guide-list.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"guideItems","deprecated":false,"deprecationMessage":"","type":"GuideItem[]","optional":false,"description":"","line":9}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { GuideItem, GuideItemsService } from \'../../guide-items\';\\n\\n@Component({\\n  selector: \'app-guide-list\',\\n  templateUrl: \'guide-list.component.html\'\\n})\\nexport class GuidesListComponent implements OnInit {\\n  guideItems: GuideItem[];\\n  // devItems: GuideItem[];\\n  constructor(private itemsService: GuideItemsService) {}\\n  ngOnInit() {\\n    this.guideItems = this.itemsService.getGuideItems();\\n    // this.devItems = this.itemsService.getDevItems();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"itemsService","type":"GuideItemsService","deprecated":false,"deprecationMessage":""}],"line":9,"jsdoctags":[{"name":"itemsService","type":"GuideItemsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div class=\\"app-content\\">\\n  <mat-nav-list>\\n    <h3 matSubheader>Guides</h3>\\n    <a mat-list-item *ngFor=\\"let guideItem of guideItems\\" [routerLink]=\\"[\'/\'+guideItem.url]\\" >\\n      {{guideItem.name}}\\n    </a>\\n  </mat-nav-list>\\n</div>\\n"},{"name":"GuideViewerComponent","id":"component-GuideViewerComponent-b9603423b2ad11395ab8d7ea11c01d96c363e33746b59245d9e438fd3ef591cc551b585db2dcc5f764655f965bb6a20120e69c1fe4634b7eda18747ba9357d9e","file":"projects/rss-reader/src/app/pages/guide-viewer/guide-viewer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-guide-viewer","styleUrls":[],"styles":[],"templateUrl":["guide-viewer.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"docUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":11}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\nimport { GuideItemsService } from \'./../../guide-items\';\\n\\n@Component({\\n  selector: \'app-guide-viewer\',\\n  templateUrl: \'guide-viewer.component.html\'\\n})\\nexport class GuideViewerComponent {\\n\\n  docUrl: string;\\n  constructor(private route: ActivatedRoute,\\n    private router: Router, private guideItems: GuideItemsService) {\\n    route.params.subscribe(result => {\\n      if (result.docTypeId === \'guides\') {\\n        this.docUrl = guideItems.getGuideItemById(result.docId).document;\\n      /* } else if (result.docTypeId === \'dev\') {\\n        this.docUrl = guideItems.getDevItemById(result.docId).document; */\\n      } else {\\n        console.warn(\'Invalid URL. Heading back to docs list page..\');\\n        this.router.navigate([\'/docs\']);\\n      }\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"guideItems","type":"GuideItemsService","deprecated":false,"deprecationMessage":""}],"line":11,"jsdoctags":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"guideItems","type":"GuideItemsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<div class=\\"app-content mat-typography\\">\\n  <app-doc-viewer [documentUrl]=\\"docUrl\\"></app-doc-viewer>\\n</div>\\n"},{"name":"HeadlineOptionsDialogComponent","id":"component-HeadlineOptionsDialogComponent-49916e78d7015a834f5361602211a931b5abd7729119964034e4d5ef46bf3d28f9410a612ce4f68b124f4c35699c0d3dd9e2324601bed520c6ff2b881dc68e63","file":"projects/rss-reader/src/app/dialogs/headline-options-dialog/headline-options-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-headline-options-dialog","styleUrls":["./headline-options-dialog.component.scss"],"styles":[],"templateUrl":["./headline-options-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"categories","defaultValue":"[\'business\', \'entertainment\', \'general\', \'health\', \'science\', \'sports\', \'technology\']","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":45},{"name":"filteredOptions","deprecated":false,"deprecationMessage":"","type":"Observable<RestCountriesAPICountry[]>","optional":false,"description":"","line":43},{"name":"headlineOptForm","deprecated":false,"deprecationMessage":"","type":"HeadlineForm","optional":false,"description":"","line":44},{"name":"headlineOpts","deprecated":false,"deprecationMessage":"","type":"HeadlineOptions","optional":false,"description":"","line":49,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[123]}],"methodsClass":[{"name":"getCountries","args":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<RestCountriesAPICountry[]>","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"name","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, Inject } from \'@angular/core\';\\nimport { FormBuilder, FormControl, FormGroup, Validators } from \'@angular/forms\';\\nimport { Observable } from \'rxjs\';\\nimport { RestCountriesAPICountry } from \'../../models/rest-countries-api\';\\nimport { switchMap } from \'rxjs/operators\';\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\n\\ntype HeadlineForm = FormGroup<{\\n  apiKey: FormControl<string | null>;\\n  q: FormControl<string | null>;\\n  country: FormControl<string | null>;\\n  category: FormControl<string | null>;\\n  pageSize: FormControl<number | null>;\\n}>;\\n\\nexport interface HeadlineOptions {\\n  /**\\n   * The API key\\n   */\\n  apiKey?: string;\\n  /**\\n   * A country code\\n   */\\n  country?: string;\\n  /**\\n   * The category to fetch\\n   */\\n  category?: string;\\n  /**\\n   * The number of articles to return\\n   */\\n  pageSize?: number;\\n}\\n\\n@Component({\\n  selector: \'app-headline-options-dialog\',\\n  templateUrl: \'./headline-options-dialog.component.html\',\\n  styleUrls: [\'./headline-options-dialog.component.scss\']\\n})\\nexport class HeadlineOptionsDialogComponent implements OnInit {\\n\\n  filteredOptions: Observable<RestCountriesAPICountry[]>;\\n  headlineOptForm: HeadlineForm;\\n  categories = [\'business\', \'entertainment\', \'general\', \'health\', \'science\', \'sports\', \'technology\'];\\n  constructor(\\n    fb: FormBuilder,\\n    private http: HttpClient,\\n    @Inject(MAT_DIALOG_DATA) public headlineOpts: HeadlineOptions\\n  ) {\\n    this.headlineOptForm = fb.group({\\n      apiKey: [\'\', Validators.required],\\n      q: \'\',\\n      country: \'\',\\n      // country: [\'\', [Validators.required, Validators.minLength(2), Validators.maxLength(2)]],\\n      category: \'\',\\n      pageSize: 20\\n    });\\n  }\\n\\n  ngOnInit() {\\n    if (this.headlineOpts) {\\n      this.headlineOptForm.patchValue(this.headlineOpts);\\n    }\\n    setTimeout(() => {\\n      this.filteredOptions = this.headlineOptForm.get(\'country\').valueChanges\\n        .pipe(\\n          // debounceTime(150),\\n          switchMap(value => this.getCountries(value))\\n        );\\n    });\\n  }\\n  getCountries(name: string): Observable<RestCountriesAPICountry[]> {\\n    return this.http.get<RestCountriesAPICountry[]>(`https://restcountries.eu/rest/v2/name/${encodeURIComponent(name)}`);\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".headline-opts-dialog--container form {\\n  display: flex;\\n  flex-direction: column;\\n}\\n","styleUrl":"./headline-options-dialog.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"fb","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":""},{"name":"headlineOpts","type":"HeadlineOptions","deprecated":false,"deprecationMessage":""}],"line":45,"jsdoctags":[{"name":"fb","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"headlineOpts","type":"HeadlineOptions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<h2 matDialogTitle>Headlines options</h2>\\n<mat-dialog-content class=\\"headline-opts-dialog--container\\">\\n  <form [formGroup]=\\"headlineOptForm\\">\\n    <mat-form-field>\\n      <mat-label>API Key</mat-label>\\n      <input matInput formControlName=\\"apiKey\\">\\n      <a mat-icon-button href=\\"https://newsapi.org/register\\" target=\\"_blank\\" matTooltip=\\"Get API Key\\" matSuffix><mat-icon>open_in_new</mat-icon></a>\\n      <mat-error>This is required.</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label>Query</mat-label>\\n      <input matInput formControlName=\\"q\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label>Country</mat-label>\\n      <input matInput formControlName=\\"country\\" [matAutocomplete]=\\"countryAutocomplete\\">\\n      <mat-autocomplete #countryAutocomplete=\\"matAutocomplete\\">\\n        <mat-option *ngFor=\\"let country of filteredOptions | async\\" [value]=\\"country?.alpha2Code\\" class=\\"autocomplete-option\\">\\n          <img class=\\"autocomplete-option-img\\" aria-hidden [src]=\\"country?.flag\\" height=\\"25\\">\\n          <span>{{country?.name}}</span>\\n        </mat-option>\\n      </mat-autocomplete>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label>Category</mat-label>\\n      <mat-select formControlName=\\"category\\">\\n        <mat-option *ngFor=\\"let category of categories\\" [value]=\\"category\\">{{ category | titlecase }}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label>Max. no. of articles</mat-label>\\n      <input matInput formControlName=\\"pageSize\\" type=\\"number\\" min=\\"20\\" max=\\"100\\">\\n    </mat-form-field>\\n  </form>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\"end\\">\\n  <button mat-button color=\\"primary\\" matDialogClose=\\"cancel\\">Cancel</button>\\n  <button mat-button color=\\"primary\\" [matDialogClose]=\\"headlineOptForm.value\\" [disabled]=\\"headlineOptForm.invalid\\">Save</button>\\n</mat-dialog-actions>\\n"},{"name":"HeadlinesComponent","id":"component-HeadlinesComponent-d5eff8a9dfec3fb718fedd0e0b8206fa3429991306995f56d3f00ed8be2857432430ba6c7aafd1f07ff8fcc91080b7aaa6efc36ca4e4f3ebe4870e9f2d7912d8","file":"projects/rss-reader/src/app/headlines/headlines.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-headlines","styleUrls":[],"styles":[],"templateUrl":["./headlines.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"errorObject","defaultValue":"new Subject<HttpErrorResponse>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19},{"name":"headlineAPIEndpoint","defaultValue":"\'https://newsapi.org/v2/top-headlines\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":18,"modifierKind":[144]},{"name":"headlines$","deprecated":false,"deprecationMessage":"","type":"Observable<NewsAPITopHeadlines>","optional":false,"description":"","line":20},{"name":"headlinesOpts","deprecated":false,"deprecationMessage":"","type":"NewsAPITopHeadlinesOpts","optional":false,"description":"","line":21},{"name":"shortcutHandlers","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Subscription[]","optional":false,"description":"","line":22}],"methodsClass":[{"name":"getHeadlines","args":[{"name":"options","type":"NewsAPITopHeadlinesOpts","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<NewsAPITopHeadlines>","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"options","type":"NewsAPITopHeadlinesOpts","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":118,"deprecated":false,"deprecationMessage":""},{"name":"openCodeViewerDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":85,"deprecated":false,"deprecationMessage":""},{"name":"openHeadlineOptsDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":64,"deprecated":false,"deprecationMessage":""},{"name":"reloadHeadlines","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":109,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { HttpClient, HttpErrorResponse, HttpParams } from \'@angular/common/http\';\\nimport { Component, OnDestroy, OnInit } from \'@angular/core\';\\nimport { MatDialog, MatDialogConfig } from \'@angular/material/dialog\';\\nimport { Observable, Subject, throwError, Subscription } from \'rxjs\';\\nimport { ActionItemService } from \'../actionitem.service\';\\nimport { HeadlineOptions, HeadlineOptionsDialogComponent, CodeViewerDialogComponent } from \'../dialogs\';\\nimport { NewsAPITopHeadlines, NewsAPITopHeadlinesOpts } from \'../models/news-api/top-headlines\';\\nimport { SharedService } from \'../shared.service\';\\nimport { catchError } from \'rxjs/operators\';\\nimport { HotkeysService } from \'../hotkeys/hotkeys.service\';\\n\\n@Component({\\n  selector: \'app-headlines\',\\n  templateUrl: \'./headlines.component.html\',\\n})\\nexport class HeadlinesComponent implements OnDestroy, OnInit {\\n\\n  readonly headlineAPIEndpoint = \'https://newsapi.org/v2/top-headlines\';\\n  errorObject = new Subject<HttpErrorResponse>();\\n  headlines$: Observable<NewsAPITopHeadlines>;\\n  headlinesOpts: NewsAPITopHeadlinesOpts;\\n  shortcutHandlers: Subscription[] = [];\\n  constructor(\\n    hotkeys: HotkeysService,\\n    private shared: SharedService,\\n    private dialog: MatDialog,\\n    actionItemService: ActionItemService,\\n    private http: HttpClient\\n  ) {\\n    shared.title = \'Headlines\';\\n    const refreshShortcut = hotkeys.addShortcut({ keys: \'r\',\\n      description: \'Refresh headlines\',\\n      shortcutBlacklistEls: [\'input\', \'textarea\'] })\\n      .subscribe(() => {\\n        this.reloadHeadlines();\\n      });\\n    this.shortcutHandlers.push(refreshShortcut);\\n    actionItemService.addActionItem({\\n      title: \'Options\',\\n      icon: \'tune\',\\n      showAsAction: true,\\n      onClickListener: () => {\\n        this.openHeadlineOptsDialog();\\n      }\\n    });\\n    actionItemService.addActionItem({\\n      title: \'Refresh headlines\',\\n      icon: \'sync\',\\n      showAsAction: true,\\n      onClickListener: () => {\\n        this.reloadHeadlines();\\n      }\\n    });\\n    actionItemService.addActionItem({\\n      title: \'View API response\',\\n      icon: \'code\',\\n      showAsAction: false,\\n      onClickListener: () => {\\n        this.openCodeViewerDialog();\\n      }\\n    });\\n  }\\n\\n  openHeadlineOptsDialog() {\\n    const dialogConfig = new MatDialogConfig<HeadlineOptions>();\\n    if (localStorage.getItem(\'headlineOpts\')) {\\n      const headlineOpts = JSON.parse(localStorage.getItem(\'headlineOpts\'));\\n\\n      if (\'topic\' in JSON.parse(localStorage.getItem(\'headlineOpts\'))) {\\n        delete headlineOpts.topic;\\n        localStorage.setItem(\'headlineOpts\', JSON.stringify(headlineOpts));\\n      }\\n      dialogConfig.data = JSON.parse(localStorage.getItem(\'headlineOpts\')) as HeadlineOptions;\\n    }\\n    const dialogRef = this.dialog.open(HeadlineOptionsDialogComponent, dialogConfig);\\n    dialogRef.afterClosed().subscribe(result => {\\n      if (result !== \'cancel\' && typeof result === \'object\') {\\n        this.headlinesOpts = result as NewsAPITopHeadlinesOpts;\\n        localStorage.setItem(\'headlineOpts\', JSON.stringify(result));\\n        this.reloadHeadlines();\\n      }\\n    });\\n  }\\n\\n  openCodeViewerDialog() {\\n    this.headlines$.subscribe(headlines => {\\n      this.dialog.open(CodeViewerDialogComponent, {\\n        data: headlines\\n      });\\n    }, error => {\\n      this.shared.openSnackBar({\\n        msg: \'Could not view API response because an error occurred. Please try again later\'\\n      });\\n      console.error(\'Could not view API response:\', error);\\n    });\\n  }\\n\\n  getHeadlines(options: NewsAPITopHeadlinesOpts): Observable<NewsAPITopHeadlines> {\\n    let params = new HttpParams();\\n    for (const key in options) {\\n      if (options[key] !== null) {\\n        // HttpParams is immutable, so we have to manually set the new value\\n        params = params.append(key, options[key]);\\n      }\\n    }\\n    return this.http.get<NewsAPITopHeadlines>(this.headlineAPIEndpoint, { params });\\n  }\\n\\n  reloadHeadlines() {\\n    this.errorObject.next(null);\\n    this.headlines$ = this.getHeadlines(this.headlinesOpts).pipe(catchError(error => {\\n      this.errorObject.next(error);\\n      console.error(\'An error occurred:\', error);\\n      return throwError(error);\\n    }));\\n  }\\n\\n  ngOnInit() {\\n    if (localStorage.getItem(\'headlineOpts\')) {\\n      try {\\n        this.headlinesOpts = JSON.parse(localStorage.getItem(\'headlineOpts\')) as NewsAPITopHeadlinesOpts;\\n        this.reloadHeadlines();\\n      } catch (error) {\\n        console.warn(`Oops! An error occured while getting settings for headlines! The error: ${error}`);\\n        this.openHeadlineOptsDialog();\\n      }\\n    } else {\\n      this.openHeadlineOptsDialog();\\n    }\\n  }\\n\\n  ngOnDestroy() {\\n    this.shortcutHandlers.forEach(handler => handler.unsubscribe());\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"hotkeys","type":"HotkeysService","deprecated":false,"deprecationMessage":""},{"name":"shared","type":"SharedService","deprecated":false,"deprecationMessage":""},{"name":"dialog","type":"MatDialog","deprecated":false,"deprecationMessage":""},{"name":"actionItemService","type":"ActionItemService","deprecated":false,"deprecationMessage":""},{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":22,"jsdoctags":[{"name":"hotkeys","type":"HotkeysService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"shared","type":"SharedService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dialog","type":"MatDialog","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"actionItemService","type":"ActionItemService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnDestroy","OnInit"],"templateData":"<div class=\\"rss-reader-cards-container\\" *ngIf=\\"headlines$ | async as headlines; else: errorOrLoading\\">\\n  <app-article-card *ngFor=\\"let article of headlines?.articles\\" [article]=\\"article\\" class=\\"rss-reader-card\\"></app-article-card>\\n</div>\\n<ng-template #errorOrLoading>\\n  <div class=\\"center\\">\\n    <ng-container *ngIf=\\"errorObject | async as error; else: loading\\">\\n      <ng-container *ngIf=\\"error?.error?.message\\">\\n        <p>An error occurred:</p>\\n        <p><code>{{ error?.error?.message }}</code></p>\\n      </ng-container>\\n      <ng-container *ngIf=\\"!error?.error || !error?.error?.message\\">\\n        <p>An unknown error occurred.</p>\\n      </ng-container>\\n      <p>Status code: {{ error?.status }}</p>\\n    </ng-container>\\n    <ng-template #loading>\\n      <p>Loading&#8320;</p>\\n      <mat-spinner class=\\"start-indicator\\"></mat-spinner>\\n    </ng-template>\\n  </div>\\n</ng-template>\\n\\n"},{"name":"HotkeyHelpDialogComponent","id":"component-HotkeyHelpDialogComponent-70a6101a9c11d0c0c7ada8ea049b45f9ede92f60b9b480014cac91078ec1dbd1d03b13b8a141e8c912f9151671db5a23bc5c8c3c601105cd36aa82077f0e0d6c","file":"projects/rss-reader/src/app/hotkeys/hotkey-help-dialog/hotkey-help-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-hotkey-help-dialog","styleUrls":[],"styles":["\\n  table {\\n    font-size: 14px;\\n  }\\n  "],"templateUrl":["./hotkey-help-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"data","deprecated":false,"deprecationMessage":"","type":"Map<string | string>","optional":false,"description":"","line":16,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[123]},{"name":"hotkeys","defaultValue":"Array.from(this.data)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14}],"methodsClass":[{"name":"capitalise","args":[{"name":"str","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":"","modifierKind":[121],"jsdoctags":[{"name":"str","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getDisplayedShortcut","args":[{"name":"keys","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string[]","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"keys","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Inject } from \'@angular/core\';\\nimport { MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\n\\n@Component({\\n  selector: \'app-hotkey-help-dialog\',\\n  templateUrl: \'./hotkey-help-dialog.component.html\',\\n  styles: [`\\n  table {\\n    font-size: 14px;\\n  }\\n  `]\\n})\\nexport class HotkeyHelpDialogComponent {\\n  hotkeys = Array.from(this.data);\\n\\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Map<string, string>) {}\\n\\n  getDisplayedShortcut(keys: string): string[] {\\n    const result = [];\\n    const keysArray = keys.split(\'.\');\\n    // eslint-disable-next-line guard-for-in\\n    for (const key of keysArray) {\\n      if (keysArray.includes(key)) {\\n        let tempResult = key;\\n        switch (key) {\\n          case \'enter\':\\n          case \'esc\':\\n          case \'shift\':\\n          case \'control\':\\n          case \'tab\':\\n          case \'backspace\':\\n            tempResult = this.capitalise(key);\\n            break;\\n          case \'alt\':\\n            // The Alt key is an Option key on macOS devices\\n            tempResult = window.navigator.platform === \'MacIntel\' ? \'Option\' : \'Alt\';\\n            break;\\n          case \'meta\':\\n            tempResult = \'Command\';\\n            break;\\n          case \'arrowup\':\\n          case \'arrowdown\':\\n          case \'arrowleft\':\\n          case \'arrowright\':\\n            switch (key) {\\n              case \'arrowup\':\\n                tempResult = \'â\';\\n                break;\\n              case \'arrowdown\':\\n                tempResult = \'â\';\\n                break;\\n              case \'arrowleft\':\\n                tempResult = \'â\';\\n                break;\\n              case \'arrowright\':\\n                tempResult = \'â\';\\n                break;\\n            }\\n            break;\\n          default:\\n            if (key.startsWith(\'f\') && (key.length === 2 || key.length === 3)) {\\n              // See https://joshtronic.com/2016/02/14/how-to-capitalize-the-first-letter-in-a-string-in-javascript/ for more info\\n              tempResult = this.capitalise(key);\\n            } else {\\n              tempResult = key.toLocaleLowerCase();\\n            }\\n        }\\n        result.push(tempResult);\\n      }\\n    }\\n    return result;\\n  }\\n\\n  private capitalise(str: string): string {\\n    // See https://joshtronic.com/2016/02/14/how-to-capitalize-the-first-letter-in-a-string-in-javascript/\\n    return str.charAt(0).toLocaleUpperCase() + str.substring(1);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n  table {\\n    font-size: 14px;\\n  }\\n  \\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"data","type":"Map<string | string>","deprecated":false,"deprecationMessage":""}],"line":14,"jsdoctags":[{"name":"data","type":"Map<string | string>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<h2 matDialogTitle>Keyboard shortcuts</h2>\\n<mat-dialog-content>\\n  <table class=\\"app-table\\">\\n    <thead>\\n      <tr>\\n        <th>Description</th>\\n        <th>Shortcut</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\"let keys of hotkeys\\">\\n        <td>{{ keys[1] }}</td>\\n        <td class=\\"text-right\\">\\n          <ng-container *ngFor=\\"let shortcut of getDisplayedShortcut(keys[0]); last as last\\">\\n            <kbd>{{ shortcut }}</kbd>\\n            <span *ngIf=\\"!last\\">&nbsp;+&nbsp;</span>\\n          </ng-container>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\"end\\">\\n  <button mat-button color=\\"primary\\" matDialogClose>Dismiss</button>\\n</mat-dialog-actions>\\n"},{"name":"MessageDialogComponent","id":"component-MessageDialogComponent-323be439bcdd0187bdf0d7d591a0fda4fde9954698bef8709aae4c7ab861e9635e34790e1d15540c01faba65fda53a4230a356c4303498059d49688014e68ad9","file":"projects/rss-reader/src/app/core/dialogs/message-dialog/message-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-message-dialog","styleUrls":[],"styles":["\\n  .msg-dialog--container {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  "],"templateUrl":["./message-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"defaultNegativeBtnText","defaultValue":"\'Cancel\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The default text to be used for the negative button.</p>\\n","line":19,"rawdescription":"\\nThe default text to be used for the negative button.","modifierKind":[144]},{"name":"defaultPositiveBtnText","defaultValue":"\'OK\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The default text to be used for the positive button.</p>\\n","line":21,"rawdescription":"\\nThe default text to be used for the positive button.","modifierKind":[144]},{"name":"opts","deprecated":false,"deprecationMessage":"","type":"DialogOpts","optional":false,"description":"","line":23,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[123],"inheritance":{"file":"Dialog"}},{"name":"defaultBtnColor","defaultValue":"\'primary\'","deprecated":false,"deprecationMessage":"","type":"ThemePalette","optional":false,"description":"<p>The default color to be used for the dialog&#39;s buttons.</p>\\n","line":8,"rawdescription":"\\nThe default color to be used for the dialog\'s buttons.","modifierKind":[144],"inheritance":{"file":"Dialog"}}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Inject } from \'@angular/core\';\\nimport { MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\n\\nimport { Dialog } from \'../dialog\';\\nimport { DialogOpts } from \'../models\';\\n\\n@Component({\\n  selector: \'app-message-dialog\',\\n  templateUrl: \'./message-dialog.component.html\',\\n  styles: [`\\n  .msg-dialog--container {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  `]\\n})\\nexport class MessageDialogComponent extends Dialog {\\n  /** The default text to be used for the negative button. */\\n  readonly defaultNegativeBtnText = \'Cancel\';\\n  /** The default text to be used for the positive button. */\\n  readonly defaultPositiveBtnText = \'OK\';\\n\\n  constructor(@Inject(MAT_DIALOG_DATA) public opts: DialogOpts) {\\n    super(opts);\\n  }\\n\\n  get hideNegativeBtn(): boolean {\\n    // As the default text will be used if no text was specified,\\n    // the button will always be shown unless explicitly hidden.\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'negative\');\\n    }\\n  }\\n\\n  get hideNeutralBtn(): boolean {\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'neutral\');\\n    }\\n\\n    return !(\'neutralBtnText\' in this.opts);\\n  }\\n\\n  get hidePositiveBtn(): boolean {\\n    // As the default text will be used if no text was specified,\\n    // the button will always be shown unless explicitly hidden.\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'positive\');\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n  .msg-dialog--container {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  \\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"opts","type":"DialogOpts","deprecated":false,"deprecationMessage":""}],"line":21,"jsdoctags":[{"name":"opts","type":"DialogOpts","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"Dialog","accessors":{"hideNegativeBtn":{"name":"hideNegativeBtn","getSignature":{"name":"hideNegativeBtn","type":"boolean","returnType":"boolean","line":27}},"hideNeutralBtn":{"name":"hideNeutralBtn","getSignature":{"name":"hideNeutralBtn","type":"boolean","returnType":"boolean","line":36}},"hidePositiveBtn":{"name":"hidePositiveBtn","getSignature":{"name":"hidePositiveBtn","type":"boolean","returnType":"boolean","line":45}}},"templateData":"<h2 matDialogTitle *ngIf=\\"opts?.title\\">{{ opts.title }}</h2>\\n<mat-dialog-content class=\\"mat-typography msg-dialog--container\\">\\n  <p class=\\"mat-body\\" *ngIf=\\"!opts?.isHtml\\">{{ opts.msg }}</p>\\n  <span *ngIf=\\"opts?.isHtml\\" [innerHTML]=\\"opts.msg\\"></span>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\"end\\" *ngIf=\\"hasActionBtns\\">\\n  <button mat-button *ngIf=\\"!hideNegativeBtn\\" [color]=\\"negativeBtnColor\\"\\n    matDialogClose=\\"cancel\\"\\n    [attr.cdkFocusInitial]=\\"opts.initialActionBtnFocus === \'negative\' || null\\">{{ opts.negativeBtnText }}</button>\\n  <button mat-button *ngIf=\\"!hideNeutralBtn\\" [color]=\\"neutralBtnColor\\"\\n    matDialogClose=\\"neutral\\"\\n    [attr.cdkFocusInitial]=\\"opts.initialActionBtnFocus === \'neutral\' || null\\">{{ opts.neutralBtnText }}</button>\\n  <button mat-button *ngIf=\\"!hidePositiveBtn\\" [color]=\\"positiveBtnColor\\"\\n    matDialogClose=\\"ok\\"\\n    [attr.cdkFocusInitial]=\\"opts.initialActionBtnFocus === \'positive\' || null\\">{{ opts.positiveBtnText }}</button>\\n</mat-dialog-actions>\\n"},{"name":"OnboardingOverlayComponent","id":"component-OnboardingOverlayComponent-ddce0a1fb0200662f66a4810fdc09ee2ac7e84075606eb425af7cb538f4310b6ef947d6a1ac6b9c5075e482b5cb373b0c09408f2ad0b664475801905413a1b5e","file":"projects/rss-reader/src/app/overlays/onboarding-overlay/onboarding-overlay.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-onboarding-overlay","styleUrls":["./onboarding-overlay.component.scss"],"styles":[],"templateUrl":["./onboarding-overlay.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"content","defaultValue":"[\\n    {\\n      content: \'\',\\n      imgSrc: \'\'\\n    },\\n    {\\n      // content: \'Multiple news sources. One reader.\',\\n      content: \'Easier reading of articles in a card format.\',\\n      // imgSrc: \'assets/img/News Article.png\'\\n      imgSrc: \'assets/onboarding/articles.svg\'\\n    },\\n    {\\n      content: \'Customizable. Tons of options.\',\\n      imgSrc: \'assets/img/Customizing UI.png\'\\n    },\\n    {\\n      content: \'Many news sources to explore!\',\\n      imgSrc: \'assets/img/Explore News Sources.png\'\\n    }]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":26},{"name":"index","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"Index","optional":false,"description":"","line":24},{"name":"items","defaultValue":"[0, 1, 2, 3]","deprecated":false,"deprecationMessage":"","type":"Index[]","optional":false,"description":"","line":25},{"name":"shortcutHandlers","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Subscription[]","optional":false,"description":"","line":46}],"methodsClass":[{"name":"closeOverlay","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":85,"deprecated":false,"deprecationMessage":""},{"name":"gettingStarted","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":88,"deprecated":false,"deprecationMessage":""},{"name":"goToIndex","args":[{"name":"index","type":"Index","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"index","type":"Index","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"nextIndex","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":""},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":""},{"name":"prevIndex","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { OverlayService } from \'../../overlay.service\';\\nimport { Router } from \'@angular/router\';\\nimport { Component, OnDestroy } from \'@angular/core\';\\nimport { trigger, style, animate, transition, state } from \'@angular/animations\';\\nimport { HotkeysService } from \'../../hotkeys/hotkeys.service\';\\nimport { Subscription } from \'rxjs\';\\n\\ntype Index = 0 | 1 | 2 | 3;\\n@Component({\\n  selector: \'app-onboarding-overlay\',\\n  templateUrl: \'./onboarding-overlay.component.html\',\\n  styleUrls: [\'./onboarding-overlay.component.scss\'],\\n  animations: [\\n    trigger(\\n      \'enterAnimation\', [\\n        state(\'leave\', style({ transform: \'scale(0)\', opacity: 0 })),\\n        state(\'enter\', style({ transform: \'scale(1)\', opacity: 1 })),\\n        transition(\'enter <=> leave\', animate(\'200ms ease-in-out\'))\\n      ]\\n    )\\n  ]\\n})\\nexport class OnboardingOverlayComponent implements OnDestroy {\\n  index: Index = 0;\\n  items: Index[] = [0, 1, 2, 3];\\n  content = [\\n    {\\n      content: \'\',\\n      imgSrc: \'\'\\n    },\\n    {\\n      // content: \'Multiple news sources. One reader.\',\\n      content: \'Easier reading of articles in a card format.\',\\n      // imgSrc: \'assets/img/News Article.png\'\\n      imgSrc: \'assets/onboarding/articles.svg\'\\n    },\\n    {\\n      content: \'Customizable. Tons of options.\',\\n      imgSrc: \'assets/img/Customizing UI.png\'\\n    },\\n    {\\n      content: \'Many news sources to explore!\',\\n      imgSrc: \'assets/img/Explore News Sources.png\'\\n    }];\\n\\n  shortcutHandlers: Subscription[] = [];\\n\\n  constructor(\\n    private router: Router,\\n    private overlayService: OverlayService,\\n    private hotkeys: HotkeysService\\n  ) {\\n    const backShortcut = hotkeys.addShortcut({ keys: \'arrowleft\',\\n      description: \'Go back to previous step\' }).subscribe(() => this.prevIndex());\\n    this.shortcutHandlers.push(backShortcut);\\n    const forwardShortcut = hotkeys.addShortcut({ keys: \'arrowright\',\\n      description: \'Go forward to next step\' }).subscribe(() => this.nextIndex());\\n    this.shortcutHandlers.push(forwardShortcut);\\n  }\\n\\n  ngOnDestroy() {\\n    if (this.shortcutHandlers.length > 0) {\\n      this.shortcutHandlers.forEach((handler) => {\\n        handler.unsubscribe();\\n      });\\n      this.shortcutHandlers = [];\\n    }\\n  }\\n  prevIndex() {\\n    if (this.index !== 0) {\\n      this.index--;\\n    }\\n  }\\n  nextIndex() {\\n    if (this.index !== 3) {\\n      this.index++;\\n    } else {\\n      this.gettingStarted();\\n    }\\n  }\\n  goToIndex(index: Index) {\\n    console.log(index);\\n    this.index = index;\\n  }\\n  closeOverlay() {\\n    this.overlayService.close();\\n  }\\n  gettingStarted() {\\n    this.router.navigate([\'/home\']);\\n    this.closeOverlay();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".onboarding-card {\\n  width: 800px;\\n  height: 600px;\\n  transition: all 0.3s ease-in-out !important;\\n  border-radius: 20px !important;\\n  margin: 0 50px;\\n  &.extra-margin-left {\\n    margin-left: 156px !important;\\n  }\\n  &.extra-margin-right {\\n    margin-right: 156px !important;\\n  }\\n  .mat-mdc-card-image {\\n    height: 380px;\\n    border-top-left-radius: inherit;\\n    border-top-right-radius: inherit;\\n  }\\n  .onboarding-card-actions {\\n    display: flex;\\n    flex-direction: row;\\n    margin: 20px !important;\\n  }\\n  .onboarding-card-content {\\n    font-size: 30px;\\n    line-height: 30px;\\n    padding: 30px;\\n    height: auto;\\n    margin: auto;\\n    text-align: center;\\n    &.onboarding-card-content-center {\\n      display: flex !important;\\n      justify-content: center !important;\\n      align-items: center !important;\\n      flex-direction: column;\\n    }\\n  }\\n}\\n.no-visible {\\n  visibility: hidden;\\n}\\n.onboarding-progress-bar {\\n  width: 200px !important;\\n  margin: auto;\\n}\\n.onboarding-div {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n}\\n.onboarding-fab {\\n  // background-color: white !important;\\n  // color: black !important;\\n}\\n.onboarding-left-fab {\\n  margin-left: 50px;\\n}\\n.onboarding-right-fab {\\n  margin-right: 50px;\\n}\\n.app-div {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  .app-title {\\n    font-size: 40px;\\n  }\\n  .app-beta {\\n    font-size: 25px;\\n    font-weight: 300;\\n    float: right;\\n  }\\n}\\n.indicator {\\n  border-radius: 50%;\\n  display: block;\\n  margin: 4px;\\n  width: 10px;\\n  height: 10px;\\n  transition: all 0.2s ease-in-out;\\n}\\n.indicators {\\n  display: flex;\\n  margin: auto;\\n  flex-direction: row;\\n  vertical-align: middle;\\n  align-items: center;\\n  width: fit-content;\\n  padding-top: 6px;\\n}\\n","styleUrl":"./onboarding-overlay.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"overlayService","type":"OverlayService","deprecated":false,"deprecationMessage":""},{"name":"hotkeys","type":"HotkeysService","deprecated":false,"deprecationMessage":""}],"line":46,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"overlayService","type":"OverlayService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"hotkeys","type":"HotkeysService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnDestroy"],"templateData":"<div cdkTrapFocus class=\\"onboarding-div\\">\\n  <button mat-fab matTooltip=\\"Previous\\" class=\\"onboarding-fab onboarding-left-fab\\" [class.no-visible]=\\"index === 0\\" (click)=\\"prevIndex()\\" aria-label=\\"Previous\\" [@enterAnimation]=\\"index === 0 ? \'leave\' : \'enter\'\\" color>\\n    <mat-icon>arrow_backward</mat-icon>\\n  </button>\\n  <mat-card\\n    class=\\"onboarding-card mat-elevation-z3\\">\\n    <img mat-card-image [src]=\\"content[index].imgSrc\\" *ngIf=\\"content[index].imgSrc\\" alt=\\"Feature image thumbnail\\">\\n    <mat-card-content\\n      class=\\"onboarding-card-content\\"\\n      [class.onboarding-card-content-center]=\\"content[index].imgSrc === \'\'\\">\\n      <div *ngIf=\\"index === 0\\" class=\\"app-div\\">\\n        <img src=\\"assets/favicon/icon-100x100-nocolor.png\\" width=\\"100px\\" height=\\"100px\\">\\n        <div>\\n          <p class=\\"app-title\\">RSS Reader</p>\\n        </div>\\n      </div>\\n      <br *ngIf=\\"index === 0\\">\\n      <p *ngIf=\\"index === 0\\">The news reader that you will need</p>\\n      <p>{{content[index].content}}</p>\\n    </mat-card-content>\\n    <mat-card-actions class=\\"onboarding-card-actions\\">\\n      <span class=\\"flex--spacer\\"></span>\\n      <button mat-raised-button (click)=\\"gettingStarted()\\" color=\\"primary\\">Get Started</button>\\n      <span class=\\"flex--spacer\\"></span>\\n    </mat-card-actions>\\n  </mat-card>\\n  <button mat-fab matTooltip=\\"Next\\" class=\\"onboarding-fab onboarding-right-fab\\" (click)=\\"nextIndex()\\" aria-label=\\"Next\\" [@enterAnimation]=\\"index === 3 ? \'leave\' : \'enter\'\\" [class.no-visible]=\\"index === 3\\" color>\\n    <mat-icon>arrow_forward</mat-icon>\\n  </button>\\n</div>\\n<div class=\\"indicators\\">\\n  <span class=\\"indicator\\" [class.indicator-active]=\\"item === index\\" *ngFor=\\"let item of items\\" (click)=\\"goToIndex(item)\\"></span>\\n</div>\\n"},{"name":"PageNotFoundComponent","id":"component-PageNotFoundComponent-f22b8285a825592ed52caf1c6922f8cdf7325d1a588ef87c66b6efef8d74f8c03b361b9967ead0d6aa4cd846e37da0e5077ed721130fea711f44b0273ea041f9","file":"projects/rss-reader/src/app/page-not-found/page-not-found.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-page-not-found","styleUrls":[],"styles":[],"templateUrl":["./page-not-found.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"router","deprecated":false,"deprecationMessage":"","type":"Router","optional":false,"description":"","line":11,"modifierKind":[123]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Router } from \'@angular/router\';\\nimport { Component, OnInit } from \'@angular/core\';\\nimport { ActionItemService } from \'../actionitem.service\';\\n\\n@Component({\\n  selector: \'app-page-not-found\',\\n  templateUrl: \'./page-not-found.component.html\',\\n})\\nexport class PageNotFoundComponent implements OnInit {\\n\\n  constructor(public router: Router, private actionItemService: ActionItemService) { }\\n\\n  ngOnInit() {\\n    this.actionItemService.addActionItem({title: \'Go back\', icon: \'arrow_back\', onClickListener: () => {\\n      window.history.back();\\n    }, showAsAction: true});\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"actionItemService","type":"ActionItemService","deprecated":false,"deprecationMessage":""}],"line":9,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"actionItemService","type":"ActionItemService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<div class=\\"center page-not-found-container\\">\\n  <mat-icon class=\\"warning-icon\\">error</mat-icon>\\n  <h1>The page you were requesting could not be found.</h1>\\n  <p>The page you navigated to (<code>{{router.url}}</code>) does not exist at the moment. Try again later.</p>\\n</div>"},{"name":"PortalDialogComponent","id":"component-PortalDialogComponent-8da3177765e521ed790112340390a18a5a71a6fbaaf37caabe910e252ec552dd1a7ae296bad333da2da6b1c633722ba05988c0ce641345c658f3ce6aac62dd66","file":"projects/rss-reader/src/app/core/dialogs/portal-dialog/portal-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-portal-dialog","styleUrls":[],"styles":["\\n  .portal-dialog--container {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  "],"templateUrl":["./portal-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"defaultNegativeBtnText","defaultValue":"\'Cancel\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The default text to be used for the negative button.</p>\\n","line":19,"rawdescription":"\\nThe default text to be used for the negative button.","modifierKind":[144]},{"name":"defaultPositiveBtnText","defaultValue":"\'OK\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The default text to be used for the positive button.</p>\\n","line":21,"rawdescription":"\\nThe default text to be used for the positive button.","modifierKind":[144]},{"name":"opts","deprecated":false,"deprecationMessage":"","type":"PortalDialogOpts<T>","optional":false,"description":"","line":23,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[123],"inheritance":{"file":"Dialog"}},{"name":"defaultBtnColor","defaultValue":"\'primary\'","deprecated":false,"deprecationMessage":"","type":"ThemePalette","optional":false,"description":"<p>The default color to be used for the dialog&#39;s buttons.</p>\\n","line":8,"rawdescription":"\\nThe default color to be used for the dialog\'s buttons.","modifierKind":[144],"inheritance":{"file":"Dialog"}}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Inject } from \'@angular/core\';\\nimport { MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\n\\nimport { Dialog } from \'../dialog\';\\nimport { PortalDialogOpts } from \'../models\';\\n\\n@Component({\\n  selector: \'app-portal-dialog\',\\n  templateUrl: \'./portal-dialog.component.html\',\\n  styles: [`\\n  .portal-dialog--container {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  `]\\n})\\nexport class PortalDialogComponent<T = any> extends Dialog {\\n  /** The default text to be used for the negative button. */\\n  readonly defaultNegativeBtnText = \'Cancel\';\\n  /** The default text to be used for the positive button. */\\n  readonly defaultPositiveBtnText = \'OK\';\\n\\n  constructor(@Inject(MAT_DIALOG_DATA) public opts: PortalDialogOpts<T>) {\\n    super(opts);\\n  }\\n\\n  get hideNegativeBtn(): boolean {\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'negative\');\\n    }\\n\\n    return !(\'negativeBtnText\' in this.opts);\\n  }\\n\\n  get hideNeutralBtn(): boolean {\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'neutral\');\\n    }\\n\\n    return !(\'neutralBtnText\' in this.opts);\\n  }\\n\\n  get hidePositiveBtn(): boolean {\\n    // As the default text will be used if no text was specified,\\n    // the button will always be shown unless explicitly hidden.\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'positive\');\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n  .portal-dialog--container {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  \\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"opts","type":"PortalDialogOpts<T>","deprecated":false,"deprecationMessage":""}],"line":21,"jsdoctags":[{"name":"opts","type":"PortalDialogOpts<T>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"Dialog","accessors":{"hideNegativeBtn":{"name":"hideNegativeBtn","getSignature":{"name":"hideNegativeBtn","type":"boolean","returnType":"boolean","line":27}},"hideNeutralBtn":{"name":"hideNeutralBtn","getSignature":{"name":"hideNeutralBtn","type":"boolean","returnType":"boolean","line":36}},"hidePositiveBtn":{"name":"hidePositiveBtn","getSignature":{"name":"hidePositiveBtn","type":"boolean","returnType":"boolean","line":45}}},"templateData":"<h2 matDialogTitle *ngIf=\\"opts?.title\\">{{ opts.title }}</h2>\\n<mat-dialog-content class=\\"mat-typography portal-dialog--container\\">\\n  <ng-template [cdkPortalOutlet]=\\"opts.portal\\" *ngIf=\\"opts.portal\\"></ng-template>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\"end\\" *ngIf=\\"hasActionBtns\\">\\n  <button mat-button *ngIf=\\"!hideNegativeBtn\\" [color]=\\"negativeBtnColor\\"\\n    matDialogClose=\\"cancel\\"\\n    [attr.cdkFocusInitial]=\\"opts.initialActionBtnFocus === \'negative\' || null\\">{{ opts.negativeBtnText }}</button>\\n  <button mat-button *ngIf=\\"!hideNeutralBtn\\" [color]=\\"neutralBtnColor\\"\\n    matDialogClose=\\"neutral\\"\\n    [attr.cdkFocusInitial]=\\"opts.initialActionBtnFocus === \'neutral\' || null\\">{{ opts.neutralBtnText }}</button>\\n  <button mat-button *ngIf=\\"!hidePositiveBtn\\" [color]=\\"positiveBtnColor\\"\\n    matDialogClose=\\"ok\\"\\n    [attr.cdkFocusInitial]=\\"opts.initialActionBtnFocus === \'positive\' || null\\">{{ opts.positiveBtnText }}</button>\\n</mat-dialog-actions>\\n"},{"name":"PromptDialogComponent","id":"component-PromptDialogComponent-396f2f1151075e7127c169e99b7cdfd10871d3e0da3a07abfde53a6e2b381fd0356cc164657def9327b5791a400fc9227417c49e26745af3c0af9b32da3dc984","file":"projects/rss-reader/src/app/core/dialogs/prompt-dialog/prompt-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-prompt-dialog","styleUrls":[],"styles":["\\n  .prompt-dialog--container {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  "],"templateUrl":["./prompt-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"defaultInputColor","defaultValue":"\'primary\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The default color to be used for the input.</p>\\n","line":25,"rawdescription":"\\nThe default color to be used for the input.","modifierKind":[144]},{"name":"defaultNegativeBtnText","defaultValue":"\'Cancel\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The default text to be used for the negative button.</p>\\n","line":21,"rawdescription":"\\nThe default text to be used for the negative button.","modifierKind":[144]},{"name":"defaultPositiveBtnText","defaultValue":"\'OK\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The default text to be used for the positive button.</p>\\n","line":23,"rawdescription":"\\nThe default text to be used for the positive button.","modifierKind":[144]},{"name":"input","deprecated":false,"deprecationMessage":"","type":"string | number","optional":false,"description":"","line":19},{"name":"opts","deprecated":false,"deprecationMessage":"","type":"PromptDialogOpts","optional":false,"description":"","line":27,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[123],"inheritance":{"file":"Dialog"}},{"name":"defaultBtnColor","defaultValue":"\'primary\'","deprecated":false,"deprecationMessage":"","type":"ThemePalette","optional":false,"description":"<p>The default color to be used for the dialog&#39;s buttons.</p>\\n","line":8,"rawdescription":"\\nThe default color to be used for the dialog\'s buttons.","modifierKind":[144],"inheritance":{"file":"Dialog"}}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, Inject } from \'@angular/core\';\\nimport { ThemePalette } from \'@angular/material/core\';\\nimport { MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\n\\nimport { Dialog } from \'../dialog\';\\nimport { PromptDialogOpts } from \'../models\';\\n\\n@Component({\\n  selector: \'app-prompt-dialog\',\\n  templateUrl: \'./prompt-dialog.component.html\',\\n  styles: [`\\n  .prompt-dialog--container {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  `]\\n})\\nexport class PromptDialogComponent extends Dialog implements OnInit {\\n  input: string | number;\\n  /** The default text to be used for the negative button. */\\n  readonly defaultNegativeBtnText = \'Cancel\';\\n  /** The default text to be used for the positive button. */\\n  readonly defaultPositiveBtnText = \'OK\';\\n  /** The default color to be used for the input. */\\n  readonly defaultInputColor = \'primary\';\\n\\n  constructor(@Inject(MAT_DIALOG_DATA) public opts: PromptDialogOpts) {\\n    super(opts);\\n  }\\n\\n  get hideNegativeBtn(): boolean {\\n    // As the default text will be used if no text was specified,\\n    // the button will always be shown unless explicitly hidden.\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'negative\');\\n    }\\n  }\\n\\n  get hideNeutralBtn(): boolean {\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'neutral\');\\n    }\\n\\n    return !(\'neutralBtnText\' in this.opts);\\n  }\\n\\n  get hidePositiveBtn(): boolean {\\n    // As the default text will be used if no text was specified,\\n    // the button will always be shown unless explicitly hidden.\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'positive\');\\n    }\\n  }\\n\\n  get inputColor(): ThemePalette {\\n    // This is to handle users using the now deprecated `color` property.\\n    // eslint-disable-next-line import/no-deprecated\\n    return \'color\' in this.opts ? this.opts.color :\\n      (this.opts.inputConfig && \'color\' in this.opts.inputConfig) ?\\n        this.opts.inputConfig.color : this.defaultInputColor;\\n  }\\n\\n  ngOnInit() {\\n    /* eslint-disable import/no-deprecated */\\n    if (\'value\' in this.opts) {\\n      this.input = this.opts.value;\\n    } else if (\'inputConfig\' in this.opts && \'value\' in this.opts.inputConfig) {\\n      this.input = this.opts.inputConfig.value;\\n    }\\n    /* eslint-enable import/no-deprecated */\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n  .prompt-dialog--container {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  \\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"opts","type":"PromptDialogOpts","deprecated":false,"deprecationMessage":""}],"line":25,"jsdoctags":[{"name":"opts","type":"PromptDialogOpts","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"Dialog","implements":["OnInit"],"accessors":{"hideNegativeBtn":{"name":"hideNegativeBtn","getSignature":{"name":"hideNegativeBtn","type":"boolean","returnType":"boolean","line":31}},"hideNeutralBtn":{"name":"hideNeutralBtn","getSignature":{"name":"hideNeutralBtn","type":"boolean","returnType":"boolean","line":40}},"hidePositiveBtn":{"name":"hidePositiveBtn","getSignature":{"name":"hidePositiveBtn","type":"boolean","returnType":"boolean","line":49}},"inputColor":{"name":"inputColor","getSignature":{"name":"inputColor","type":"","returnType":"ThemePalette","line":58}}},"templateData":"<h2 matDialogTitle *ngIf=\\"opts?.title\\">{{ opts?.title }}</h2>\\n<mat-dialog-content class=\\"mat-typography prompt-dialog--container\\">\\n  <p class=\\"mat-body\\" *ngIf=\\"!opts.isHtml\\">{{ opts.msg }}</p>\\n  <span *ngIf=\\"opts.isHtml\\" [innerHTML]=\\"opts.msg\\"></span>\\n  <form #form=\\"ngForm\\">\\n    <mat-form-field [color]=\\"inputColor\\" style=\\"width:100%\\">\\n      <mat-label *ngIf=\\"opts?.placeholder && !opts.inputConfig?.label\\">{{ opts.placeholder }}</mat-label>\\n      <mat-label *ngIf=\\"opts?.inputConfig && opts.inputConfig?.label\\">{{ opts.inputConfig.label }}</mat-label>\\n      <input matInput [(ngModel)]=\\"input\\" [type]=\\"opts?.inputType ? opts.inputType : \'text\'\\" required name=\\"input\\" [placeholder]=\\"opts.inputConfig?.placeholder\\">\\n      <mat-error>This is required.</mat-error>\\n    </mat-form-field>\\n  </form>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\"end\\" *ngIf=\\"hasActionBtns\\">\\n  <button mat-button *ngIf=\\"!hideNegativeBtn\\" [color]=\\"negativeBtnColor\\"\\n    matDialogClose=\\"cancel\\"\\n    [attr.cdkFocusInitial]=\\"opts?.initialActionBtnFocus === \'negative\' || null\\">{{ opts.negativeBtnText }}</button>\\n  <button mat-button *ngIf=\\"!hideNeutralBtn\\" [color]=\\"neutralBtnColor\\"\\n    matDialogClose=\\"neutral\\"\\n    [attr.cdkFocusInitial]=\\"opts?.initialActionBtnFocus === \'neutral\' || null\\">{{ opts.neutralBtnText }}</button>\\n  <button mat-button *ngIf=\\"!hidePositiveBtn\\" [color]=\\"positiveBtnColor\\" [matDialogClose]=\\"input\\"\\n    [disabled]=\\"form.invalid\\"\\n    [attr.cdkFocusInitial]=\\"opts?.initialActionBtnFocus === \'positive\' || null\\">{{ opts.positiveBtnText }}</button>\\n</mat-dialog-actions>\\n"},{"name":"ReleaseNotesComponent","id":"component-ReleaseNotesComponent-0bfcc1f2f92e24a185d6dd244a2248b1ff847db5ac1a9b9e6486c4bec98bbd64a4f221b10741b729d41a74cdd9bcfda450a6d5b34429e58a6870c1810e1abb20","file":"projects/rss-reader/src/app/pages/release-notes/release-notes.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-release-notes","styleUrls":["./release-notes.component.scss"],"styles":[],"templateUrl":["./release-notes.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"createGitRepoUrl","args":[{"name":"gitRepo","type":"GitRepo","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":112,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerates a URL to the specified Git repository.\\n\\n","description":"<p>Generates a URL to the specified Git repository.</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":3234,"end":3241,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"gitRepo"},"type":"GitRepo","deprecated":false,"deprecationMessage":"","tagName":{"pos":3228,"end":3233,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The Git repository to be converted to a link.</p>\\n"}]},{"name":"getReleaseAuthor","args":[{"name":"version","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRetrieves the author of the release.\\n\\n","description":"<p>Retrieves the author of the release.</p>\\n","jsdoctags":[{"name":{"pos":2305,"end":2312,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"version"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":2299,"end":2304,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The version to retrieve.</p>\\n"}]},{"name":"getReleaseDate","args":[{"name":"version","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRetrieves the date when the `version` was released.\\n\\n","description":"<p>Retrieves the date when the <code>version</code> was released.</p>\\n","jsdoctags":[{"name":{"pos":2092,"end":2099,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"version"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":2086,"end":2091,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The version to retrieve.</p>\\n"}]},{"name":"getReleaseInfo","args":[{"name":"version","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Release","typeParameters":[],"line":85,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRetrieves information about a particular version\'s release notes.\\n\\n","description":"<p>Retrieves information about a particular version&#39;s release notes.</p>\\n","jsdoctags":[{"name":{"pos":2551,"end":2558,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"version"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":2545,"end":2550,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The version to retrieve.</p>\\n"}]},{"name":"getReleaseName","args":[{"name":"version","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRetrieves the release name for the specified `version`.\\n\\n","description":"<p>Retrieves the release name for the specified <code>version</code>.</p>\\n","jsdoctags":[{"name":{"pos":1645,"end":1652,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"version"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1639,"end":1644,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The version</p>\\n"}]},{"name":"getReleaseNote","args":[{"name":"version","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"[] | string","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRetrieves the release notes for the specified `version`.\\n\\n","description":"<p>Retrieves the release notes for the specified <code>version</code>.</p>\\n","jsdoctags":[{"name":{"pos":1865,"end":1872,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"version"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1859,"end":1864,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The version</p>\\n"}]},{"name":"isArray","args":[{"name":"val","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"T[]","typeParameters":["T"],"line":98,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"val","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isUrl","args":[{"name":"val","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"val","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"joinReleaseNotes","args":[{"name":"notes","type":"string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":94,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nJoins a list of release notes to a string.\\n\\n","description":"<p>Joins a list of release notes to a string.</p>\\n","jsdoctags":[{"name":{"pos":2759,"end":2764,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"notes"},"type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":2753,"end":2758,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The notes to join</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, InjectionToken, Inject, Optional } from \'@angular/core\';\\nimport { GitRepo, Release, ReleaseNotesJSON } from \'./models/release-notes\';\\nimport releaseNotesJsonFile from \'../../../assets/release-notes/release-notes.json\';\\nimport { environment } from \'../../../environments/environment\';\\n\\nexport const RELEASE_NOTES_JSON = new InjectionToken<ReleaseNotesJSON>(\'Release notes JSON file\', {\\n  providedIn: \'root\',\\n  factory: () => releaseNotesJsonFile\\n});\\n\\nexport const GIT_REPO = new InjectionToken<GitRepo>(\'Custom Git repository\');\\n\\n@Component({\\n  selector: \'app-release-notes\',\\n  templateUrl: \'./release-notes.component.html\',\\n  styleUrls: [\'./release-notes.component.scss\']\\n})\\nexport class ReleaseNotesComponent {\\n  constructor(\\n    @Inject(RELEASE_NOTES_JSON) private releaseNotesJson: ReleaseNotesJSON,\\n    @Optional() @Inject(GIT_REPO) private customGitRepo: GitRepo\\n  ) { }\\n\\n  /** Retrieves the release notes JSON file. */\\n  get releaseNotes(): ReleaseNotesJSON {\\n    return this.releaseNotesJson;\\n  }\\n\\n  /** Retrieves the list of versions. */\\n  get versions(): string[] {\\n    return Object.keys(this.releaseNotes.releases);\\n  }\\n\\n  /**\\n   * Retrieves metadata of the Git repository, or defaults to the environment.\\n   *\\n   * Note: This can be overidden with the {@link GIT_REPO} DI token.\\n   */\\n  get gitRepo(): string {\\n    return this.customGitRepo ? this.createGitRepoUrl(this.customGitRepo) : this.releaseNotes.gitRepo ?\\n      this.createGitRepoUrl(this.releaseNotes.gitRepo) : this.createGitRepoUrl(environment.gitRepoDefaults);\\n  }\\n\\n  /**\\n   * Retrieves the release name for the specified `version`.\\n   *\\n   * @param version The version\\n   */\\n  getReleaseName(version: string): string {\\n    return this.releaseNotes.releases[version].releaseName;\\n  }\\n\\n  /**\\n   * Retrieves the release notes for the specified `version`.\\n   *\\n   * @param version The version\\n   */\\n  getReleaseNote(version: string): string[] | string {\\n    return this.releaseNotes.releases[version].releaseNotes;\\n  }\\n\\n  /**\\n   * Retrieves the date when the `version` was released.\\n   *\\n   * @param version The version to retrieve.\\n   */\\n  getReleaseDate(version: string): string {\\n    return this.releaseNotes.releases[version].releaseDate;\\n  }\\n\\n  /**\\n   * Retrieves the author of the release.\\n   *\\n   * @param version The version to retrieve.\\n   */\\n  getReleaseAuthor(version: string): string {\\n    return this.releaseNotes.releases[version].releaseAuthor;\\n  }\\n\\n  /**\\n   * Retrieves information about a particular version\'s release notes.\\n   *\\n   * @param version The version to retrieve.\\n   */\\n  getReleaseInfo(version: string): Release {\\n    return this.releaseNotes.releases[version];\\n  }\\n\\n  /**\\n   * Joins a list of release notes to a string.\\n   *\\n   * @param notes The notes to join\\n   */\\n  joinReleaseNotes(notes: string[]): string {\\n    return notes.join(\'\\\\n\');\\n  }\\n\\n  isArray<T = any>(val: any): val is T[] {\\n    return Array.isArray(val);\\n  }\\n\\n  // See https://stackoverflow.com/a/46296668/6782707 for more info.\\n  isUrl(val: string): boolean {\\n    return /^(?:http(s)?:\\\\/\\\\/)?[\\\\w.-]+(?:\\\\.[\\\\w\\\\.-]+)+[\\\\w\\\\-\\\\._~:/?#[\\\\]@!\\\\$&\'\\\\(\\\\)\\\\*\\\\+,;=.]+$/.test(val);\\n  }\\n\\n  /**\\n   * Generates a URL to the specified Git repository.\\n   *\\n   * @param gitRepo The Git repository to be converted to a link.\\n   */\\n  private createGitRepoUrl(gitRepo: GitRepo): string {\\n    return typeof gitRepo === \'object\' ? `${gitRepo.host}/${gitRepo.username}/${gitRepo.repo}` : gitRepo;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".version-header .badge {\\n  margin-left: 8px;\\n}\\n","styleUrl":"./release-notes.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"releaseNotesJson","type":"ReleaseNotesJSON","deprecated":false,"deprecationMessage":""},{"name":"customGitRepo","type":"GitRepo","deprecated":false,"deprecationMessage":""}],"line":18,"jsdoctags":[{"name":"releaseNotesJson","type":"ReleaseNotesJSON","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"customGitRepo","type":"GitRepo","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"releaseNotes":{"name":"releaseNotes","getSignature":{"name":"releaseNotes","type":"","returnType":"ReleaseNotesJSON","line":25,"rawdescription":"\\nRetrieves the release notes JSON file.","description":"<p>Retrieves the release notes JSON file.</p>\\n"}},"versions":{"name":"versions","getSignature":{"name":"versions","type":"[]","returnType":"string[]","line":30,"rawdescription":"\\nRetrieves the list of versions.","description":"<p>Retrieves the list of versions.</p>\\n"}},"gitRepo":{"name":"gitRepo","getSignature":{"name":"gitRepo","type":"string","returnType":"string","line":39,"rawdescription":"\\n\\nRetrieves metadata of the Git repository, or defaults to the environment.\\n\\nNote: This can be overidden with the {@link GIT_REPO} DI token.\\n","description":"<p>Retrieves metadata of the Git repository, or defaults to the environment.</p>\\n<p>Note: This can be overidden with the {@link GIT_REPO} DI token.</p>\\n"}}},"templateData":"<div class=\\"app-content mat-typography\\">\\n  <h1 id=\\"app-header\\">Release notes</h1>\\n  <h2 id=\\"current-version\\">Current version: {{ releaseNotes.latestVersion }}</h2>\\n\\n  <h3 id=\\"current-version-release-notes\\">Release notes for {{ releaseNotes.latestVersion }}<span *ngIf=\\"getReleaseName(releaseNotes.latestVersion) as releaseName\\"> - {{ releaseName }}</span></h3>\\n  \x3c!-- TODO: Convert to template --\x3e\\n  <ng-container *ngIf=\\"versions; else: noReleaseNotes\\">\\n    <p *ngIf=\\"getReleaseDate(releaseNotes.latestVersion) as releaseDate\\">Release date: <em><time [dateTime]=\\"releaseDate\\">{{ releaseDate | date:\'short\' }}</time></em></p>\\n    <p *ngIf=\\"getReleaseAuthor(releaseNotes.latestVersion) as releaseAuthor\\">Released by: <em>{{ releaseAuthor }}</em></p>\\n    <ng-container *ngIf=\\"getReleaseNote(releaseNotes.latestVersion) as releaseNote\\">\\n      <ng-container *ngIf=\\"!isArray(releaseNote) && isUrl(releaseNote)\\">\\n        <p>See this <a [href]=\\"releaseNote\\">link</a> for the release notes.</p>\\n      </ng-container>\\n      <ng-container *ngIf=\\"isArray(releaseNote)\\">\\n        <p [innerHTML]=\\"joinReleaseNotes(releaseNote) | markdown\\"></p>\\n      </ng-container>\\n    </ng-container>\\n  </ng-container>\\n  <hr>\\n\\n  <h2 id=\\"all-release-notes\\" *ngIf=\\"versions?.length > 0\\">All release notes</h2>\\n  <ng-container *ngIf=\\"versions; else: noReleaseNotes\\">\\n    \x3c!-- TODO: Add support for sorting versions by semver. --\x3e\\n    <ng-container *ngFor=\\"let version of versions\\">\\n      <h3 id=\\"version-{{ version }}\\" class=\\"version-header\\">\\n        Version {{ version }}<span *ngIf=\\"getReleaseName(version) as releaseName\\"> - {{ releaseName }}</span>\\n        <span class=\\"badge badge--colored\\" *ngIf=\\"version === releaseNotes.latestVersion\\">Latest</span>\\n      </h3>\\n      <p *ngIf=\\"getReleaseDate(version) as releaseDate\\">Release date: <em><time [dateTime]=\\"releaseDate\\">{{ releaseDate | date:\'short\' }}</time></em></p>\\n      <p *ngIf=\\"getReleaseAuthor(version) as releaseAuthor\\">Released by: <em>{{ releaseAuthor }}</em></p>\\n      <ng-container *ngIf=\\"getReleaseNote(version) as releaseNote\\">\\n        <ng-container *ngIf=\\"!isArray(releaseNote) && isUrl(releaseNote)\\">\\n          <p>See this <a [href]=\\"releaseNote\\">link</a> for the release notes.</p>\\n        </ng-container>\\n        <ng-container *ngIf=\\"isArray(releaseNote)\\">\\n          <p [innerHTML]=\\"joinReleaseNotes(releaseNote) | markdown\\"></p>\\n        </ng-container>\\n      </ng-container>\\n    </ng-container>\\n  </ng-container>\\n\\n</div>\\n<ng-template #noReleaseNotes>\\n  <div class=\\"center\\">\\n    <h2 id=\\"no-release-notes-available\\">No release notes available!</h2>\\n    <p>Are you connected to the internet?</p>\\n  </div>\\n</ng-template>\\n"},{"name":"RSSChannelInfoDialogComponent","id":"component-RSSChannelInfoDialogComponent-91fd1a77f39b68e3dee5e9aaa0f869f4c88351200d0dfd716d889fdcdc5f671812c977e583f5717b7675ff43c37a93addc97342b7de46a9e99d3a1c83f83b66b","file":"projects/rss-reader/src/app/dialogs/rss-channel-info-dialog/rss-channel-info-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-rss-channel-info-dialog","styleUrls":[],"styles":[],"templateUrl":["./rss-channel-info-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { MatDialogRef } from \'@angular/material/dialog\';\\nimport { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-rss-channel-info-dialog\',\\n  templateUrl: \'./rss-channel-info-dialog.component.html\'\\n})\\nexport class RSSChannelInfoDialogComponent implements OnInit {\\n\\n  constructor(private dialogRef: MatDialogRef<RSSChannelInfoDialogComponent>) { }\\n\\n  ngOnInit() {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"dialogRef","type":"MatDialogRef<RSSChannelInfoDialogComponent>","deprecated":false,"deprecationMessage":""}],"line":8,"jsdoctags":[{"name":"dialogRef","type":"MatDialogRef<RSSChannelInfoDialogComponent>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<h2 matDialogTitle>RSS Channel Info</h2>\\n<mat-dialog-content>\\n  <p>Coming soon!</p>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\"end\\">\\n  <button mat-button color=\\"primary\\" matDialogClose>\\n    Dismiss\\n  </button>\\n</mat-dialog-actions>"},{"name":"SelectionDialogComponent","id":"component-SelectionDialogComponent-2dabe1ed4781520b925ddc576910948df49767d3e4bde29a255671101b361cf0f5498ddf15fbc3fa38ca73e191b9dd518220fa74c8ad7e58ac47cf665370e973","file":"projects/rss-reader/src/app/core/dialogs/selection-dialog/selection-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-selection-dialog","styleUrls":[],"styles":["\\n  .selection-dialog--container {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  "],"templateUrl":["./selection-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"defaultNegativeBtnText","defaultValue":"\'Cancel\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The default text to be used for the negative button.</p>\\n","line":19,"rawdescription":"\\nThe default text to be used for the negative button.","modifierKind":[144]},{"name":"defaultPositiveBtnText","defaultValue":"\'OK\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"<p>The default text to be used for the positive button.</p>\\n","line":21,"rawdescription":"\\nThe default text to be used for the positive button.","modifierKind":[144]},{"name":"opts","deprecated":false,"deprecationMessage":"","type":"SelectionDialogOpts","optional":false,"description":"","line":23,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[123],"inheritance":{"file":"Dialog"}},{"name":"defaultBtnColor","defaultValue":"\'primary\'","deprecated":false,"deprecationMessage":"","type":"ThemePalette","optional":false,"description":"<p>The default color to be used for the dialog&#39;s buttons.</p>\\n","line":8,"rawdescription":"\\nThe default color to be used for the dialog\'s buttons.","modifierKind":[144],"inheritance":{"file":"Dialog"}}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Inject } from \'@angular/core\';\\nimport { MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\n\\nimport { Dialog } from \'../dialog\';\\nimport { SelectionDialogOpts } from \'../models\';\\n\\n@Component({\\n  selector: \'app-selection-dialog\',\\n  templateUrl: \'./selection-dialog.component.html\',\\n  styles: [`\\n  .selection-dialog--container {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  `]\\n})\\nexport class SelectionDialogComponent extends Dialog {\\n  /** The default text to be used for the negative button. */\\n  readonly defaultNegativeBtnText = \'Cancel\';\\n  /** The default text to be used for the positive button. */\\n  readonly defaultPositiveBtnText = \'OK\';\\n\\n  constructor(@Inject(MAT_DIALOG_DATA) public opts: SelectionDialogOpts) {\\n    super(opts);\\n  }\\n\\n  get hideNegativeBtn(): boolean {\\n    // As the default text will be used if no text was specified,\\n    // the button will always be shown unless explicitly hidden.\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'negative\');\\n    }\\n  }\\n\\n  get hideNeutralBtn(): boolean {\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'neutral\');\\n    }\\n\\n    return !(\'neutralBtnText\' in this.opts);\\n  }\\n\\n  get hidePositiveBtn(): boolean {\\n    // As the default text will be used if no text was specified,\\n    // the button will always be shown unless explicitly hidden.\\n    if (\'hideActionBtns\' in this.opts &&\\n      Array.isArray(this.opts.hideActionBtns)) {\\n      return this.opts.hideActionBtns.includes(\'positive\');\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n  .selection-dialog--container {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  \\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"opts","type":"SelectionDialogOpts","deprecated":false,"deprecationMessage":""}],"line":21,"jsdoctags":[{"name":"opts","type":"SelectionDialogOpts","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"Dialog","accessors":{"hideNegativeBtn":{"name":"hideNegativeBtn","getSignature":{"name":"hideNegativeBtn","type":"boolean","returnType":"boolean","line":27}},"hideNeutralBtn":{"name":"hideNeutralBtn","getSignature":{"name":"hideNeutralBtn","type":"boolean","returnType":"boolean","line":36}},"hidePositiveBtn":{"name":"hidePositiveBtn","getSignature":{"name":"hidePositiveBtn","type":"boolean","returnType":"boolean","line":45}}},"templateData":"<h2 matDialogTitle *ngIf=\\"opts?.title\\">{{ opts.title }}</h2>\\n<mat-dialog-content class=\\"mat-typography selection-dialog--container\\">\\n  <mat-selection-list #selection>\\n    <mat-list-option *ngFor=\\"let option of opts.options\\" [disabled]=\\"option.disabled\\" [value]=\\"option.value\\"\\n      [checkboxPosition]=\\"option.checkboxPosition ? option.checkboxPosition : \'before\'\\" [selected]=\\"option.selected\\">\\n      {{ option.title }}\\n    </mat-list-option>\\n  </mat-selection-list>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\"end\\" *ngIf=\\"hasActionBtns\\">\\n  <button mat-button *ngIf=\\"!hideNegativeBtn\\" [color]=\\"negativeBtnColor\\"\\n    matDialogClose=\\"cancel\\"\\n    [attr.cdkFocusInitial]=\\"opts.initialActionBtnFocus === \'negative\' || null\\">{{ opts.negativeBtnText }}</button>\\n  <button mat-button *ngIf=\\"!hideNeutralBtn\\" [color]=\\"neutralBtnColor\\"\\n    matDialogClose=\\"neutral\\"\\n    [attr.cdkFocusInitial]=\\"opts.initialActionBtnFocus === \'neutral\' || null\\">{{ opts.neutralBtnText }}</button>\\n  <button mat-button *ngIf=\\"!hidePositiveBtn\\" [color]=\\"positiveBtnColor\\" [matDialogClose]=\\"selection.selectedOptions\\"\\n    [disabled]=\\"selection.selectedOptions.selected.length < 1\\"\\n    [attr.cdkFocusInitial]=\\"opts.initialActionBtnFocus === \'positive\' || null\\">\\n    {{ opts.positiveBtnText }}\\n  </button>\\n</mat-dialog-actions>\\n"},{"name":"SettingsComponent","id":"component-SettingsComponent-1012bc114e12ff9c45606726485c84c68de4493d8193cb16ef68a6c6bdec51b0168ec7ac29cdb157f3f2ae1acaa69874957e17ac91c9f80fa3b514624471982c","file":"projects/rss-reader/src/app/pages/settings/settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-settings","styleUrls":["./settings.component.scss"],"styles":[],"templateUrl":["./settings.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"settingsForm","defaultValue":"new FormGroup({\\n    openNewTab: new FormControl(false),\\n    showImages: new FormControl(false),\\n    theme: new FormControl<Theme>(\'indigo-pink\'),\\n    notifyNewReleases: new FormControl(false)\\n  })","deprecated":false,"deprecationMessage":"","type":"SettingsForm","optional":false,"description":"","line":21},{"name":"themes","defaultValue":"themes","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27}],"methodsClass":[{"name":"reset","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":""},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { FormControl, FormGroup } from \'@angular/forms\';\\n\\nimport { DialogsService } from \'../../core/dialogs/dialogs.service\';\\nimport { SharedService } from \'../../shared.service\';\\nimport { SettingsStorageService } from \'../../core/settings-storage/settings-storage.service\';\\nimport { Theme, themes } from \'./types\';\\n\\ntype SettingsForm = FormGroup<{\\n  openNewTab: FormControl<boolean>;\\n  showImages: FormControl<boolean>;\\n  theme: FormControl<Theme | null>;\\n  notifyNewReleases: FormControl<boolean | null>;\\n}>;\\n@Component({\\n  selector: \'app-settings\',\\n  templateUrl: \'./settings.component.html\',\\n  styleUrls: [\'./settings.component.scss\']\\n})\\nexport class SettingsComponent {\\n  settingsForm: SettingsForm = new FormGroup({\\n    openNewTab: new FormControl(false),\\n    showImages: new FormControl(false),\\n    theme: new FormControl<Theme>(\'indigo-pink\'),\\n    notifyNewReleases: new FormControl(false)\\n  });\\n  themes = themes;\\n  constructor(\\n    private dialog: DialogsService,\\n    private shared: SharedService,\\n    private settingsStorage: SettingsStorageService\\n  ) {\\n    this.settingsForm.patchValue(settingsStorage.settings);\\n  }\\n\\n  reset() {\\n    const dialogRef = this.dialog.openConfirmDialog({ title: \'Reset settings?\', msg: \'Are you sure you want to reset the settings?\' });\\n    dialogRef.afterClosed().subscribe(result => {\\n      if (result === \'ok\') {\\n        this.settingsStorage.clearSettings(/* resetToDefault = true */);\\n        this.shared.openSnackBar({ msg: \'Settings successfully reset\' });\\n      }\\n    });\\n  }\\n  save() {\\n    this.settingsStorage.setSettings(this.settingsForm.value);\\n    const snackBarRef = this.shared.openSnackBar({ msg: \'Settings saved\', action: \'Reload\' });\\n    snackBarRef.onAction().subscribe(() => {\\n      window.location.reload();\\n    });\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".settings-card {\\n  display: flex;\\n  flex-direction: column;\\n\\n  form {\\n    display: flex;\\n    flex-direction: column;\\n\\n    fieldset {\\n      display: flex;\\n      flex-direction: column;\\n    }\\n  }\\n}\\n","styleUrl":"./settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"dialog","type":"DialogsService","deprecated":false,"deprecationMessage":""},{"name":"shared","type":"SharedService","deprecated":false,"deprecationMessage":""},{"name":"settingsStorage","type":"SettingsStorageService","deprecated":false,"deprecationMessage":""}],"line":27,"jsdoctags":[{"name":"dialog","type":"DialogsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"shared","type":"SharedService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"settingsStorage","type":"SettingsStorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<div class=\\"app-content\\">\\n  <mat-card appearance=\\"outlined\\">\\n    <mat-card-header>\\n      <mat-card-title>Settings</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content class=\\"settings-card mat-typography\\">\\n      <form [formGroup]=\\"settingsForm\\">\\n        <fieldset>\\n          <legend>General</legend>\\n          <mat-checkbox formControlName=\\"openNewTab\\" class=\\"checkbox\\">Open posts in a new tab</mat-checkbox>\\n          <mat-checkbox formControlName=\\"showImages\\" class=\\"checkbox\\">Show images</mat-checkbox>\\n          <mat-form-field color=\\"accent\\">\\n            <mat-label>Theme</mat-label>\\n            <mat-select formControlName=\\"theme\\">\\n              <mat-option *ngFor=\\"let theme of themes\\" [value]=\\"theme\\">{{theme}}</mat-option>\\n            </mat-select>\\n            <mat-hint>Changes will be made on reload.</mat-hint>\\n          </mat-form-field>\\n        </fieldset>\\n        <fieldset>\\n          <legend>Releases</legend>\\n          <mat-checkbox formControlName=\\"notifyNewReleases\\" class=\\"checkbox\\">Notify when new releases are out</mat-checkbox>\\n        </fieldset>\\n      </form>\\n    </mat-card-content>\\n    <mat-card-actions align=\\"end\\">\\n      <button mat-button (click)=\\"reset()\\" color=\\"warn\\">Reset</button>\\n      <button mat-button (click)=\\"save()\\" color=\\"primary\\" [disabled]=\\"settingsForm.invalid\\">Save</button>\\n    </mat-card-actions>\\n  </mat-card>\\n</div>\\n"},{"name":"ShareDialogComponent","id":"component-ShareDialogComponent-770290d75ca2bda23d111845d64f9743985eece9a396119bb1705a8b6deabbf844a4152c492c48f888e48ba1130dc92b71a20d6754600def98d7cd5a2819743a","file":"projects/rss-reader/src/app/dialogs/share-dialog/share-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-share-dialog","styleUrls":["./share-dialog.component.scss"],"styles":[],"templateUrl":["./share-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"articleData","deprecated":false,"deprecationMessage":"","type":"FeedEntry | NewsAPITopHeadlinesArticle","optional":false,"description":"","line":16,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[123]},{"name":"publishedDate","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":14},{"name":"url","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":13}],"methodsClass":[{"name":"isFeedEntry","args":[{"name":"feed","type":"FeedEntry | NewsAPITopHeadlinesArticle","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FeedEntry","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChecks if the `feed` property is of type `FeedEntry`\\n","description":"<p>Checks if the <code>feed</code> property is of type <code>FeedEntry</code></p>\\n","jsdoctags":[{"name":"feed","type":"FeedEntry | NewsAPITopHeadlinesArticle","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""},{"name":"selectUrl","args":[{"name":"ev","type":"MouseEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"ev","type":"MouseEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"shareNative","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":""},{"name":"shareToFacebook","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":""},{"name":"shareToTwitter","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, Inject } from \'@angular/core\';\\n\\nimport { MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\nimport { FeedEntry } from \'../../models/feed-entry\';\\nimport { NewsAPITopHeadlinesArticle } from \'../../models/news-api/top-headlines-article\';\\n\\n@Component({\\n  selector: \'app-share-dialog\',\\n  templateUrl: \'./share-dialog.component.html\',\\n  styleUrls: [\'./share-dialog.component.scss\']\\n})\\nexport class ShareDialogComponent implements OnInit {\\n  url: string;\\n  publishedDate: string;\\n  constructor(\\n    @Inject(MAT_DIALOG_DATA) public articleData: FeedEntry | NewsAPITopHeadlinesArticle\\n  ) {}\\n\\n  ngOnInit() {\\n    if (this.isFeedEntry(this.articleData)) {\\n      this.url = this.articleData.link;\\n      this.publishedDate = this.articleData.pubDate.toString();\\n    } else {\\n      this.url = this.articleData.url;\\n      this.publishedDate = this.articleData.publishedAt;\\n    }\\n  }\\n  /**\\n   * Checks if the `feed` property is of type `FeedEntry`\\n   */\\n  isFeedEntry(feed: FeedEntry | NewsAPITopHeadlinesArticle): feed is FeedEntry {\\n    return (feed as FeedEntry).categories !== undefined;\\n  }\\n\\n  selectUrl(ev: MouseEvent) {\\n    // ev.target is typed as EventTarget, so select() can\'t be accessed otherwise\\n    if (ev.target instanceof HTMLInputElement) {\\n      ev.target.select();\\n    }\\n  }\\n\\n  shareToFacebook() {\\n    window.open(`https://www.facebook.com/sharer.php?u=${encodeURI(this.url)}`, \'\');\\n  }\\n  shareToTwitter() {\\n    const text = encodeURI(`Check out this blogpost by ${this.articleData.author}\\\\\\n    published on ${this.publishedDate} titled \\"${this.articleData.title}\\"!\')}`);\\n    window.open(`https://twitter.com/intent/tweet?url=${encodeURI(this.url)}&text=${text}`);\\n  }\\n  shareNative() {\\n    if (navigator.share !== undefined) {\\n      navigator.share({\\n        title: document.title,\\n        text: \'Check out this page about\\"\' + document.title + \'\\"!\',\\n        url: document.URL\\n      }).then(() => console.log(\'Successfully shared current page.\'))\\n        .catch((error) => console.error(\'Error sharing current page: \', error));\\n    } else {\\n      // eslint-disable-next-line max-len\\n      alert(\'To share natively, please enable the \\\\\'Experimental Web Platform Features\\\\\' flag in chrome://flags. Otherwise, it might not be supported on your platform right now.\');\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".share-dialog--container {\\n  display: flex;\\n  flex-direction: column;\\n  min-width: fit-content;\\n}\\n\\n.share-icon {\\n  font-size: 30px;\\n  width: 30px;\\n  height: 30px;\\n}\\n.svg-icon > svg {\\n  width: 30px !important;\\n  height: 30px !important;\\n}\\n.share-div {\\n  align-items: center;\\n  display: flex;\\n  flex-direction: column;\\n  user-select: none;\\n}\\n.share-tile {\\n  cursor: pointer;\\n}\\n\\n.android-btn {\\n  color: #A4C639 !important;\\n}\\n.facebook-btn {\\n  color: #3b5998 !important;\\n}\\n.twitter-btn {\\n  color: #00aced !important;\\n}\\n.google-plus-btn {\\n  color: #d34836 !important;\\n}\\n","styleUrl":"./share-dialog.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"articleData","type":"FeedEntry | NewsAPITopHeadlinesArticle","deprecated":false,"deprecationMessage":""}],"line":14,"jsdoctags":[{"name":"articleData","type":"FeedEntry | NewsAPITopHeadlinesArticle","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<h2 matDialogTitle>Share \\"{{articleData.title | slice:0:100}}\\":</h2>\\n<mat-dialog-content class=\\"share-dialog--container\\">\\n  <mat-form-field>\\n    <input matInput readonly [(ngModel)]=\\"url\\" (click)=\\"selectUrl($event)\\" matTooltip=\\"Click to select and copy\\">\\n    <mat-label>URL</mat-label>\\n  </mat-form-field>\\n  <p>OR:</p>\\n  <div class=\\"share-btns\\" style=\\"min-width: 150px\\">\\n    <mat-grid-list cols=\\"3\\">\\n      <mat-grid-tile matRipple matRippleColor=\\"rgba(164, 198, 57, 0.3)\\" class=\\"share-tile android-btn\\" (click)=\\"shareNative()\\">\\n        <div class=\\"share-div\\">\\n          <mat-icon class=\\"share-icon\\">share</mat-icon>\\n          <h3>Android</h3>\\n        </div>\\n      </mat-grid-tile>\\n      <mat-grid-tile matRipple matRippleColor=\\"rgba(59, 89, 152, 0.3)\\" class=\\"share-tile facebook-btn\\" (click)=\\"shareToFacebook()\\">\\n        <div class=\\"share-div\\">\\n          <mat-icon class=\\"share-icon svg-icon\\">\\n            <svg width=\\"24px\\" height=\\"24px\\" viewBox=\\"0 0 24 24\\" fill=\\"currentColor\\">\\n              <path d=\\"M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M18,5H15.5A3.5,3.5 0 0,0 12,8.5V11H10V14H12V21H15V14H18V11H15V9A1,1 0 0,1 16,8H18V5Z\\"\\n              />\\n            </svg>\\n          </mat-icon>\\n          <h3>Facebook</h3>\\n        </div>\\n      </mat-grid-tile>\\n      <mat-grid-tile matRipple matRippleColor=\\"rgba(0, 172, 237, 0.3)\\" class=\\"share-tile twitter-btn\\" (click)=\\"shareToTwitter()\\">\\n        <div class=\\"share-div\\">\\n          <mat-icon class=\\"share-icon svg-icon\\">\\n            <svg width=\\"24px\\" height=\\"24px\\" viewBox=\\"0 0 24 24\\" fill=\\"currentColor\\">\\n              <path d=\\"M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M17.71,9.33C18.19,8.93 18.75,8.45 19,7.92C18.59,8.13 18.1,8.26 17.56,8.33C18.06,7.97 18.47,7.5 18.68,6.86C18.16,7.14 17.63,7.38 16.97,7.5C15.42,5.63 11.71,7.15 12.37,9.95C9.76,9.79 8.17,8.61 6.85,7.16C6.1,8.38 6.75,10.23 7.64,10.74C7.18,10.71 6.83,10.57 6.5,10.41C6.54,11.95 7.39,12.69 8.58,13.09C8.22,13.16 7.82,13.18 7.44,13.12C7.81,14.19 8.58,14.86 9.9,15C9,15.76 7.34,16.29 6,16.08C7.15,16.81 8.46,17.39 10.28,17.31C14.69,17.11 17.64,13.95 17.71,9.33Z\\"\\n              />\\n            </svg>\\n          </mat-icon>\\n          <h3>Twitter</h3>\\n        </div>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n  </div>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\"end\\">\\n  <button mat-button color=\\"primary\\" matDialogClose>Dismiss</button>\\n</mat-dialog-actions>\\n"},{"name":"SubmitRssDialogComponent","id":"component-SubmitRssDialogComponent-902c7cff56433a215dc265f90cce44e47db0a67b935e2868682e8215b86cf8ddd24c87b65258eaf2c001fe3ac4e7efb6f040cba9b48f791274306d98689daa3e","file":"projects/rss-reader/src/app/dialogs/submit-rss-dialog/submit-rss-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-submit-rss-dialog","styleUrls":[],"styles":[],"templateUrl":["./submit-rss-dialog.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"data","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":12,"decorators":[{"name":"Inject","stringifiedArguments":"MAT_DIALOG_DATA"}],"modifierKind":[123]}],"methodsClass":[{"name":"getFormUrl","args":[],"optional":false,"returnType":"SafeResourceUrl","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Inject, SecurityContext } from \'@angular/core\';\\nimport { MAT_DIALOG_DATA } from \'@angular/material/dialog\';\\nimport { DomSanitizer, SafeResourceUrl } from \'@angular/platform-browser\';\\n\\n@Component({\\n  selector: \'app-submit-rss-dialog\',\\n  templateUrl: \'./submit-rss-dialog.component.html\'\\n})\\nexport class SubmitRssDialogComponent {\\n  constructor(\\n    private dom: DomSanitizer,\\n    @Inject(MAT_DIALOG_DATA) public data: { feedUrl: string }\\n  ) { }\\n\\n  getFormUrl(): SafeResourceUrl {\\n    // eslint-disable-next-line max-len\\n    return this.dom.sanitize(SecurityContext.URL, `https://docs.google.com/forms/d/e/1FAIpQLSca8Iug_FPflBOHJdUN4KUBrUurOLjcyHAWqkn0_TTJ1oYmRQ/viewform?usp=pp_url&entry.1135652000=${this.data.feedUrl}`);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"dom","type":"DomSanitizer","deprecated":false,"deprecationMessage":""},{"name":"data","type":"literal type","deprecated":false,"deprecationMessage":""}],"line":9,"jsdoctags":[{"name":"dom","type":"DomSanitizer","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"data","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"templateData":"<h2 matDialogTitle>Submit RSS</h2>\\n<mat-dialog-content>\\n  <iframe [src]=\\"getFormUrl()\\" height=\\"600\\" frameBorder=\\"0\\"></iframe>\\n</mat-dialog-content>\\n<mat-dialog-actions align=\\"end\\">\\n  <button mat-button color=\\"primary\\" matDialogClose>Close</button>\\n</mat-dialog-actions>\\n"}],"modules":[{"name":"ActionItemsModule","id":"module-ActionItemsModule-0372ab80f41c4d2eff5642f79eb76bb30d46fa01363088655325a9eae143ad6257352746c9f8bba335ec7cad5c10f2716028092c17c408842b513f293007ae46","description":"","deprecationMessage":"","deprecated":false,"file":"projects/rss-reader/src/app/actionitem.service.ts","methods":[],"sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { Component, Injectable, NgModule } from \'@angular/core\';\\nimport { MatButtonModule } from \'@angular/material/button\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport { MatMenuModule } from \'@angular/material/menu\';\\nimport { MatTooltipModule } from \'@angular/material/tooltip\';\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\nimport { RouterModule } from \'@angular/router\';\\n\\n/** ID used to generate new action items with no explicitly-defined ID. */\\nlet nextKeyId = 0;\\n\\n@Injectable()\\n/**\\n * A action icon service for the toolbar.\\n */\\nexport class ActionItemService {\\n\\n  readonly actionItems = new Map<string, ActionItem>();\\n  /**\\n   * Adds an action item\\n   *\\n   * @param actionItem The action item\\n   */\\n  addActionItem(actionItem: ActionItem) {\\n    this.actionItems.set(`actionItem-${nextKeyId++}`, actionItem);\\n  }\\n  /**\\n   * Adds an action item toggle\\n   *\\n   * @param actionItem The action item\\n   * @deprecated\\n   * @experimental Do not use!\\n   */\\n  addActionItemToggle(actionItem: ActionItemToggle) {\\n    console.warn(\'%cThis method is experimental and may break. Continue at your own risk.\', \'font-weight: 600\');\\n    actionItem.onClickListener = () => {\\n      actionItem.toggleBind = !actionItem.toggleBind;\\n    };\\n    this.actionItems.set(`actionItem-${nextKeyId++}`, actionItem);\\n  }\\n  /**\\n   * Updates an action item by its key\\n   *\\n   * @param key The key of the action item\\n   * @param actionItem The action item\\n   */\\n  updateActionItemByKey(key: string, actionItem: ActionItem) {\\n    try {\\n      this.actionItems[key] = actionItem;\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Gets all action items\\n   */\\n  getActionItems(): ActionItem[] {\\n    return Array.from(this.actionItems.values());\\n  }\\n  /**\\n   * Removes an action item\\n   *\\n   * @param key The key of the action item to remove\\n   */\\n  removeActionItemByKey(key: string) {\\n    try {\\n      this.actionItems.delete(key);\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Removes all action items\\n   */\\n  removeActionItems() {\\n    this.actionItems.clear();\\n  }\\n  /**\\n   * Gets a action item by its key\\n   *\\n   * @param key The key of the action item to retrieve\\n   */\\n  getActionItemByKey(key: string): ActionItem {\\n    try {\\n      return this.actionItems[key];\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Adds a action item on click listener to the specified action item\\n   * Note: This can also be declared manually\\n   *\\n   * @deprecated Please set the onclick listener in the {@link ActionItem} object itself.\\n   * @param id The id of the action item\\n   * @param callback The callback when the action item is clicked (has to be arrow function)\\n   */\\n  addActionItemOnClickListener(key: string, callback: (ev?: Event) => void) {\\n    try {\\n      this.actionItems[key].onClickListener = callback;\\n    } catch (e) {\\n      this.throwKeyNotFoundError(key);\\n    }\\n  }\\n  /**\\n   * Throws an error where the id couldn\'t be found\\n   */\\n  private throwKeyNotFoundError(id: string) {\\n    throw new Error(`Could not find an action item with key ${id}`);\\n  }\\n  /**\\n   * Throws an error where the title couldn\'t be found\\n   */\\n  private throwTitleNotFoundError(title: string) {\\n    throw new Error(`Could not find an action item with title ${title}`);\\n  }\\n}\\n\\n/**\\n * An action item\\n */\\nexport interface ActionItem {\\n  /**\\n   * The title of the action item\\n   */\\n  title: string;\\n  /** The ID of the action item */\\n  id?: string;\\n  /**\\n   * The icon of the action item\\n   */\\n  icon?: string;\\n  /**\\n   * The href of the action item\\n   * NOTE: If `routerLink` is specified, don\'t use `href`.\\n   */\\n  href?: string;\\n  /**\\n   * Similar to what Android does.\\n   */\\n  showAsAction?: boolean;\\n  /** Whether the action item should be disabled. */\\n  disabled?: boolean;\\n  /**\\n   * The router link of the action item\\n   * NOTE: If `href` is specified, don\'t use `routerLink`.\\n   */\\n  routerLink?: string;\\n  /**\\n   * The on click listener of the action item\\n   * Note: This can also be set by {@link ActionItemService#addActionItemOnClickListener}\\n   */\\n  onClickListener?: (ev?: Event) => void;\\n  /**\\n   * The submenu of the action item\\n   */\\n  subMenu?: ActionItem[];\\n}\\n/**\\n * An action item toggle\\n */\\nexport interface ActionItemToggle extends ActionItem {\\n  /**\\n   * The toggle boolean to bind to\\n   */\\n  toggleBind: boolean;\\n}\\n\\n@Component({\\n  selector: \'app-action-items\',\\n  template: `\\n\\t<ng-container *ngFor=\\"let actionItem of actionItems\\">\\n    <button\\n    mat-icon-button\\n    *ngIf=\\"actionItem.onClickListener\\"\\n    (click)=\\"actionItem.onClickListener($event)\\"\\n    [matTooltip]=\\"actionItem.title\\"\\n    [disabled]=\\"actionItem.disabled\\">\\n      <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n    </button>\\n    <a mat-icon-button *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [matTooltip]=\\"actionItem.title\\" [disabled]=\\"actionItem.disabled\\">\\n    <mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n    </a>\\n    <a\\n      mat-icon-button\\n      *ngIf=\\"actionItem.routerLink\\"\\n      [routerLink]=\\"[actionItem.routerLink]\\"\\n      [matTooltip]=\\"actionItem.title\\"\\n      [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t</a>\\n\\t</ng-container>\\n  <button mat-icon-button *ngIf=\\"showMoreMenu\\" [matMenuTriggerFor]=\\"moreMenu\\"\\n    matTooltip=\\"More options\\">\\n\\t\\t<mat-icon>more_vert</mat-icon>\\n\\t</button>\\n\\t<mat-menu #moreMenu=\\"matMenu\\">\\n\\t\\t<ng-container *ngFor=\\"let actionItem of overflowActionItems\\">\\n\\t\\t\\t<button mat-menu-item *ngIf=\\"actionItem.onClickListener\\" (click)=\\"actionItem.onClickListener($event)\\"\\n        [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</button>\\n\\t\\t\\t<a mat-menu-item *ngIf=\\"actionItem.href\\" [href]=\\"actionItem.href\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</a>\\n\\t\\t\\t<a mat-menu-item *ngIf=\\"actionItem.routerLink\\" [routerLink]=\\"[actionItem.routerLink]\\" [disabled]=\\"actionItem.disabled\\">\\n\\t\\t\\t\\t<mat-icon *ngIf=\\"actionItem.icon\\">{{actionItem.icon}}</mat-icon>\\n\\t\\t\\t\\t{{actionItem.title}}\\n\\t\\t\\t</a>\\n\\t\\t</ng-container>\\n\\t</mat-menu>\\n\\t\\t\\t\\t`\\n})\\nexport class ActionItemsComponent {\\n  constructor(private actionItemService: ActionItemService) { }\\n  get actionItems(): ActionItem[] {\\n    return this.actionItemService.getActionItems().filter(item => item.showAsAction);\\n  }\\n  get overflowActionItems(): ActionItem[] {\\n    return this.actionItemService.getActionItems().filter(item => !item.showAsAction);\\n  }\\n  get showMoreMenu() {\\n    return this.actionItemService.getActionItems().find((actionItem: ActionItem): boolean => actionItem.showAsAction !== true);\\n  }\\n}\\n\\n@NgModule({\\n  declarations: [\\n    ActionItemsComponent\\n  ],\\n  exports: [\\n    ActionItemsComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    BrowserAnimationsModule,\\n    MatButtonModule,\\n    MatIconModule,\\n    MatMenuModule,\\n    MatTooltipModule,\\n    RouterModule\\n  ],\\n  providers: [\\n    ActionItemService\\n  ]\\n})\\nexport class ActionItemsModule { }\\n","children":[{"type":"providers","elements":[{"name":"ActionItemService"}]},{"type":"declarations","elements":[{"name":"ActionItemsComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"ActionItemsComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"AppModule","id":"module-AppModule-d671ad43706a4c729bde03c4d2af05172c4dfd99533b7a4fd0feae8caa0a6ab0c442b2ecf9b5c68b2df230098b325577b62626bfff5d1548fa557268e6782887","description":"","deprecationMessage":"","deprecated":false,"file":"projects/rss-reader/src/app/app.module.ts","methods":[],"sourceCode":"import { HttpClientModule } from \'@angular/common/http\';\\nimport { NgModule } from \'@angular/core\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\nimport { BrowserModule } from \'@angular/platform-browser\';\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\nimport { ServiceWorkerModule } from \'@angular/service-worker\';\\nimport { MarkedOptions, MarkedRenderer, MarkdownModule } from \'ngx-markdown\';\\n\\nimport { environment } from \'../environments/environment\';\\nimport { ActionItemsModule } from \'./actionitem.service\';\\nimport { AppComponent } from \'./app.component\';\\nimport { AppRoutingModule } from \'./app.routing\';\\nimport { ArticleCardModule } from \'./components/article-card/article-card.module\';\\nimport { ExpansionPanelComponent } from \'./components/expansion-panel/expansion-panel.component\';\\nimport { DialogsModule as CoreDialogsModule } from \'./core/dialogs/dialogs.module\';\\nimport { DialogsModule } from \'./dialogs/dialogs.module\';\\nimport { FeedComponent } from \'./feed/feed.component\';\\nimport { GuideItemsService } from \'./guide-items\';\\nimport { HeadlinesComponent } from \'./headlines/headlines.component\';\\nimport { HotkeysModule } from \'./hotkeys/hotkeys.module\';\\nimport { MaterialModule } from \'./material.module\';\\nimport { OverlayService } from \'./overlay.service\';\\nimport { OnboardingOverlayComponent } from \'./overlays/onboarding-overlay/onboarding-overlay.component\';\\nimport { PageNotFoundComponent } from \'./page-not-found/page-not-found.component\';\\nimport { DocViewerComponent } from \'./pages/doc-viewer/doc-viewer.component\';\\nimport { GuidesListComponent } from \'./pages/guide-list/guide-list.component\';\\nimport { GuideViewerComponent } from \'./pages/guide-viewer/guide-viewer.component\';\\nimport { PipesModule } from \'./pipe/pipes.module\';\\nimport { SharedModule } from \'./shared.service\';\\n\\nconst markedOptionsFactory: () => MarkedOptions = () => {\\n  const renderer = new MarkedRenderer();\\n\\n  renderer.link = (href, title, text) => `<a class=\\"anchor-link\\" href=\\"${href}\\"${typeof title !== \'undefined\' ?\\n    ` title=${title}` : \'\'}>${text}</a>`;\\n\\n  return {\\n    renderer,\\n    gfm: true\\n  };\\n};\\n\\nconst OVERLAYS = [\\n  OnboardingOverlayComponent\\n];\\n\\n@NgModule({\\n  declarations: [\\n    AppComponent,\\n    FeedComponent,\\n    PageNotFoundComponent,\\n    DocViewerComponent,\\n    GuideViewerComponent,\\n    GuidesListComponent,\\n    ExpansionPanelComponent,\\n    OVERLAYS,\\n    HeadlinesComponent\\n  ],\\n  imports: [\\n    BrowserModule,\\n    BrowserAnimationsModule,\\n    ReactiveFormsModule,\\n    FormsModule,\\n    HttpClientModule,\\n    MarkdownModule.forRoot({\\n      markedOptions: {\\n        provide: MarkedOptions,\\n        useFactory: markedOptionsFactory\\n      }\\n    }),\\n    MaterialModule,\\n    PipesModule,\\n    SharedModule,\\n    AppRoutingModule,\\n    // The scope parameter is specified such that the service worker only\\n    // applies to the /rss-reader URL.\\n    // ServiceWorkerModule.register(environment.swLocation, { enabled: environment.production, scope: \'./\' }),\\n    ServiceWorkerModule.register(\'./ngsw-worker.js\', { enabled: environment.production, scope: \'./\' }),\\n    DialogsModule,\\n    CoreDialogsModule,\\n    ActionItemsModule,\\n    ArticleCardModule,\\n    HotkeysModule,\\n  ],\\n  bootstrap: [AppComponent],\\n  providers: [\\n    GuideItemsService,\\n    OverlayService\\n  ],\\n  // From Angular v9 and above, it\'s no longer required to specify\\n  // the entryComponents field with Ivy.\\n  // See https://angular.io/guide/deprecations#entryComponents for more info.\\n  /*entryComponents: [\\n    OVERLAYS,\\n    ExpansionPanelComponent\\n  ]*/\\n})\\nexport class AppModule { }\\n","children":[{"type":"providers","elements":[{"name":"GuideItemsService"},{"name":"OverlayService"}]},{"type":"declarations","elements":[{"name":"AppComponent"},{"name":"DocViewerComponent"},{"name":"ExpansionPanelComponent"},{"name":"FeedComponent"},{"name":"GuideViewerComponent"},{"name":"GuidesListComponent"},{"name":"HeadlinesComponent"},{"name":"OnboardingOverlayComponent"},{"name":"PageNotFoundComponent"}]},{"type":"imports","elements":[{"name":"ActionItemsModule"},{"name":"AppRoutingModule"},{"name":"ArticleCardModule"},{"name":"DialogsModule"},{"name":"HotkeysModule"},{"name":"MaterialModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[{"name":"AppComponent"}]},{"type":"classes","elements":[]}]},{"name":"AppRoutingModule","id":"module-AppRoutingModule-db9f6445ba58d2734549e84cdf4406e981cf6b16f6e7343d90b49a3016e8d8d87ae2fd786f3594b91477b089535c909446429457f0f1655127b3e0f4c7b0ef2f","description":"","deprecationMessage":"","deprecated":false,"file":"projects/rss-reader/src/app/app.routing.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { ExtraOptions, RouterModule, Routes } from \'@angular/router\';\\nimport { environment } from \'../environments/environment\';\\nimport { FeedComponent } from \'./feed/feed.component\';\\nimport { HeadlinesComponent } from \'./headlines/headlines.component\';\\nimport { PageNotFoundComponent } from \'./page-not-found/page-not-found.component\';\\nimport { GuidesListComponent } from \'./pages/guide-list/guide-list.component\';\\nimport { GuideViewerComponent } from \'./pages/guide-viewer/guide-viewer.component\';\\n\\nexport const routes: Routes = [\\n  // Lazy-loaded routes\\n  {\\n    path: \'release-notes\',\\n    loadChildren: () => \\"import(\'./pages/release-notes/release-notes.module\').then(m => m.ReleaseNotesModule)\\"\\n  },\\n  {\\n    path: \'settings\',\\n    loadChildren: () => \\"import(\'./pages/settings/settings.module\').then(m => m.SettingsModule)\\"\\n  },\\n  { path: \'doc/:docTypeId/:docId\', component: GuideViewerComponent },\\n  { path: \'docs\', component: GuidesListComponent },\\n  { path: \'feed\', component: FeedComponent },\\n  { path: \'headlines\', component: HeadlinesComponent },\\n  { path: \'home\', redirectTo: \'/feed\' },\\n  { path: \'\', pathMatch: \'full\', redirectTo: \'/feed\' },\\n  { path: \'**\', component: PageNotFoundComponent },\\n];\\n\\nconst routerOptions: ExtraOptions = environment.routerOptions ? environment.routerOptions : {\\n  anchorScrolling: \'enabled\',\\n  scrollPositionRestoration: \'enabled\'\\n  // TODO: Uncomment once tracing isn\'t actually enabled on production builds,\\n  // which it currently is for some reason.\\n  // enableTracing: !environment.production\\n};\\n\\n@NgModule({\\n  imports: [RouterModule.forRoot(routes, routerOptions)],\\n  exports: [RouterModule]\\n})\\nexport class AppRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"ArticleCardModule","id":"module-ArticleCardModule-f9593781c8e35b82e4169f17cc6ccd1476e3f0584383b0b21823c8f662544c7be4ba291901c0152422596a561f6e376a88d7f30dd6aacc96b810beb25f105389","description":"","deprecationMessage":"","deprecated":false,"file":"projects/rss-reader/src/app/components/article-card/article-card.module.ts","methods":[],"sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { NgModule } from \'@angular/core\';\\nimport { MatButtonModule } from \'@angular/material/button\';\\nimport { MatCardModule } from \'@angular/material/card\';\\nimport { MatChipsModule } from \'@angular/material/chips\';\\nimport { MatDialogModule } from \'@angular/material/dialog\';\\nimport { MatDividerModule } from \'@angular/material/divider\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport { MatMenuModule } from \'@angular/material/menu\';\\nimport { MatTooltipModule } from \'@angular/material/tooltip\';\\n\\nimport { ArticleCardComponent } from \'./article-card.component\';\\nimport { DialogsModule } from \'../../dialogs/dialogs.module\';\\nimport { PipesModule } from \'../../pipe/pipes.module\';\\nimport { StripHtmlTagsPipe } from \'../../pipe\';\\nimport { SettingsStorageService } from \'../../core/settings-storage/settings-storage.service\';\\n\\nconst MATERIAL_MODULES = [\\n  MatButtonModule,\\n  MatCardModule,\\n  MatChipsModule,\\n  MatDialogModule,\\n  MatDividerModule,\\n  MatIconModule,\\n  MatMenuModule,\\n  MatTooltipModule\\n];\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    PipesModule,\\n    MATERIAL_MODULES,\\n    DialogsModule\\n  ],\\n  declarations: [\\n    ArticleCardComponent\\n  ],\\n  providers: [\\n    SettingsStorageService,\\n    StripHtmlTagsPipe\\n  ],\\n  exports: [ArticleCardComponent]\\n})\\nexport class ArticleCardModule { }\\n","children":[{"type":"providers","elements":[{"name":"SettingsStorageService"}]},{"type":"declarations","elements":[{"name":"ArticleCardComponent"}]},{"type":"imports","elements":[{"name":"DialogsModule"}]},{"type":"exports","elements":[{"name":"ArticleCardComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"DialogsModule","id":"module-DialogsModule-037a6eebd51028b4b272e735a6339cd6c112d2264821f8cdfae46e1129d3ee77d263d14345978c61669c323f59ed665d87e133756d91a3a8c7255b6e71ca2828","description":"","deprecationMessage":"","deprecated":false,"file":"projects/rss-reader/src/app/dialogs/dialogs.module.ts","methods":[],"sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { NgModule } from \'@angular/core\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\nimport { MatAutocompleteModule } from \'@angular/material/autocomplete\';\\nimport { MatButtonModule } from \'@angular/material/button\';\\nimport { MatCheckboxModule } from \'@angular/material/checkbox\';\\nimport { MatDialogModule } from \'@angular/material/dialog\';\\nimport { MatFormFieldModule } from \'@angular/material/form-field\';\\nimport { MatGridListModule } from \'@angular/material/grid-list\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport { MatInputModule } from \'@angular/material/input\';\\nimport { MatMenuModule } from \'@angular/material/menu\';\\nimport { MatRippleModule } from \'@angular/material/core\';\\nimport { MatSelectModule } from \'@angular/material/select\';\\nimport { MatTooltipModule } from \'@angular/material/tooltip\';\\nimport { RouterModule } from \'@angular/router\';\\n\\nimport { AboutDialogComponent } from \'./about-dialog/about-dialog.component\';\\nimport { CodeViewerDialogComponent } from \'./code-viewer-dialog/code-viewer-dialog.component\';\\nimport { FeedDialogComponent } from \'./feed-dialog/feed-dialog.component\';\\nimport { HeadlineOptionsDialogComponent } from \'./headline-options-dialog/headline-options-dialog.component\';\\nimport { RSSChannelInfoDialogComponent } from \'./rss-channel-info-dialog/rss-channel-info-dialog.component\';\\nimport { ShareDialogComponent } from \'./share-dialog/share-dialog.component\';\\nimport { SubmitRssDialogComponent } from \'./submit-rss-dialog/submit-rss-dialog.component\';\\n\\n\\nexport const DIALOGS = [\\n  AboutDialogComponent,\\n  CodeViewerDialogComponent,\\n  FeedDialogComponent,\\n  HeadlineOptionsDialogComponent,\\n  RSSChannelInfoDialogComponent,\\n  ShareDialogComponent,\\n  SubmitRssDialogComponent\\n];\\n\\nconst DIALOG_MATERIAL_MODULES = [\\n  MatAutocompleteModule,\\n  MatButtonModule,\\n  MatCheckboxModule,\\n  MatDialogModule,\\n  MatFormFieldModule,\\n  MatGridListModule,\\n  MatIconModule,\\n  MatInputModule,\\n  MatMenuModule,\\n  MatRippleModule,\\n  MatSelectModule,\\n  MatTooltipModule\\n];\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    FormsModule,\\n    ReactiveFormsModule,\\n    RouterModule,\\n    DIALOG_MATERIAL_MODULES\\n  ],\\n  declarations: [\\n    DIALOGS\\n  ],\\n  // From Angular v9 and above, it\'s no longer required to specify\\n  // the entryComponents field with Ivy.\\n  // See https://angular.io/guide/deprecations#entryComponents for more info.\\n  /* entryComponents: [\\n    DIALOGS\\n  ], */\\n  exports: [\\n    DIALOGS\\n  ]\\n})\\nexport class DialogsModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"AboutDialogComponent"},{"name":"CodeViewerDialogComponent"},{"name":"FeedDialogComponent"},{"name":"HeadlineOptionsDialogComponent"},{"name":"RSSChannelInfoDialogComponent"},{"name":"ShareDialogComponent"},{"name":"SubmitRssDialogComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"AboutDialogComponent"},{"name":"CodeViewerDialogComponent"},{"name":"FeedDialogComponent"},{"name":"HeadlineOptionsDialogComponent"},{"name":"RSSChannelInfoDialogComponent"},{"name":"ShareDialogComponent"},{"name":"SubmitRssDialogComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"DialogsModule","id":"module-DialogsModule-1b80f8372bfd2023fee5d49d4393088f219d70bc9f6049eb6ac50b0a97786964c54ddd726048cbec8239e98d2a215cb72518c27cbc661eafca84c51cb86779e0-1","description":"","deprecationMessage":"","deprecated":false,"file":"projects/rss-reader/src/app/core/dialogs/dialogs.module.ts","methods":[],"sourceCode":"import { PortalModule } from \'@angular/cdk/portal\';\\nimport { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { FormsModule } from \'@angular/forms\';\\nimport { MatButtonModule } from \'@angular/material/button\';\\nimport { MatDialogModule } from \'@angular/material/dialog\';\\nimport { MatFormFieldModule } from \'@angular/material/form-field\';\\nimport { MatInputModule } from \'@angular/material/input\';\\nimport { MatListModule } from \'@angular/material/list\';\\n\\nimport { MessageDialogComponent } from \'./message-dialog/message-dialog.component\';\\nimport { PortalDialogComponent } from \'./portal-dialog/portal-dialog.component\';\\nimport { PromptDialogComponent } from \'./prompt-dialog/prompt-dialog.component\';\\nimport { SelectionDialogComponent } from \'./selection-dialog/selection-dialog.component\';\\n\\nconst DIALOGS = [\\n  MessageDialogComponent,\\n  PortalDialogComponent,\\n  PromptDialogComponent,\\n  SelectionDialogComponent\\n];\\n\\nconst MATERIAL_MODULES = [\\n  MatButtonModule,\\n  MatDialogModule,\\n  MatFormFieldModule,\\n  MatInputModule,\\n  MatListModule\\n];\\n\\n@NgModule({\\n  declarations: [DIALOGS],\\n  imports: [\\n    CommonModule,\\n    FormsModule,\\n    PortalModule,\\n    MATERIAL_MODULES\\n  ]\\n})\\nexport class DialogsModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"AboutDialogComponent"},{"name":"CodeViewerDialogComponent"},{"name":"FeedDialogComponent"},{"name":"HeadlineOptionsDialogComponent"},{"name":"RSSChannelInfoDialogComponent"},{"name":"ShareDialogComponent"},{"name":"SubmitRssDialogComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"HotkeysModule","id":"module-HotkeysModule-ef9727e245e6d6e6883b76355598be280c311c296cdc5cd91e720422a98d1dfd339ff9b2830d94d6d7707d78154564603589e1025117b0384e7d78250cdb9a04","description":"","deprecationMessage":"","deprecated":false,"file":"projects/rss-reader/src/app/hotkeys/hotkeys.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { MatDialogModule } from \'@angular/material/dialog\';\\nimport { MatButtonModule } from \'@angular/material/button\';\\nimport { HotkeyHelpDialogComponent } from \'./hotkey-help-dialog/hotkey-help-dialog.component\';\\nimport { HotkeysService } from \'./hotkeys.service\';\\n\\n@NgModule({\\n  declarations: [HotkeyHelpDialogComponent],\\n  imports: [\\n    CommonModule,\\n    MatButtonModule,\\n    MatDialogModule\\n  ],\\n  providers: [HotkeysService],\\n  // From Angular v9 and above, it\'s no longer required to specify\\n  // the entryComponents field with Ivy.\\n  // See https://angular.io/guide/deprecations#entryComponents for more info.\\n  // entryComponents: [HotkeyHelpDialogComponent],\\n  exports: [HotkeyHelpDialogComponent]\\n})\\nexport class HotkeysModule { }\\n","children":[{"type":"providers","elements":[{"name":"HotkeysService"}]},{"type":"declarations","elements":[{"name":"HotkeyHelpDialogComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"HotkeyHelpDialogComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"MaterialModule","id":"module-MaterialModule-52c063c2477092849266dfba40578de5e03ce0ea37f8fab3b095a7e66fbf61f7054f6ffbcdbe769ded25e8f54e6815d97a2d047bf61817138098b91d991dbf23","description":"","deprecationMessage":"","deprecated":false,"file":"projects/rss-reader/src/app/material.module.ts","methods":[],"sourceCode":"//#region CDK Module imports\\nimport { A11yModule } from \'@angular/cdk/a11y\';\\nimport { OverlayModule } from \'@angular/cdk/overlay\';\\nimport { PortalModule } from \'@angular/cdk/portal\';\\n//#endregion\\n//#region Material Module imports\\nimport { MatAutocompleteModule } from \'@angular/material/autocomplete\';\\nimport { MatButtonModule } from \'@angular/material/button\';\\nimport { MatCardModule } from \'@angular/material/card\';\\nimport { MatCheckboxModule } from \'@angular/material/checkbox\';\\nimport { MatChipsModule } from \'@angular/material/chips\';\\nimport { MatDialogModule } from \'@angular/material/dialog\';\\nimport { MatDividerModule } from \'@angular/material/divider\';\\nimport { MatExpansionModule } from \'@angular/material/expansion\';\\nimport { MatFormFieldModule, MAT_FORM_FIELD_DEFAULT_OPTIONS } from \'@angular/material/form-field\';\\nimport { MatGridListModule } from \'@angular/material/grid-list\';\\nimport { MatIconModule, MatIconRegistry } from \'@angular/material/icon\';\\nimport { MatInputModule } from \'@angular/material/input\';\\nimport { MatListModule } from \'@angular/material/list\';\\nimport { MatMenuModule } from \'@angular/material/menu\';\\nimport { MatProgressSpinnerModule } from \'@angular/material/progress-spinner\';\\nimport { MatRadioModule } from \'@angular/material/radio\';\\nimport { MatRippleModule } from \'@angular/material/core\';\\nimport { MatSelectModule } from \'@angular/material/select\';\\nimport { MatSidenavModule } from \'@angular/material/sidenav\';\\nimport { MatSliderModule } from \'@angular/material/slider\';\\nimport { MatSnackBarModule, MAT_SNACK_BAR_DEFAULT_OPTIONS } from \'@angular/material/snack-bar\';\\nimport { MatToolbarModule } from \'@angular/material/toolbar\';\\nimport { MatTooltipModule } from \'@angular/material/tooltip\';\\n//#endregion\\nimport { NgModule } from \'@angular/core\';\\nimport { DomSanitizer } from \'@angular/platform-browser\';\\n\\nconst MATERIAL_MODULES = [\\n  MatAutocompleteModule,\\n  MatButtonModule,\\n  MatCardModule,\\n  MatCheckboxModule,\\n  MatChipsModule,\\n  MatDialogModule,\\n  MatDividerModule,\\n  MatExpansionModule,\\n  MatFormFieldModule,\\n  MatGridListModule,\\n  MatIconModule,\\n  MatInputModule,\\n  MatListModule,\\n  MatMenuModule,\\n  MatProgressSpinnerModule,\\n  MatRadioModule,\\n  MatRippleModule,\\n  MatSelectModule,\\n  MatSidenavModule,\\n  MatSliderModule,\\n  MatSnackBarModule,\\n  MatToolbarModule,\\n  MatTooltipModule\\n];\\n\\nconst CDK_MODULES = [\\n  A11yModule,\\n  OverlayModule,\\n  PortalModule\\n];\\n\\nconst mdiSvgPath = \'assets/mdi.svg\';\\n\\n@NgModule({\\n  imports: [\\n    MATERIAL_MODULES,\\n    CDK_MODULES\\n  ],\\n  exports: [\\n    MATERIAL_MODULES,\\n    CDK_MODULES\\n  ],\\n  providers: [\\n    { provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: { duration: 4000, horizontalPosition: \'left\' } },\\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: \'fill\' } }\\n  ]\\n})\\nexport class MaterialModule {\\n  constructor(private iconRegistry: MatIconRegistry, private dom: DomSanitizer) {\\n    iconRegistry.addSvgIconSet(dom.bypassSecurityTrustResourceUrl(mdiSvgPath));\\n    iconRegistry.setDefaultFontSetClass(\'material-icons-extended\');\\n  }\\n}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"PipesModule","id":"module-PipesModule-c8dd31873f97852f225650cfb0460b7cba11a0dbbadbf6ac50b55cfc7ba1ef44cb3e02dad79b3eb19c316817c06202fec0d213465dc35129f82108c27bb5f1f2","description":"","deprecationMessage":"","deprecated":false,"file":"projects/rss-reader/src/app/pipe/pipes.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { StripHtmlTagsPipe } from \'./strip-html-tags.pipe\';\\nimport { TruncatePipe } from \'./truncate.pipe\';\\nimport { OrderByPipe } from \'./orderby.pipe\';\\n\\nconst PIPES = [\\n  OrderByPipe,\\n  StripHtmlTagsPipe,\\n  TruncatePipe\\n];\\n\\n@NgModule({\\n  declarations: [PIPES],\\n  exports: [PIPES]\\n})\\nexport class PipesModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"OrderByPipe"},{"name":"StripHtmlTagsPipe"},{"name":"TruncatePipe"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"OrderByPipe"},{"name":"StripHtmlTagsPipe"},{"name":"TruncatePipe"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"ReleaseNotesModule","id":"module-ReleaseNotesModule-b1e10e18b1c07824319793d761a28c8c18619970105a9f52c005f19d643096d791872c604c7932c6e49e347fa6ff9f5c418699bce5f505d8e9cb8069491901c5","description":"","deprecationMessage":"","deprecated":false,"file":"projects/rss-reader/src/app/pages/release-notes/release-notes.module.ts","methods":[],"sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { NgModule } from \'@angular/core\';\\nimport { MarkdownModule } from \'ngx-markdown\';\\nimport { ReleaseNotesRoutingModule } from \'./release-notes-routing.module\';\\nimport { ReleaseNotesComponent } from \'./release-notes.component\';\\n\\n@NgModule({\\n  declarations: [ReleaseNotesComponent],\\n  imports: [\\n    CommonModule,\\n    MarkdownModule.forChild(),\\n    ReleaseNotesRoutingModule\\n  ]\\n})\\nexport class ReleaseNotesModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"ReleaseNotesComponent"}]},{"type":"imports","elements":[{"name":"ReleaseNotesRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"ReleaseNotesRoutingModule","id":"module-ReleaseNotesRoutingModule-9d54e37e0d9608ebab1737b59674e158c5942bede5d8b1ab89eeef8d517f1cd5c0f00a8ff8a9dd11c3276b016ae24b2c90da47ed855da47986ff1320821e3da9","description":"","deprecationMessage":"","deprecated":false,"file":"projects/rss-reader/src/app/pages/release-notes/release-notes-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { Routes, RouterModule } from \'@angular/router\';\\nimport { ReleaseNotesComponent } from \'./release-notes.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: ReleaseNotesComponent\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class ReleaseNotesRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"SettingsModule","id":"module-SettingsModule-b0d6ee250cf2c5ef447a9ea3304c979083bbdc86e7ff4e86e9996183333a67eb2583330ab3a475b53c1a8f8f89022c5c93649e4734dce2d357ad3b2e96c60da6","description":"","deprecationMessage":"","deprecated":false,"file":"projects/rss-reader/src/app/pages/settings/settings.module.ts","methods":[],"sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { NgModule } from \'@angular/core\';\\nimport { ReactiveFormsModule } from \'@angular/forms\';\\nimport { MatButtonModule } from \'@angular/material/button\';\\nimport { MatCardModule } from \'@angular/material/card\';\\nimport { MatCheckboxModule } from \'@angular/material/checkbox\';\\nimport { MatFormFieldModule } from \'@angular/material/form-field\';\\nimport { MatInputModule } from \'@angular/material/input\';\\nimport { MatSelectModule } from \'@angular/material/select\';\\nimport { SettingsRoutingModule } from \'./settings-routing.module\';\\nimport { SettingsComponent } from \'./settings.component\';\\n\\nconst MATERIAL_MODULES = [\\n  MatButtonModule,\\n  MatCardModule,\\n  MatCheckboxModule,\\n  MatFormFieldModule,\\n  MatInputModule,\\n  MatSelectModule\\n];\\n\\n@NgModule({\\n  declarations: [SettingsComponent],\\n  imports: [\\n    CommonModule,\\n    ReactiveFormsModule,\\n    MATERIAL_MODULES,\\n    SettingsRoutingModule\\n  ]\\n})\\nexport class SettingsModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"SettingsComponent"}]},{"type":"imports","elements":[{"name":"SettingsRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"SettingsRoutingModule","id":"module-SettingsRoutingModule-eca1083355ab5a55d0535babba06f30720a3249d0eda2d18fad935a7cf0dbe81f0599c246e386f7f1f894a897628ece8e9ee7de1508f34985bd3f2ab8fe3ef76","description":"","deprecationMessage":"","deprecated":false,"file":"projects/rss-reader/src/app/pages/settings/settings-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { Routes, RouterModule } from \'@angular/router\';\\nimport { SettingsComponent } from \'./settings.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: SettingsComponent\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class SettingsRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"SharedModule","id":"module-SharedModule-9334dad92eeeb5d0cefa25dd4265b4f23c348f928d6c9f823864de0c2f0f1bed31825f7c3d03e52e053dfbb913bf9b977b3511c8fe9ea128e31590a6006bb0af","description":"","deprecationMessage":"","deprecated":false,"file":"projects/rss-reader/src/app/shared.service.ts","methods":[],"sourceCode":"import { BreakpointObserver, Breakpoints } from \'@angular/cdk/layout\';\\nimport { ComponentType } from \'@angular/cdk/portal\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { Injectable, NgModule } from \'@angular/core\';\\nimport { FormsModule } from \'@angular/forms\';\\nimport { MatSnackBar, MatSnackBarConfig, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar } from \'@angular/material/snack-bar\';\\nimport { Title } from \'@angular/platform-browser\';\\n\\nexport interface SnackBarOpts<D = any> {\\n  /** The snackbar\'s message. */\\n  msg: string;\\n  /** The snackbar\'s action. */\\n  action?: string;\\n  /** A component to open the snackbar with. */\\n  component?: ComponentType<any>;\\n  /** Configuration for the snackbar. */\\n  config?: MatSnackBarConfig<D>;\\n  /**\\n   * Additional options for the snackbar.\\n   *\\n   * @deprecated Use {@link SnackBarOpts#config} instead\\n   */\\n  additionalOpts?: MatSnackBarConfig<D>;\\n}\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class SharedService {\\n  private internalTitle = \'\';\\n  constructor(\\n    private snackBar: MatSnackBar,\\n    private documentTitle: Title,\\n    private breakpointObserver: BreakpointObserver\\n  ) { }\\n\\n  /** Detects if the user is using a mobile device based on CSS media queries. */\\n  get isMobile(): boolean {\\n    return this.breakpointObserver.isMatched(Breakpoints.Handset);\\n  }\\n\\n  /** Detects if the user is using a handset in portrait mode based on CSS media queries. */\\n  get isPortraitHandset(): boolean {\\n    return this.breakpointObserver.isMatched(Breakpoints.HandsetPortrait);\\n  }\\n\\n  /**\\n   * Returns the document\'s title\\n   */\\n  get title(): string {\\n    return this.internalTitle;\\n  }\\n\\n  /**\\n   * Sets the document\'s title\\n   *\\n   * @param title The title of the document to set\\n   */\\n  set title(title: string) {\\n    this.internalTitle = title;\\n    if (title !== \'\') {\\n      title = `${title} | `;\\n    }\\n    this.documentTitle.setTitle(`${title}Angular RSS Reader`);\\n  }\\n\\n  /**\\n   * Opens a snackBar with the specified params and no return\\n   *\\n   * @param opts The options of the snackBar\\n   */\\n  openSnackBar(opts: SnackBarOpts): MatSnackBarRef<SimpleSnackBar> {\\n    return this.handleSnackBar(opts);\\n  }\\n  /**\\n   * Opens a snackBar with the specified params and a return of the snackBar\'s ref (for component)\\n   *\\n   * @param opts The options of the snackBar\\n   * @returns The snackbar reference\\n   */\\n  openSnackBarComponent(opts: SnackBarOpts): MatSnackBarRef<any> {\\n    return this.handleSnackBarWithComponent(opts);\\n  }\\n\\n  /** Closes the current snackbar. */\\n  closeSnackBar() {\\n    this.snackBar.dismiss();\\n  }\\n\\n  private handleSnackBar(opts: SnackBarOpts): MatSnackBarRef<SimpleSnackBar> {\\n    // eslint-disable-next-line import/no-deprecated\\n    const config = opts.config ? opts.config : opts.additionalOpts;\\n    return this.snackBar.open(opts.msg, opts.action ? opts.action : undefined, config);\\n  }\\n\\n  private handleSnackBarWithComponent(opts: SnackBarOpts): MatSnackBarRef<any> {\\n    // eslint-disable-next-line import/no-deprecated\\n    const config = opts.config ? opts.config : opts.additionalOpts;\\n    return this.snackBar.openFromComponent(opts.component, config);\\n  }\\n}\\n\\n@NgModule({\\n  providers: [\\n    SharedService\\n  ],\\n  imports: [\\n    CommonModule,\\n    FormsModule,\\n    MatSnackBarModule\\n  ]\\n})\\nexport class SharedModule { }\\n","children":[{"type":"providers","elements":[{"name":"SharedService"}]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]}],"miscellaneous":{"variables":[{"name":"CDK_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/material.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  A11yModule,\\n  OverlayModule,\\n  PortalModule\\n]"},{"name":"defaultEnvironment","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environment.base.ts","deprecated":false,"deprecationMessage":"","type":"Environment","defaultValue":"{\\n  production: false,\\n  swLocation: \'/ngsw-worker.js\',\\n  latestVersion,\\n  gitRepoDefaults\\n}","rawdescription":"Default environment that other enviroments can extend from.","description":"<p>Default environment that other enviroments can extend from.</p>\\n"},{"name":"DIALOG_MATERIAL_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/dialogs/dialogs.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  MatAutocompleteModule,\\n  MatButtonModule,\\n  MatCheckboxModule,\\n  MatDialogModule,\\n  MatFormFieldModule,\\n  MatGridListModule,\\n  MatIconModule,\\n  MatInputModule,\\n  MatMenuModule,\\n  MatRippleModule,\\n  MatSelectModule,\\n  MatTooltipModule\\n]"},{"name":"DIALOGS","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/dialogs/dialogs.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  AboutDialogComponent,\\n  CodeViewerDialogComponent,\\n  FeedDialogComponent,\\n  HeadlineOptionsDialogComponent,\\n  RSSChannelInfoDialogComponent,\\n  ShareDialogComponent,\\n  SubmitRssDialogComponent\\n]"},{"name":"DIALOGS","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/dialogs/dialogs.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  MessageDialogComponent,\\n  PortalDialogComponent,\\n  PromptDialogComponent,\\n  SelectionDialogComponent\\n]"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environments/environment.httpserver.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"mergeWithDefaultEnv({\\n  production: true\\n})"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environments/environment.prod.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"mergeWithDefaultEnv({\\n  production: true,\\n  swLocation: \'/rss-reader-angular/ngsw-worker.js\'\\n})"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environments/environment.test.ts","deprecated":false,"deprecationMessage":"","type":"Environment","defaultValue":"{\\n  latestVersion: new Version(mockReleaseNotesJson.latestVersion),\\n  production: false,\\n  gitRepoDefaults: mockGitRepoDefaults\\n}"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environments/environment.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"defaultEnvironment"},{"name":"GIT_REPO","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/pages/release-notes/release-notes.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new InjectionToken<GitRepo>(\'Custom Git repository\')"},{"name":"gitRepoDefaults","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environment.base.ts","deprecated":false,"deprecationMessage":"","type":"GitRepo","defaultValue":"{\\n  host: \'https://github.com\',\\n  username: \'EdricChan03\',\\n  repo: \'rss-reader\'\\n}","rawdescription":"Default configuration for the Git repository.","description":"<p>Default configuration for the Git repository.</p>\\n"},{"name":"GUIDES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/guide-items.ts","deprecated":false,"deprecationMessage":"","type":"GuideItem[]","defaultValue":"[\\n  {\\n    id: \'getting-started\',\\n    document: \'assets/docs/guides/getting-started.html\',\\n    url: \'doc/guides/getting-started\',\\n    name: \'Getting Started\'\\n  },\\n  {\\n    id: \'generate-api-key\',\\n    document: \'assets/docs/guides/generate-api-key.html\',\\n    url: \'doc/guides/generate-api-key\',\\n    name: \'Generating an API Key\'\\n  },\\n  {\\n    id: \'troubleshooting\',\\n    document: \'assets/docs/guides/troubleshooting.html\',\\n    url: \'doc/guides/troubleshooting\',\\n    name: \'Troubleshooting\'\\n  }\\n]"},{"name":"latestVersion","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environment.base.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Version(releaseNotesJson.latestVersion)","rawdescription":"The latest version of the app.","description":"<p>The latest version of the app.</p>\\n"},{"name":"markedOptionsFactory","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/app.module.ts","deprecated":false,"deprecationMessage":"","type":"MarkedOptions","defaultValue":"() => {\\n  const renderer = new MarkedRenderer();\\n\\n  renderer.link = (href, title, text) => `<a class=\\"anchor-link\\" href=\\"${href}\\"${typeof title !== \'undefined\' ?\\n    ` title=${title}` : \'\'}>${text}</a>`;\\n\\n  return {\\n    renderer,\\n    gfm: true\\n  };\\n}"},{"name":"MATERIAL_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/material.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  MatAutocompleteModule,\\n  MatButtonModule,\\n  MatCardModule,\\n  MatCheckboxModule,\\n  MatChipsModule,\\n  MatDialogModule,\\n  MatDividerModule,\\n  MatExpansionModule,\\n  MatFormFieldModule,\\n  MatGridListModule,\\n  MatIconModule,\\n  MatInputModule,\\n  MatListModule,\\n  MatMenuModule,\\n  MatProgressSpinnerModule,\\n  MatRadioModule,\\n  MatRippleModule,\\n  MatSelectModule,\\n  MatSidenavModule,\\n  MatSliderModule,\\n  MatSnackBarModule,\\n  MatToolbarModule,\\n  MatTooltipModule\\n]"},{"name":"MATERIAL_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/components/article-card/article-card.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  MatButtonModule,\\n  MatCardModule,\\n  MatChipsModule,\\n  MatDialogModule,\\n  MatDividerModule,\\n  MatIconModule,\\n  MatMenuModule,\\n  MatTooltipModule\\n]"},{"name":"MATERIAL_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/dialogs/dialogs.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  MatButtonModule,\\n  MatDialogModule,\\n  MatFormFieldModule,\\n  MatInputModule,\\n  MatListModule\\n]"},{"name":"MATERIAL_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/pages/settings/settings.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  MatButtonModule,\\n  MatCardModule,\\n  MatCheckboxModule,\\n  MatFormFieldModule,\\n  MatInputModule,\\n  MatSelectModule\\n]"},{"name":"mdiSvgPath","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/material.module.ts","deprecated":false,"deprecationMessage":"","type":"string","defaultValue":"\'assets/mdi.svg\'"},{"name":"mergeWithDefaultEnv","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environment.base.ts","deprecated":false,"deprecationMessage":"","type":"Environment","defaultValue":"(env) => ({ ...defaultEnvironment, ...env })","rawdescription":"Merges the specified environment with the default environment\\nand returns the result.","description":"<p>Merges the specified environment with the default environment\\nand returns the result.</p>\\n"},{"name":"migrateKeys","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/models/rss2json-api/migrate-keys.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"{\\n  apiKey: \'api_key\',\\n  feedUrl: \'rss_url\',\\n  amount: \'count\'\\n}"},{"name":"mockGitRepoDefaults","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environments/environment.test.ts","deprecated":false,"deprecationMessage":"","type":"GitRepo","defaultValue":"{\\n  host: \'https://github.com\',\\n  username: \'FakeUsername248\',\\n  repo: \'mock-repo\'\\n}"},{"name":"nextKeyId","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/actionitem.service.ts","deprecated":false,"deprecationMessage":"","type":"number","defaultValue":"0","rawdescription":"ID used to generate new action items with no explicitly-defined ID.","description":"<p>ID used to generate new action items with no explicitly-defined ID.</p>\\n"},{"name":"OVERLAYS","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/app.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  OnboardingOverlayComponent\\n]"},{"name":"PIPES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/pipe/pipes.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  OrderByPipe,\\n  StripHtmlTagsPipe,\\n  TruncatePipe\\n]"},{"name":"RELEASE_NOTES_JSON","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/pages/release-notes/release-notes.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new InjectionToken<ReleaseNotesJSON>(\'Release notes JSON file\', {\\n  providedIn: \'root\',\\n  factory: () => releaseNotesJsonFile\\n})"},{"name":"routerOptions","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/app.routing.ts","deprecated":false,"deprecationMessage":"","type":"ExtraOptions","defaultValue":"environment.routerOptions ? environment.routerOptions : {\\n  anchorScrolling: \'enabled\',\\n  scrollPositionRestoration: \'enabled\'\\n  // TODO: Uncomment once tracing isn\'t actually enabled on production builds,\\n  // which it currently is for some reason.\\n  // enableTracing: !environment.production\\n}"},{"name":"SETTINGS_STORAGE_CONFIG","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","deprecated":false,"deprecationMessage":"","type":"InjectionToken<SettingsStorageConfig>","defaultValue":"new InjectionToken(\'Settings storage config\', {\\n  factory: SETTINGS_STORAGE_DEFAULT_CONFIG_FACTORY\\n})","rawdescription":"Configuration options to change the behavior of {@link SettingsStorageService}.","description":"<p>Configuration options to change the behavior of {@link SettingsStorageService}.</p>\\n"},{"name":"SETTINGS_STORAGE_DEFAULT_CONFIG_FACTORY","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","deprecated":false,"deprecationMessage":"","type":"SettingsStorageConfig","defaultValue":"() => ({\\n    canRevertDefault: true,\\n    defaultSettings: {\\n      openNewTab: true,\\n      showImages: true,\\n      theme: \'indigo-pink\',\\n      notifyNewReleases: true\\n    }\\n  })"},{"name":"SETTINGS_STORAGE_KEY","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","deprecated":false,"deprecationMessage":"","type":"InjectionToken<string>","defaultValue":"new InjectionToken(\'Settings storage key\', {\\n  factory: () => \'settings\'\\n})","rawdescription":"The settings key to store the settings in. (Default: `settings`)","description":"<p>The settings key to store the settings in. (Default: <code>settings</code>)</p>\\n"},{"name":"SETTINGS_STORAGE_PROVIDER","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","deprecated":false,"deprecationMessage":"","type":"InjectionToken<Storage>","defaultValue":"new InjectionToken(\'Settings storage provider\', {\\n  factory: () => localStorage\\n})","rawdescription":"The settings storage provider to use. (Default: `localStorage`)","description":"<p>The settings storage provider to use. (Default: <code>localStorage</code>)</p>\\n"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/components/article-card/article-card.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<ArticleCardComponent>","defaultValue":"(args: ArticleCardComponent) => ({\\n  component: ArticleCardComponent,\\n  template: `<app-article-card [article]=\\"article\\"></app-article-card>`,\\n  props: args\\n})"},{"name":"themes","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/pages/settings/types.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"[\\n  \'indigo-pink\',\\n  \'deeppurple-amber\',\\n  \'pink-bluegrey\',\\n  \'purple-green\'\\n] as const","rawdescription":"The list of available themes.","description":"<p>The list of available themes.</p>\\n"},{"name":"WithArticle","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/components/article-card/article-card.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"WithImage","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/components/article-card/article-card.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"}],"functions":[],"typealiases":[{"name":"ButtonType","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"negative\\" | \\"neutral\\" | \\"positive\\"","file":"projects/rss-reader/src/app/core/dialogs/models.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"DialogType","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"alert\\" | \\"confirm\\" | \\"message\\" | \\"prompt\\" | \\"portal\\" | \\"selection\\"","file":"projects/rss-reader/src/app/core/dialogs/models.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"FeedForm","ctype":"miscellaneous","subtype":"typealias","rawtype":"FormGroup<literal type>","file":"projects/rss-reader/src/app/dialogs/feed-dialog/feed-dialog.component.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177},{"name":"GitRepo","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type | string","file":"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts","deprecated":false,"deprecationMessage":"","description":"<p>Contains either a string representing a link to the repository, or an\\nobject containing metadata of the repository.</p>\\n","kind":186},{"name":"HeadlineForm","ctype":"miscellaneous","subtype":"typealias","rawtype":"FormGroup<literal type>","file":"projects/rss-reader/src/app/dialogs/headline-options-dialog/headline-options-dialog.component.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177},{"name":"Index","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"0\\" | \\"1\\" | \\"2\\" | \\"3\\"","file":"projects/rss-reader/src/app/overlays/onboarding-overlay/onboarding-overlay.component.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"Platform","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"windows\\" | \\"macos\\" | \\"linux\\" | \\"other\\"","file":"projects/rss-reader/src/app/hotkeys/hotkeys.service.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"ReleaseStatus","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"draft\\" | \\"wip\\" | \\"deprecated\\" | \\"released\\" | \\"unreleased\\" | \\"other\\"","file":"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"SettingsForm","ctype":"miscellaneous","subtype":"typealias","rawtype":"FormGroup<literal type>","file":"projects/rss-reader/src/app/pages/settings/settings.component.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177},{"name":"Theme","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"projects/rss-reader/src/app/pages/settings/types.ts","deprecated":false,"deprecationMessage":"","description":"<p>The list of available themes as a type.</p>\\n","kind":193}],"enumerations":[{"name":"DialogResult","childs":[{"name":"NEGATIVE","deprecated":false,"deprecationMessage":"","value":"cancel"},{"name":"CANCEL","deprecated":false,"deprecationMessage":"","value":"cancel"},{"name":"NEUTRAL","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"POSITIVE","deprecated":false,"deprecationMessage":"","value":"ok"},{"name":"OK","deprecated":false,"deprecationMessage":"","value":"ok"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"<p>The result returned by the dialog.</p>\\n","file":"projects/rss-reader/src/app/core/dialogs/models.ts"}],"groupedVariables":{"projects/rss-reader/src/app/material.module.ts":[{"name":"CDK_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/material.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  A11yModule,\\n  OverlayModule,\\n  PortalModule\\n]"},{"name":"MATERIAL_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/material.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  MatAutocompleteModule,\\n  MatButtonModule,\\n  MatCardModule,\\n  MatCheckboxModule,\\n  MatChipsModule,\\n  MatDialogModule,\\n  MatDividerModule,\\n  MatExpansionModule,\\n  MatFormFieldModule,\\n  MatGridListModule,\\n  MatIconModule,\\n  MatInputModule,\\n  MatListModule,\\n  MatMenuModule,\\n  MatProgressSpinnerModule,\\n  MatRadioModule,\\n  MatRippleModule,\\n  MatSelectModule,\\n  MatSidenavModule,\\n  MatSliderModule,\\n  MatSnackBarModule,\\n  MatToolbarModule,\\n  MatTooltipModule\\n]"},{"name":"mdiSvgPath","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/material.module.ts","deprecated":false,"deprecationMessage":"","type":"string","defaultValue":"\'assets/mdi.svg\'"}],"projects/rss-reader/src/environment.base.ts":[{"name":"defaultEnvironment","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environment.base.ts","deprecated":false,"deprecationMessage":"","type":"Environment","defaultValue":"{\\n  production: false,\\n  swLocation: \'/ngsw-worker.js\',\\n  latestVersion,\\n  gitRepoDefaults\\n}","rawdescription":"Default environment that other enviroments can extend from.","description":"<p>Default environment that other enviroments can extend from.</p>\\n"},{"name":"gitRepoDefaults","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environment.base.ts","deprecated":false,"deprecationMessage":"","type":"GitRepo","defaultValue":"{\\n  host: \'https://github.com\',\\n  username: \'EdricChan03\',\\n  repo: \'rss-reader\'\\n}","rawdescription":"Default configuration for the Git repository.","description":"<p>Default configuration for the Git repository.</p>\\n"},{"name":"latestVersion","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environment.base.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Version(releaseNotesJson.latestVersion)","rawdescription":"The latest version of the app.","description":"<p>The latest version of the app.</p>\\n"},{"name":"mergeWithDefaultEnv","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environment.base.ts","deprecated":false,"deprecationMessage":"","type":"Environment","defaultValue":"(env) => ({ ...defaultEnvironment, ...env })","rawdescription":"Merges the specified environment with the default environment\\nand returns the result.","description":"<p>Merges the specified environment with the default environment\\nand returns the result.</p>\\n"}],"projects/rss-reader/src/app/dialogs/dialogs.module.ts":[{"name":"DIALOG_MATERIAL_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/dialogs/dialogs.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  MatAutocompleteModule,\\n  MatButtonModule,\\n  MatCheckboxModule,\\n  MatDialogModule,\\n  MatFormFieldModule,\\n  MatGridListModule,\\n  MatIconModule,\\n  MatInputModule,\\n  MatMenuModule,\\n  MatRippleModule,\\n  MatSelectModule,\\n  MatTooltipModule\\n]"},{"name":"DIALOGS","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/dialogs/dialogs.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  AboutDialogComponent,\\n  CodeViewerDialogComponent,\\n  FeedDialogComponent,\\n  HeadlineOptionsDialogComponent,\\n  RSSChannelInfoDialogComponent,\\n  ShareDialogComponent,\\n  SubmitRssDialogComponent\\n]"}],"projects/rss-reader/src/app/core/dialogs/dialogs.module.ts":[{"name":"DIALOGS","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/dialogs/dialogs.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  MessageDialogComponent,\\n  PortalDialogComponent,\\n  PromptDialogComponent,\\n  SelectionDialogComponent\\n]"},{"name":"MATERIAL_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/dialogs/dialogs.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  MatButtonModule,\\n  MatDialogModule,\\n  MatFormFieldModule,\\n  MatInputModule,\\n  MatListModule\\n]"}],"projects/rss-reader/src/environments/environment.httpserver.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environments/environment.httpserver.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"mergeWithDefaultEnv({\\n  production: true\\n})"}],"projects/rss-reader/src/environments/environment.prod.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environments/environment.prod.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"mergeWithDefaultEnv({\\n  production: true,\\n  swLocation: \'/rss-reader-angular/ngsw-worker.js\'\\n})"}],"projects/rss-reader/src/environments/environment.test.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environments/environment.test.ts","deprecated":false,"deprecationMessage":"","type":"Environment","defaultValue":"{\\n  latestVersion: new Version(mockReleaseNotesJson.latestVersion),\\n  production: false,\\n  gitRepoDefaults: mockGitRepoDefaults\\n}"},{"name":"mockGitRepoDefaults","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environments/environment.test.ts","deprecated":false,"deprecationMessage":"","type":"GitRepo","defaultValue":"{\\n  host: \'https://github.com\',\\n  username: \'FakeUsername248\',\\n  repo: \'mock-repo\'\\n}"}],"projects/rss-reader/src/environments/environment.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/environments/environment.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"defaultEnvironment"}],"projects/rss-reader/src/app/pages/release-notes/release-notes.component.ts":[{"name":"GIT_REPO","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/pages/release-notes/release-notes.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new InjectionToken<GitRepo>(\'Custom Git repository\')"},{"name":"RELEASE_NOTES_JSON","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/pages/release-notes/release-notes.component.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new InjectionToken<ReleaseNotesJSON>(\'Release notes JSON file\', {\\n  providedIn: \'root\',\\n  factory: () => releaseNotesJsonFile\\n})"}],"projects/rss-reader/src/app/guide-items.ts":[{"name":"GUIDES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/guide-items.ts","deprecated":false,"deprecationMessage":"","type":"GuideItem[]","defaultValue":"[\\n  {\\n    id: \'getting-started\',\\n    document: \'assets/docs/guides/getting-started.html\',\\n    url: \'doc/guides/getting-started\',\\n    name: \'Getting Started\'\\n  },\\n  {\\n    id: \'generate-api-key\',\\n    document: \'assets/docs/guides/generate-api-key.html\',\\n    url: \'doc/guides/generate-api-key\',\\n    name: \'Generating an API Key\'\\n  },\\n  {\\n    id: \'troubleshooting\',\\n    document: \'assets/docs/guides/troubleshooting.html\',\\n    url: \'doc/guides/troubleshooting\',\\n    name: \'Troubleshooting\'\\n  }\\n]"}],"projects/rss-reader/src/app/app.module.ts":[{"name":"markedOptionsFactory","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/app.module.ts","deprecated":false,"deprecationMessage":"","type":"MarkedOptions","defaultValue":"() => {\\n  const renderer = new MarkedRenderer();\\n\\n  renderer.link = (href, title, text) => `<a class=\\"anchor-link\\" href=\\"${href}\\"${typeof title !== \'undefined\' ?\\n    ` title=${title}` : \'\'}>${text}</a>`;\\n\\n  return {\\n    renderer,\\n    gfm: true\\n  };\\n}"},{"name":"OVERLAYS","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/app.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  OnboardingOverlayComponent\\n]"}],"projects/rss-reader/src/app/components/article-card/article-card.module.ts":[{"name":"MATERIAL_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/components/article-card/article-card.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  MatButtonModule,\\n  MatCardModule,\\n  MatChipsModule,\\n  MatDialogModule,\\n  MatDividerModule,\\n  MatIconModule,\\n  MatMenuModule,\\n  MatTooltipModule\\n]"}],"projects/rss-reader/src/app/pages/settings/settings.module.ts":[{"name":"MATERIAL_MODULES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/pages/settings/settings.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  MatButtonModule,\\n  MatCardModule,\\n  MatCheckboxModule,\\n  MatFormFieldModule,\\n  MatInputModule,\\n  MatSelectModule\\n]"}],"projects/rss-reader/src/app/models/rss2json-api/migrate-keys.ts":[{"name":"migrateKeys","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/models/rss2json-api/migrate-keys.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"{\\n  apiKey: \'api_key\',\\n  feedUrl: \'rss_url\',\\n  amount: \'count\'\\n}"}],"projects/rss-reader/src/app/actionitem.service.ts":[{"name":"nextKeyId","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/actionitem.service.ts","deprecated":false,"deprecationMessage":"","type":"number","defaultValue":"0","rawdescription":"ID used to generate new action items with no explicitly-defined ID.","description":"<p>ID used to generate new action items with no explicitly-defined ID.</p>\\n"}],"projects/rss-reader/src/app/pipe/pipes.module.ts":[{"name":"PIPES","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/pipe/pipes.module.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\\n  OrderByPipe,\\n  StripHtmlTagsPipe,\\n  TruncatePipe\\n]"}],"projects/rss-reader/src/app/app.routing.ts":[{"name":"routerOptions","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/app.routing.ts","deprecated":false,"deprecationMessage":"","type":"ExtraOptions","defaultValue":"environment.routerOptions ? environment.routerOptions : {\\n  anchorScrolling: \'enabled\',\\n  scrollPositionRestoration: \'enabled\'\\n  // TODO: Uncomment once tracing isn\'t actually enabled on production builds,\\n  // which it currently is for some reason.\\n  // enableTracing: !environment.production\\n}"}],"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts":[{"name":"SETTINGS_STORAGE_CONFIG","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","deprecated":false,"deprecationMessage":"","type":"InjectionToken<SettingsStorageConfig>","defaultValue":"new InjectionToken(\'Settings storage config\', {\\n  factory: SETTINGS_STORAGE_DEFAULT_CONFIG_FACTORY\\n})","rawdescription":"Configuration options to change the behavior of {@link SettingsStorageService}.","description":"<p>Configuration options to change the behavior of {@link SettingsStorageService}.</p>\\n"},{"name":"SETTINGS_STORAGE_DEFAULT_CONFIG_FACTORY","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","deprecated":false,"deprecationMessage":"","type":"SettingsStorageConfig","defaultValue":"() => ({\\n    canRevertDefault: true,\\n    defaultSettings: {\\n      openNewTab: true,\\n      showImages: true,\\n      theme: \'indigo-pink\',\\n      notifyNewReleases: true\\n    }\\n  })"},{"name":"SETTINGS_STORAGE_KEY","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","deprecated":false,"deprecationMessage":"","type":"InjectionToken<string>","defaultValue":"new InjectionToken(\'Settings storage key\', {\\n  factory: () => \'settings\'\\n})","rawdescription":"The settings key to store the settings in. (Default: `settings`)","description":"<p>The settings key to store the settings in. (Default: <code>settings</code>)</p>\\n"},{"name":"SETTINGS_STORAGE_PROVIDER","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","deprecated":false,"deprecationMessage":"","type":"InjectionToken<Storage>","defaultValue":"new InjectionToken(\'Settings storage provider\', {\\n  factory: () => localStorage\\n})","rawdescription":"The settings storage provider to use. (Default: `localStorage`)","description":"<p>The settings storage provider to use. (Default: <code>localStorage</code>)</p>\\n"}],"projects/rss-reader/src/app/components/article-card/article-card.stories.ts":[{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/components/article-card/article-card.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story<ArticleCardComponent>","defaultValue":"(args: ArticleCardComponent) => ({\\n  component: ArticleCardComponent,\\n  template: `<app-article-card [article]=\\"article\\"></app-article-card>`,\\n  props: args\\n})"},{"name":"WithArticle","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/components/article-card/article-card.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"},{"name":"WithImage","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/components/article-card/article-card.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"Template.bind({})"}],"projects/rss-reader/src/app/pages/settings/types.ts":[{"name":"themes","ctype":"miscellaneous","subtype":"variable","file":"projects/rss-reader/src/app/pages/settings/types.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"[\\n  \'indigo-pink\',\\n  \'deeppurple-amber\',\\n  \'pink-bluegrey\',\\n  \'purple-green\'\\n] as const","rawdescription":"The list of available themes.","description":"<p>The list of available themes.</p>\\n"}]},"groupedFunctions":{},"groupedEnumerations":{"projects/rss-reader/src/app/core/dialogs/models.ts":[{"name":"DialogResult","childs":[{"name":"NEGATIVE","deprecated":false,"deprecationMessage":"","value":"cancel"},{"name":"CANCEL","deprecated":false,"deprecationMessage":"","value":"cancel"},{"name":"NEUTRAL","deprecated":false,"deprecationMessage":"","value":"neutral"},{"name":"POSITIVE","deprecated":false,"deprecationMessage":"","value":"ok"},{"name":"OK","deprecated":false,"deprecationMessage":"","value":"ok"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"<p>The result returned by the dialog.</p>\\n","file":"projects/rss-reader/src/app/core/dialogs/models.ts"}]},"groupedTypeAliases":{"projects/rss-reader/src/app/core/dialogs/models.ts":[{"name":"ButtonType","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"negative\\" | \\"neutral\\" | \\"positive\\"","file":"projects/rss-reader/src/app/core/dialogs/models.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186},{"name":"DialogType","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"alert\\" | \\"confirm\\" | \\"message\\" | \\"prompt\\" | \\"portal\\" | \\"selection\\"","file":"projects/rss-reader/src/app/core/dialogs/models.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186}],"projects/rss-reader/src/app/dialogs/feed-dialog/feed-dialog.component.ts":[{"name":"FeedForm","ctype":"miscellaneous","subtype":"typealias","rawtype":"FormGroup<literal type>","file":"projects/rss-reader/src/app/dialogs/feed-dialog/feed-dialog.component.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177}],"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts":[{"name":"GitRepo","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type | string","file":"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts","deprecated":false,"deprecationMessage":"","description":"<p>Contains either a string representing a link to the repository, or an\\nobject containing metadata of the repository.</p>\\n","kind":186},{"name":"ReleaseStatus","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"draft\\" | \\"wip\\" | \\"deprecated\\" | \\"released\\" | \\"unreleased\\" | \\"other\\"","file":"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186}],"projects/rss-reader/src/app/dialogs/headline-options-dialog/headline-options-dialog.component.ts":[{"name":"HeadlineForm","ctype":"miscellaneous","subtype":"typealias","rawtype":"FormGroup<literal type>","file":"projects/rss-reader/src/app/dialogs/headline-options-dialog/headline-options-dialog.component.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177}],"projects/rss-reader/src/app/overlays/onboarding-overlay/onboarding-overlay.component.ts":[{"name":"Index","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"0\\" | \\"1\\" | \\"2\\" | \\"3\\"","file":"projects/rss-reader/src/app/overlays/onboarding-overlay/onboarding-overlay.component.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186}],"projects/rss-reader/src/app/hotkeys/hotkeys.service.ts":[{"name":"Platform","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"windows\\" | \\"macos\\" | \\"linux\\" | \\"other\\"","file":"projects/rss-reader/src/app/hotkeys/hotkeys.service.ts","deprecated":false,"deprecationMessage":"","description":"","kind":186}],"projects/rss-reader/src/app/pages/settings/settings.component.ts":[{"name":"SettingsForm","ctype":"miscellaneous","subtype":"typealias","rawtype":"FormGroup<literal type>","file":"projects/rss-reader/src/app/pages/settings/settings.component.ts","deprecated":false,"deprecationMessage":"","description":"","kind":177}],"projects/rss-reader/src/app/pages/settings/types.ts":[{"name":"Theme","ctype":"miscellaneous","subtype":"typealias","rawtype":"","file":"projects/rss-reader/src/app/pages/settings/types.ts","deprecated":false,"deprecationMessage":"","description":"<p>The list of available themes as a type.</p>\\n","kind":193}]}},"routes":{"name":"<root>","kind":"module","className":"AppModule","children":[{"name":"routes","filename":"projects/rss-reader/src/app/app.routing.ts","module":"AppRoutingModule","children":[{"path":"release-notes","loadChildren":"./pages/release-notes/release-notes.module#ReleaseNotesModule","children":[{"kind":"module","children":[{"name":"routes","filename":"projects/rss-reader/src/app/pages/release-notes/release-notes-routing.module.ts","module":"ReleaseNotesRoutingModule","children":[{"path":"","component":"ReleaseNotesComponent"}],"kind":"module"}],"module":"ReleaseNotesModule"}]},{"path":"settings","loadChildren":"./pages/settings/settings.module#SettingsModule","children":[{"kind":"module","children":[{"name":"routes","filename":"projects/rss-reader/src/app/pages/settings/settings-routing.module.ts","module":"SettingsRoutingModule","children":[{"path":"","component":"SettingsComponent"}],"kind":"module"}],"module":"SettingsModule"}]},{"path":"doc/:docTypeId/:docId","component":"GuideViewerComponent"},{"path":"docs","component":"GuidesListComponent"},{"path":"feed","component":"FeedComponent"},{"path":"headlines","component":"HeadlinesComponent"},{"path":"home","redirectTo":"/feed"},{"path":"","pathMatch":"full","redirectTo":"/feed"},{"path":"**","component":"PageNotFoundComponent"}],"kind":"module"}]},"coverage":{"count":37,"status":"medium","files":[{"filePath":"projects/rss-reader/e2e/src/app.po.ts","type":"class","linktype":"classe","name":"AppPage","coveragePercent":33,"coverageCount":"1/3","status":"medium"},{"filePath":"projects/rss-reader/src/app/actionitem.service.ts","type":"component","linktype":"component","name":"ActionItemsComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/rss-reader/src/app/actionitem.service.ts","type":"injectable","linktype":"injectable","name":"ActionItemService","coveragePercent":83,"coverageCount":"10/12","status":"very-good"},{"filePath":"projects/rss-reader/src/app/actionitem.service.ts","type":"interface","linktype":"interface","name":"ActionItem","coveragePercent":100,"coverageCount":"10/10","status":"very-good"},{"filePath":"projects/rss-reader/src/app/actionitem.service.ts","type":"interface","linktype":"interface","name":"ActionItemToggle","coveragePercent":100,"coverageCount":"2/2","status":"very-good"},{"filePath":"projects/rss-reader/src/app/actionitem.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"nextKeyId","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/rss-reader/src/app/app.component.ts","type":"component","linktype":"component","name":"AppComponent","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"projects/rss-reader/src/app/app.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"markedOptionsFactory","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/app.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"OVERLAYS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/app.routing.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"routerOptions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/components/article-card/article-card.component.ts","type":"component","linktype":"component","name":"ArticleCardComponent","coveragePercent":36,"coverageCount":"4/11","status":"medium"},{"filePath":"projects/rss-reader/src/app/components/article-card/article-card.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"MATERIAL_MODULES","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/components/article-card/article-card.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/components/article-card/article-card.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"WithArticle","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/components/article-card/article-card.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"WithImage","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/components/article-card/testing/article-card-harness-filters.ts","type":"interface","linktype":"interface","name":"ArticleCardComponentHarnessFilters","coveragePercent":83,"coverageCount":"5/6","status":"very-good"},{"filePath":"projects/rss-reader/src/app/components/article-card/testing/article-card-harness.ts","type":"class","linktype":"classe","name":"ArticleCardComponentHarness","coveragePercent":68,"coverageCount":"13/19","status":"good"},{"filePath":"projects/rss-reader/src/app/components/expansion-panel/expansion-panel.component.ts","type":"component","linktype":"component","name":"ExpansionPanelComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/rss-reader/src/app/core/dialogs/dialog-builder/dialog-builder.service.ts","type":"injectable","linktype":"injectable","name":"DialogBuilderService","coveragePercent":82,"coverageCount":"14/17","status":"very-good"},{"filePath":"projects/rss-reader/src/app/core/dialogs/dialog.ts","type":"class","linktype":"classe","name":"Dialog","coveragePercent":50,"coverageCount":"2/4","status":"medium"},{"filePath":"projects/rss-reader/src/app/core/dialogs/dialogs.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DIALOGS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/core/dialogs/dialogs.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"MATERIAL_MODULES","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/core/dialogs/dialogs.service.ts","type":"injectable","linktype":"injectable","name":"DialogsService","coveragePercent":54,"coverageCount":"6/11","status":"good"},{"filePath":"projects/rss-reader/src/app/core/dialogs/message-dialog/message-dialog.component.ts","type":"component","linktype":"component","name":"MessageDialogComponent","coveragePercent":50,"coverageCount":"3/6","status":"medium"},{"filePath":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","linktype":"interface","name":"BaseDialogOpts","coveragePercent":50,"coverageCount":"1/2","status":"medium"},{"filePath":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","linktype":"interface","name":"DialogBtnOpts","coveragePercent":88,"coverageCount":"8/9","status":"very-good"},{"filePath":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","linktype":"interface","name":"DialogOpts","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","linktype":"interface","name":"DialogOptsWithMsg","coveragePercent":75,"coverageCount":"3/4","status":"good"},{"filePath":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","linktype":"interface","name":"PortalDialogOpts","coveragePercent":50,"coverageCount":"1/2","status":"medium"},{"filePath":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","linktype":"interface","name":"PromptDialogInputConfig","coveragePercent":83,"coverageCount":"5/6","status":"very-good"},{"filePath":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","linktype":"interface","name":"PromptDialogOpts","coveragePercent":83,"coverageCount":"5/6","status":"very-good"},{"filePath":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","linktype":"interface","name":"SelectionDialogOption","coveragePercent":85,"coverageCount":"6/7","status":"very-good"},{"filePath":"projects/rss-reader/src/app/core/dialogs/models.ts","type":"interface","linktype":"interface","name":"SelectionDialogOpts","coveragePercent":50,"coverageCount":"1/2","status":"medium"},{"filePath":"projects/rss-reader/src/app/core/dialogs/portal-dialog/portal-dialog.component.ts","type":"component","linktype":"component","name":"PortalDialogComponent","coveragePercent":50,"coverageCount":"3/6","status":"medium"},{"filePath":"projects/rss-reader/src/app/core/dialogs/prompt-dialog/prompt-dialog.component.ts","type":"component","linktype":"component","name":"PromptDialogComponent","coveragePercent":44,"coverageCount":"4/9","status":"medium"},{"filePath":"projects/rss-reader/src/app/core/dialogs/selection-dialog/selection-dialog.component.ts","type":"component","linktype":"component","name":"SelectionDialogComponent","coveragePercent":50,"coverageCount":"3/6","status":"medium"},{"filePath":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","type":"injectable","linktype":"injectable","name":"SettingsStorageService","coveragePercent":50,"coverageCount":"2/4","status":"medium"},{"filePath":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","type":"interface","linktype":"interface","name":"SettingsStorageConfig","coveragePercent":100,"coverageCount":"3/3","status":"very-good"},{"filePath":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SETTINGS_STORAGE_CONFIG","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SETTINGS_STORAGE_DEFAULT_CONFIG_FACTORY","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SETTINGS_STORAGE_KEY","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/rss-reader/src/app/core/settings-storage/settings-storage.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SETTINGS_STORAGE_PROVIDER","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/rss-reader/src/app/core/testing/utils/mock-storage.ts","type":"class","linktype":"classe","name":"MockStorage","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"projects/rss-reader/src/app/dialogs/about-dialog/about-dialog.component.ts","type":"component","linktype":"component","name":"AboutDialogComponent","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/rss-reader/src/app/dialogs/code-viewer-dialog/code-viewer-dialog.component.ts","type":"component","linktype":"component","name":"CodeViewerDialogComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/rss-reader/src/app/dialogs/dialogs.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DIALOG_MATERIAL_MODULES","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/dialogs/dialogs.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"DIALOGS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/dialogs/feed-dialog/feed-dialog.component.ts","type":"component","linktype":"component","name":"FeedDialogComponent","coveragePercent":15,"coverageCount":"2/13","status":"low"},{"filePath":"projects/rss-reader/src/app/dialogs/headline-options-dialog/headline-options-dialog.component.ts","type":"component","linktype":"component","name":"HeadlineOptionsDialogComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"projects/rss-reader/src/app/dialogs/headline-options-dialog/headline-options-dialog.component.ts","type":"interface","linktype":"interface","name":"HeadlineOptions","coveragePercent":80,"coverageCount":"4/5","status":"very-good"},{"filePath":"projects/rss-reader/src/app/dialogs/rss-channel-info-dialog/rss-channel-info-dialog.component.ts","type":"component","linktype":"component","name":"RSSChannelInfoDialogComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/rss-reader/src/app/dialogs/share-dialog/share-dialog.component.ts","type":"component","linktype":"component","name":"ShareDialogComponent","coveragePercent":9,"coverageCount":"1/11","status":"low"},{"filePath":"projects/rss-reader/src/app/dialogs/submit-rss-dialog/submit-rss-dialog.component.ts","type":"component","linktype":"component","name":"SubmitRssDialogComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/rss-reader/src/app/feed/feed.component.ts","type":"component","linktype":"component","name":"FeedComponent","coveragePercent":0,"coverageCount":"0/16","status":"low"},{"filePath":"projects/rss-reader/src/app/feed/feed.component.ts","type":"interface","linktype":"interface","name":"FeedOptions","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/rss-reader/src/app/guide-items.ts","type":"injectable","linktype":"injectable","name":"GuideItemsService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/rss-reader/src/app/guide-items.ts","type":"interface","linktype":"interface","name":"GuideItem","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/rss-reader/src/app/guide-items.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"GUIDES","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/headlines/headlines.component.ts","type":"component","linktype":"component","name":"HeadlinesComponent","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"projects/rss-reader/src/app/hotkeys/hotkey-help-dialog/hotkey-help-dialog.component.ts","type":"component","linktype":"component","name":"HotkeyHelpDialogComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"projects/rss-reader/src/app/hotkeys/hotkeys.service.ts","type":"injectable","linktype":"injectable","name":"HotkeysService","coveragePercent":25,"coverageCount":"2/8","status":"low"},{"filePath":"projects/rss-reader/src/app/hotkeys/hotkeys.service.ts","type":"interface","linktype":"interface","name":"Hotkey","coveragePercent":66,"coverageCount":"2/3","status":"good"},{"filePath":"projects/rss-reader/src/app/hotkeys/hotkeys.service.ts","type":"interface","linktype":"interface","name":"HotkeyOptions","coveragePercent":83,"coverageCount":"5/6","status":"very-good"},{"filePath":"projects/rss-reader/src/app/material.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"CDK_MODULES","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/material.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"MATERIAL_MODULES","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/material.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"mdiSvgPath","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/models/feed-category.ts","type":"interface","linktype":"interface","name":"FeedCategory","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/rss-reader/src/app/models/feed-channel.ts","type":"interface","linktype":"interface","name":"FeedChannel","coveragePercent":75,"coverageCount":"3/4","status":"good"},{"filePath":"projects/rss-reader/src/app/models/feed-entry.ts","type":"interface","linktype":"interface","name":"FeedEntry","coveragePercent":63,"coverageCount":"7/11","status":"good"},{"filePath":"projects/rss-reader/src/app/models/feed-info.ts","type":"interface","linktype":"interface","name":"FeedInfo","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"projects/rss-reader/src/app/models/feed.ts","type":"interface","linktype":"interface","name":"Feed","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/rss-reader/src/app/models/news-api/top-headlines-article.ts","type":"interface","linktype":"interface","name":"NewsAPITopHeadlinesArticle","coveragePercent":88,"coverageCount":"8/9","status":"very-good"},{"filePath":"projects/rss-reader/src/app/models/news-api/top-headlines.ts","type":"interface","linktype":"interface","name":"NewsAPITopHeadlines","coveragePercent":75,"coverageCount":"3/4","status":"good"},{"filePath":"projects/rss-reader/src/app/models/news-api/top-headlines.ts","type":"interface","linktype":"interface","name":"NewsAPITopHeadlinesOpts","coveragePercent":85,"coverageCount":"6/7","status":"very-good"},{"filePath":"projects/rss-reader/src/app/models/rest-countries-api/index.ts","type":"interface","linktype":"interface","name":"RestCountriesAPICountry","coveragePercent":96,"coverageCount":"24/25","status":"very-good"},{"filePath":"projects/rss-reader/src/app/models/rest-countries-api/index.ts","type":"interface","linktype":"interface","name":"RestCountriesAPICountryCurrency","coveragePercent":100,"coverageCount":"4/4","status":"very-good"},{"filePath":"projects/rss-reader/src/app/models/rest-countries-api/index.ts","type":"interface","linktype":"interface","name":"RestCountriesAPICountryLanguage","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/rss-reader/src/app/models/rest-countries-api/index.ts","type":"interface","linktype":"interface","name":"RestCountriesAPICountryRegionalBloc","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/rss-reader/src/app/models/rest-countries-api/index.ts","type":"interface","linktype":"interface","name":"RestCountriesAPICountryTranslation","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/models/rss2json-api/channel.ts","type":"interface","linktype":"interface","name":"Rss2JsonResponseChannel","coveragePercent":85,"coverageCount":"6/7","status":"very-good"},{"filePath":"projects/rss-reader/src/app/models/rss2json-api/item.ts","type":"interface","linktype":"interface","name":"Rss2JsonResponseItem","coveragePercent":90,"coverageCount":"10/11","status":"very-good"},{"filePath":"projects/rss-reader/src/app/models/rss2json-api/migrate-keys.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"migrateKeys","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/models/rss2json-api/params.ts","type":"interface","linktype":"interface","name":"Rss2JsonParams","coveragePercent":85,"coverageCount":"6/7","status":"very-good"},{"filePath":"projects/rss-reader/src/app/models/rss2json-api/response.ts","type":"interface","linktype":"interface","name":"Rss2JsonResponse","coveragePercent":60,"coverageCount":"3/5","status":"good"},{"filePath":"projects/rss-reader/src/app/models/settings.ts","type":"interface","linktype":"interface","name":"Settings","coveragePercent":90,"coverageCount":"9/10","status":"very-good"},{"filePath":"projects/rss-reader/src/app/overlay.service.ts","type":"injectable","linktype":"injectable","name":"OverlayService","coveragePercent":54,"coverageCount":"6/11","status":"good"},{"filePath":"projects/rss-reader/src/app/overlays/onboarding-overlay/onboarding-overlay.component.ts","type":"component","linktype":"component","name":"OnboardingOverlayComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"projects/rss-reader/src/app/page-not-found/page-not-found.component.ts","type":"component","linktype":"component","name":"PageNotFoundComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/rss-reader/src/app/pages/doc-viewer/doc-viewer.component.ts","type":"component","linktype":"component","name":"DocViewerComponent","coveragePercent":27,"coverageCount":"3/11","status":"medium"},{"filePath":"projects/rss-reader/src/app/pages/guide-list/guide-list.component.ts","type":"component","linktype":"component","name":"GuidesListComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/rss-reader/src/app/pages/guide-viewer/guide-viewer.component.ts","type":"component","linktype":"component","name":"GuideViewerComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts","type":"interface","linktype":"interface","name":"Release","coveragePercent":87,"coverageCount":"7/8","status":"very-good"},{"filePath":"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts","type":"interface","linktype":"interface","name":"ReleaseNotesJSON","coveragePercent":80,"coverageCount":"4/5","status":"very-good"},{"filePath":"projects/rss-reader/src/app/pages/release-notes/models/release-notes.ts","type":"interface","linktype":"interface","name":"Releases","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/pages/release-notes/release-notes.component.ts","type":"component","linktype":"component","name":"ReleaseNotesComponent","coveragePercent":63,"coverageCount":"7/11","status":"good"},{"filePath":"projects/rss-reader/src/app/pages/release-notes/release-notes.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"GIT_REPO","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/pages/release-notes/release-notes.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"RELEASE_NOTES_JSON","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/pages/settings/settings.component.ts","type":"component","linktype":"component","name":"SettingsComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"projects/rss-reader/src/app/pages/settings/settings.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"MATERIAL_MODULES","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/pages/settings/types.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"themes","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/rss-reader/src/app/pipe/orderby.pipe.ts","type":"pipe","linktype":"pipe","name":"OrderByPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/pipe/pipes.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"PIPES","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/pipe/strip-html-tags.pipe.ts","type":"pipe","linktype":"pipe","name":"StripHtmlTagsPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/pipe/truncate.pipe.ts","type":"pipe","linktype":"pipe","name":"TruncatePipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/app/shared.service.ts","type":"injectable","linktype":"injectable","name":"SharedService","coveragePercent":37,"coverageCount":"3/8","status":"medium"},{"filePath":"projects/rss-reader/src/app/shared.service.ts","type":"interface","linktype":"interface","name":"SnackBarOpts","coveragePercent":83,"coverageCount":"5/6","status":"very-good"},{"filePath":"projects/rss-reader/src/environment.base.ts","type":"interface","linktype":"interface","name":"Environment","coveragePercent":100,"coverageCount":"6/6","status":"very-good"},{"filePath":"projects/rss-reader/src/environment.base.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"defaultEnvironment","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/rss-reader/src/environment.base.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"gitRepoDefaults","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/rss-reader/src/environment.base.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"latestVersion","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/rss-reader/src/environment.base.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"mergeWithDefaultEnv","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/rss-reader/src/environments/environment.httpserver.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/environments/environment.prod.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/environments/environment.test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/environments/environment.test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"mockGitRepoDefaults","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/rss-reader/src/environments/environment.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"}]}}'),create=__webpack_require__("./node_modules/@storybook/theming/dist/esm/create.js");(0,angular.setCompodocJson)(documentation_namespaceObject);var parameters={actions:{argTypesRegex:"^on[A-Z].*"},docs:{theme:create.n.dark,iframeHeight:"400px"},controls:{expanded:!0},themes:[{name:"indigo-pink",class:"indigo-pink",color:"#3f51b5",default:!0},{name:"deeppurple-amber",class:"deeppurple-amber",color:"#673ab7"},{name:"pink-bluegrey",class:"pink-bluegrey",color:"#e91e63"},{name:"purple-green",class:"purple-green",color:"#9c27b0"}]};function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":case"argTypes":return esm.kg.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify(value));case"decorators":return value.forEach((function(decorator){return(0,ClientApi.$9)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return(0,ClientApi.HZ)(loader,!1)}));case"parameters":return(0,ClientApi.h1)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return(0,ClientApi.My)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return(0,ClientApi._C)(enhancer)}));case"render":return(0,ClientApi.$P)(value);case"globals":case"globalTypes":var v={};return v[key]=value,(0,ClientApi.h1)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./generated-stories-entry.js":function(module,__unused_webpack_exports,__webpack_require__){"use strict";module=__webpack_require__.nmd(module),(0,__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js").configure)([__webpack_require__("./projects/rss-reader/src/app sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./projects/rss-reader/src/app sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$")],module,!1)},"./storybook-init-framework-entry.js":function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){"use strict";__webpack_require__("./node_modules/@storybook/angular/dist/ts3.9/client/index.js")},"./projects/rss-reader/src/app/components/article-card/article-card.component.scss?ngResource":function(module,__unused_webpack_exports,__webpack_require__){var ___CSS_LOADER_API_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".article-card .article-card--title {\n  line-height: 32px;\n  margin: 8px 0;\n}\n.article-card .article-card--categories {\n  margin-bottom: 8px;\n}","",{version:3,sources:["webpack://./projects/rss-reader/src/app/components/article-card/article-card.component.scss"],names:[],mappings:"AACE;EACE,iBAAA;EACA,aAAA;AAAJ;AAGE;EACE,kBAAA;AADJ",sourcesContent:[".article-card .article-card--title {\n  line-height: 32px;\n  margin: 8px 0;\n}\n.article-card .article-card--categories {\n  margin-bottom: 8px;\n}"],sourceRoot:""}]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/rss-reader/src/app/dialogs/feed-dialog/feed-dialog.component.scss?ngResource":function(module,__unused_webpack_exports,__webpack_require__){var ___CSS_LOADER_API_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".feed-dialog--container form {\n  display: flex;\n  flex-direction: column;\n}","",{version:3,sources:["webpack://./projects/rss-reader/src/app/dialogs/feed-dialog/feed-dialog.component.scss"],names:[],mappings:"AAAA;EACE,aAAA;EACA,sBAAA;AACF",sourcesContent:[".feed-dialog--container form {\n  display: flex;\n  flex-direction: column;\n}"],sourceRoot:""}]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/rss-reader/src/app/dialogs/headline-options-dialog/headline-options-dialog.component.scss?ngResource":function(module,__unused_webpack_exports,__webpack_require__){var ___CSS_LOADER_API_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".headline-opts-dialog--container form {\n  display: flex;\n  flex-direction: column;\n}","",{version:3,sources:["webpack://./projects/rss-reader/src/app/dialogs/headline-options-dialog/headline-options-dialog.component.scss"],names:[],mappings:"AAAA;EACE,aAAA;EACA,sBAAA;AACF",sourcesContent:[".headline-opts-dialog--container form {\n  display: flex;\n  flex-direction: column;\n}"],sourceRoot:""}]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/rss-reader/src/app/dialogs/share-dialog/share-dialog.component.scss?ngResource":function(module,__unused_webpack_exports,__webpack_require__){var ___CSS_LOADER_API_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".share-dialog--container {\n  display: flex;\n  flex-direction: column;\n  min-width: -moz-fit-content;\n  min-width: fit-content;\n}\n\n.share-icon {\n  font-size: 30px;\n  width: 30px;\n  height: 30px;\n}\n\n.svg-icon > svg {\n  width: 30px !important;\n  height: 30px !important;\n}\n\n.share-div {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  -webkit-user-select: none;\n          user-select: none;\n}\n\n.share-tile {\n  cursor: pointer;\n}\n\n.android-btn {\n  color: #A4C639 !important;\n}\n\n.facebook-btn {\n  color: #3b5998 !important;\n}\n\n.twitter-btn {\n  color: #00aced !important;\n}\n\n.google-plus-btn {\n  color: #d34836 !important;\n}","",{version:3,sources:["webpack://./projects/rss-reader/src/app/dialogs/share-dialog/share-dialog.component.scss"],names:[],mappings:"AAAA;EACE,aAAA;EACA,sBAAA;EACA,2BAAA;EAAA,sBAAA;AACF;;AAEA;EACE,eAAA;EACA,WAAA;EACA,YAAA;AACF;;AACA;EACE,sBAAA;EACA,uBAAA;AAEF;;AAAA;EACE,mBAAA;EACA,aAAA;EACA,sBAAA;EACA,yBAAA;UAAA,iBAAA;AAGF;;AADA;EACE,eAAA;AAIF;;AADA;EACE,yBAAA;AAIF;;AAFA;EACE,yBAAA;AAKF;;AAHA;EACE,yBAAA;AAMF;;AAJA;EACE,yBAAA;AAOF",sourcesContent:[".share-dialog--container {\n  display: flex;\n  flex-direction: column;\n  min-width: fit-content;\n}\n\n.share-icon {\n  font-size: 30px;\n  width: 30px;\n  height: 30px;\n}\n\n.svg-icon > svg {\n  width: 30px !important;\n  height: 30px !important;\n}\n\n.share-div {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  user-select: none;\n}\n\n.share-tile {\n  cursor: pointer;\n}\n\n.android-btn {\n  color: #A4C639 !important;\n}\n\n.facebook-btn {\n  color: #3b5998 !important;\n}\n\n.twitter-btn {\n  color: #00aced !important;\n}\n\n.google-plus-btn {\n  color: #d34836 !important;\n}"],sourceRoot:""}]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/rss-reader/src/app sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$":function(module,__unused_webpack_exports,__webpack_require__){var map={"./components/article-card/article-card.stories.ts":"./projects/rss-reader/src/app/components/article-card/article-card.stories.ts"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./projects/rss-reader/src/app sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$"},"./projects/rss-reader/src/app sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$":function(module){function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=function(){return[]},webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./projects/rss-reader/src/app sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$",module.exports=webpackEmptyContext},"?4f7e":function(){}},function(__webpack_require__){var __webpack_exec__=function(moduleId){return __webpack_require__(__webpack_require__.s=moduleId)};__webpack_require__.O(0,[566],(function(){return __webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_exec__("./storybook-init-framework-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/common/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/dist/esm/frameworks/angular/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/angular/dist/ts3.9/client/preview/config.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-links/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/dist/esm/preset/addArgs.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-measure/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-outline/dist/esm/preset/addDecorator.js-generated-config-entry.js"),__webpack_exec__("./.storybook/preview.js-generated-config-entry.js"),__webpack_exec__("./generated-stories-entry.js"),__webpack_exec__("./projects/rss-reader/src/polyfills.ts")}));__webpack_require__.O()}]);
//# sourceMappingURL=main.3d5d19d8.iframe.bundle.js.map