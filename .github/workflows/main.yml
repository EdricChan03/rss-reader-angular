name: Site workflow

on:
  push:
    branches:
    # Only accept deploying from the master branch
    - master

jobs:
  test:
    name: App linting/testing
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Setup NodeJS LTS
      uses: actions/setup-node@v3.0.0
      with:
        node-version: '10.x'
    - name: Setup Angular problem matchers
      uses: EdricChan03/angular-problem-matchers-action@v0.0.0
    - name: Cache node modules
      uses: actions/cache@v2
      id: node_modules_cache
      with:
        path: node_modules
        key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}-
          ${{ runner.os }}-node_modules-
          ${{ runner.os }}-
    - name: Install dependencies
      # Skip this step if a cache hit occurs on the key
      if: steps.node_modules_cache.outputs.cache-hit != 'true'
      run: npm ci
    - name: Lint application
      run: npm run lint
    - name: Test application
      run: npm run action:test
    - name: Upload Codecov coverage report
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_ACTION }}
        file: ./coverage/rss-reader/coverage-final.json
        name: codecov-action
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Setup NodeJS LTS
      uses: actions/setup-node@v3.0.0
      with:
        node-version: '10.x'
    - name: Setup Angular problem matchers
      uses: EdricChan03/angular-problem-matchers-action@v0.0.0
    - name: Cache node modules
      uses: actions/cache@v2
      id: node_modules_cache
      with:
        path: node_modules
        key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}-
          ${{ runner.os }}-node_modules-
    - name: Install dependencies
      # Skip this step if a cache hit occurs on the key
      if: steps.node_modules_cache.outputs.cache-hit != 'true'
      run: npm ci
    - name: Cache documentation
      uses: actions/cache@v2
      id: docs_cache
      with:
        path: projects/rss-reader/src/assets/docs
        key: ${{ runner.os }}-docs-${{ hashFiles('docs/**') }}
        restore-keys: |
          ${{ runner.os }}-docs-${{ hashFiles('docs/**' )}}-
          ${{ runner.os }}-docs-
    - name: Generate documentation
      # Skip this step if a cache hit occurs on the key
      if: steps.docs_cache.outputs.cache-hit != 'true'
      run: npm run genDocs
    - name: Generate Storybook
      run: npm run build-storybook
    - name: Deploy site
      run: npm run action:deploy
      env:
        # GH_TOKEN: ${{ secrets.DEPLOY_GH_PAGES_TOKEN }}
        # Interesting note: The GITHUB_TOKEN secret has the deployments scope
        # w/ read/write access for repositories.
        # See https://help.github.com/en/actions/automating-your-workflow-with-github-actions/authenticating-with-the-github_token#permissions-for-the-github_token
        # for more info.
        # Note: This will be commented until support for automatically building
        # the deployed results (a la GitHub Pages + Jekyll) arrives.
        # See https://github.community/t5/GitHub-Actions/Github-action-not-triggering-gh-pages-upon-push/m-p/26869
        # for more info.
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
